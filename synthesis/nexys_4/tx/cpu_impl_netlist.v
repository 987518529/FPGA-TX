// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.3 (lin64) Build 1682563 Mon Oct 10 19:07:26 MDT 2016
// Date        : Tue Nov  8 19:19:11 2016
// Host        : jon-GA-MA770T-ES3 running 64-bit Linux Mint 17.2 Rafaela
// Command     : write_verilog -force ./cpu_impl_netlist.v -mode timesim -sdf_anno true
// Design      : bsp
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7a100tcsg324-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module IOBUF_UNIQ_BASE_
   (IO,
    O,
    I,
    T);
  inout IO;
  output O;
  input I;
  input T;

  wire I;
  wire IO;
  wire O;
  wire T;

  IBUF IBUF
       (.I(IO),
        .O(O));
  OBUFT OBUFT
       (.I(I),
        .O(IO),
        .T(T));
endmodule

module IOBUF_HD4
   (IO,
    O,
    I,
    T);
  inout IO;
  output O;
  input I;
  input T;

  wire I;
  wire IO;
  wire O;
  wire T;

  IBUF IBUF
       (.I(IO),
        .O(O));
  OBUFT OBUFT
       (.I(I),
        .O(IO),
        .T(T));
endmodule

module RAM128X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD10
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD100
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD101
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD102
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD103
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD104
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD105
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD106
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD107
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD108
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD109
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD11
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD110
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD111
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD112
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD113
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD114
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD115
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD116
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD117
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD118
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD119
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD12
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD120
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD121
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD122
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD123
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD124
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD125
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD126
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD127
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD128
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD129
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD13
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD130
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD131
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD132
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD133
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD134
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD135
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD136
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD137
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD138
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD139
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD14
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD140
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD141
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD142
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD143
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD144
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD145
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD146
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD147
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD148
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD149
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD15
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD150
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD151
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD152
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD153
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD154
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD155
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD156
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD157
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD158
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD159
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD16
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD160
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD161
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD162
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD163
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD164
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD165
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD166
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD167
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD168
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD169
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD17
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD170
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD171
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD172
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD173
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD174
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD175
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD176
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD177
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD178
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD179
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD18
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD180
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD181
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD182
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD183
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD184
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD185
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD186
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD187
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD188
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD189
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD19
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD190
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD191
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD192
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD193
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD194
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD195
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD196
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD197
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD198
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD199
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD20
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD200
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD201
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD202
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD203
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD204
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD205
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD206
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD207
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD208
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD209
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD21
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD210
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD211
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD212
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD213
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD214
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD215
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD216
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD217
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD218
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD219
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD22
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD220
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD221
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD222
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD223
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD224
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD225
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD226
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD227
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD228
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD229
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD23
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD230
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD231
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD232
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD233
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD234
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD235
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD236
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD237
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD238
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD239
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD24
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD240
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD241
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD242
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD243
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD244
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD245
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD246
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD247
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD248
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD249
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD25
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD250
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD251
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD252
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD253
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD254
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD255
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD256
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD257
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD258
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD259
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD26
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD260
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD261
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD262
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD263
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD264
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD265
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD266
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD267
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD268
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD269
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD27
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD270
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD271
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD272
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD273
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD274
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD275
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD276
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD277
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD278
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD279
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD28
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD280
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD281
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD282
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD283
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD284
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD285
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD286
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD287
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD288
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD289
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD29
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD290
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD291
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD292
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD293
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD294
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD295
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD296
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD297
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD298
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD299
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD30
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD300
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD301
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD302
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD303
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD304
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD305
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD306
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD307
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD308
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD309
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD31
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD310
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD311
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD312
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD313
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD314
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD315
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD316
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD317
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD318
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD319
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD32
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD320
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD321
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD322
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD323
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD324
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD325
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD326
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD327
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD328
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD329
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD33
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD330
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD331
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD332
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD333
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD334
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD335
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD336
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD337
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD338
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD339
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD34
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD340
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD341
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD342
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD343
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD344
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD345
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD346
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD347
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD348
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD349
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD35
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD350
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD351
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD352
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD353
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD354
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD355
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD356
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD357
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD358
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD359
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD36
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD360
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD361
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD362
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD363
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD364
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD365
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD366
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD367
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD368
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD369
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD37
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD370
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD371
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD372
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD373
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD374
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD375
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD376
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD377
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD378
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD379
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD38
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD380
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD381
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD382
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD383
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD384
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD385
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD386
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD387
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD388
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD389
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD39
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD390
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD391
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD392
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD393
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD394
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD395
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD396
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD397
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD398
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD399
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD40
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD400
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD401
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD402
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD403
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD404
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD405
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD406
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD407
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD408
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD409
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD41
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD410
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD411
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD412
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD413
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD414
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD415
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD416
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD417
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD418
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD419
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD42
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD420
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD421
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD422
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD423
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD424
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD425
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD426
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD427
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD428
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD429
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD43
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD430
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD431
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD432
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD433
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD434
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD435
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD436
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD437
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD438
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD439
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD44
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD440
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD441
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD442
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD443
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD444
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD445
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD446
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD447
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD448
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD449
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD45
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD450
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD451
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD452
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD453
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD454
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD455
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD456
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD457
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD458
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD459
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD46
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD460
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD461
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD462
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD463
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD464
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD465
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD466
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD467
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD468
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD469
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD47
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD470
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD471
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD472
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD473
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD474
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD475
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD476
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD477
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD478
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD479
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD48
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD480
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD481
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD482
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD483
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD484
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD485
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD486
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD487
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD488
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD489
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD49
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD490
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD491
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD492
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD493
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD494
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD495
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD496
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD497
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD498
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD499
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD50
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD500
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD501
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD502
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD503
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD504
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD505
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD506
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD507
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD508
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD509
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD51
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD510
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD511
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD512
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD513
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD514
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD515
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD516
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD517
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD518
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD52
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD53
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD54
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD55
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD56
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD57
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD58
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD59
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD60
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD61
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD62
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD63
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD64
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD65
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD66
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD67
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD68
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD69
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD70
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD71
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD72
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD73
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD74
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD75
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD76
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD77
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD78
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD79
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD8
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD80
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD81
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD82
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD83
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD84
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD85
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD86
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD87
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD88
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD89
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD9
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD90
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD91
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD92
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD93
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD94
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD95
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD96
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD97
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD98
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD99
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM32M_HD519
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD520
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD521
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD522
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD523
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD524
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD525
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD526
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD527
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD528
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD529
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD530
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module BRAM
   (DOBDO,
    clk,
    eth_clk_OBUF,
    ADDRBWRADDR,
    pwropt);
  output [3:0]DOBDO;
  input clk;
  input eth_clk_OBUF;
  input [12:0]ADDRBWRADDR;
  input pwropt;

  wire [12:0]ADDRBWRADDR;
  wire [3:0]DOBDO;
  wire MEMORY_reg_0_ENBWREN_cooolgate_en_sig_9;
  wire clk;
  wire eth_clk_OBUF;
  wire pwropt;
  wire NLW_MEMORY_reg_0_CASCADEOUTA_UNCONNECTED;
  wire NLW_MEMORY_reg_0_CASCADEOUTB_UNCONNECTED;
  wire NLW_MEMORY_reg_0_DBITERR_UNCONNECTED;
  wire NLW_MEMORY_reg_0_INJECTDBITERR_UNCONNECTED;
  wire NLW_MEMORY_reg_0_INJECTSBITERR_UNCONNECTED;
  wire NLW_MEMORY_reg_0_SBITERR_UNCONNECTED;
  wire [31:0]NLW_MEMORY_reg_0_DOADO_UNCONNECTED;
  wire [31:4]NLW_MEMORY_reg_0_DOBDO_UNCONNECTED;
  wire [3:0]NLW_MEMORY_reg_0_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_MEMORY_reg_0_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_MEMORY_reg_0_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_MEMORY_reg_0_RDADDRECC_UNCONNECTED;

  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENBWREN=NEW" *) 
  (* RTL_RAM_BITS = "60000" *) 
  (* RTL_RAM_NAME = "MEMORY" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "3" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    MEMORY_reg_0
       (.ADDRARDADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,ADDRBWRADDR,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(NLW_MEMORY_reg_0_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_MEMORY_reg_0_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(eth_clk_OBUF),
        .DBITERR(NLW_MEMORY_reg_0_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(NLW_MEMORY_reg_0_DOADO_UNCONNECTED[31:0]),
        .DOBDO({NLW_MEMORY_reg_0_DOBDO_UNCONNECTED[31:4],DOBDO}),
        .DOPADOP(NLW_MEMORY_reg_0_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_MEMORY_reg_0_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_MEMORY_reg_0_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(MEMORY_reg_0_ENBWREN_cooolgate_en_sig_9),
        .INJECTDBITERR(NLW_MEMORY_reg_0_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_MEMORY_reg_0_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_MEMORY_reg_0_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_MEMORY_reg_0_SBITERR_UNCONNECTED),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT1 #(
    .INIT(2'h1)) 
    MEMORY_reg_0_ENBWREN_cooolgate_en_gate_17
       (.I0(pwropt),
        .O(MEMORY_reg_0_ENBWREN_cooolgate_en_sig_9));
endmodule

module CHARSVGA
   (vga_b_OBUF,
    HSYNCH,
    VSYNCH,
    clk,
    eth_clk_OBUF,
    internal_rst_reg);
  output [0:0]vga_b_OBUF;
  output HSYNCH;
  output VSYNCH;
  input clk;
  input eth_clk_OBUF;
  input internal_rst_reg;

  wire BLANK;
  wire BLANK_DEL;
  wire BLANK_DEL_DEL;
  wire [12:1]CHARADDR;
  wire [3:0]DOUT;
  wire HSYNCH;
  wire HSYNCH_DEL;
  wire INTHSYNCH;
  wire INTVSYNCH;
  wire [2:0]PIXCOL_DEL;
  wire \PIXCOL_DEL_DEL_reg_n_0_[0] ;
  wire \PIXCOL_DEL_DEL_reg_n_0_[1] ;
  wire \PIXCOL_DEL_DEL_reg_n_0_[2] ;
  wire PIXELS_reg_ENARDEN_cooolgate_en_sig_8;
  wire [7:0]PIXELS_reg__0;
  wire [2:0]PIXROW_DEL;
  wire TIMEING1_n_0;
  wire TIMEING1_n_1;
  wire TIMEING1_n_15;
  wire TIMEING1_n_16;
  wire TIMEING1_n_17;
  wire TIMEING1_n_18;
  wire TIMEING1_n_2;
  wire VSYNCH;
  wire VSYNCH_DEL;
  wire clk;
  wire eth_clk_OBUF;
  wire internal_rst_reg;
  wire [0:0]vga_b_OBUF;
  wire \vga_r_OBUF[3]_inst_i_2_n_0 ;
  wire \vga_r_OBUF[3]_inst_i_3_n_0 ;
  wire [15:8]NLW_PIXELS_reg_DOADO_UNCONNECTED;
  wire [15:0]NLW_PIXELS_reg_DOBDO_UNCONNECTED;
  wire [1:0]NLW_PIXELS_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_PIXELS_reg_DOPBDOP_UNCONNECTED;

  FDRE BLANK_DEL_DEL_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(BLANK_DEL),
        .Q(BLANK_DEL_DEL),
        .R(1'b0));
  FDRE BLANK_DEL_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(BLANK),
        .Q(BLANK_DEL),
        .R(1'b0));
  BRAM BRAM_INST_1
       (.ADDRBWRADDR({CHARADDR,TIMEING1_n_15}),
        .DOBDO(DOUT),
        .clk(clk),
        .eth_clk_OBUF(eth_clk_OBUF),
        .pwropt(BLANK));
  FDRE HSYNCH_DEL_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(INTHSYNCH),
        .Q(HSYNCH_DEL),
        .R(1'b0));
  FDRE HSYNCH_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HSYNCH_DEL),
        .Q(HSYNCH),
        .R(1'b0));
  FDRE \PIXCOL_DEL_DEL_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(PIXCOL_DEL[0]),
        .Q(\PIXCOL_DEL_DEL_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \PIXCOL_DEL_DEL_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(PIXCOL_DEL[1]),
        .Q(\PIXCOL_DEL_DEL_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \PIXCOL_DEL_DEL_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(PIXCOL_DEL[2]),
        .Q(\PIXCOL_DEL_DEL_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \PIXCOL_DEL_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_0),
        .Q(PIXCOL_DEL[0]),
        .R(1'b0));
  FDRE \PIXCOL_DEL_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_1),
        .Q(PIXCOL_DEL[1]),
        .R(1'b0));
  FDRE \PIXCOL_DEL_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_2),
        .Q(PIXCOL_DEL[2]),
        .R(1'b0));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d8" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "16384" *) 
  (* RTL_RAM_NAME = "PIXELS" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "7" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000143E143E1400000000000000141400000800080808080000000000000000),
    .INIT_09(256'h0000000000000808006C12320C12120C00E2A4E8102E4A8E00081E281C0A3C08),
    .INIT_0A(256'h00101010FE1010100000000022143E0800081020202010080008040202020408),
    .INIT_0B(256'h00000204081020400000080000000000000000003E0000000008080000000000),
    .INIT_0C(256'h00001C222010221C00003E040810221C00003E0808080C0800001C262A2A321C),
    .INIT_0D(256'h000008081020223E00001C221E02221C00001C22203E023E00003C103E121418),
    .INIT_0E(256'h0008080000000800000008000000080000001C22203C221C00001C22221C221C),
    .INIT_0F(256'h000008000818221C000204081008040200003E00003E00000010080402040810),
    .INIT_10(256'h00001C220202221C00001E22221E221E00002222223E221C006CA2BAAABA827C),
    .INIT_11(256'h00001C223A02221C00000202021E023E00003E02021E023E00001E222222221E),
    .INIT_12(256'h000022120A060A1200000C121010103800003E080808083E00002222223E2222),
    .INIT_13(256'h00001C222222221C000022322A262222000022222A2A362200003E0202020202),
    .INIT_14(256'h00001E20201C023C000022120A1E221E00681C222222221C000002021E22221E),
    .INIT_15(256'h0000142A2A222222000008141422222200001C2222222222000008080808083E),
    .INIT_16(256'h001808080808081800003E020408103E00000808081C22220000221408081422),
    .INIT_17(256'h00FF000000000000000000000022140800181010101010180000402010080402),
    .INIT_18(256'h00001C2202021C0000001E22261A020200005C223C201C000000000000001008),
    .INIT_19(256'h001C203C22223C00000002020E02221C00001C023E221C0000003C22322C2020),
    .INIT_1A(256'h000022120E0A1202000C12101018001000001C08080C000800002222261A0202),
    .INIT_1B(256'h00001C2222221C000000242424241A0000002A2A2A2A160000003E080808080C),
    .INIT_1C(256'h00001E201C023C000000040404241A000020203C22322C000002021E22221E00),
    .INIT_1D(256'h0000142A2A222200000008141422220000002C121212120000001C22020E0202),
    .INIT_1E(256'h001008080408081000003E0408103E00001C203C222222000000221408142200),
    .INIT_1F(256'h000000000000000000000060920C000000040808100808040008080808080808),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000143E143E1400000000000000141400000800080808080000000000000000),
    .INIT_29(256'h0000000000000808006C12320C12120C00E2A4E8102E4A8E00081E281C0A3C08),
    .INIT_2A(256'h00101010FE1010100000000022143E0800081020202010080008040202020408),
    .INIT_2B(256'h00000204081020400000080000000000000000003E0000000008080000000000),
    .INIT_2C(256'h00001C222010221C00003E040810221C00003E0808080C0800001C262A2A321C),
    .INIT_2D(256'h000008081020223E00001C221E02221C00001C22203E023E00003C103E121418),
    .INIT_2E(256'h0008080000000800000008000000080000001C22203C221C00001C22221C221C),
    .INIT_2F(256'h000008000818221C000204081008040200003E00003E00000010080402040810),
    .INIT_30(256'h00001C220202221C00001E22221E221E00002222223E221C006CA2BAAABA827C),
    .INIT_31(256'h00001C223A02221C00000202021E023E00003E02021E023E00001E222222221E),
    .INIT_32(256'h000022120A060A1200000C121010103800003E080808083E00002222223E2222),
    .INIT_33(256'h00001C222222221C000022322A262222000022222A2A362200003E0202020202),
    .INIT_34(256'h00001E20201C023C000022120A1E221E00681C222222221C000002021E22221E),
    .INIT_35(256'h0000142A2A222222000008141422222200001C2222222222000008080808083E),
    .INIT_36(256'h001808080808081800003E020408103E00000808081C22220000221408081422),
    .INIT_37(256'h00FF000000000000000000000022140800181010101010180000402010080402),
    .INIT_38(256'h00001C2202021C0000001E22261A020200005C223C201C000000000000001008),
    .INIT_39(256'h001C203C22223C00000002020E02221C00001C023E221C0000003C22322C2020),
    .INIT_3A(256'h000022120E0A1202000C12101018001000001C08080C000800002222261A0202),
    .INIT_3B(256'h00001C2222221C000000242424241A0000002A2A2A2A160000003E080808080C),
    .INIT_3C(256'h00001E201C023C000000040404241A000020203C22322C000002021E22221E00),
    .INIT_3D(256'h0000142A2A222200000008141422220000002C121212120000001C22020E0202),
    .INIT_3E(256'h001008080408081000003E0408103E00001C203C222222000000221408142200),
    .INIT_3F(256'h000000000000000000000060920C000000040808100808040008080808080808),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(0)) 
    PIXELS_reg
       (.ADDRARDADDR({DOUT,DOUT,PIXROW_DEL,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(eth_clk_OBUF),
        .CLKBWRCLK(1'b0),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_PIXELS_reg_DOADO_UNCONNECTED[15:8],PIXELS_reg__0}),
        .DOBDO(NLW_PIXELS_reg_DOBDO_UNCONNECTED[15:0]),
        .DOPADOP(NLW_PIXELS_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_PIXELS_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(PIXELS_reg_ENARDEN_cooolgate_en_sig_8),
        .ENBWREN(1'b0),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT1 #(
    .INIT(2'h1)) 
    PIXELS_reg_ENARDEN_cooolgate_en_gate_15
       (.I0(BLANK_DEL),
        .O(PIXELS_reg_ENARDEN_cooolgate_en_sig_8));
  FDRE \PIXROW_DEL_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_16),
        .Q(PIXROW_DEL[0]),
        .R(1'b0));
  FDRE \PIXROW_DEL_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_17),
        .Q(PIXROW_DEL[1]),
        .R(1'b0));
  FDRE \PIXROW_DEL_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(TIMEING1_n_18),
        .Q(PIXROW_DEL[2]),
        .R(1'b0));
  VIDEO_TIME_GEN TIMEING1
       (.ADDRBWRADDR({CHARADDR,TIMEING1_n_15}),
        .BLANK(BLANK),
        .D(TIMEING1_n_18),
        .INTHSYNCH(INTHSYNCH),
        .INTVSYNCH(INTVSYNCH),
        .\PIXCOL_DEL_reg[0] (TIMEING1_n_0),
        .\PIXCOL_DEL_reg[1] (TIMEING1_n_1),
        .\PIXCOL_DEL_reg[2] (TIMEING1_n_2),
        .\PIXROW_DEL_reg[0] (TIMEING1_n_16),
        .\PIXROW_DEL_reg[1] (TIMEING1_n_17),
        .eth_clk_OBUF(eth_clk_OBUF),
        .internal_rst_reg(internal_rst_reg));
  FDRE VSYNCH_DEL_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(INTVSYNCH),
        .Q(VSYNCH_DEL),
        .R(1'b0));
  FDRE VSYNCH_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(VSYNCH_DEL),
        .Q(VSYNCH),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00E2)) 
    \vga_r_OBUF[3]_inst_i_1 
       (.I0(\vga_r_OBUF[3]_inst_i_2_n_0 ),
        .I1(\PIXCOL_DEL_DEL_reg_n_0_[2] ),
        .I2(\vga_r_OBUF[3]_inst_i_3_n_0 ),
        .I3(BLANK_DEL_DEL),
        .O(vga_b_OBUF));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \vga_r_OBUF[3]_inst_i_2 
       (.I0(PIXELS_reg__0[3]),
        .I1(PIXELS_reg__0[2]),
        .I2(\PIXCOL_DEL_DEL_reg_n_0_[1] ),
        .I3(PIXELS_reg__0[1]),
        .I4(\PIXCOL_DEL_DEL_reg_n_0_[0] ),
        .I5(PIXELS_reg__0[0]),
        .O(\vga_r_OBUF[3]_inst_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \vga_r_OBUF[3]_inst_i_3 
       (.I0(PIXELS_reg__0[7]),
        .I1(PIXELS_reg__0[6]),
        .I2(\PIXCOL_DEL_DEL_reg_n_0_[1] ),
        .I3(PIXELS_reg__0[5]),
        .I4(\PIXCOL_DEL_DEL_reg_n_0_[0] ),
        .I5(PIXELS_reg__0[4]),
        .O(\vga_r_OBUF[3]_inst_i_3_n_0 ));
endmodule

module I2C
   (sda_TRI,
    scl_TRI,
    clk,
    scl_IBUF,
    internal_rst_reg,
    sda_IBUF);
  output sda_TRI;
  output scl_TRI;
  input clk;
  input scl_IBUF;
  input internal_rst_reg;
  input sda_IBUF;

  wire BIT_i_1_n_0;
  wire BIT_i_2_n_0;
  wire BIT_reg_n_0;
  wire [2:0]COUNT;
  wire \COUNT[0]_i_1_n_0 ;
  wire \COUNT[1]_i_1_n_0 ;
  wire \COUNT[2]_i_1_n_0 ;
  wire \COUNT[2]_i_2_n_0 ;
  wire [3:0]GET_BIT_RETURN;
  wire \GET_BIT_RETURN[0]_i_1_n_0 ;
  wire \GET_BIT_RETURN[3]_i_1_n_0 ;
  wire SCL_I_D;
  wire SCL_I_SYNCH;
  wire SCL_O_i_1_n_0;
  wire SCL_O_i_2_n_0;
  wire SDA_I_D;
  wire SDA_I_SYNCH;
  wire SDA_O_i_1_n_0;
  wire SDA_O_i_2_n_0;
  wire [3:0]SEND_BIT_RETURN;
  wire \SEND_BIT_RETURN[0]_i_1_n_0 ;
  wire \SEND_BIT_RETURN[3]_i_1_n_0 ;
  wire STARTED;
  wire STARTED_i_1_n_0;
  wire STARTED_i_2_n_0;
  wire STATE;
  wire \STATE[0]_i_2_n_0 ;
  wire \STATE[0]_i_3_n_0 ;
  wire \STATE[1]_i_2_n_0 ;
  wire \STATE[1]_i_3_n_0 ;
  wire \STATE[1]_i_4_n_0 ;
  wire \STATE[2]_i_1_n_0 ;
  wire \STATE[3]_i_2_n_0 ;
  wire \STATE[3]_i_3_n_0 ;
  wire \STATE[4]_i_1_n_0 ;
  wire \STATE[4]_i_2_n_0 ;
  wire \STATE[4]_i_3_n_0 ;
  wire \STATE[4]_i_4_n_0 ;
  wire \STATE[4]_i_5_n_0 ;
  wire \STATE_reg[0]_i_1_n_0 ;
  wire \STATE_reg[1]_i_1_n_0 ;
  wire \STATE_reg[3]_i_1_n_0 ;
  wire \STATE_reg_n_0_[0] ;
  wire \STATE_reg_n_0_[1] ;
  wire \STATE_reg_n_0_[2] ;
  wire \STATE_reg_n_0_[3] ;
  wire \STATE_reg_n_0_[4] ;
  wire S_I2C_IN_ACK_i_1_n_0;
  wire S_I2C_IN_ACK_reg_n_0;
  wire S_I2C_OUT_STB_i_1_n_0;
  wire S_I2C_OUT_STB_reg_n_0;
  wire [12:3]TIMER;
  wire \TIMER[0]_i_1__2_n_0 ;
  wire \TIMER[10]_i_1_n_0 ;
  wire \TIMER[11]_i_1_n_0 ;
  wire \TIMER[11]_i_4_n_0 ;
  wire \TIMER[11]_i_5_n_0 ;
  wire \TIMER[11]_i_6_n_0 ;
  wire \TIMER[11]_i_7_n_0 ;
  wire \TIMER[11]_i_8_n_0 ;
  wire \TIMER[11]_i_9_n_0 ;
  wire \TIMER[1]_i_1__2_n_0 ;
  wire \TIMER[2]_i_1__2_n_0 ;
  wire \TIMER[4]_i_1__2_n_0 ;
  wire \TIMER[4]_i_3_n_0 ;
  wire \TIMER[4]_i_4_n_0 ;
  wire \TIMER[4]_i_5_n_0 ;
  wire \TIMER[4]_i_6_n_0 ;
  wire \TIMER[5]_i_1__2_n_0 ;
  wire \TIMER[6]_i_1__2_n_0 ;
  wire \TIMER[6]_i_3_n_0 ;
  wire \TIMER[6]_i_4_n_0 ;
  wire \TIMER[6]_i_5_n_0 ;
  wire \TIMER[6]_i_6_n_0 ;
  wire \TIMER_reg[4]_i_2_n_0 ;
  wire \TIMER_reg[6]_i_2_n_0 ;
  wire \TIMER_reg_n_0_[0] ;
  wire \TIMER_reg_n_0_[10] ;
  wire \TIMER_reg_n_0_[11] ;
  wire \TIMER_reg_n_0_[12] ;
  wire \TIMER_reg_n_0_[1] ;
  wire \TIMER_reg_n_0_[2] ;
  wire \TIMER_reg_n_0_[3] ;
  wire \TIMER_reg_n_0_[4] ;
  wire \TIMER_reg_n_0_[5] ;
  wire \TIMER_reg_n_0_[6] ;
  wire \TIMER_reg_n_0_[7] ;
  wire \TIMER_reg_n_0_[8] ;
  wire \TIMER_reg_n_0_[9] ;
  wire clk;
  wire [12:1]data0;
  wire g0_b0__0__0_n_0;
  wire g0_b0__0_n_0;
  wire internal_rst_reg;
  wire scl_IBUF;
  wire scl_TRI;
  wire sda_IBUF;
  wire sda_TRI;
  wire [3:0]\NLW_TIMER_reg[11]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_TIMER_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_TIMER_reg[6]_i_2_CO_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h8F80)) 
    BIT_i_1
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(SDA_I_SYNCH),
        .I2(BIT_i_2_n_0),
        .I3(BIT_reg_n_0),
        .O(BIT_i_1_n_0));
  LUT5 #(
    .INIT(32'h01100008)) 
    BIT_i_2
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[4] ),
        .I4(\STATE_reg_n_0_[1] ),
        .O(BIT_i_2_n_0));
  FDRE BIT_reg
       (.C(clk),
        .CE(1'b1),
        .D(BIT_i_1_n_0),
        .Q(BIT_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h1FF0)) 
    \COUNT[0]_i_1 
       (.I0(\STATE_reg_n_0_[2] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(\COUNT[2]_i_2_n_0 ),
        .I3(COUNT[0]),
        .O(\COUNT[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'hF1FF1F00)) 
    \COUNT[1]_i_1 
       (.I0(\STATE_reg_n_0_[2] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(COUNT[0]),
        .I3(\COUNT[2]_i_2_n_0 ),
        .I4(COUNT[1]),
        .O(\COUNT[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF1FFFF111F0000)) 
    \COUNT[2]_i_1 
       (.I0(\STATE_reg_n_0_[2] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(COUNT[0]),
        .I3(COUNT[1]),
        .I4(\COUNT[2]_i_2_n_0 ),
        .I5(COUNT[2]),
        .O(\COUNT[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01000041)) 
    \COUNT[2]_i_2 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .O(\COUNT[2]_i_2_n_0 ));
  FDRE \COUNT_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\COUNT[0]_i_1_n_0 ),
        .Q(COUNT[0]),
        .R(1'b0));
  FDRE \COUNT_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\COUNT[1]_i_1_n_0 ),
        .Q(COUNT[1]),
        .R(1'b0));
  FDRE \COUNT_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\COUNT[2]_i_1_n_0 ),
        .Q(COUNT[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFBFFFFF00000100)) 
    \GET_BIT_RETURN[0]_i_1 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(GET_BIT_RETURN[0]),
        .O(\GET_BIT_RETURN[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFF00400000)) 
    \GET_BIT_RETURN[3]_i_1 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(GET_BIT_RETURN[3]),
        .O(\GET_BIT_RETURN[3]_i_1_n_0 ));
  FDRE \GET_BIT_RETURN_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\GET_BIT_RETURN[0]_i_1_n_0 ),
        .Q(GET_BIT_RETURN[0]),
        .R(1'b0));
  FDRE \GET_BIT_RETURN_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\GET_BIT_RETURN[3]_i_1_n_0 ),
        .Q(GET_BIT_RETURN[3]),
        .R(1'b0));
  FDRE SCL_I_D_reg
       (.C(clk),
        .CE(1'b1),
        .D(scl_IBUF),
        .Q(SCL_I_D),
        .R(1'b0));
  FDRE SCL_I_SYNCH_reg
       (.C(clk),
        .CE(1'b1),
        .D(SCL_I_D),
        .Q(SCL_I_SYNCH),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h403FFFFF403F0000)) 
    SCL_O_i_1
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(SCL_O_i_2_n_0),
        .I5(scl_TRI),
        .O(SCL_O_i_1_n_0));
  LUT6 #(
    .INIT(64'hF3CC808800882088)) 
    SCL_O_i_2
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[0] ),
        .I2(STATE),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[3] ),
        .I5(\STATE_reg_n_0_[2] ),
        .O(SCL_O_i_2_n_0));
  FDSE SCL_O_reg
       (.C(clk),
        .CE(1'b1),
        .D(SCL_O_i_1_n_0),
        .Q(scl_TRI),
        .S(internal_rst_reg));
  FDRE SDA_I_D_reg
       (.C(clk),
        .CE(1'b1),
        .D(sda_IBUF),
        .Q(SDA_I_D),
        .R(1'b0));
  FDRE SDA_I_SYNCH_reg
       (.C(clk),
        .CE(1'b1),
        .D(SDA_I_D),
        .Q(SDA_I_SYNCH),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAD5FFFFAAD50000)) 
    SDA_O_i_1
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(BIT_reg_n_0),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(SDA_O_i_2_n_0),
        .I5(sda_TRI),
        .O(SDA_O_i_1_n_0));
  LUT6 #(
    .INIT(64'h8A8A848444040404)) 
    SDA_O_i_2
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(\STATE_reg_n_0_[4] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(STATE),
        .I4(\STATE_reg_n_0_[3] ),
        .I5(\STATE_reg_n_0_[2] ),
        .O(SDA_O_i_2_n_0));
  FDSE SDA_O_reg
       (.C(clk),
        .CE(1'b1),
        .D(SDA_O_i_1_n_0),
        .Q(sda_TRI),
        .S(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFFFBFFFF00001000)) 
    \SEND_BIT_RETURN[0]_i_1 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(SEND_BIT_RETURN[0]),
        .O(\SEND_BIT_RETURN[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFF00040000)) 
    \SEND_BIT_RETURN[3]_i_1 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(SEND_BIT_RETURN[3]),
        .O(\SEND_BIT_RETURN[3]_i_1_n_0 ));
  FDRE \SEND_BIT_RETURN_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\SEND_BIT_RETURN[0]_i_1_n_0 ),
        .Q(SEND_BIT_RETURN[0]),
        .R(1'b0));
  FDRE \SEND_BIT_RETURN_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\SEND_BIT_RETURN[3]_i_1_n_0 ),
        .Q(SEND_BIT_RETURN[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h7EFEFFFF40000000)) 
    STARTED_i_1
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE_reg_n_0_[4] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(STATE),
        .I4(STARTED_i_2_n_0),
        .I5(STARTED),
        .O(STARTED_i_1_n_0));
  LUT4 #(
    .INIT(16'hEAAB)) 
    STARTED_i_2
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE_reg_n_0_[0] ),
        .O(STARTED_i_2_n_0));
  FDRE STARTED_reg
       (.C(clk),
        .CE(1'b1),
        .D(STARTED_i_1_n_0),
        .Q(STARTED),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB30CFCCF)) 
    \STATE[0]_i_2 
       (.I0(SEND_BIT_RETURN[0]),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[0] ),
        .O(\STATE[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1010000077667777)) 
    \STATE[0]_i_3 
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(STARTED),
        .I3(GET_BIT_RETURN[0]),
        .I4(\STATE_reg_n_0_[1] ),
        .I5(\STATE_reg_n_0_[0] ),
        .O(\STATE[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF0A8E5A0)) 
    \STATE[1]_i_2 
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE[1]_i_4_n_0 ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[0] ),
        .I4(\STATE_reg_n_0_[1] ),
        .O(\STATE[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h10776600)) 
    \STATE[1]_i_3 
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(STARTED),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[0] ),
        .O(\STATE[1]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \STATE[1]_i_4 
       (.I0(COUNT[1]),
        .I1(COUNT[0]),
        .I2(COUNT[2]),
        .O(\STATE[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h40AA5F0A5F500A00)) 
    \STATE[2]_i_1 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(SEND_BIT_RETURN[0]),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(\STATE_reg_n_0_[1] ),
        .O(\STATE[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80F0FF30)) 
    \STATE[3]_i_2 
       (.I0(SEND_BIT_RETURN[3]),
        .I1(\STATE_reg_n_0_[2] ),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[0] ),
        .O(\STATE[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000AEAA)) 
    \STATE[3]_i_3 
       (.I0(\STATE_reg_n_0_[3] ),
        .I1(GET_BIT_RETURN[3]),
        .I2(\STATE_reg_n_0_[0] ),
        .I3(\STATE_reg_n_0_[1] ),
        .I4(\STATE_reg_n_0_[2] ),
        .O(\STATE[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \STATE[4]_i_1 
       (.I0(\STATE[4]_i_3_n_0 ),
        .I1(\STATE[4]_i_4_n_0 ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE[4]_i_5_n_0 ),
        .O(\STATE[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0E282A3A)) 
    \STATE[4]_i_2 
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[0] ),
        .I4(\STATE_reg_n_0_[1] ),
        .O(\STATE[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA3BBA38B3CBB30BB)) 
    \STATE[4]_i_3 
       (.I0(STATE),
        .I1(\STATE_reg_n_0_[4] ),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[0] ),
        .I4(SCL_I_SYNCH),
        .I5(\STATE_reg_n_0_[2] ),
        .O(\STATE[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h03F3F32303230323)) 
    \STATE[4]_i_4 
       (.I0(S_I2C_IN_ACK_reg_n_0),
        .I1(\STATE_reg_n_0_[4] ),
        .I2(\STATE_reg_n_0_[0] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[3] ),
        .I5(SCL_I_SYNCH),
        .O(\STATE[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h888A88808A8A8A80)) 
    \STATE[4]_i_5 
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(STATE),
        .I2(\STATE_reg_n_0_[3] ),
        .I3(\STATE_reg_n_0_[4] ),
        .I4(S_I2C_OUT_STB_reg_n_0),
        .I5(\STATE_reg_n_0_[2] ),
        .O(\STATE[4]_i_5_n_0 ));
  FDRE \STATE_reg[0] 
       (.C(clk),
        .CE(\STATE[4]_i_1_n_0 ),
        .D(\STATE_reg[0]_i_1_n_0 ),
        .Q(\STATE_reg_n_0_[0] ),
        .R(internal_rst_reg));
  MUXF7 \STATE_reg[0]_i_1 
       (.I0(\STATE[0]_i_2_n_0 ),
        .I1(\STATE[0]_i_3_n_0 ),
        .O(\STATE_reg[0]_i_1_n_0 ),
        .S(\STATE_reg_n_0_[4] ));
  FDRE \STATE_reg[1] 
       (.C(clk),
        .CE(\STATE[4]_i_1_n_0 ),
        .D(\STATE_reg[1]_i_1_n_0 ),
        .Q(\STATE_reg_n_0_[1] ),
        .R(internal_rst_reg));
  MUXF7 \STATE_reg[1]_i_1 
       (.I0(\STATE[1]_i_2_n_0 ),
        .I1(\STATE[1]_i_3_n_0 ),
        .O(\STATE_reg[1]_i_1_n_0 ),
        .S(\STATE_reg_n_0_[4] ));
  FDRE \STATE_reg[2] 
       (.C(clk),
        .CE(\STATE[4]_i_1_n_0 ),
        .D(\STATE[2]_i_1_n_0 ),
        .Q(\STATE_reg_n_0_[2] ),
        .R(internal_rst_reg));
  FDRE \STATE_reg[3] 
       (.C(clk),
        .CE(\STATE[4]_i_1_n_0 ),
        .D(\STATE_reg[3]_i_1_n_0 ),
        .Q(\STATE_reg_n_0_[3] ),
        .R(internal_rst_reg));
  MUXF7 \STATE_reg[3]_i_1 
       (.I0(\STATE[3]_i_2_n_0 ),
        .I1(\STATE[3]_i_3_n_0 ),
        .O(\STATE_reg[3]_i_1_n_0 ),
        .S(\STATE_reg_n_0_[4] ));
  FDRE \STATE_reg[4] 
       (.C(clk),
        .CE(\STATE[4]_i_1_n_0 ),
        .D(\STATE[4]_i_2_n_0 ),
        .Q(\STATE_reg_n_0_[4] ),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFFFEFFFF00010000)) 
    S_I2C_IN_ACK_i_1
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(S_I2C_IN_ACK_reg_n_0),
        .O(S_I2C_IN_ACK_i_1_n_0));
  FDRE S_I2C_IN_ACK_reg
       (.C(clk),
        .CE(1'b1),
        .D(S_I2C_IN_ACK_i_1_n_0),
        .Q(S_I2C_IN_ACK_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEFFFFF00100000)) 
    S_I2C_OUT_STB_i_1
       (.I0(\STATE_reg_n_0_[4] ),
        .I1(\STATE_reg_n_0_[3] ),
        .I2(\STATE_reg_n_0_[1] ),
        .I3(\STATE_reg_n_0_[2] ),
        .I4(\STATE_reg_n_0_[0] ),
        .I5(S_I2C_OUT_STB_reg_n_0),
        .O(S_I2C_OUT_STB_i_1_n_0));
  FDRE S_I2C_OUT_STB_reg
       (.C(clk),
        .CE(1'b1),
        .D(S_I2C_OUT_STB_i_1_n_0),
        .Q(S_I2C_OUT_STB_reg_n_0),
        .R(internal_rst_reg));
  LUT2 #(
    .INIT(4'h1)) 
    \TIMER[0]_i_1__2 
       (.I0(\TIMER_reg_n_0_[0] ),
        .I1(STATE),
        .O(\TIMER[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[10]_i_1 
       (.I0(data0[10]),
        .I1(STATE),
        .O(\TIMER[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[11]_i_1 
       (.I0(data0[11]),
        .I1(STATE),
        .O(\TIMER[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \TIMER[11]_i_3 
       (.I0(\TIMER[11]_i_8_n_0 ),
        .I1(\TIMER[11]_i_9_n_0 ),
        .I2(\TIMER_reg_n_0_[6] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .I5(\TIMER_reg_n_0_[5] ),
        .O(STATE));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[11]_i_4 
       (.I0(\TIMER_reg_n_0_[12] ),
        .O(\TIMER[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[11]_i_5 
       (.I0(\TIMER_reg_n_0_[11] ),
        .O(\TIMER[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[11]_i_6 
       (.I0(\TIMER_reg_n_0_[10] ),
        .O(\TIMER[11]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[11]_i_7 
       (.I0(\TIMER_reg_n_0_[9] ),
        .O(\TIMER[11]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[11]_i_8 
       (.I0(\TIMER_reg_n_0_[11] ),
        .I1(\TIMER_reg_n_0_[9] ),
        .I2(\TIMER_reg_n_0_[8] ),
        .I3(\TIMER_reg_n_0_[12] ),
        .I4(\TIMER_reg_n_0_[10] ),
        .O(\TIMER[11]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TIMER[11]_i_9 
       (.I0(\TIMER_reg_n_0_[2] ),
        .I1(\TIMER_reg_n_0_[3] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[1] ),
        .O(\TIMER[11]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TIMER[12]_i_1 
       (.I0(data0[12]),
        .I1(STATE),
        .O(TIMER[12]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[1]_i_1__2 
       (.I0(data0[1]),
        .I1(STATE),
        .O(\TIMER[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[2]_i_1__2 
       (.I0(data0[2]),
        .I1(STATE),
        .O(\TIMER[2]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \TIMER[3]_i_1 
       (.I0(data0[3]),
        .I1(STATE),
        .O(TIMER[3]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[4]_i_1__2 
       (.I0(data0[4]),
        .I1(STATE),
        .O(\TIMER[4]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[4]_i_3 
       (.I0(\TIMER_reg_n_0_[4] ),
        .O(\TIMER[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[4]_i_4 
       (.I0(\TIMER_reg_n_0_[3] ),
        .O(\TIMER[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[4]_i_5 
       (.I0(\TIMER_reg_n_0_[2] ),
        .O(\TIMER[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[4]_i_6 
       (.I0(\TIMER_reg_n_0_[1] ),
        .O(\TIMER[4]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[5]_i_1__2 
       (.I0(data0[5]),
        .I1(STATE),
        .O(\TIMER[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TIMER[6]_i_1__2 
       (.I0(data0[6]),
        .I1(STATE),
        .O(\TIMER[6]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[6]_i_3 
       (.I0(\TIMER_reg_n_0_[8] ),
        .O(\TIMER[6]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[6]_i_4 
       (.I0(\TIMER_reg_n_0_[7] ),
        .O(\TIMER[6]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[6]_i_5 
       (.I0(\TIMER_reg_n_0_[6] ),
        .O(\TIMER[6]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[6]_i_6 
       (.I0(\TIMER_reg_n_0_[5] ),
        .O(\TIMER[6]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TIMER[7]_i_1 
       (.I0(data0[7]),
        .I1(STATE),
        .O(TIMER[7]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TIMER[8]_i_1 
       (.I0(data0[8]),
        .I1(STATE),
        .O(TIMER[8]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TIMER[9]_i_1 
       (.I0(data0[9]),
        .I1(STATE),
        .O(TIMER[9]));
  FDRE \TIMER_reg[0] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[0]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[0] ),
        .R(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[10] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[10]_i_1_n_0 ),
        .Q(\TIMER_reg_n_0_[10] ),
        .R(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[11] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[11]_i_1_n_0 ),
        .Q(\TIMER_reg_n_0_[11] ),
        .R(g0_b0__0__0_n_0));
  CARRY4 \TIMER_reg[11]_i_2 
       (.CI(\TIMER_reg[6]_i_2_n_0 ),
        .CO(\NLW_TIMER_reg[11]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\TIMER_reg_n_0_[11] ,\TIMER_reg_n_0_[10] ,\TIMER_reg_n_0_[9] }),
        .O(data0[12:9]),
        .S({\TIMER[11]_i_4_n_0 ,\TIMER[11]_i_5_n_0 ,\TIMER[11]_i_6_n_0 ,\TIMER[11]_i_7_n_0 }));
  FDSE \TIMER_reg[12] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(TIMER[12]),
        .Q(\TIMER_reg_n_0_[12] ),
        .S(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[1] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[1]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[1] ),
        .R(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[2] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[2]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[2] ),
        .R(g0_b0__0__0_n_0));
  FDSE \TIMER_reg[3] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(TIMER[3]),
        .Q(\TIMER_reg_n_0_[3] ),
        .S(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[4] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[4]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[4] ),
        .R(g0_b0__0__0_n_0));
  CARRY4 \TIMER_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\TIMER_reg[4]_i_2_n_0 ,\NLW_TIMER_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(\TIMER_reg_n_0_[0] ),
        .DI({\TIMER_reg_n_0_[4] ,\TIMER_reg_n_0_[3] ,\TIMER_reg_n_0_[2] ,\TIMER_reg_n_0_[1] }),
        .O(data0[4:1]),
        .S({\TIMER[4]_i_3_n_0 ,\TIMER[4]_i_4_n_0 ,\TIMER[4]_i_5_n_0 ,\TIMER[4]_i_6_n_0 }));
  FDRE \TIMER_reg[5] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[5]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[5] ),
        .R(g0_b0__0__0_n_0));
  FDRE \TIMER_reg[6] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(\TIMER[6]_i_1__2_n_0 ),
        .Q(\TIMER_reg_n_0_[6] ),
        .R(g0_b0__0__0_n_0));
  CARRY4 \TIMER_reg[6]_i_2 
       (.CI(\TIMER_reg[4]_i_2_n_0 ),
        .CO({\TIMER_reg[6]_i_2_n_0 ,\NLW_TIMER_reg[6]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\TIMER_reg_n_0_[8] ,\TIMER_reg_n_0_[7] ,\TIMER_reg_n_0_[6] ,\TIMER_reg_n_0_[5] }),
        .O(data0[8:5]),
        .S({\TIMER[6]_i_3_n_0 ,\TIMER[6]_i_4_n_0 ,\TIMER[6]_i_5_n_0 ,\TIMER[6]_i_6_n_0 }));
  FDSE \TIMER_reg[7] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(TIMER[7]),
        .Q(\TIMER_reg_n_0_[7] ),
        .S(g0_b0__0__0_n_0));
  FDSE \TIMER_reg[8] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(TIMER[8]),
        .Q(\TIMER_reg_n_0_[8] ),
        .S(g0_b0__0__0_n_0));
  FDSE \TIMER_reg[9] 
       (.C(clk),
        .CE(g0_b0__0_n_0),
        .D(TIMER[9]),
        .Q(\TIMER_reg_n_0_[9] ),
        .S(g0_b0__0__0_n_0));
  LUT5 #(
    .INIT(32'h1DD5A001)) 
    g0_b0__0
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[3] ),
        .I4(\STATE_reg_n_0_[4] ),
        .O(g0_b0__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    g0_b0__0__0
       (.I0(\STATE_reg_n_0_[0] ),
        .I1(\STATE_reg_n_0_[1] ),
        .I2(\STATE_reg_n_0_[2] ),
        .I3(\STATE_reg_n_0_[3] ),
        .I4(\STATE_reg_n_0_[4] ),
        .O(g0_b0__0__0_n_0));
endmodule

module PWM
   (led_r_pwm_OBUF,
    clk);
  output led_r_pwm_OBUF;
  input clk;

  wire COUNT;
  wire \COUNT[0]_i_1__0_n_0 ;
  wire \COUNT[1]_i_1__0_n_0 ;
  wire \COUNT[1]_i_2_n_0 ;
  wire \COUNT[2]_i_1__0_n_0 ;
  wire \COUNT[3]_i_1_n_0 ;
  wire \COUNT[3]_i_2_n_0 ;
  wire \COUNT[4]_i_1_n_0 ;
  wire \COUNT[5]_i_1_n_0 ;
  wire \COUNT[6]_i_1_n_0 ;
  wire \COUNT[7]_i_2_n_0 ;
  wire \COUNT[7]_i_3_n_0 ;
  wire \COUNT_reg_n_0_[0] ;
  wire \COUNT_reg_n_0_[1] ;
  wire \COUNT_reg_n_0_[2] ;
  wire \COUNT_reg_n_0_[3] ;
  wire \COUNT_reg_n_0_[4] ;
  wire \COUNT_reg_n_0_[5] ;
  wire \COUNT_reg_n_0_[6] ;
  wire \COUNT_reg_n_0_[7] ;
  wire OUT_BIT_i_10_n_0;
  wire OUT_BIT_i_1_n_0;
  wire OUT_BIT_i_3_n_0;
  wire OUT_BIT_i_4_n_0;
  wire OUT_BIT_i_5_n_0;
  wire OUT_BIT_i_6_n_0;
  wire OUT_BIT_i_7_n_0;
  wire OUT_BIT_i_8_n_0;
  wire OUT_BIT_i_9_n_0;
  wire [9:0]TIMER;
  wire \TIMER[4]_i_2_n_0 ;
  wire \TIMER[9]_i_2_n_0 ;
  wire \TIMER_reg_n_0_[0] ;
  wire \TIMER_reg_n_0_[1] ;
  wire \TIMER_reg_n_0_[2] ;
  wire \TIMER_reg_n_0_[3] ;
  wire \TIMER_reg_n_0_[4] ;
  wire \TIMER_reg_n_0_[5] ;
  wire \TIMER_reg_n_0_[6] ;
  wire \TIMER_reg_n_0_[7] ;
  wire \TIMER_reg_n_0_[8] ;
  wire \TIMER_reg_n_0_[9] ;
  wire clk;
  wire led_r_pwm_OBUF;
  wire p_0_in;
  wire [2:0]NLW_OUT_BIT_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_OUT_BIT_reg_i_2_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h2333333333333333)) 
    \COUNT[0]_i_1__0 
       (.I0(\COUNT[7]_i_3_n_0 ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT_reg_n_0_[4] ),
        .I4(\COUNT_reg_n_0_[7] ),
        .I5(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00FFBF00)) 
    \COUNT[1]_i_1__0 
       (.I0(\COUNT[1]_i_2_n_0 ),
        .I1(\COUNT_reg_n_0_[3] ),
        .I2(\COUNT_reg_n_0_[2] ),
        .I3(\COUNT_reg_n_0_[1] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .O(\COUNT[1]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \COUNT[1]_i_2 
       (.I0(\COUNT_reg_n_0_[5] ),
        .I1(\COUNT_reg_n_0_[4] ),
        .I2(\COUNT_reg_n_0_[7] ),
        .I3(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'hFFC011C0)) 
    \COUNT[2]_i_1__0 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .I3(\COUNT_reg_n_0_[2] ),
        .I4(\COUNT[3]_i_2_n_0 ),
        .O(\COUNT[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'hFF805580)) 
    \COUNT[3]_i_1 
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .I2(\COUNT_reg_n_0_[0] ),
        .I3(\COUNT_reg_n_0_[3] ),
        .I4(\COUNT[3]_i_2_n_0 ),
        .O(\COUNT[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h15555555FFFFFFFF)) 
    \COUNT[3]_i_2 
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT_reg_n_0_[4] ),
        .I3(\COUNT_reg_n_0_[7] ),
        .I4(\COUNT_reg_n_0_[6] ),
        .I5(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF7F00FF0000)) 
    \COUNT[4]_i_1 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[6] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT[7]_i_3_n_0 ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAABFFFFF55000000)) 
    \COUNT[5]_i_1 
       (.I0(\COUNT[7]_i_3_n_0 ),
        .I1(\COUNT_reg_n_0_[7] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT_reg_n_0_[0] ),
        .I4(\COUNT_reg_n_0_[4] ),
        .I5(\COUNT_reg_n_0_[5] ),
        .O(\COUNT[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF01CF0F0F0F0F0F0)) 
    \COUNT[6]_i_1 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT[7]_i_3_n_0 ),
        .I4(\COUNT_reg_n_0_[5] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \COUNT[7]_i_1 
       (.I0(\TIMER_reg_n_0_[9] ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .I5(\TIMER[9]_i_2_n_0 ),
        .O(COUNT));
  LUT6 #(
    .INIT(64'hF7FFF7FF08000000)) 
    \COUNT[7]_i_2 
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT[7]_i_3_n_0 ),
        .I3(\COUNT_reg_n_0_[6] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[7] ),
        .O(\COUNT[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \COUNT[7]_i_3 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[2] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[0] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[0]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[1] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[1]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[2] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[2]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[3] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[3]_i_1_n_0 ),
        .Q(\COUNT_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[4] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[4]_i_1_n_0 ),
        .Q(\COUNT_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[5] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[5]_i_1_n_0 ),
        .Q(\COUNT_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[6] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[6]_i_1_n_0 ),
        .Q(\COUNT_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[7] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[7]_i_2_n_0 ),
        .Q(\COUNT_reg_n_0_[7] ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    OUT_BIT_i_1
       (.I0(p_0_in),
        .O(OUT_BIT_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_10
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_10_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_3
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_4
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_5
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_5_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_6
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_7
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_8
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_8_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_9
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_9_n_0));
  FDRE OUT_BIT_reg
       (.C(clk),
        .CE(1'b1),
        .D(OUT_BIT_i_1_n_0),
        .Q(led_r_pwm_OBUF),
        .R(1'b0));
  CARRY4 OUT_BIT_reg_i_2
       (.CI(1'b0),
        .CO({p_0_in,NLW_OUT_BIT_reg_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({OUT_BIT_i_3_n_0,OUT_BIT_i_4_n_0,OUT_BIT_i_5_n_0,OUT_BIT_i_6_n_0}),
        .O(NLW_OUT_BIT_reg_i_2_O_UNCONNECTED[3:0]),
        .S({OUT_BIT_i_7_n_0,OUT_BIT_i_8_n_0,OUT_BIT_i_9_n_0,OUT_BIT_i_10_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[0]_i_1 
       (.I0(\TIMER_reg_n_0_[0] ),
        .O(TIMER[0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \TIMER[1]_i_1 
       (.I0(\TIMER_reg_n_0_[1] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .O(TIMER[1]));
  LUT3 #(
    .INIT(8'hA9)) 
    \TIMER[2]_i_1 
       (.I0(\TIMER_reg_n_0_[2] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .O(TIMER[2]));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0F00E)) 
    \TIMER[3]_i_1__0 
       (.I0(\TIMER[4]_i_2_n_0 ),
        .I1(\TIMER_reg_n_0_[4] ),
        .I2(\TIMER_reg_n_0_[3] ),
        .I3(\TIMER_reg_n_0_[1] ),
        .I4(\TIMER_reg_n_0_[0] ),
        .I5(\TIMER_reg_n_0_[2] ),
        .O(TIMER[3]));
  LUT6 #(
    .INIT(64'hFFFE0001FFFE0000)) 
    \TIMER[4]_i_1 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .I5(\TIMER[4]_i_2_n_0 ),
        .O(TIMER[4]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[4]_i_2 
       (.I0(\TIMER_reg_n_0_[8] ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .I4(\TIMER_reg_n_0_[9] ),
        .O(\TIMER[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \TIMER[5]_i_1 
       (.I0(\TIMER_reg_n_0_[5] ),
        .I1(\TIMER_reg_n_0_[3] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .I3(\TIMER_reg_n_0_[0] ),
        .I4(\TIMER_reg_n_0_[2] ),
        .I5(\TIMER_reg_n_0_[4] ),
        .O(TIMER[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \TIMER[6]_i_1 
       (.I0(\TIMER[9]_i_2_n_0 ),
        .I1(\TIMER_reg_n_0_[5] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .O(TIMER[6]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \TIMER[7]_i_1__0 
       (.I0(\TIMER[9]_i_2_n_0 ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .O(TIMER[7]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \TIMER[8]_i_1__0 
       (.I0(\TIMER[9]_i_2_n_0 ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .O(TIMER[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \TIMER[9]_i_1__0 
       (.I0(\TIMER[9]_i_2_n_0 ),
        .I1(\TIMER_reg_n_0_[8] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .I3(\TIMER_reg_n_0_[5] ),
        .I4(\TIMER_reg_n_0_[7] ),
        .I5(\TIMER_reg_n_0_[9] ),
        .O(TIMER[9]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[9]_i_2 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .O(\TIMER[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[0]),
        .Q(\TIMER_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[1]),
        .Q(\TIMER_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[2]),
        .Q(\TIMER_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[3]),
        .Q(\TIMER_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[4]),
        .Q(\TIMER_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[5]),
        .Q(\TIMER_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[6]),
        .Q(\TIMER_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[7]),
        .Q(\TIMER_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[8]),
        .Q(\TIMER_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[9]),
        .Q(\TIMER_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "PWM" *) 
module PWM_0
   (led_g_pwm_OBUF,
    clk);
  output led_g_pwm_OBUF;
  input clk;

  wire COUNT;
  wire \COUNT[0]_i_1__1_n_0 ;
  wire \COUNT[1]_i_1__1_n_0 ;
  wire \COUNT[1]_i_2__0_n_0 ;
  wire \COUNT[2]_i_1__1_n_0 ;
  wire \COUNT[3]_i_1__0_n_0 ;
  wire \COUNT[3]_i_2__0_n_0 ;
  wire \COUNT[4]_i_1__0_n_0 ;
  wire \COUNT[5]_i_1__0_n_0 ;
  wire \COUNT[6]_i_1__0_n_0 ;
  wire \COUNT[7]_i_2__0_n_0 ;
  wire \COUNT[7]_i_3__0_n_0 ;
  wire \COUNT_reg_n_0_[0] ;
  wire \COUNT_reg_n_0_[1] ;
  wire \COUNT_reg_n_0_[2] ;
  wire \COUNT_reg_n_0_[3] ;
  wire \COUNT_reg_n_0_[4] ;
  wire \COUNT_reg_n_0_[5] ;
  wire \COUNT_reg_n_0_[6] ;
  wire \COUNT_reg_n_0_[7] ;
  wire OUT_BIT_i_10__0_n_0;
  wire OUT_BIT_i_1__0_n_0;
  wire OUT_BIT_i_3__0_n_0;
  wire OUT_BIT_i_4__0_n_0;
  wire OUT_BIT_i_5__0_n_0;
  wire OUT_BIT_i_6__0_n_0;
  wire OUT_BIT_i_7__0_n_0;
  wire OUT_BIT_i_8__0_n_0;
  wire OUT_BIT_i_9__0_n_0;
  wire [9:0]TIMER;
  wire \TIMER[4]_i_2__0_n_0 ;
  wire \TIMER[9]_i_2__0_n_0 ;
  wire \TIMER_reg_n_0_[0] ;
  wire \TIMER_reg_n_0_[1] ;
  wire \TIMER_reg_n_0_[2] ;
  wire \TIMER_reg_n_0_[3] ;
  wire \TIMER_reg_n_0_[4] ;
  wire \TIMER_reg_n_0_[5] ;
  wire \TIMER_reg_n_0_[6] ;
  wire \TIMER_reg_n_0_[7] ;
  wire \TIMER_reg_n_0_[8] ;
  wire \TIMER_reg_n_0_[9] ;
  wire clk;
  wire led_g_pwm_OBUF;
  wire p_0_in;
  wire [2:0]NLW_OUT_BIT_reg_i_2__0_CO_UNCONNECTED;
  wire [3:0]NLW_OUT_BIT_reg_i_2__0_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h2333333333333333)) 
    \COUNT[0]_i_1__1 
       (.I0(\COUNT[7]_i_3__0_n_0 ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT_reg_n_0_[4] ),
        .I4(\COUNT_reg_n_0_[7] ),
        .I5(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h00FFBF00)) 
    \COUNT[1]_i_1__1 
       (.I0(\COUNT[1]_i_2__0_n_0 ),
        .I1(\COUNT_reg_n_0_[3] ),
        .I2(\COUNT_reg_n_0_[2] ),
        .I3(\COUNT_reg_n_0_[1] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .O(\COUNT[1]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \COUNT[1]_i_2__0 
       (.I0(\COUNT_reg_n_0_[5] ),
        .I1(\COUNT_reg_n_0_[4] ),
        .I2(\COUNT_reg_n_0_[7] ),
        .I3(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'hFFC011C0)) 
    \COUNT[2]_i_1__1 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .I3(\COUNT_reg_n_0_[2] ),
        .I4(\COUNT[3]_i_2__0_n_0 ),
        .O(\COUNT[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'hFF805580)) 
    \COUNT[3]_i_1__0 
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .I2(\COUNT_reg_n_0_[0] ),
        .I3(\COUNT_reg_n_0_[3] ),
        .I4(\COUNT[3]_i_2__0_n_0 ),
        .O(\COUNT[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h15555555FFFFFFFF)) 
    \COUNT[3]_i_2__0 
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT_reg_n_0_[4] ),
        .I3(\COUNT_reg_n_0_[7] ),
        .I4(\COUNT_reg_n_0_[6] ),
        .I5(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF7F00FF0000)) 
    \COUNT[4]_i_1__0 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[6] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT[7]_i_3__0_n_0 ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hAABFFFFF55000000)) 
    \COUNT[5]_i_1__0 
       (.I0(\COUNT[7]_i_3__0_n_0 ),
        .I1(\COUNT_reg_n_0_[7] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT_reg_n_0_[0] ),
        .I4(\COUNT_reg_n_0_[4] ),
        .I5(\COUNT_reg_n_0_[5] ),
        .O(\COUNT[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hF01CF0F0F0F0F0F0)) 
    \COUNT[6]_i_1__0 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT[7]_i_3__0_n_0 ),
        .I4(\COUNT_reg_n_0_[5] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \COUNT[7]_i_1__0 
       (.I0(\TIMER_reg_n_0_[9] ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .I5(\TIMER[9]_i_2__0_n_0 ),
        .O(COUNT));
  LUT6 #(
    .INIT(64'hF7FFF7FF08000000)) 
    \COUNT[7]_i_2__0 
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT[7]_i_3__0_n_0 ),
        .I3(\COUNT_reg_n_0_[6] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[7] ),
        .O(\COUNT[7]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \COUNT[7]_i_3__0 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[2] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[7]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[0] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[0]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[1] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[1]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[2] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[2]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[3] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[3]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[4] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[4]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[5] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[5]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[6] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[6]_i_1__0_n_0 ),
        .Q(\COUNT_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[7] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[7]_i_2__0_n_0 ),
        .Q(\COUNT_reg_n_0_[7] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_10__0
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_10__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    OUT_BIT_i_1__0
       (.I0(p_0_in),
        .O(OUT_BIT_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_3__0
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_4__0
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_4__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_5__0
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_5__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_6__0
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_7__0
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_7__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_8__0
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_8__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_9__0
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_9__0_n_0));
  FDRE OUT_BIT_reg
       (.C(clk),
        .CE(1'b1),
        .D(OUT_BIT_i_1__0_n_0),
        .Q(led_g_pwm_OBUF),
        .R(1'b0));
  CARRY4 OUT_BIT_reg_i_2__0
       (.CI(1'b0),
        .CO({p_0_in,NLW_OUT_BIT_reg_i_2__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({OUT_BIT_i_3__0_n_0,OUT_BIT_i_4__0_n_0,OUT_BIT_i_5__0_n_0,OUT_BIT_i_6__0_n_0}),
        .O(NLW_OUT_BIT_reg_i_2__0_O_UNCONNECTED[3:0]),
        .S({OUT_BIT_i_7__0_n_0,OUT_BIT_i_8__0_n_0,OUT_BIT_i_9__0_n_0,OUT_BIT_i_10__0_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[0]_i_1__0 
       (.I0(\TIMER_reg_n_0_[0] ),
        .O(TIMER[0]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \TIMER[1]_i_1__0 
       (.I0(\TIMER_reg_n_0_[1] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .O(TIMER[1]));
  LUT3 #(
    .INIT(8'hA9)) 
    \TIMER[2]_i_1__0 
       (.I0(\TIMER_reg_n_0_[2] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .O(TIMER[2]));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0F00E)) 
    \TIMER[3]_i_1__1 
       (.I0(\TIMER[4]_i_2__0_n_0 ),
        .I1(\TIMER_reg_n_0_[4] ),
        .I2(\TIMER_reg_n_0_[3] ),
        .I3(\TIMER_reg_n_0_[1] ),
        .I4(\TIMER_reg_n_0_[0] ),
        .I5(\TIMER_reg_n_0_[2] ),
        .O(TIMER[3]));
  LUT6 #(
    .INIT(64'hFFFE0001FFFE0000)) 
    \TIMER[4]_i_1__0 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .I5(\TIMER[4]_i_2__0_n_0 ),
        .O(TIMER[4]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[4]_i_2__0 
       (.I0(\TIMER_reg_n_0_[8] ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .I4(\TIMER_reg_n_0_[9] ),
        .O(\TIMER[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \TIMER[5]_i_1__0 
       (.I0(\TIMER_reg_n_0_[5] ),
        .I1(\TIMER_reg_n_0_[3] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .I3(\TIMER_reg_n_0_[0] ),
        .I4(\TIMER_reg_n_0_[2] ),
        .I5(\TIMER_reg_n_0_[4] ),
        .O(TIMER[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \TIMER[6]_i_1__0 
       (.I0(\TIMER[9]_i_2__0_n_0 ),
        .I1(\TIMER_reg_n_0_[5] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .O(TIMER[6]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \TIMER[7]_i_1__1 
       (.I0(\TIMER[9]_i_2__0_n_0 ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .O(TIMER[7]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \TIMER[8]_i_1__1 
       (.I0(\TIMER[9]_i_2__0_n_0 ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .O(TIMER[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \TIMER[9]_i_1__1 
       (.I0(\TIMER[9]_i_2__0_n_0 ),
        .I1(\TIMER_reg_n_0_[8] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .I3(\TIMER_reg_n_0_[5] ),
        .I4(\TIMER_reg_n_0_[7] ),
        .I5(\TIMER_reg_n_0_[9] ),
        .O(TIMER[9]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[9]_i_2__0 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .O(\TIMER[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[0]),
        .Q(\TIMER_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[1]),
        .Q(\TIMER_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[2]),
        .Q(\TIMER_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[3]),
        .Q(\TIMER_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[4]),
        .Q(\TIMER_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[5]),
        .Q(\TIMER_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[6]),
        .Q(\TIMER_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[7]),
        .Q(\TIMER_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[8]),
        .Q(\TIMER_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[9]),
        .Q(\TIMER_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "PWM" *) 
module PWM_1
   (led_b_pwm_OBUF,
    clk);
  output led_b_pwm_OBUF;
  input clk;

  wire COUNT;
  wire \COUNT[0]_i_1__2_n_0 ;
  wire \COUNT[1]_i_1__2_n_0 ;
  wire \COUNT[1]_i_2__1_n_0 ;
  wire \COUNT[2]_i_1__2_n_0 ;
  wire \COUNT[3]_i_1__1_n_0 ;
  wire \COUNT[3]_i_2__1_n_0 ;
  wire \COUNT[4]_i_1__1_n_0 ;
  wire \COUNT[5]_i_1__1_n_0 ;
  wire \COUNT[6]_i_1__1_n_0 ;
  wire \COUNT[7]_i_2__1_n_0 ;
  wire \COUNT[7]_i_3__1_n_0 ;
  wire \COUNT_reg_n_0_[0] ;
  wire \COUNT_reg_n_0_[1] ;
  wire \COUNT_reg_n_0_[2] ;
  wire \COUNT_reg_n_0_[3] ;
  wire \COUNT_reg_n_0_[4] ;
  wire \COUNT_reg_n_0_[5] ;
  wire \COUNT_reg_n_0_[6] ;
  wire \COUNT_reg_n_0_[7] ;
  wire OUT_BIT_i_10__1_n_0;
  wire OUT_BIT_i_1__1_n_0;
  wire OUT_BIT_i_3__1_n_0;
  wire OUT_BIT_i_4__1_n_0;
  wire OUT_BIT_i_5__1_n_0;
  wire OUT_BIT_i_6__1_n_0;
  wire OUT_BIT_i_7__1_n_0;
  wire OUT_BIT_i_8__1_n_0;
  wire OUT_BIT_i_9__1_n_0;
  wire [9:0]TIMER;
  wire \TIMER[4]_i_2__1_n_0 ;
  wire \TIMER[9]_i_2__1_n_0 ;
  wire \TIMER_reg_n_0_[0] ;
  wire \TIMER_reg_n_0_[1] ;
  wire \TIMER_reg_n_0_[2] ;
  wire \TIMER_reg_n_0_[3] ;
  wire \TIMER_reg_n_0_[4] ;
  wire \TIMER_reg_n_0_[5] ;
  wire \TIMER_reg_n_0_[6] ;
  wire \TIMER_reg_n_0_[7] ;
  wire \TIMER_reg_n_0_[8] ;
  wire \TIMER_reg_n_0_[9] ;
  wire clk;
  wire led_b_pwm_OBUF;
  wire p_0_in;
  wire [2:0]NLW_OUT_BIT_reg_i_2__1_CO_UNCONNECTED;
  wire [3:0]NLW_OUT_BIT_reg_i_2__1_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h2333333333333333)) 
    \COUNT[0]_i_1__2 
       (.I0(\COUNT[7]_i_3__1_n_0 ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT_reg_n_0_[4] ),
        .I4(\COUNT_reg_n_0_[7] ),
        .I5(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h00FFBF00)) 
    \COUNT[1]_i_1__2 
       (.I0(\COUNT[1]_i_2__1_n_0 ),
        .I1(\COUNT_reg_n_0_[3] ),
        .I2(\COUNT_reg_n_0_[2] ),
        .I3(\COUNT_reg_n_0_[1] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .O(\COUNT[1]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \COUNT[1]_i_2__1 
       (.I0(\COUNT_reg_n_0_[5] ),
        .I1(\COUNT_reg_n_0_[4] ),
        .I2(\COUNT_reg_n_0_[7] ),
        .I3(\COUNT_reg_n_0_[6] ),
        .O(\COUNT[1]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'hFFC011C0)) 
    \COUNT[2]_i_1__2 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .I3(\COUNT_reg_n_0_[2] ),
        .I4(\COUNT[3]_i_2__1_n_0 ),
        .O(\COUNT[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'hFF805580)) 
    \COUNT[3]_i_1__1 
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .I2(\COUNT_reg_n_0_[0] ),
        .I3(\COUNT_reg_n_0_[3] ),
        .I4(\COUNT[3]_i_2__1_n_0 ),
        .O(\COUNT[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h15555555FFFFFFFF)) 
    \COUNT[3]_i_2__1 
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT_reg_n_0_[4] ),
        .I3(\COUNT_reg_n_0_[7] ),
        .I4(\COUNT_reg_n_0_[6] ),
        .I5(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF7F00FF0000)) 
    \COUNT[4]_i_1__1 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[6] ),
        .I2(\COUNT_reg_n_0_[5] ),
        .I3(\COUNT[7]_i_3__1_n_0 ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAABFFFFF55000000)) 
    \COUNT[5]_i_1__1 
       (.I0(\COUNT[7]_i_3__1_n_0 ),
        .I1(\COUNT_reg_n_0_[7] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT_reg_n_0_[0] ),
        .I4(\COUNT_reg_n_0_[4] ),
        .I5(\COUNT_reg_n_0_[5] ),
        .O(\COUNT[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hF01CF0F0F0F0F0F0)) 
    \COUNT[6]_i_1__1 
       (.I0(\COUNT_reg_n_0_[7] ),
        .I1(\COUNT_reg_n_0_[0] ),
        .I2(\COUNT_reg_n_0_[6] ),
        .I3(\COUNT[7]_i_3__1_n_0 ),
        .I4(\COUNT_reg_n_0_[5] ),
        .I5(\COUNT_reg_n_0_[4] ),
        .O(\COUNT[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \COUNT[7]_i_1__1 
       (.I0(\TIMER_reg_n_0_[9] ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .I5(\TIMER[9]_i_2__1_n_0 ),
        .O(COUNT));
  LUT6 #(
    .INIT(64'hF7FFF7FF08000000)) 
    \COUNT[7]_i_2__1 
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .I2(\COUNT[7]_i_3__1_n_0 ),
        .I3(\COUNT_reg_n_0_[6] ),
        .I4(\COUNT_reg_n_0_[0] ),
        .I5(\COUNT_reg_n_0_[7] ),
        .O(\COUNT[7]_i_2__1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \COUNT[7]_i_3__1 
       (.I0(\COUNT_reg_n_0_[3] ),
        .I1(\COUNT_reg_n_0_[2] ),
        .I2(\COUNT_reg_n_0_[1] ),
        .O(\COUNT[7]_i_3__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[0] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[0]_i_1__2_n_0 ),
        .Q(\COUNT_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[1] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[1]_i_1__2_n_0 ),
        .Q(\COUNT_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[2] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[2]_i_1__2_n_0 ),
        .Q(\COUNT_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[3] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[3]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[4] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[4]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[5] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[5]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[6] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[6]_i_1__1_n_0 ),
        .Q(\COUNT_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \COUNT_reg[7] 
       (.C(clk),
        .CE(COUNT),
        .D(\COUNT[7]_i_2__1_n_0 ),
        .Q(\COUNT_reg_n_0_[7] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_10__1
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_10__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    OUT_BIT_i_1__1
       (.I0(p_0_in),
        .O(OUT_BIT_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_3__1
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_3__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_4__1
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_4__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_5__1
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_5__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    OUT_BIT_i_6__1
       (.I0(\COUNT_reg_n_0_[0] ),
        .I1(\COUNT_reg_n_0_[1] ),
        .O(OUT_BIT_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_7__1
       (.I0(\COUNT_reg_n_0_[6] ),
        .I1(\COUNT_reg_n_0_[7] ),
        .O(OUT_BIT_i_7__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_8__1
       (.I0(\COUNT_reg_n_0_[4] ),
        .I1(\COUNT_reg_n_0_[5] ),
        .O(OUT_BIT_i_8__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    OUT_BIT_i_9__1
       (.I0(\COUNT_reg_n_0_[2] ),
        .I1(\COUNT_reg_n_0_[3] ),
        .O(OUT_BIT_i_9__1_n_0));
  FDRE OUT_BIT_reg
       (.C(clk),
        .CE(1'b1),
        .D(OUT_BIT_i_1__1_n_0),
        .Q(led_b_pwm_OBUF),
        .R(1'b0));
  CARRY4 OUT_BIT_reg_i_2__1
       (.CI(1'b0),
        .CO({p_0_in,NLW_OUT_BIT_reg_i_2__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({OUT_BIT_i_3__1_n_0,OUT_BIT_i_4__1_n_0,OUT_BIT_i_5__1_n_0,OUT_BIT_i_6__1_n_0}),
        .O(NLW_OUT_BIT_reg_i_2__1_O_UNCONNECTED[3:0]),
        .S({OUT_BIT_i_7__1_n_0,OUT_BIT_i_8__1_n_0,OUT_BIT_i_9__1_n_0,OUT_BIT_i_10__1_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \TIMER[0]_i_1__1 
       (.I0(\TIMER_reg_n_0_[0] ),
        .O(TIMER[0]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \TIMER[1]_i_1__1 
       (.I0(\TIMER_reg_n_0_[1] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .O(TIMER[1]));
  LUT3 #(
    .INIT(8'hA9)) 
    \TIMER[2]_i_1__1 
       (.I0(\TIMER_reg_n_0_[2] ),
        .I1(\TIMER_reg_n_0_[0] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .O(TIMER[2]));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0F00E)) 
    \TIMER[3]_i_1__2 
       (.I0(\TIMER[4]_i_2__1_n_0 ),
        .I1(\TIMER_reg_n_0_[4] ),
        .I2(\TIMER_reg_n_0_[3] ),
        .I3(\TIMER_reg_n_0_[1] ),
        .I4(\TIMER_reg_n_0_[0] ),
        .I5(\TIMER_reg_n_0_[2] ),
        .O(TIMER[3]));
  LUT6 #(
    .INIT(64'hFFFE0001FFFE0000)) 
    \TIMER[4]_i_1__1 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .I5(\TIMER[4]_i_2__1_n_0 ),
        .O(TIMER[4]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[4]_i_2__1 
       (.I0(\TIMER_reg_n_0_[8] ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .I4(\TIMER_reg_n_0_[9] ),
        .O(\TIMER[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \TIMER[5]_i_1__1 
       (.I0(\TIMER_reg_n_0_[5] ),
        .I1(\TIMER_reg_n_0_[3] ),
        .I2(\TIMER_reg_n_0_[1] ),
        .I3(\TIMER_reg_n_0_[0] ),
        .I4(\TIMER_reg_n_0_[2] ),
        .I5(\TIMER_reg_n_0_[4] ),
        .O(TIMER[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \TIMER[6]_i_1__1 
       (.I0(\TIMER[9]_i_2__1_n_0 ),
        .I1(\TIMER_reg_n_0_[5] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .O(TIMER[6]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \TIMER[7]_i_1__2 
       (.I0(\TIMER[9]_i_2__1_n_0 ),
        .I1(\TIMER_reg_n_0_[6] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[7] ),
        .O(TIMER[7]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \TIMER[8]_i_1__2 
       (.I0(\TIMER[9]_i_2__1_n_0 ),
        .I1(\TIMER_reg_n_0_[7] ),
        .I2(\TIMER_reg_n_0_[5] ),
        .I3(\TIMER_reg_n_0_[6] ),
        .I4(\TIMER_reg_n_0_[8] ),
        .O(TIMER[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \TIMER[9]_i_1__2 
       (.I0(\TIMER[9]_i_2__1_n_0 ),
        .I1(\TIMER_reg_n_0_[8] ),
        .I2(\TIMER_reg_n_0_[6] ),
        .I3(\TIMER_reg_n_0_[5] ),
        .I4(\TIMER_reg_n_0_[7] ),
        .I5(\TIMER_reg_n_0_[9] ),
        .O(TIMER[9]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TIMER[9]_i_2__1 
       (.I0(\TIMER_reg_n_0_[3] ),
        .I1(\TIMER_reg_n_0_[1] ),
        .I2(\TIMER_reg_n_0_[0] ),
        .I3(\TIMER_reg_n_0_[2] ),
        .I4(\TIMER_reg_n_0_[4] ),
        .O(\TIMER[9]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[0]),
        .Q(\TIMER_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[1]),
        .Q(\TIMER_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[2]),
        .Q(\TIMER_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[3]),
        .Q(\TIMER_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TIMER_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[4]),
        .Q(\TIMER_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[5]),
        .Q(\TIMER_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[6]),
        .Q(\TIMER_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[7]),
        .Q(\TIMER_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[8]),
        .Q(\TIMER_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \TIMER_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(TIMER[9]),
        .Q(\TIMER_reg_n_0_[9] ),
        .R(1'b0));
endmodule

module VIDEO_TIME_GEN
   (\PIXCOL_DEL_reg[0] ,
    \PIXCOL_DEL_reg[1] ,
    \PIXCOL_DEL_reg[2] ,
    ADDRBWRADDR,
    \PIXROW_DEL_reg[0] ,
    \PIXROW_DEL_reg[1] ,
    D,
    INTHSYNCH,
    INTVSYNCH,
    BLANK,
    eth_clk_OBUF,
    internal_rst_reg);
  output \PIXCOL_DEL_reg[0] ;
  output \PIXCOL_DEL_reg[1] ;
  output \PIXCOL_DEL_reg[2] ;
  output [12:0]ADDRBWRADDR;
  output \PIXROW_DEL_reg[0] ;
  output \PIXROW_DEL_reg[1] ;
  output [0:0]D;
  output INTHSYNCH;
  output INTVSYNCH;
  output BLANK;
  input eth_clk_OBUF;
  input internal_rst_reg;

  wire [12:0]ADDRBWRADDR;
  wire BLANK;
  wire COL_ADDRESS;
  wire \COL_ADDRESS[0]_i_1_n_0 ;
  wire \COL_ADDRESS[1]_i_1_n_0 ;
  wire \COL_ADDRESS[2]_i_1_n_0 ;
  wire \COL_ADDRESS[3]_i_1_n_0 ;
  wire \COL_ADDRESS[4]_i_1_n_0 ;
  wire \COL_ADDRESS[5]_i_1_n_0 ;
  wire \COL_ADDRESS[6]_i_2_n_0 ;
  wire \COL_ADDRESS[6]_i_3_n_0 ;
  wire \COL_ADDRESS_reg_n_0_[1] ;
  wire \COL_ADDRESS_reg_n_0_[2] ;
  wire \COL_ADDRESS_reg_n_0_[3] ;
  wire \COL_ADDRESS_reg_n_0_[4] ;
  wire \COL_ADDRESS_reg_n_0_[5] ;
  wire \COL_ADDRESS_reg_n_0_[6] ;
  wire [0:0]D;
  wire HBLANK_i_1_n_0;
  wire HBLANK_i_2_n_0;
  wire HBLANK_i_3_n_0;
  wire HBLANK_i_4_n_0;
  wire HBLANK_i_5_n_0;
  wire HBLANK_reg_n_0;
  wire [10:0]HTIMER;
  wire \HTIMER[0]_i_2_n_0 ;
  wire \HTIMER[10]_i_2_n_0 ;
  wire \HTIMER[10]_i_3_n_0 ;
  wire \HTIMER[6]_i_2_n_0 ;
  wire INTHSYNCH;
  wire INTHSYNCH_i_1_n_0;
  wire INTHSYNCH_i_2_n_0;
  wire INTHSYNCH_i_3_n_0;
  wire INTVSYNCH;
  wire INTVSYNCH_i_1_n_0;
  wire INTVSYNCH_i_2_n_0;
  wire INTVSYNCH_i_3_n_0;
  wire INTVSYNCH_i_4_n_0;
  wire MEMORY_reg_0_i_11_n_0;
  wire MEMORY_reg_0_i_12_n_0;
  wire MEMORY_reg_0_i_13_n_0;
  wire MEMORY_reg_0_i_14_n_0;
  wire MEMORY_reg_0_i_15_n_0;
  wire MEMORY_reg_0_i_16_n_0;
  wire MEMORY_reg_0_i_2_n_0;
  wire MEMORY_reg_0_i_3_n_0;
  wire \PIXCOL_DEL_reg[0] ;
  wire \PIXCOL_DEL_reg[1] ;
  wire \PIXCOL_DEL_reg[2] ;
  wire \PIXROW_DEL_reg[0] ;
  wire \PIXROW_DEL_reg[1] ;
  wire \PIX_COL_ADDRESS[0]_i_1_n_0 ;
  wire \PIX_COL_ADDRESS[1]_i_1_n_0 ;
  wire \PIX_COL_ADDRESS[2]_i_1_n_0 ;
  wire PIX_ROW_ADDRESS;
  wire \PIX_ROW_ADDRESS[0]_i_1_n_0 ;
  wire \PIX_ROW_ADDRESS[1]_i_1_n_0 ;
  wire \PIX_ROW_ADDRESS[2]_i_1_n_0 ;
  wire \PIX_ROW_ADDRESS[2]_i_3_n_0 ;
  wire [12:1]ROW_ADDRESS;
  wire \ROW_ADDRESS[12]_i_1_n_0 ;
  wire \ROW_ADDRESS[12]_i_3_n_0 ;
  wire \ROW_ADDRESS[12]_i_4_n_0 ;
  wire \ROW_ADDRESS[12]_i_5_n_0 ;
  wire [12:1]ROW_ADDRESS_1;
  wire VBLANK_i_1_n_0;
  wire VBLANK_i_2_n_0;
  wire VBLANK_i_3_n_0;
  wire VBLANK_i_4_n_0;
  wire VBLANK_reg_n_0;
  wire [9:0]VTIMER;
  wire \VTIMER[0]_i_2_n_0 ;
  wire \VTIMER[8]_i_2_n_0 ;
  wire \VTIMER[9]_i_2_n_0 ;
  wire \VTIMER[9]_i_3_n_0 ;
  wire \VTIMER[9]_i_4_n_0 ;
  wire [9:0]VTIMER_0;
  wire VTIMER_EN;
  wire VTIMER_EN0;
  wire eth_clk_OBUF;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry_i_3_n_0;
  wire internal_rst_reg;
  wire \plusOp_inferred__4/i__carry__0_n_0 ;
  wire \plusOp_inferred__4/i__carry__0_n_4 ;
  wire \plusOp_inferred__4/i__carry__0_n_5 ;
  wire \plusOp_inferred__4/i__carry__0_n_6 ;
  wire \plusOp_inferred__4/i__carry__0_n_7 ;
  wire \plusOp_inferred__4/i__carry__1_n_4 ;
  wire \plusOp_inferred__4/i__carry__1_n_5 ;
  wire \plusOp_inferred__4/i__carry__1_n_6 ;
  wire \plusOp_inferred__4/i__carry__1_n_7 ;
  wire \plusOp_inferred__4/i__carry_n_0 ;
  wire \plusOp_inferred__4/i__carry_n_4 ;
  wire \plusOp_inferred__4/i__carry_n_5 ;
  wire \plusOp_inferred__4/i__carry_n_6 ;
  wire \plusOp_inferred__4/i__carry_n_7 ;
  wire [10:0]sel0;
  wire [3:0]NLW_MEMORY_reg_0_i_1_CO_UNCONNECTED;
  wire [2:0]NLW_MEMORY_reg_0_i_2_CO_UNCONNECTED;
  wire [2:0]NLW_MEMORY_reg_0_i_3_CO_UNCONNECTED;
  wire [0:0]NLW_MEMORY_reg_0_i_3_O_UNCONNECTED;
  wire [2:0]\NLW_plusOp_inferred__4/i__carry_CO_UNCONNECTED ;
  wire [2:0]\NLW_plusOp_inferred__4/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_plusOp_inferred__4/i__carry__1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'hE)) 
    BLANK_DEL_i_1
       (.I0(VBLANK_reg_n_0),
        .I1(HBLANK_reg_n_0),
        .O(BLANK));
  LUT1 #(
    .INIT(2'h1)) 
    \COL_ADDRESS[0]_i_1 
       (.I0(ADDRBWRADDR[0]),
        .O(\COL_ADDRESS[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \COL_ADDRESS[1]_i_1 
       (.I0(\COL_ADDRESS_reg_n_0_[1] ),
        .I1(ADDRBWRADDR[0]),
        .O(\COL_ADDRESS[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00000000EFFF)) 
    \COL_ADDRESS[2]_i_1 
       (.I0(\COL_ADDRESS_reg_n_0_[4] ),
        .I1(\COL_ADDRESS_reg_n_0_[3] ),
        .I2(\COL_ADDRESS_reg_n_0_[6] ),
        .I3(\COL_ADDRESS_reg_n_0_[5] ),
        .I4(\COL_ADDRESS[6]_i_3_n_0 ),
        .I5(\COL_ADDRESS_reg_n_0_[2] ),
        .O(\COL_ADDRESS[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \COL_ADDRESS[3]_i_1 
       (.I0(\COL_ADDRESS_reg_n_0_[3] ),
        .I1(\COL_ADDRESS_reg_n_0_[1] ),
        .I2(ADDRBWRADDR[0]),
        .I3(\COL_ADDRESS_reg_n_0_[2] ),
        .O(\COL_ADDRESS[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \COL_ADDRESS[4]_i_1 
       (.I0(\COL_ADDRESS_reg_n_0_[4] ),
        .I1(\COL_ADDRESS_reg_n_0_[2] ),
        .I2(ADDRBWRADDR[0]),
        .I3(\COL_ADDRESS_reg_n_0_[1] ),
        .I4(\COL_ADDRESS_reg_n_0_[3] ),
        .O(\COL_ADDRESS[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF3FFFFD00C00000)) 
    \COL_ADDRESS[5]_i_1 
       (.I0(\COL_ADDRESS_reg_n_0_[6] ),
        .I1(\COL_ADDRESS_reg_n_0_[4] ),
        .I2(\COL_ADDRESS_reg_n_0_[2] ),
        .I3(\COL_ADDRESS[6]_i_3_n_0 ),
        .I4(\COL_ADDRESS_reg_n_0_[3] ),
        .I5(\COL_ADDRESS_reg_n_0_[5] ),
        .O(\COL_ADDRESS[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \COL_ADDRESS[6]_i_1 
       (.I0(\PIXCOL_DEL_reg[0] ),
        .I1(\PIXCOL_DEL_reg[1] ),
        .I2(\PIXCOL_DEL_reg[2] ),
        .I3(HBLANK_reg_n_0),
        .I4(VBLANK_reg_n_0),
        .O(COL_ADDRESS));
  LUT6 #(
    .INIT(64'hDFFEFFFF20000000)) 
    \COL_ADDRESS[6]_i_2 
       (.I0(\COL_ADDRESS_reg_n_0_[3] ),
        .I1(\COL_ADDRESS[6]_i_3_n_0 ),
        .I2(\COL_ADDRESS_reg_n_0_[2] ),
        .I3(\COL_ADDRESS_reg_n_0_[4] ),
        .I4(\COL_ADDRESS_reg_n_0_[5] ),
        .I5(\COL_ADDRESS_reg_n_0_[6] ),
        .O(\COL_ADDRESS[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \COL_ADDRESS[6]_i_3 
       (.I0(\COL_ADDRESS_reg_n_0_[1] ),
        .I1(ADDRBWRADDR[0]),
        .O(\COL_ADDRESS[6]_i_3_n_0 ));
  FDRE \COL_ADDRESS_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[0]_i_1_n_0 ),
        .Q(ADDRBWRADDR[0]),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[1]_i_1_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[1] ),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[2]_i_1_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[2] ),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[3]_i_1_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[3] ),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[4]_i_1_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[4] ),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[5]_i_1_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[5] ),
        .R(internal_rst_reg));
  FDRE \COL_ADDRESS_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(COL_ADDRESS),
        .D(\COL_ADDRESS[6]_i_2_n_0 ),
        .Q(\COL_ADDRESS_reg_n_0_[6] ),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFD0FFD0)) 
    HBLANK_i_1
       (.I0(HBLANK_i_2_n_0),
        .I1(HBLANK_i_3_n_0),
        .I2(HBLANK_reg_n_0),
        .I3(internal_rst_reg),
        .I4(HBLANK_i_4_n_0),
        .I5(HBLANK_i_5_n_0),
        .O(HBLANK_i_1_n_0));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    HBLANK_i_2
       (.I0(sel0[7]),
        .I1(sel0[6]),
        .I2(sel0[0]),
        .I3(sel0[10]),
        .I4(sel0[5]),
        .I5(sel0[3]),
        .O(HBLANK_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    HBLANK_i_3
       (.I0(sel0[9]),
        .I1(sel0[8]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[4]),
        .O(HBLANK_i_3_n_0));
  LUT5 #(
    .INIT(32'h00010000)) 
    HBLANK_i_4
       (.I0(sel0[10]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[4]),
        .O(HBLANK_i_4_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    HBLANK_i_5
       (.I0(sel0[6]),
        .I1(sel0[7]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[9]),
        .I5(sel0[8]),
        .O(HBLANK_i_5_n_0));
  FDRE HBLANK_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HBLANK_i_1_n_0),
        .Q(HBLANK_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFB)) 
    \HTIMER[0]_i_1 
       (.I0(\HTIMER[0]_i_2_n_0 ),
        .I1(sel0[10]),
        .I2(sel0[3]),
        .I3(sel0[6]),
        .I4(sel0[5]),
        .I5(sel0[0]),
        .O(HTIMER[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \HTIMER[0]_i_2 
       (.I0(sel0[4]),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(sel0[8]),
        .I4(sel0[9]),
        .I5(sel0[7]),
        .O(\HTIMER[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \HTIMER[10]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[10]),
        .I2(sel0[7]),
        .I3(sel0[8]),
        .I4(sel0[9]),
        .I5(\HTIMER[10]_i_3_n_0 ),
        .O(HTIMER[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \HTIMER[10]_i_2 
       (.I0(\HTIMER[0]_i_2_n_0 ),
        .I1(sel0[10]),
        .I2(sel0[3]),
        .I3(sel0[6]),
        .I4(sel0[5]),
        .I5(sel0[0]),
        .O(\HTIMER[10]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \HTIMER[10]_i_3 
       (.I0(sel0[6]),
        .I1(sel0[3]),
        .I2(sel0[5]),
        .I3(\HTIMER[6]_i_2_n_0 ),
        .O(\HTIMER[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \HTIMER[1]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .O(HTIMER[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \HTIMER[2]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .O(HTIMER[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \HTIMER[3]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .O(HTIMER[3]));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \HTIMER[4]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[4]),
        .I2(sel0[2]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(HTIMER[4]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \HTIMER[5]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[5]),
        .I2(\HTIMER[6]_i_2_n_0 ),
        .I3(sel0[3]),
        .O(HTIMER[5]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \HTIMER[6]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[6]),
        .I2(\HTIMER[6]_i_2_n_0 ),
        .I3(sel0[5]),
        .I4(sel0[3]),
        .O(HTIMER[6]));
  LUT4 #(
    .INIT(16'h8000)) 
    \HTIMER[6]_i_2 
       (.I0(sel0[2]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(sel0[4]),
        .O(\HTIMER[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \HTIMER[7]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[7]),
        .I2(\HTIMER[10]_i_3_n_0 ),
        .O(HTIMER[7]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \HTIMER[8]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[8]),
        .I2(\HTIMER[10]_i_3_n_0 ),
        .I3(sel0[7]),
        .O(HTIMER[8]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \HTIMER[9]_i_1 
       (.I0(\HTIMER[10]_i_2_n_0 ),
        .I1(sel0[9]),
        .I2(sel0[8]),
        .I3(sel0[7]),
        .I4(\HTIMER[10]_i_3_n_0 ),
        .O(HTIMER[9]));
  FDRE \HTIMER_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[0]),
        .Q(sel0[0]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[10] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[10]),
        .Q(sel0[10]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[1]),
        .Q(sel0[1]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[2]),
        .Q(sel0[2]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[3]),
        .Q(sel0[3]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[4]),
        .Q(sel0[4]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[5]),
        .Q(sel0[5]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[6]),
        .Q(sel0[6]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[7] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[7]),
        .Q(sel0[7]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[8] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[8]),
        .Q(sel0[8]),
        .R(internal_rst_reg));
  FDRE \HTIMER_reg[9] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(HTIMER[9]),
        .Q(sel0[9]),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h00000000AAEA0000)) 
    INTHSYNCH_i_1
       (.I0(INTHSYNCH),
        .I1(INTHSYNCH_i_2_n_0),
        .I2(INTHSYNCH_i_3_n_0),
        .I3(\HTIMER[0]_i_2_n_0 ),
        .I4(\HTIMER[10]_i_2_n_0 ),
        .I5(internal_rst_reg),
        .O(INTHSYNCH_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    INTHSYNCH_i_2
       (.I0(sel0[5]),
        .I1(sel0[3]),
        .I2(sel0[6]),
        .O(INTHSYNCH_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    INTHSYNCH_i_3
       (.I0(sel0[0]),
        .I1(sel0[10]),
        .O(INTHSYNCH_i_3_n_0));
  FDRE INTHSYNCH_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(INTHSYNCH_i_1_n_0),
        .Q(INTHSYNCH),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00AE00AE000000AE)) 
    INTVSYNCH_i_1
       (.I0(INTVSYNCH),
        .I1(INTVSYNCH_i_2_n_0),
        .I2(INTVSYNCH_i_3_n_0),
        .I3(internal_rst_reg),
        .I4(VTIMER_EN),
        .I5(\VTIMER[9]_i_2_n_0 ),
        .O(INTVSYNCH_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    INTVSYNCH_i_2
       (.I0(INTVSYNCH_i_4_n_0),
        .I1(VTIMER_EN),
        .I2(VTIMER[9]),
        .I3(VTIMER[0]),
        .I4(VTIMER[4]),
        .I5(VTIMER[7]),
        .O(INTVSYNCH_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    INTVSYNCH_i_3
       (.I0(VTIMER[5]),
        .I1(VTIMER[3]),
        .I2(VTIMER[8]),
        .I3(VTIMER[6]),
        .O(INTVSYNCH_i_3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    INTVSYNCH_i_4
       (.I0(VTIMER[1]),
        .I1(VTIMER[2]),
        .O(INTVSYNCH_i_4_n_0));
  FDRE INTVSYNCH_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(INTVSYNCH_i_1_n_0),
        .Q(INTVSYNCH),
        .R(1'b0));
  CARRY4 MEMORY_reg_0_i_1
       (.CI(MEMORY_reg_0_i_2_n_0),
        .CO(NLW_MEMORY_reg_0_i_1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(ADDRBWRADDR[12:9]),
        .S(ROW_ADDRESS[12:9]));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_11
       (.I0(ROW_ADDRESS[6]),
        .I1(\COL_ADDRESS_reg_n_0_[6] ),
        .O(MEMORY_reg_0_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_12
       (.I0(ROW_ADDRESS[5]),
        .I1(\COL_ADDRESS_reg_n_0_[5] ),
        .O(MEMORY_reg_0_i_12_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_13
       (.I0(ROW_ADDRESS[4]),
        .I1(\COL_ADDRESS_reg_n_0_[4] ),
        .O(MEMORY_reg_0_i_13_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_14
       (.I0(ROW_ADDRESS[3]),
        .I1(\COL_ADDRESS_reg_n_0_[3] ),
        .O(MEMORY_reg_0_i_14_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_15
       (.I0(ROW_ADDRESS[2]),
        .I1(\COL_ADDRESS_reg_n_0_[2] ),
        .O(MEMORY_reg_0_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_16
       (.I0(ROW_ADDRESS[1]),
        .I1(\COL_ADDRESS_reg_n_0_[1] ),
        .O(MEMORY_reg_0_i_16_n_0));
  CARRY4 MEMORY_reg_0_i_2
       (.CI(MEMORY_reg_0_i_3_n_0),
        .CO({MEMORY_reg_0_i_2_n_0,NLW_MEMORY_reg_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,ROW_ADDRESS[6:5]}),
        .O(ADDRBWRADDR[8:5]),
        .S({ROW_ADDRESS[8:7],MEMORY_reg_0_i_11_n_0,MEMORY_reg_0_i_12_n_0}));
  CARRY4 MEMORY_reg_0_i_3
       (.CI(1'b0),
        .CO({MEMORY_reg_0_i_3_n_0,NLW_MEMORY_reg_0_i_3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(ROW_ADDRESS[4:1]),
        .O({ADDRBWRADDR[4:2],NLW_MEMORY_reg_0_i_3_O_UNCONNECTED[0]}),
        .S({MEMORY_reg_0_i_13_n_0,MEMORY_reg_0_i_14_n_0,MEMORY_reg_0_i_15_n_0,MEMORY_reg_0_i_16_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    MEMORY_reg_0_i_4
       (.I0(ROW_ADDRESS[1]),
        .I1(\COL_ADDRESS_reg_n_0_[1] ),
        .O(ADDRBWRADDR[1]));
  LUT3 #(
    .INIT(8'hE1)) 
    \PIX_COL_ADDRESS[0]_i_1 
       (.I0(VBLANK_reg_n_0),
        .I1(HBLANK_reg_n_0),
        .I2(\PIXCOL_DEL_reg[0] ),
        .O(\PIX_COL_ADDRESS[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFD02)) 
    \PIX_COL_ADDRESS[1]_i_1 
       (.I0(\PIXCOL_DEL_reg[0] ),
        .I1(HBLANK_reg_n_0),
        .I2(VBLANK_reg_n_0),
        .I3(\PIXCOL_DEL_reg[1] ),
        .O(\PIX_COL_ADDRESS[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFF70008)) 
    \PIX_COL_ADDRESS[2]_i_1 
       (.I0(\PIXCOL_DEL_reg[0] ),
        .I1(\PIXCOL_DEL_reg[1] ),
        .I2(HBLANK_reg_n_0),
        .I3(VBLANK_reg_n_0),
        .I4(\PIXCOL_DEL_reg[2] ),
        .O(\PIX_COL_ADDRESS[2]_i_1_n_0 ));
  FDRE \PIX_COL_ADDRESS_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_COL_ADDRESS[0]_i_1_n_0 ),
        .Q(\PIXCOL_DEL_reg[0] ),
        .R(internal_rst_reg));
  FDRE \PIX_COL_ADDRESS_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_COL_ADDRESS[1]_i_1_n_0 ),
        .Q(\PIXCOL_DEL_reg[1] ),
        .R(internal_rst_reg));
  FDRE \PIX_COL_ADDRESS_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_COL_ADDRESS[2]_i_1_n_0 ),
        .Q(\PIXCOL_DEL_reg[2] ),
        .R(internal_rst_reg));
  LUT2 #(
    .INIT(4'h6)) 
    \PIX_ROW_ADDRESS[0]_i_1 
       (.I0(PIX_ROW_ADDRESS),
        .I1(\PIXROW_DEL_reg[0] ),
        .O(\PIX_ROW_ADDRESS[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \PIX_ROW_ADDRESS[1]_i_1 
       (.I0(\PIXROW_DEL_reg[0] ),
        .I1(PIX_ROW_ADDRESS),
        .I2(\PIXROW_DEL_reg[1] ),
        .O(\PIX_ROW_ADDRESS[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \PIX_ROW_ADDRESS[2]_i_1 
       (.I0(\PIXROW_DEL_reg[0] ),
        .I1(\PIXROW_DEL_reg[1] ),
        .I2(PIX_ROW_ADDRESS),
        .I3(D),
        .O(\PIX_ROW_ADDRESS[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \PIX_ROW_ADDRESS[2]_i_2 
       (.I0(VBLANK_reg_n_0),
        .I1(HBLANK_reg_n_0),
        .I2(\PIXCOL_DEL_reg[2] ),
        .I3(\PIXCOL_DEL_reg[1] ),
        .I4(\PIXCOL_DEL_reg[0] ),
        .I5(\PIX_ROW_ADDRESS[2]_i_3_n_0 ),
        .O(PIX_ROW_ADDRESS));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \PIX_ROW_ADDRESS[2]_i_3 
       (.I0(\COL_ADDRESS_reg_n_0_[5] ),
        .I1(\COL_ADDRESS_reg_n_0_[6] ),
        .I2(\COL_ADDRESS_reg_n_0_[2] ),
        .I3(\COL_ADDRESS_reg_n_0_[3] ),
        .I4(\COL_ADDRESS_reg_n_0_[4] ),
        .I5(\COL_ADDRESS[6]_i_3_n_0 ),
        .O(\PIX_ROW_ADDRESS[2]_i_3_n_0 ));
  FDRE \PIX_ROW_ADDRESS_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_ROW_ADDRESS[0]_i_1_n_0 ),
        .Q(\PIXROW_DEL_reg[0] ),
        .R(internal_rst_reg));
  FDRE \PIX_ROW_ADDRESS_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_ROW_ADDRESS[1]_i_1_n_0 ),
        .Q(\PIXROW_DEL_reg[1] ),
        .R(internal_rst_reg));
  FDRE \PIX_ROW_ADDRESS_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PIX_ROW_ADDRESS[2]_i_1_n_0 ),
        .Q(D),
        .R(internal_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[10]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__1_n_6 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[10]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[11]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__1_n_5 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[11]));
  LUT4 #(
    .INIT(16'h8000)) 
    \ROW_ADDRESS[12]_i_1 
       (.I0(PIX_ROW_ADDRESS),
        .I1(D),
        .I2(\PIXROW_DEL_reg[0] ),
        .I3(\PIXROW_DEL_reg[1] ),
        .O(\ROW_ADDRESS[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[12]_i_2 
       (.I0(\plusOp_inferred__4/i__carry__1_n_4 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[12]));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \ROW_ADDRESS[12]_i_3 
       (.I0(ROW_ADDRESS[1]),
        .I1(ROW_ADDRESS[6]),
        .I2(ROW_ADDRESS[12]),
        .I3(ROW_ADDRESS[9]),
        .I4(\ROW_ADDRESS[12]_i_4_n_0 ),
        .I5(\ROW_ADDRESS[12]_i_5_n_0 ),
        .O(\ROW_ADDRESS[12]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \ROW_ADDRESS[12]_i_4 
       (.I0(ROW_ADDRESS[3]),
        .I1(ROW_ADDRESS[5]),
        .I2(ROW_ADDRESS[10]),
        .I3(ROW_ADDRESS[7]),
        .O(\ROW_ADDRESS[12]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \ROW_ADDRESS[12]_i_5 
       (.I0(ROW_ADDRESS[8]),
        .I1(ROW_ADDRESS[4]),
        .I2(ROW_ADDRESS[11]),
        .I3(ROW_ADDRESS[2]),
        .O(\ROW_ADDRESS[12]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[1]_i_1 
       (.I0(\plusOp_inferred__4/i__carry_n_7 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[1]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[2]_i_1 
       (.I0(\plusOp_inferred__4/i__carry_n_6 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[2]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[3]_i_1 
       (.I0(\plusOp_inferred__4/i__carry_n_5 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[3]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[4]_i_1 
       (.I0(\plusOp_inferred__4/i__carry_n_4 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[4]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[5]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__0_n_7 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[5]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[6]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__0_n_6 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[6]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[7]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__0_n_5 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[7]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[8]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__0_n_4 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[8]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ROW_ADDRESS[9]_i_1 
       (.I0(\plusOp_inferred__4/i__carry__1_n_7 ),
        .I1(\ROW_ADDRESS[12]_i_3_n_0 ),
        .O(ROW_ADDRESS_1[9]));
  FDRE \ROW_ADDRESS_reg[10] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[10]),
        .Q(ROW_ADDRESS[10]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[11] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[11]),
        .Q(ROW_ADDRESS[11]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[12] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[12]),
        .Q(ROW_ADDRESS[12]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[1]),
        .Q(ROW_ADDRESS[1]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[2]),
        .Q(ROW_ADDRESS[2]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[3]),
        .Q(ROW_ADDRESS[3]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[4]),
        .Q(ROW_ADDRESS[4]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[5]),
        .Q(ROW_ADDRESS[5]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[6]),
        .Q(ROW_ADDRESS[6]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[7] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[7]),
        .Q(ROW_ADDRESS[7]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[8] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[8]),
        .Q(ROW_ADDRESS[8]),
        .R(internal_rst_reg));
  FDRE \ROW_ADDRESS_reg[9] 
       (.C(eth_clk_OBUF),
        .CE(\ROW_ADDRESS[12]_i_1_n_0 ),
        .D(ROW_ADDRESS_1[9]),
        .Q(ROW_ADDRESS[9]),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFF70FF70FFFFFF70)) 
    VBLANK_i_1
       (.I0(VBLANK_i_2_n_0),
        .I1(VBLANK_i_3_n_0),
        .I2(VBLANK_reg_n_0),
        .I3(internal_rst_reg),
        .I4(VBLANK_i_4_n_0),
        .I5(\VTIMER[0]_i_2_n_0 ),
        .O(VBLANK_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    VBLANK_i_2
       (.I0(VTIMER[5]),
        .I1(VTIMER[0]),
        .I2(VTIMER[3]),
        .I3(VTIMER[8]),
        .I4(VTIMER[6]),
        .O(VBLANK_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    VBLANK_i_3
       (.I0(VTIMER[4]),
        .I1(VTIMER[7]),
        .I2(VTIMER[1]),
        .I3(VTIMER[2]),
        .I4(VTIMER[9]),
        .I5(VTIMER_EN),
        .O(VBLANK_i_3_n_0));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    VBLANK_i_4
       (.I0(VTIMER[2]),
        .I1(VTIMER[4]),
        .I2(VTIMER[0]),
        .I3(VTIMER[1]),
        .I4(VTIMER_EN),
        .I5(VTIMER[7]),
        .O(VBLANK_i_4_n_0));
  FDRE VBLANK_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(VBLANK_i_1_n_0),
        .Q(VBLANK_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FFFF7FFF)) 
    \VTIMER[0]_i_1 
       (.I0(VTIMER[4]),
        .I1(VTIMER[1]),
        .I2(VTIMER[2]),
        .I3(VTIMER[7]),
        .I4(\VTIMER[0]_i_2_n_0 ),
        .I5(VTIMER[0]),
        .O(VTIMER_0[0]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \VTIMER[0]_i_2 
       (.I0(VTIMER[6]),
        .I1(VTIMER[8]),
        .I2(VTIMER[3]),
        .I3(VTIMER[5]),
        .I4(VTIMER[9]),
        .O(\VTIMER[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \VTIMER[1]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[1]),
        .I2(VTIMER[0]),
        .O(VTIMER_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \VTIMER[2]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[2]),
        .I2(VTIMER[1]),
        .I3(VTIMER[0]),
        .O(VTIMER_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \VTIMER[3]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[3]),
        .I2(VTIMER[0]),
        .I3(VTIMER[2]),
        .I4(VTIMER[1]),
        .O(VTIMER_0[3]));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \VTIMER[4]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[4]),
        .I2(VTIMER[3]),
        .I3(VTIMER[0]),
        .I4(VTIMER[2]),
        .I5(VTIMER[1]),
        .O(VTIMER_0[4]));
  LUT5 #(
    .INIT(32'h88882888)) 
    \VTIMER[5]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[5]),
        .I2(VTIMER[3]),
        .I3(VTIMER[0]),
        .I4(\VTIMER[8]_i_2_n_0 ),
        .O(VTIMER_0[5]));
  LUT6 #(
    .INIT(64'h8888888828888888)) 
    \VTIMER[6]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[6]),
        .I2(VTIMER[5]),
        .I3(VTIMER[0]),
        .I4(VTIMER[3]),
        .I5(\VTIMER[8]_i_2_n_0 ),
        .O(VTIMER_0[6]));
  LUT5 #(
    .INIT(32'h88882888)) 
    \VTIMER[7]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[7]),
        .I2(VTIMER[6]),
        .I3(\VTIMER[9]_i_3_n_0 ),
        .I4(\VTIMER[8]_i_2_n_0 ),
        .O(VTIMER_0[7]));
  LUT6 #(
    .INIT(64'h8888888828888888)) 
    \VTIMER[8]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[8]),
        .I2(VTIMER[6]),
        .I3(\VTIMER[9]_i_3_n_0 ),
        .I4(VTIMER[7]),
        .I5(\VTIMER[8]_i_2_n_0 ),
        .O(VTIMER_0[8]));
  LUT3 #(
    .INIT(8'h7F)) 
    \VTIMER[8]_i_2 
       (.I0(VTIMER[2]),
        .I1(VTIMER[1]),
        .I2(VTIMER[4]),
        .O(\VTIMER[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8888888828888888)) 
    \VTIMER[9]_i_1 
       (.I0(\VTIMER[9]_i_2_n_0 ),
        .I1(VTIMER[9]),
        .I2(\VTIMER[9]_i_3_n_0 ),
        .I3(VTIMER[6]),
        .I4(VTIMER[8]),
        .I5(\VTIMER[9]_i_4_n_0 ),
        .O(VTIMER_0[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    \VTIMER[9]_i_2 
       (.I0(VTIMER[4]),
        .I1(VTIMER[1]),
        .I2(VTIMER[2]),
        .I3(VTIMER[7]),
        .I4(\VTIMER[0]_i_2_n_0 ),
        .I5(VTIMER[0]),
        .O(\VTIMER[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \VTIMER[9]_i_3 
       (.I0(VTIMER[3]),
        .I1(VTIMER[0]),
        .I2(VTIMER[5]),
        .O(\VTIMER[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \VTIMER[9]_i_4 
       (.I0(VTIMER[4]),
        .I1(VTIMER[1]),
        .I2(VTIMER[2]),
        .I3(VTIMER[7]),
        .O(\VTIMER[9]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    VTIMER_EN_i_1
       (.I0(internal_rst_reg),
        .I1(\HTIMER[10]_i_2_n_0 ),
        .O(VTIMER_EN0));
  FDRE VTIMER_EN_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(VTIMER_EN0),
        .Q(VTIMER_EN),
        .R(1'b0));
  FDRE \VTIMER_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[0]),
        .Q(VTIMER[0]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[1]),
        .Q(VTIMER[1]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[2]),
        .Q(VTIMER[2]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[3]),
        .Q(VTIMER[3]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[4]),
        .Q(VTIMER[4]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[5]),
        .Q(VTIMER[5]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[6]),
        .Q(VTIMER[6]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[7] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[7]),
        .Q(VTIMER[7]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[8] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[8]),
        .Q(VTIMER[8]),
        .R(internal_rst_reg));
  FDRE \VTIMER_reg[9] 
       (.C(eth_clk_OBUF),
        .CE(VTIMER_EN),
        .D(VTIMER_0[9]),
        .Q(VTIMER[9]),
        .R(internal_rst_reg));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3
       (.I0(ROW_ADDRESS[6]),
        .O(i__carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4
       (.I0(ROW_ADDRESS[5]),
        .O(i__carry__0_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3
       (.I0(ROW_ADDRESS[2]),
        .O(i__carry_i_3_n_0));
  CARRY4 \plusOp_inferred__4/i__carry 
       (.CI(1'b0),
        .CO({\plusOp_inferred__4/i__carry_n_0 ,\NLW_plusOp_inferred__4/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,ROW_ADDRESS[2],1'b0}),
        .O({\plusOp_inferred__4/i__carry_n_4 ,\plusOp_inferred__4/i__carry_n_5 ,\plusOp_inferred__4/i__carry_n_6 ,\plusOp_inferred__4/i__carry_n_7 }),
        .S({ROW_ADDRESS[4:3],i__carry_i_3_n_0,ROW_ADDRESS[1]}));
  CARRY4 \plusOp_inferred__4/i__carry__0 
       (.CI(\plusOp_inferred__4/i__carry_n_0 ),
        .CO({\plusOp_inferred__4/i__carry__0_n_0 ,\NLW_plusOp_inferred__4/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,ROW_ADDRESS[6:5]}),
        .O({\plusOp_inferred__4/i__carry__0_n_4 ,\plusOp_inferred__4/i__carry__0_n_5 ,\plusOp_inferred__4/i__carry__0_n_6 ,\plusOp_inferred__4/i__carry__0_n_7 }),
        .S({ROW_ADDRESS[8:7],i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  CARRY4 \plusOp_inferred__4/i__carry__1 
       (.CI(\plusOp_inferred__4/i__carry__0_n_0 ),
        .CO(\NLW_plusOp_inferred__4/i__carry__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__4/i__carry__1_n_4 ,\plusOp_inferred__4/i__carry__1_n_5 ,\plusOp_inferred__4/i__carry__1_n_6 ,\plusOp_inferred__4/i__carry__1_n_7 }),
        .S(ROW_ADDRESS[12:9]));
endmodule

(* ECO_CHECKSUM = "2ab78b66" *) (* POWER_OPT_BRAM_CDC = "0" *) (* POWER_OPT_BRAM_SR_ADDR = "0" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "0" *) 
(* NotValidForBitStream *)
module bsp
   (clk_in,
    rst,
    eth_clk,
    phy_reset_n,
    rxdv,
    rxer,
    rxd,
    txd,
    txen,
    sda,
    scl,
    kd,
    kc,
    rf_out,
    test_1,
    test_2,
    audio,
    audio_en,
    vga_r,
    vga_g,
    vga_b,
    hsynch,
    vsynch,
    gpio_leds,
    gpio_switches,
    gpio_buttons,
    led_r_pwm,
    led_g_pwm,
    led_b_pwm,
    seven_segment_cathode,
    seven_segment_annode,
    rs232_rx,
    rs232_tx);
  input clk_in;
  input rst;
  output eth_clk;
  output phy_reset_n;
  input rxdv;
  input rxer;
  input [1:0]rxd;
  output [1:0]txd;
  output txen;
  inout sda;
  inout scl;
  input kd;
  input kc;
  output rf_out;
  output test_1;
  output test_2;
  output audio;
  output audio_en;
  output [3:0]vga_r;
  output [3:0]vga_g;
  output [3:0]vga_b;
  output hsynch;
  output vsynch;
  output [15:0]gpio_leds;
  input [15:0]gpio_switches;
  input [4:0]gpio_buttons;
  output led_r_pwm;
  output led_g_pwm;
  output led_b_pwm;
  output [6:0]seven_segment_cathode;
  output [7:0]seven_segment_annode;
  input rs232_rx;
  output rs232_tx;

  wire [23:0]amplitude;
  wire audio;
  wire audio_OBUF;
  wire audio_en;
  wire clk;
  wire clk0;
  (* IBUF_LOW_PWR *) wire clk_in;
  wire clkdv;
  wire clkin1;
  wire [9:0]data_in;
  wire data_in_stb;
  wire [1:0]delta_d3;
  wire dithering;
  wire eth_clk;
  wire eth_clk_OBUF;
  wire [31:0]frequency;
  wire frequency_stb;
  wire [15:0]gpio_leds;
  wire hsynch;
  wire hsynch_OBUF;
  wire i_out_1_reg_i_10_n_0;
  wire i_out_1_reg_i_11_n_0;
  wire i_out_1_reg_i_12_n_0;
  wire i_out_1_reg_i_13_n_0;
  wire i_out_1_reg_i_14_n_0;
  wire i_out_1_reg_i_15_n_0;
  wire i_out_1_reg_i_16_n_0;
  wire i_out_1_reg_i_17_n_0;
  wire i_out_1_reg_i_18_n_0;
  wire i_out_1_reg_i_19_n_0;
  wire i_out_1_reg_i_1_n_0;
  wire i_out_1_reg_i_20_n_0;
  wire i_out_1_reg_i_21_n_0;
  wire i_out_1_reg_i_22_n_0;
  wire i_out_1_reg_i_23_n_0;
  wire i_out_1_reg_i_24_n_0;
  wire i_out_1_reg_i_2_n_0;
  wire i_out_1_reg_i_3_n_0;
  wire i_out_1_reg_i_4_n_0;
  wire i_out_1_reg_i_5_n_0;
  wire i_out_1_reg_i_6_n_0;
  wire i_out_1_reg_i_7_n_0;
  wire i_out_1_reg_i_8_n_0;
  wire i_out_1_reg_i_9_n_0;
  wire i_out_3_reg_i_10_n_0;
  wire i_out_3_reg_i_11_n_0;
  wire i_out_3_reg_i_12_n_0;
  wire i_out_3_reg_i_13_n_0;
  wire i_out_3_reg_i_14_n_0;
  wire i_out_3_reg_i_15_n_0;
  wire i_out_3_reg_i_16_n_0;
  wire i_out_3_reg_i_17_n_0;
  wire i_out_3_reg_i_18_n_0;
  wire i_out_3_reg_i_19_n_0;
  wire i_out_3_reg_i_1_n_0;
  wire i_out_3_reg_i_20_n_0;
  wire i_out_3_reg_i_21_n_0;
  wire i_out_3_reg_i_22_n_0;
  wire i_out_3_reg_i_23_n_0;
  wire i_out_3_reg_i_24_n_0;
  wire i_out_3_reg_i_2_n_0;
  wire i_out_3_reg_i_3_n_0;
  wire i_out_3_reg_i_4_n_0;
  wire i_out_3_reg_i_5_n_0;
  wire i_out_3_reg_i_6_n_0;
  wire i_out_3_reg_i_7_n_0;
  wire i_out_3_reg_i_8_n_0;
  wire i_out_3_reg_i_9_n_0;
  wire i_out_5_reg_i_10_n_0;
  wire i_out_5_reg_i_11_n_0;
  wire i_out_5_reg_i_12_n_0;
  wire i_out_5_reg_i_13_n_0;
  wire i_out_5_reg_i_14_n_0;
  wire i_out_5_reg_i_15_n_0;
  wire i_out_5_reg_i_16_n_0;
  wire i_out_5_reg_i_17_n_0;
  wire i_out_5_reg_i_18_n_0;
  wire i_out_5_reg_i_19_n_0;
  wire i_out_5_reg_i_1_n_0;
  wire i_out_5_reg_i_20_n_0;
  wire i_out_5_reg_i_21_n_0;
  wire i_out_5_reg_i_22_n_0;
  wire i_out_5_reg_i_23_n_0;
  wire i_out_5_reg_i_24_n_0;
  wire i_out_5_reg_i_2_n_0;
  wire i_out_5_reg_i_3_n_0;
  wire i_out_5_reg_i_4_n_0;
  wire i_out_5_reg_i_5_n_0;
  wire i_out_5_reg_i_6_n_0;
  wire i_out_5_reg_i_7_n_0;
  wire i_out_5_reg_i_8_n_0;
  wire i_out_5_reg_i_9_n_0;
  wire i_out_7_reg_i_10_n_0;
  wire i_out_7_reg_i_11_n_0;
  wire i_out_7_reg_i_12_n_0;
  wire i_out_7_reg_i_13_n_0;
  wire i_out_7_reg_i_14_n_0;
  wire i_out_7_reg_i_15_n_0;
  wire i_out_7_reg_i_16_n_0;
  wire i_out_7_reg_i_17_n_0;
  wire i_out_7_reg_i_18_n_0;
  wire i_out_7_reg_i_19_n_0;
  wire i_out_7_reg_i_1_n_0;
  wire i_out_7_reg_i_20_n_0;
  wire i_out_7_reg_i_21_n_0;
  wire i_out_7_reg_i_22_n_0;
  wire i_out_7_reg_i_23_n_0;
  wire i_out_7_reg_i_24_n_0;
  wire i_out_7_reg_i_2_n_0;
  wire i_out_7_reg_i_3_n_0;
  wire i_out_7_reg_i_4_n_0;
  wire i_out_7_reg_i_5_n_0;
  wire i_out_7_reg_i_6_n_0;
  wire i_out_7_reg_i_7_n_0;
  wire i_out_7_reg_i_8_n_0;
  wire i_out_7_reg_i_9_n_0;
  wire input_rs232_rx_ack;
  wire input_rs232_rx_stb;
  wire internal_rst_reg_n_0;
  wire [7:0]last_input;
  wire led_b_pwm;
  wire led_b_pwm_OBUF;
  wire led_g_pwm;
  wire led_g_pwm_OBUF;
  wire led_r_pwm;
  wire led_r_pwm_OBUF;
  wire locked_internal;
  wire not_locked;
  wire not_locked_i_1_n_0;
  wire [7:0]out1;
  wire out_10_i_10_n_0;
  wire out_10_i_11_n_0;
  wire out_10_i_12_n_0;
  wire out_10_i_13_n_0;
  wire out_10_i_14_n_0;
  wire out_10_i_15_n_0;
  wire out_10_i_16_n_0;
  wire out_10_i_17_n_0;
  wire out_10_i_18_n_0;
  wire out_10_i_19_n_0;
  wire out_10_i_1_n_0;
  wire out_10_i_20_n_0;
  wire out_10_i_21_n_0;
  wire out_10_i_22_n_0;
  wire out_10_i_23_n_0;
  wire out_10_i_24_n_0;
  wire out_10_i_2_n_0;
  wire out_10_i_3_n_0;
  wire out_10_i_4_n_0;
  wire out_10_i_5_n_0;
  wire out_10_i_6_n_0;
  wire out_10_i_7_n_0;
  wire out_10_i_8_n_0;
  wire out_10_i_9_n_0;
  wire out_30_i_10_n_0;
  wire out_30_i_11_n_0;
  wire out_30_i_12_n_0;
  wire out_30_i_13_n_0;
  wire out_30_i_14_n_0;
  wire out_30_i_15_n_0;
  wire out_30_i_16_n_0;
  wire out_30_i_17_n_0;
  wire out_30_i_18_n_0;
  wire out_30_i_19_n_0;
  wire out_30_i_1_n_0;
  wire out_30_i_20_n_0;
  wire out_30_i_21_n_0;
  wire out_30_i_22_n_0;
  wire out_30_i_23_n_0;
  wire out_30_i_24_n_0;
  wire out_30_i_2_n_0;
  wire out_30_i_3_n_0;
  wire out_30_i_4_n_0;
  wire out_30_i_5_n_0;
  wire out_30_i_6_n_0;
  wire out_30_i_7_n_0;
  wire out_30_i_8_n_0;
  wire out_30_i_9_n_0;
  wire out_50_i_10_n_0;
  wire out_50_i_11_n_0;
  wire out_50_i_12_n_0;
  wire out_50_i_13_n_0;
  wire out_50_i_14_n_0;
  wire out_50_i_15_n_0;
  wire out_50_i_16_n_0;
  wire out_50_i_17_n_0;
  wire out_50_i_18_n_0;
  wire out_50_i_19_n_0;
  wire out_50_i_1_n_0;
  wire out_50_i_20_n_0;
  wire out_50_i_21_n_0;
  wire out_50_i_22_n_0;
  wire out_50_i_23_n_0;
  wire out_50_i_24_n_0;
  wire out_50_i_2_n_0;
  wire out_50_i_3_n_0;
  wire out_50_i_4_n_0;
  wire out_50_i_5_n_0;
  wire out_50_i_6_n_0;
  wire out_50_i_7_n_0;
  wire out_50_i_8_n_0;
  wire out_50_i_9_n_0;
  wire out_70_i_10_n_0;
  wire out_70_i_11_n_0;
  wire out_70_i_12_n_0;
  wire out_70_i_13_n_0;
  wire out_70_i_14_n_0;
  wire out_70_i_15_n_0;
  wire out_70_i_16_n_0;
  wire out_70_i_17_n_0;
  wire out_70_i_18_n_0;
  wire out_70_i_19_n_0;
  wire out_70_i_1_n_0;
  wire out_70_i_20_n_0;
  wire out_70_i_21_n_0;
  wire out_70_i_22_n_0;
  wire out_70_i_23_n_0;
  wire out_70_i_24_n_0;
  wire out_70_i_2_n_0;
  wire out_70_i_3_n_0;
  wire out_70_i_4_n_0;
  wire out_70_i_5_n_0;
  wire out_70_i_6_n_0;
  wire out_70_i_7_n_0;
  wire out_70_i_8_n_0;
  wire out_70_i_9_n_0;
  wire output_audio_ack;
  wire [7:0]output_rs232_tx;
  wire output_rs232_tx_ack;
  wire output_rs232_tx_stb;
  wire output_tx_am_ack;
  wire phy_reset_n;
  wire phy_reset_n_OBUF;
  wire rf_out;
  wire rf_out_OBUF;
  wire rs232_rx;
  wire rs232_rx_IBUF;
  wire rs232_tx;
  wire rs232_tx_OBUF;
  wire rst;
  wire rst_IBUF;
  wire s_test_1_i_1_n_0;
  wire scl;
  wire scl_IBUF;
  wire scl_TRI;
  wire sda;
  wire sda_IBUF;
  wire sda_TRI;
  wire [7:0]seven_segment_annode;
  wire [6:0]seven_segment_cathode;
  wire test_1;
  wire test_1_OBUF;
  wire test_2;
  wire test_2_OBUF;
  wire transmitter_inst_1_n_100;
  wire transmitter_inst_1_n_101;
  wire transmitter_inst_1_n_102;
  wire transmitter_inst_1_n_103;
  wire transmitter_inst_1_n_104;
  wire transmitter_inst_1_n_105;
  wire transmitter_inst_1_n_106;
  wire transmitter_inst_1_n_107;
  wire transmitter_inst_1_n_108;
  wire transmitter_inst_1_n_109;
  wire transmitter_inst_1_n_110;
  wire transmitter_inst_1_n_111;
  wire transmitter_inst_1_n_112;
  wire transmitter_inst_1_n_113;
  wire transmitter_inst_1_n_114;
  wire transmitter_inst_1_n_115;
  wire transmitter_inst_1_n_116;
  wire transmitter_inst_1_n_117;
  wire transmitter_inst_1_n_118;
  wire transmitter_inst_1_n_119;
  wire transmitter_inst_1_n_120;
  wire transmitter_inst_1_n_121;
  wire transmitter_inst_1_n_122;
  wire transmitter_inst_1_n_123;
  wire transmitter_inst_1_n_124;
  wire transmitter_inst_1_n_125;
  wire transmitter_inst_1_n_126;
  wire transmitter_inst_1_n_127;
  wire transmitter_inst_1_n_128;
  wire transmitter_inst_1_n_129;
  wire transmitter_inst_1_n_130;
  wire transmitter_inst_1_n_131;
  wire transmitter_inst_1_n_132;
  wire transmitter_inst_1_n_133;
  wire transmitter_inst_1_n_134;
  wire transmitter_inst_1_n_135;
  wire transmitter_inst_1_n_136;
  wire transmitter_inst_1_n_137;
  wire transmitter_inst_1_n_138;
  wire transmitter_inst_1_n_139;
  wire transmitter_inst_1_n_14;
  wire transmitter_inst_1_n_140;
  wire transmitter_inst_1_n_141;
  wire transmitter_inst_1_n_142;
  wire transmitter_inst_1_n_143;
  wire transmitter_inst_1_n_144;
  wire transmitter_inst_1_n_145;
  wire transmitter_inst_1_n_146;
  wire transmitter_inst_1_n_147;
  wire transmitter_inst_1_n_148;
  wire transmitter_inst_1_n_149;
  wire transmitter_inst_1_n_15;
  wire transmitter_inst_1_n_150;
  wire transmitter_inst_1_n_151;
  wire transmitter_inst_1_n_152;
  wire transmitter_inst_1_n_153;
  wire transmitter_inst_1_n_154;
  wire transmitter_inst_1_n_155;
  wire transmitter_inst_1_n_156;
  wire transmitter_inst_1_n_157;
  wire transmitter_inst_1_n_158;
  wire transmitter_inst_1_n_159;
  wire transmitter_inst_1_n_16;
  wire transmitter_inst_1_n_160;
  wire transmitter_inst_1_n_161;
  wire transmitter_inst_1_n_162;
  wire transmitter_inst_1_n_163;
  wire transmitter_inst_1_n_164;
  wire transmitter_inst_1_n_165;
  wire transmitter_inst_1_n_166;
  wire transmitter_inst_1_n_167;
  wire transmitter_inst_1_n_168;
  wire transmitter_inst_1_n_169;
  wire transmitter_inst_1_n_17;
  wire transmitter_inst_1_n_170;
  wire transmitter_inst_1_n_171;
  wire transmitter_inst_1_n_172;
  wire transmitter_inst_1_n_173;
  wire transmitter_inst_1_n_174;
  wire transmitter_inst_1_n_175;
  wire transmitter_inst_1_n_176;
  wire transmitter_inst_1_n_177;
  wire transmitter_inst_1_n_178;
  wire transmitter_inst_1_n_179;
  wire transmitter_inst_1_n_18;
  wire transmitter_inst_1_n_180;
  wire transmitter_inst_1_n_181;
  wire transmitter_inst_1_n_182;
  wire transmitter_inst_1_n_183;
  wire transmitter_inst_1_n_184;
  wire transmitter_inst_1_n_185;
  wire transmitter_inst_1_n_186;
  wire transmitter_inst_1_n_187;
  wire transmitter_inst_1_n_188;
  wire transmitter_inst_1_n_189;
  wire transmitter_inst_1_n_19;
  wire transmitter_inst_1_n_190;
  wire transmitter_inst_1_n_191;
  wire transmitter_inst_1_n_192;
  wire transmitter_inst_1_n_193;
  wire transmitter_inst_1_n_194;
  wire transmitter_inst_1_n_195;
  wire transmitter_inst_1_n_196;
  wire transmitter_inst_1_n_197;
  wire transmitter_inst_1_n_198;
  wire transmitter_inst_1_n_199;
  wire transmitter_inst_1_n_2;
  wire transmitter_inst_1_n_20;
  wire transmitter_inst_1_n_200;
  wire transmitter_inst_1_n_201;
  wire transmitter_inst_1_n_202;
  wire transmitter_inst_1_n_21;
  wire transmitter_inst_1_n_22;
  wire transmitter_inst_1_n_23;
  wire transmitter_inst_1_n_24;
  wire transmitter_inst_1_n_25;
  wire transmitter_inst_1_n_26;
  wire transmitter_inst_1_n_27;
  wire transmitter_inst_1_n_28;
  wire transmitter_inst_1_n_29;
  wire transmitter_inst_1_n_30;
  wire transmitter_inst_1_n_31;
  wire transmitter_inst_1_n_32;
  wire transmitter_inst_1_n_33;
  wire transmitter_inst_1_n_34;
  wire transmitter_inst_1_n_35;
  wire transmitter_inst_1_n_36;
  wire transmitter_inst_1_n_37;
  wire transmitter_inst_1_n_38;
  wire transmitter_inst_1_n_39;
  wire transmitter_inst_1_n_40;
  wire transmitter_inst_1_n_41;
  wire transmitter_inst_1_n_42;
  wire transmitter_inst_1_n_43;
  wire transmitter_inst_1_n_44;
  wire transmitter_inst_1_n_45;
  wire transmitter_inst_1_n_46;
  wire transmitter_inst_1_n_47;
  wire transmitter_inst_1_n_48;
  wire transmitter_inst_1_n_49;
  wire transmitter_inst_1_n_50;
  wire transmitter_inst_1_n_51;
  wire transmitter_inst_1_n_52;
  wire transmitter_inst_1_n_53;
  wire transmitter_inst_1_n_54;
  wire transmitter_inst_1_n_55;
  wire transmitter_inst_1_n_56;
  wire transmitter_inst_1_n_57;
  wire transmitter_inst_1_n_58;
  wire transmitter_inst_1_n_59;
  wire transmitter_inst_1_n_60;
  wire transmitter_inst_1_n_61;
  wire transmitter_inst_1_n_62;
  wire transmitter_inst_1_n_63;
  wire transmitter_inst_1_n_64;
  wire transmitter_inst_1_n_65;
  wire transmitter_inst_1_n_66;
  wire transmitter_inst_1_n_67;
  wire transmitter_inst_1_n_68;
  wire transmitter_inst_1_n_69;
  wire transmitter_inst_1_n_70;
  wire transmitter_inst_1_n_71;
  wire transmitter_inst_1_n_72;
  wire transmitter_inst_1_n_73;
  wire transmitter_inst_1_n_74;
  wire transmitter_inst_1_n_75;
  wire transmitter_inst_1_n_76;
  wire transmitter_inst_1_n_77;
  wire transmitter_inst_1_n_78;
  wire transmitter_inst_1_n_79;
  wire transmitter_inst_1_n_80;
  wire transmitter_inst_1_n_81;
  wire transmitter_inst_1_n_82;
  wire transmitter_inst_1_n_83;
  wire transmitter_inst_1_n_84;
  wire transmitter_inst_1_n_85;
  wire transmitter_inst_1_n_86;
  wire transmitter_inst_1_n_87;
  wire transmitter_inst_1_n_88;
  wire transmitter_inst_1_n_89;
  wire transmitter_inst_1_n_90;
  wire transmitter_inst_1_n_91;
  wire transmitter_inst_1_n_92;
  wire transmitter_inst_1_n_93;
  wire transmitter_inst_1_n_94;
  wire transmitter_inst_1_n_95;
  wire transmitter_inst_1_n_96;
  wire transmitter_inst_1_n_97;
  wire transmitter_inst_1_n_98;
  wire transmitter_inst_1_n_99;
  wire [1:0]txd;
  wire [1:0]txd_OBUF;
  wire txen;
  wire txen_OBUF;
  wire user_design_inst_1_n_0;
  wire user_design_inst_1_n_1;
  wire user_design_inst_1_n_2;
  wire user_design_inst_1_n_22;
  wire user_design_inst_1_n_23;
  wire user_design_inst_1_n_24;
  wire user_design_inst_1_n_25;
  wire user_design_inst_1_n_26;
  wire user_design_inst_1_n_27;
  wire user_design_inst_1_n_28;
  wire user_design_inst_1_n_29;
  wire user_design_inst_1_n_3;
  wire user_design_inst_1_n_30;
  wire user_design_inst_1_n_31;
  wire user_design_inst_1_n_32;
  wire user_design_inst_1_n_33;
  wire user_design_inst_1_n_4;
  wire user_design_inst_1_n_5;
  wire [3:0]vga_b;
  wire [0:0]vga_b_OBUF;
  wire [3:0]vga_g;
  wire [3:0]vga_r;
  wire vsynch;
  wire vsynch_OBUF;
  wire NLW_dcm_sp_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT0_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT1_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT2_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT3_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT5_UNCONNECTED;
  wire NLW_dcm_sp_inst_CLKOUT6_UNCONNECTED;
  wire NLW_dcm_sp_inst_DRDY_UNCONNECTED;
  wire NLW_dcm_sp_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_dcm_sp_inst_DO_UNCONNECTED;
  wire NLW_ethernet_inst_1_rxdv_IBUF_UNCONNECTED;
  wire NLW_ethernet_inst_1_rxer_IBUF_UNCONNECTED;
  wire [1:0]NLW_ethernet_inst_1_D_UNCONNECTED;
PULLUP pullup_kc
       (.O(kc));
PULLUP pullup_kd
       (.O(kd));

initial begin
 $sdf_annotate("cpu_impl_netlist.sdf",,,,"tool_control");
end
  OBUF audio_OBUF_inst
       (.I(audio_OBUF),
        .O(audio));
  OBUF audio_en_OBUF_inst
       (.I(1'b1),
        .O(audio_en));
  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst1
       (.I(clkdv),
        .O(eth_clk_OBUF));
  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst2
       (.I(clk0),
        .O(clk));
  CHARSVGA charsvga_inst_1
       (.HSYNCH(hsynch_OBUF),
        .VSYNCH(vsynch_OBUF),
        .clk(clk),
        .eth_clk_OBUF(eth_clk_OBUF),
        .internal_rst_reg(internal_rst_reg_n_0),
        .vga_b_OBUF(vga_b_OBUF));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* XILINX_LEGACY_PRIM = "IBUFG" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    clkin1_buf
       (.I(clk_in),
        .O(clkin1));
  (* XILINX_LEGACY_PRIM = "DCM_SP" *) 
  (* XILINX_TRANSFORM_PINMAP = "STATUS[7]:DO[7] STATUS[6]:DO[6] STATUS[5]:DO[5] STATUS[4]:DO[4] STATUS[3]:DO[3] STATUS[2]:DO[2] STATUS[1]:DO[1] STATUS[0]:DO[0] CLKIN:CLKIN1 CLKFX:CLKOUT0 CLKFX180:CLKOUT0B CLK2X:CLKOUT1 CLK2X180:CLKOUT1B CLK90:CLKOUT2 CLK270:CLKOUT2B CLKDV:CLKOUT4 CLK0:CLKFBOUT CLK180:CLKFBOUTB CLKFB:CLKFBIN" *) 
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(8.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(2.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(4),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(8),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(90.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(8),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(16),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_PSINCDEC_INVERTED(1'b1),
    .IS_RST_INVERTED(1'b1),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .STARTUP_WAIT("FALSE")) 
    dcm_sp_inst
       (.CLKFBIN(clk),
        .CLKFBOUT(clk0),
        .CLKFBOUTB(NLW_dcm_sp_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_dcm_sp_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clkin1),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_dcm_sp_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(NLW_dcm_sp_inst_CLKOUT0_UNCONNECTED),
        .CLKOUT0B(NLW_dcm_sp_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(NLW_dcm_sp_inst_CLKOUT1_UNCONNECTED),
        .CLKOUT1B(NLW_dcm_sp_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_dcm_sp_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_dcm_sp_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_dcm_sp_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_dcm_sp_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(clkdv),
        .CLKOUT5(NLW_dcm_sp_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_dcm_sp_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_dcm_sp_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_dcm_sp_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(locked_internal),
        .PSCLK(1'b0),
        .PSDONE(NLW_dcm_sp_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(rst_IBUF));
  OBUF eth_clk_OBUF_inst
       (.I(eth_clk_OBUF),
        .O(eth_clk));
  rmii_ethernet ethernet_inst_1
       (.D(NLW_ethernet_inst_1_D_UNCONNECTED[1:0]),
        .Q(txd_OBUF),
        .clk(clk),
        .eth_clk_OBUF(eth_clk_OBUF),
        .internal_rst_reg(internal_rst_reg_n_0),
        .rxdv_IBUF(NLW_ethernet_inst_1_rxdv_IBUF_UNCONNECTED),
        .rxer_IBUF(NLW_ethernet_inst_1_rxer_IBUF_UNCONNECTED),
        .txen_OBUF(txen_OBUF));
  OBUF \gpio_leds_OBUF[0]_inst 
       (.I(1'b0),
        .O(gpio_leds[0]));
  OBUF \gpio_leds_OBUF[10]_inst 
       (.I(1'b0),
        .O(gpio_leds[10]));
  OBUF \gpio_leds_OBUF[11]_inst 
       (.I(1'b0),
        .O(gpio_leds[11]));
  OBUF \gpio_leds_OBUF[12]_inst 
       (.I(1'b0),
        .O(gpio_leds[12]));
  OBUF \gpio_leds_OBUF[13]_inst 
       (.I(1'b0),
        .O(gpio_leds[13]));
  OBUF \gpio_leds_OBUF[14]_inst 
       (.I(1'b0),
        .O(gpio_leds[14]));
  OBUF \gpio_leds_OBUF[15]_inst 
       (.I(1'b0),
        .O(gpio_leds[15]));
  OBUF \gpio_leds_OBUF[1]_inst 
       (.I(1'b0),
        .O(gpio_leds[1]));
  OBUF \gpio_leds_OBUF[2]_inst 
       (.I(1'b0),
        .O(gpio_leds[2]));
  OBUF \gpio_leds_OBUF[3]_inst 
       (.I(1'b0),
        .O(gpio_leds[3]));
  OBUF \gpio_leds_OBUF[4]_inst 
       (.I(1'b0),
        .O(gpio_leds[4]));
  OBUF \gpio_leds_OBUF[5]_inst 
       (.I(1'b0),
        .O(gpio_leds[5]));
  OBUF \gpio_leds_OBUF[6]_inst 
       (.I(1'b0),
        .O(gpio_leds[6]));
  OBUF \gpio_leds_OBUF[7]_inst 
       (.I(1'b0),
        .O(gpio_leds[7]));
  OBUF \gpio_leds_OBUF[8]_inst 
       (.I(1'b0),
        .O(gpio_leds[8]));
  OBUF \gpio_leds_OBUF[9]_inst 
       (.I(1'b0),
        .O(gpio_leds[9]));
  OBUF hsynch_OBUF_inst
       (.I(hsynch_OBUF),
        .O(hsynch));
  I2C i2c_inst_1
       (.clk(clk),
        .internal_rst_reg(internal_rst_reg_n_0),
        .scl_IBUF(scl_IBUF),
        .scl_TRI(scl_TRI),
        .sda_IBUF(sda_IBUF),
        .sda_TRI(sda_TRI));
  FDRE i_out_1_reg_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_23),
        .Q(i_out_1_reg_i_1_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_32),
        .Q(i_out_1_reg_i_10_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_33),
        .Q(i_out_1_reg_i_11_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_34),
        .Q(i_out_1_reg_i_12_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_35),
        .Q(i_out_1_reg_i_13_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_36),
        .Q(i_out_1_reg_i_14_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_37),
        .Q(i_out_1_reg_i_15_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_38),
        .Q(i_out_1_reg_i_16_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_39),
        .Q(i_out_1_reg_i_17_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_40),
        .Q(i_out_1_reg_i_18_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_41),
        .Q(i_out_1_reg_i_19_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_24),
        .Q(i_out_1_reg_i_2_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_42),
        .Q(i_out_1_reg_i_20_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_43),
        .Q(i_out_1_reg_i_21_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_109),
        .Q(i_out_1_reg_i_22_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_23
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[1]),
        .Q(i_out_1_reg_i_23_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_24
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[0]),
        .Q(i_out_1_reg_i_24_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_25),
        .Q(i_out_1_reg_i_3_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_26),
        .Q(i_out_1_reg_i_4_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_27),
        .Q(i_out_1_reg_i_5_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_28),
        .Q(i_out_1_reg_i_6_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_29),
        .Q(i_out_1_reg_i_7_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_30),
        .Q(i_out_1_reg_i_8_n_0),
        .R(1'b0));
  FDRE i_out_1_reg_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_31),
        .Q(i_out_1_reg_i_9_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_44),
        .Q(i_out_3_reg_i_1_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_53),
        .Q(i_out_3_reg_i_10_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_54),
        .Q(i_out_3_reg_i_11_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_55),
        .Q(i_out_3_reg_i_12_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_56),
        .Q(i_out_3_reg_i_13_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_57),
        .Q(i_out_3_reg_i_14_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_58),
        .Q(i_out_3_reg_i_15_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_59),
        .Q(i_out_3_reg_i_16_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_60),
        .Q(i_out_3_reg_i_17_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_61),
        .Q(i_out_3_reg_i_18_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_62),
        .Q(i_out_3_reg_i_19_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_45),
        .Q(i_out_3_reg_i_2_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_63),
        .Q(i_out_3_reg_i_20_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_64),
        .Q(i_out_3_reg_i_21_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_65),
        .Q(i_out_3_reg_i_22_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_110),
        .Q(i_out_3_reg_i_23_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_24
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[0]),
        .Q(i_out_3_reg_i_24_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_46),
        .Q(i_out_3_reg_i_3_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_47),
        .Q(i_out_3_reg_i_4_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_48),
        .Q(i_out_3_reg_i_5_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_49),
        .Q(i_out_3_reg_i_6_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_50),
        .Q(i_out_3_reg_i_7_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_51),
        .Q(i_out_3_reg_i_8_n_0),
        .R(1'b0));
  FDRE i_out_3_reg_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_52),
        .Q(i_out_3_reg_i_9_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_66),
        .Q(i_out_5_reg_i_1_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_75),
        .Q(i_out_5_reg_i_10_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_76),
        .Q(i_out_5_reg_i_11_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_77),
        .Q(i_out_5_reg_i_12_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_78),
        .Q(i_out_5_reg_i_13_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_79),
        .Q(i_out_5_reg_i_14_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_80),
        .Q(i_out_5_reg_i_15_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_81),
        .Q(i_out_5_reg_i_16_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_82),
        .Q(i_out_5_reg_i_17_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_83),
        .Q(i_out_5_reg_i_18_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_84),
        .Q(i_out_5_reg_i_19_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_67),
        .Q(i_out_5_reg_i_2_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_85),
        .Q(i_out_5_reg_i_20_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_86),
        .Q(i_out_5_reg_i_21_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_111),
        .Q(i_out_5_reg_i_22_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_23
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[1]),
        .Q(i_out_5_reg_i_23_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_24
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[0]),
        .Q(i_out_5_reg_i_24_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_68),
        .Q(i_out_5_reg_i_3_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_69),
        .Q(i_out_5_reg_i_4_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_70),
        .Q(i_out_5_reg_i_5_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_71),
        .Q(i_out_5_reg_i_6_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_72),
        .Q(i_out_5_reg_i_7_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_73),
        .Q(i_out_5_reg_i_8_n_0),
        .R(1'b0));
  FDRE i_out_5_reg_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_74),
        .Q(i_out_5_reg_i_9_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_87),
        .Q(i_out_7_reg_i_1_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_96),
        .Q(i_out_7_reg_i_10_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_97),
        .Q(i_out_7_reg_i_11_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_98),
        .Q(i_out_7_reg_i_12_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_99),
        .Q(i_out_7_reg_i_13_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_100),
        .Q(i_out_7_reg_i_14_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_101),
        .Q(i_out_7_reg_i_15_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_102),
        .Q(i_out_7_reg_i_16_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_103),
        .Q(i_out_7_reg_i_17_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_104),
        .Q(i_out_7_reg_i_18_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_105),
        .Q(i_out_7_reg_i_19_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_88),
        .Q(i_out_7_reg_i_2_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_106),
        .Q(i_out_7_reg_i_20_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_107),
        .Q(i_out_7_reg_i_21_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_108),
        .Q(i_out_7_reg_i_22_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_112),
        .Q(i_out_7_reg_i_23_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_24
       (.C(clk),
        .CE(1'b1),
        .D(delta_d3[0]),
        .Q(i_out_7_reg_i_24_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_89),
        .Q(i_out_7_reg_i_3_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_90),
        .Q(i_out_7_reg_i_4_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_91),
        .Q(i_out_7_reg_i_5_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_92),
        .Q(i_out_7_reg_i_6_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_93),
        .Q(i_out_7_reg_i_7_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_94),
        .Q(i_out_7_reg_i_8_n_0),
        .R(1'b0));
  FDRE i_out_7_reg_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_95),
        .Q(i_out_7_reg_i_9_n_0),
        .R(1'b0));
  FDRE internal_rst_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_locked),
        .Q(internal_rst_reg_n_0),
        .R(1'b0));
  OBUF led_b_pwm_OBUF_inst
       (.I(led_b_pwm_OBUF),
        .O(led_b_pwm));
  OBUF led_g_pwm_OBUF_inst
       (.I(led_g_pwm_OBUF),
        .O(led_g_pwm));
  OBUF led_r_pwm_OBUF_inst
       (.I(led_r_pwm_OBUF),
        .O(led_r_pwm));
  LUT1 #(
    .INIT(2'h1)) 
    not_locked_i_1
       (.I0(locked_internal),
        .O(not_locked_i_1_n_0));
  FDRE not_locked_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_locked_i_1_n_0),
        .Q(not_locked),
        .R(1'b0));
  FDRE out_10_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_113),
        .Q(out_10_i_1_n_0),
        .R(1'b0));
  FDRE out_10_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_122),
        .Q(out_10_i_10_n_0),
        .R(1'b0));
  FDRE out_10_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_123),
        .Q(out_10_i_11_n_0),
        .R(1'b0));
  FDRE out_10_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_124),
        .Q(out_10_i_12_n_0),
        .R(1'b0));
  FDRE out_10_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_125),
        .Q(out_10_i_13_n_0),
        .R(1'b0));
  FDRE out_10_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_126),
        .Q(out_10_i_14_n_0),
        .R(1'b0));
  FDRE out_10_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_127),
        .Q(out_10_i_15_n_0),
        .R(1'b0));
  FDRE out_10_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_128),
        .Q(out_10_i_16_n_0),
        .R(1'b0));
  FDRE out_10_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_129),
        .Q(out_10_i_17_n_0),
        .R(1'b0));
  FDRE out_10_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_130),
        .Q(out_10_i_18_n_0),
        .R(1'b0));
  FDRE out_10_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_131),
        .Q(out_10_i_19_n_0),
        .R(1'b0));
  FDRE out_10_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_114),
        .Q(out_10_i_2_n_0),
        .R(1'b0));
  FDRE out_10_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_132),
        .Q(out_10_i_20_n_0),
        .R(1'b0));
  FDRE out_10_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_133),
        .Q(out_10_i_21_n_0),
        .R(1'b0));
  FDRE out_10_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_199),
        .Q(out_10_i_22_n_0),
        .R(1'b0));
  FDRE out_10_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_22),
        .Q(out_10_i_23_n_0),
        .R(1'b0));
  FDRE out_10_i_24
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_2),
        .Q(out_10_i_24_n_0),
        .R(1'b0));
  FDRE out_10_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_115),
        .Q(out_10_i_3_n_0),
        .R(1'b0));
  FDRE out_10_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_116),
        .Q(out_10_i_4_n_0),
        .R(1'b0));
  FDRE out_10_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_117),
        .Q(out_10_i_5_n_0),
        .R(1'b0));
  FDRE out_10_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_118),
        .Q(out_10_i_6_n_0),
        .R(1'b0));
  FDRE out_10_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_119),
        .Q(out_10_i_7_n_0),
        .R(1'b0));
  FDRE out_10_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_120),
        .Q(out_10_i_8_n_0),
        .R(1'b0));
  FDRE out_10_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_121),
        .Q(out_10_i_9_n_0),
        .R(1'b0));
  FDRE out_30_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_134),
        .Q(out_30_i_1_n_0),
        .R(1'b0));
  FDRE out_30_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_143),
        .Q(out_30_i_10_n_0),
        .R(1'b0));
  FDRE out_30_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_144),
        .Q(out_30_i_11_n_0),
        .R(1'b0));
  FDRE out_30_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_145),
        .Q(out_30_i_12_n_0),
        .R(1'b0));
  FDRE out_30_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_146),
        .Q(out_30_i_13_n_0),
        .R(1'b0));
  FDRE out_30_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_147),
        .Q(out_30_i_14_n_0),
        .R(1'b0));
  FDRE out_30_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_148),
        .Q(out_30_i_15_n_0),
        .R(1'b0));
  FDRE out_30_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_149),
        .Q(out_30_i_16_n_0),
        .R(1'b0));
  FDRE out_30_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_150),
        .Q(out_30_i_17_n_0),
        .R(1'b0));
  FDRE out_30_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_151),
        .Q(out_30_i_18_n_0),
        .R(1'b0));
  FDRE out_30_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_152),
        .Q(out_30_i_19_n_0),
        .R(1'b0));
  FDRE out_30_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_135),
        .Q(out_30_i_2_n_0),
        .R(1'b0));
  FDRE out_30_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_153),
        .Q(out_30_i_20_n_0),
        .R(1'b0));
  FDRE out_30_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_154),
        .Q(out_30_i_21_n_0),
        .R(1'b0));
  FDRE out_30_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_155),
        .Q(out_30_i_22_n_0),
        .R(1'b0));
  FDRE out_30_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_200),
        .Q(out_30_i_23_n_0),
        .R(1'b0));
  FDRE out_30_i_24
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_2),
        .Q(out_30_i_24_n_0),
        .R(1'b0));
  FDRE out_30_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_136),
        .Q(out_30_i_3_n_0),
        .R(1'b0));
  FDRE out_30_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_137),
        .Q(out_30_i_4_n_0),
        .R(1'b0));
  FDRE out_30_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_138),
        .Q(out_30_i_5_n_0),
        .R(1'b0));
  FDRE out_30_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_139),
        .Q(out_30_i_6_n_0),
        .R(1'b0));
  FDRE out_30_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_140),
        .Q(out_30_i_7_n_0),
        .R(1'b0));
  FDRE out_30_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_141),
        .Q(out_30_i_8_n_0),
        .R(1'b0));
  FDRE out_30_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_142),
        .Q(out_30_i_9_n_0),
        .R(1'b0));
  FDRE out_50_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_156),
        .Q(out_50_i_1_n_0),
        .R(1'b0));
  FDRE out_50_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_165),
        .Q(out_50_i_10_n_0),
        .R(1'b0));
  FDRE out_50_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_166),
        .Q(out_50_i_11_n_0),
        .R(1'b0));
  FDRE out_50_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_167),
        .Q(out_50_i_12_n_0),
        .R(1'b0));
  FDRE out_50_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_168),
        .Q(out_50_i_13_n_0),
        .R(1'b0));
  FDRE out_50_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_169),
        .Q(out_50_i_14_n_0),
        .R(1'b0));
  FDRE out_50_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_170),
        .Q(out_50_i_15_n_0),
        .R(1'b0));
  FDRE out_50_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_171),
        .Q(out_50_i_16_n_0),
        .R(1'b0));
  FDRE out_50_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_172),
        .Q(out_50_i_17_n_0),
        .R(1'b0));
  FDRE out_50_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_173),
        .Q(out_50_i_18_n_0),
        .R(1'b0));
  FDRE out_50_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_174),
        .Q(out_50_i_19_n_0),
        .R(1'b0));
  FDRE out_50_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_157),
        .Q(out_50_i_2_n_0),
        .R(1'b0));
  FDRE out_50_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_175),
        .Q(out_50_i_20_n_0),
        .R(1'b0));
  FDRE out_50_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_176),
        .Q(out_50_i_21_n_0),
        .R(1'b0));
  FDRE out_50_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_201),
        .Q(out_50_i_22_n_0),
        .R(1'b0));
  FDRE out_50_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_22),
        .Q(out_50_i_23_n_0),
        .R(1'b0));
  FDRE out_50_i_24
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_2),
        .Q(out_50_i_24_n_0),
        .R(1'b0));
  FDRE out_50_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_158),
        .Q(out_50_i_3_n_0),
        .R(1'b0));
  FDRE out_50_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_159),
        .Q(out_50_i_4_n_0),
        .R(1'b0));
  FDRE out_50_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_160),
        .Q(out_50_i_5_n_0),
        .R(1'b0));
  FDRE out_50_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_161),
        .Q(out_50_i_6_n_0),
        .R(1'b0));
  FDRE out_50_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_162),
        .Q(out_50_i_7_n_0),
        .R(1'b0));
  FDRE out_50_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_163),
        .Q(out_50_i_8_n_0),
        .R(1'b0));
  FDRE out_50_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_164),
        .Q(out_50_i_9_n_0),
        .R(1'b0));
  FDRE out_70_i_1
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_177),
        .Q(out_70_i_1_n_0),
        .R(1'b0));
  FDRE out_70_i_10
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_186),
        .Q(out_70_i_10_n_0),
        .R(1'b0));
  FDRE out_70_i_11
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_187),
        .Q(out_70_i_11_n_0),
        .R(1'b0));
  FDRE out_70_i_12
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_188),
        .Q(out_70_i_12_n_0),
        .R(1'b0));
  FDRE out_70_i_13
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_189),
        .Q(out_70_i_13_n_0),
        .R(1'b0));
  FDRE out_70_i_14
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_190),
        .Q(out_70_i_14_n_0),
        .R(1'b0));
  FDRE out_70_i_15
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_191),
        .Q(out_70_i_15_n_0),
        .R(1'b0));
  FDRE out_70_i_16
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_192),
        .Q(out_70_i_16_n_0),
        .R(1'b0));
  FDRE out_70_i_17
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_193),
        .Q(out_70_i_17_n_0),
        .R(1'b0));
  FDRE out_70_i_18
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_194),
        .Q(out_70_i_18_n_0),
        .R(1'b0));
  FDRE out_70_i_19
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_195),
        .Q(out_70_i_19_n_0),
        .R(1'b0));
  FDRE out_70_i_2
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_178),
        .Q(out_70_i_2_n_0),
        .R(1'b0));
  FDRE out_70_i_20
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_196),
        .Q(out_70_i_20_n_0),
        .R(1'b0));
  FDRE out_70_i_21
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_197),
        .Q(out_70_i_21_n_0),
        .R(1'b0));
  FDRE out_70_i_22
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_198),
        .Q(out_70_i_22_n_0),
        .R(1'b0));
  FDRE out_70_i_23
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_202),
        .Q(out_70_i_23_n_0),
        .R(1'b0));
  FDRE out_70_i_24
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_2),
        .Q(out_70_i_24_n_0),
        .R(1'b0));
  FDRE out_70_i_3
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_179),
        .Q(out_70_i_3_n_0),
        .R(1'b0));
  FDRE out_70_i_4
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_180),
        .Q(out_70_i_4_n_0),
        .R(1'b0));
  FDRE out_70_i_5
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_181),
        .Q(out_70_i_5_n_0),
        .R(1'b0));
  FDRE out_70_i_6
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_182),
        .Q(out_70_i_6_n_0),
        .R(1'b0));
  FDRE out_70_i_7
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_183),
        .Q(out_70_i_7_n_0),
        .R(1'b0));
  FDRE out_70_i_8
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_184),
        .Q(out_70_i_8_n_0),
        .R(1'b0));
  FDRE out_70_i_9
       (.C(clk),
        .CE(1'b1),
        .D(transmitter_inst_1_n_185),
        .Q(out_70_i_9_n_0),
        .R(1'b0));
  OBUF phy_reset_n_OBUF_inst
       (.I(phy_reset_n_OBUF),
        .O(phy_reset_n));
  LUT1 #(
    .INIT(2'h1)) 
    phy_reset_n_OBUF_inst_i_1
       (.I0(internal_rst_reg_n_0),
        .O(phy_reset_n_OBUF));
  pwm_audio pwm_audio_inst_1
       (.Q(data_in),
        .audio(audio_OBUF),
        .clk(clk),
        .data_in_stb(data_in_stb),
        .internal_rst_reg(internal_rst_reg_n_0),
        .output_audio_ack(output_audio_ack));
  PWM pwm_inst_1
       (.clk(clk),
        .led_r_pwm_OBUF(led_r_pwm_OBUF));
  PWM_0 pwm_inst_2
       (.clk(clk),
        .led_g_pwm_OBUF(led_g_pwm_OBUF));
  PWM_1 pwm_inst_3
       (.clk(clk),
        .led_b_pwm_OBUF(led_b_pwm_OBUF));
  OBUF rf_out_OBUF_inst
       (.I(rf_out_OBUF),
        .O(rf_out));
  IBUF rs232_rx_IBUF_inst
       (.I(rs232_rx),
        .O(rs232_rx_IBUF));
  OBUF rs232_tx_OBUF_inst
       (.I(rs232_tx_OBUF),
        .O(rs232_tx));
  IBUF rst_IBUF_inst
       (.I(rst),
        .O(rst_IBUF));
  LUT1 #(
    .INIT(2'h1)) 
    s_test_1_i_1
       (.I0(test_1_OBUF),
        .O(s_test_1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_test_1_reg
       (.C(clk),
        .CE(frequency_stb),
        .D(s_test_1_i_1_n_0),
        .Q(test_1_OBUF),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_test_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(user_design_inst_1_n_1),
        .Q(test_2_OBUF),
        .R(1'b0));
  IOBUF_HD4 scl_IOBUF_inst
       (.I(1'b0),
        .IO(scl),
        .O(scl_IBUF),
        .T(scl_TRI));
  IOBUF_UNIQ_BASE_ sda_IOBUF_inst
       (.I(1'b0),
        .IO(sda),
        .O(sda_IBUF),
        .T(sda_TRI));
  serial_input serial_input_inst_1
       (.clk(clk),
        .input_rs232_rx_ack(input_rs232_rx_ack),
        .internal_rst_reg(internal_rst_reg_n_0),
        .out1_stb(input_rs232_rx_stb),
        .\output (out1),
        .rx(rs232_rx_IBUF));
  serial_output serial_output_inst_1
       (.Q(output_rs232_tx),
        .clk(clk),
        .internal_rst_reg(internal_rst_reg_n_0),
        .output_rs232_tx_ack(output_rs232_tx_ack),
        .output_rs232_tx_stb(output_rs232_tx_stb),
        .rs232_tx_OBUF(rs232_tx_OBUF));
  OBUF \seven_segment_annode_OBUF[0]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[0]));
  OBUF \seven_segment_annode_OBUF[1]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[1]));
  OBUF \seven_segment_annode_OBUF[2]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[2]));
  OBUF \seven_segment_annode_OBUF[3]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[3]));
  OBUF \seven_segment_annode_OBUF[4]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[4]));
  OBUF \seven_segment_annode_OBUF[5]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[5]));
  OBUF \seven_segment_annode_OBUF[6]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[6]));
  OBUF \seven_segment_annode_OBUF[7]_inst 
       (.I(1'b1),
        .O(seven_segment_annode[7]));
  OBUF \seven_segment_cathode_OBUF[0]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[0]));
  OBUF \seven_segment_cathode_OBUF[1]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[1]));
  OBUF \seven_segment_cathode_OBUF[2]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[2]));
  OBUF \seven_segment_cathode_OBUF[3]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[3]));
  OBUF \seven_segment_cathode_OBUF[4]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[4]));
  OBUF \seven_segment_cathode_OBUF[5]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[5]));
  OBUF \seven_segment_cathode_OBUF[6]_inst 
       (.I(1'b1),
        .O(seven_segment_cathode[6]));
  OBUF test_1_OBUF_inst
       (.I(test_1_OBUF),
        .O(test_1));
  OBUF test_2_OBUF_inst
       (.I(test_2_OBUF),
        .O(test_2));
  transmitter transmitter_inst_1
       (.A({i_out_1_reg_i_1_n_0,i_out_1_reg_i_2_n_0,i_out_1_reg_i_3_n_0,i_out_1_reg_i_4_n_0,i_out_1_reg_i_5_n_0,i_out_1_reg_i_6_n_0,i_out_1_reg_i_7_n_0,i_out_1_reg_i_8_n_0,i_out_1_reg_i_9_n_0,i_out_1_reg_i_10_n_0,i_out_1_reg_i_11_n_0,i_out_1_reg_i_12_n_0,i_out_1_reg_i_13_n_0,i_out_1_reg_i_14_n_0,i_out_1_reg_i_15_n_0,i_out_1_reg_i_16_n_0,i_out_1_reg_i_17_n_0,i_out_1_reg_i_18_n_0,i_out_1_reg_i_19_n_0,i_out_1_reg_i_20_n_0,i_out_1_reg_i_21_n_0,i_out_1_reg_i_22_n_0,i_out_1_reg_i_23_n_0,i_out_1_reg_i_24_n_0}),
        .E(frequency_stb),
        .O142({transmitter_inst_1_n_44,transmitter_inst_1_n_45,transmitter_inst_1_n_46,transmitter_inst_1_n_47,transmitter_inst_1_n_48,transmitter_inst_1_n_49,transmitter_inst_1_n_50,transmitter_inst_1_n_51,transmitter_inst_1_n_52,transmitter_inst_1_n_53,transmitter_inst_1_n_54,transmitter_inst_1_n_55,transmitter_inst_1_n_56,transmitter_inst_1_n_57,transmitter_inst_1_n_58,transmitter_inst_1_n_59,transmitter_inst_1_n_60,transmitter_inst_1_n_61,transmitter_inst_1_n_62,transmitter_inst_1_n_63,transmitter_inst_1_n_64,transmitter_inst_1_n_65}),
        .O143({transmitter_inst_1_n_66,transmitter_inst_1_n_67,transmitter_inst_1_n_68,transmitter_inst_1_n_69,transmitter_inst_1_n_70,transmitter_inst_1_n_71,transmitter_inst_1_n_72,transmitter_inst_1_n_73,transmitter_inst_1_n_74,transmitter_inst_1_n_75,transmitter_inst_1_n_76,transmitter_inst_1_n_77,transmitter_inst_1_n_78,transmitter_inst_1_n_79,transmitter_inst_1_n_80,transmitter_inst_1_n_81,transmitter_inst_1_n_82,transmitter_inst_1_n_83,transmitter_inst_1_n_84,transmitter_inst_1_n_85,transmitter_inst_1_n_86}),
        .O144({transmitter_inst_1_n_87,transmitter_inst_1_n_88,transmitter_inst_1_n_89,transmitter_inst_1_n_90,transmitter_inst_1_n_91,transmitter_inst_1_n_92,transmitter_inst_1_n_93,transmitter_inst_1_n_94,transmitter_inst_1_n_95,transmitter_inst_1_n_96,transmitter_inst_1_n_97,transmitter_inst_1_n_98,transmitter_inst_1_n_99,transmitter_inst_1_n_100,transmitter_inst_1_n_101,transmitter_inst_1_n_102,transmitter_inst_1_n_103,transmitter_inst_1_n_104,transmitter_inst_1_n_105,transmitter_inst_1_n_106,transmitter_inst_1_n_107,transmitter_inst_1_n_108}),
        .O148({transmitter_inst_1_n_134,transmitter_inst_1_n_135,transmitter_inst_1_n_136,transmitter_inst_1_n_137,transmitter_inst_1_n_138,transmitter_inst_1_n_139,transmitter_inst_1_n_140,transmitter_inst_1_n_141,transmitter_inst_1_n_142,transmitter_inst_1_n_143,transmitter_inst_1_n_144,transmitter_inst_1_n_145,transmitter_inst_1_n_146,transmitter_inst_1_n_147,transmitter_inst_1_n_148,transmitter_inst_1_n_149,transmitter_inst_1_n_150,transmitter_inst_1_n_151,transmitter_inst_1_n_152,transmitter_inst_1_n_153,transmitter_inst_1_n_154,transmitter_inst_1_n_155}),
        .O149({transmitter_inst_1_n_156,transmitter_inst_1_n_157,transmitter_inst_1_n_158,transmitter_inst_1_n_159,transmitter_inst_1_n_160,transmitter_inst_1_n_161,transmitter_inst_1_n_162,transmitter_inst_1_n_163,transmitter_inst_1_n_164,transmitter_inst_1_n_165,transmitter_inst_1_n_166,transmitter_inst_1_n_167,transmitter_inst_1_n_168,transmitter_inst_1_n_169,transmitter_inst_1_n_170,transmitter_inst_1_n_171,transmitter_inst_1_n_172,transmitter_inst_1_n_173,transmitter_inst_1_n_174,transmitter_inst_1_n_175,transmitter_inst_1_n_176}),
        .O150({transmitter_inst_1_n_177,transmitter_inst_1_n_178,transmitter_inst_1_n_179,transmitter_inst_1_n_180,transmitter_inst_1_n_181,transmitter_inst_1_n_182,transmitter_inst_1_n_183,transmitter_inst_1_n_184,transmitter_inst_1_n_185,transmitter_inst_1_n_186,transmitter_inst_1_n_187,transmitter_inst_1_n_188,transmitter_inst_1_n_189,transmitter_inst_1_n_190,transmitter_inst_1_n_191,transmitter_inst_1_n_192,transmitter_inst_1_n_193,transmitter_inst_1_n_194,transmitter_inst_1_n_195,transmitter_inst_1_n_196,transmitter_inst_1_n_197,transmitter_inst_1_n_198}),
        .Q(last_input),
        .S({user_design_inst_1_n_22,user_design_inst_1_n_23,user_design_inst_1_n_24,user_design_inst_1_n_25}),
        .clk(clk),
        .\delta_reg[7] ({transmitter_inst_1_n_14,transmitter_inst_1_n_15,transmitter_inst_1_n_16,transmitter_inst_1_n_17,transmitter_inst_1_n_18,transmitter_inst_1_n_19,transmitter_inst_1_n_20,transmitter_inst_1_n_21}),
        .dithering(dithering),
        .i_out_1_reg_i_22(transmitter_inst_1_n_109),
        .i_out_3_reg_i_1({i_out_3_reg_i_1_n_0,i_out_3_reg_i_2_n_0,i_out_3_reg_i_3_n_0,i_out_3_reg_i_4_n_0,i_out_3_reg_i_5_n_0,i_out_3_reg_i_6_n_0,i_out_3_reg_i_7_n_0,i_out_3_reg_i_8_n_0,i_out_3_reg_i_9_n_0,i_out_3_reg_i_10_n_0,i_out_3_reg_i_11_n_0,i_out_3_reg_i_12_n_0,i_out_3_reg_i_13_n_0,i_out_3_reg_i_14_n_0,i_out_3_reg_i_15_n_0,i_out_3_reg_i_16_n_0,i_out_3_reg_i_17_n_0,i_out_3_reg_i_18_n_0,i_out_3_reg_i_19_n_0,i_out_3_reg_i_20_n_0,i_out_3_reg_i_21_n_0,i_out_3_reg_i_22_n_0,i_out_3_reg_i_23_n_0,i_out_3_reg_i_24_n_0}),
        .i_out_3_reg_i_23(transmitter_inst_1_n_110),
        .i_out_5_reg_i_1({i_out_5_reg_i_1_n_0,i_out_5_reg_i_2_n_0,i_out_5_reg_i_3_n_0,i_out_5_reg_i_4_n_0,i_out_5_reg_i_5_n_0,i_out_5_reg_i_6_n_0,i_out_5_reg_i_7_n_0,i_out_5_reg_i_8_n_0,i_out_5_reg_i_9_n_0,i_out_5_reg_i_10_n_0,i_out_5_reg_i_11_n_0,i_out_5_reg_i_12_n_0,i_out_5_reg_i_13_n_0,i_out_5_reg_i_14_n_0,i_out_5_reg_i_15_n_0,i_out_5_reg_i_16_n_0,i_out_5_reg_i_17_n_0,i_out_5_reg_i_18_n_0,i_out_5_reg_i_19_n_0,i_out_5_reg_i_20_n_0,i_out_5_reg_i_21_n_0,i_out_5_reg_i_22_n_0,i_out_5_reg_i_23_n_0,i_out_5_reg_i_24_n_0}),
        .i_out_5_reg_i_22(transmitter_inst_1_n_111),
        .i_out_5_reg_i_23(delta_d3),
        .i_out_7_reg_i_1({i_out_7_reg_i_1_n_0,i_out_7_reg_i_2_n_0,i_out_7_reg_i_3_n_0,i_out_7_reg_i_4_n_0,i_out_7_reg_i_5_n_0,i_out_7_reg_i_6_n_0,i_out_7_reg_i_7_n_0,i_out_7_reg_i_8_n_0,i_out_7_reg_i_9_n_0,i_out_7_reg_i_10_n_0,i_out_7_reg_i_11_n_0,i_out_7_reg_i_12_n_0,i_out_7_reg_i_13_n_0,i_out_7_reg_i_14_n_0,i_out_7_reg_i_15_n_0,i_out_7_reg_i_16_n_0,i_out_7_reg_i_17_n_0,i_out_7_reg_i_18_n_0,i_out_7_reg_i_19_n_0,i_out_7_reg_i_20_n_0,i_out_7_reg_i_21_n_0,i_out_7_reg_i_22_n_0,i_out_7_reg_i_23_n_0,i_out_7_reg_i_24_n_0}),
        .i_out_7_reg_i_23(transmitter_inst_1_n_112),
        .out_10_i_1({transmitter_inst_1_n_113,transmitter_inst_1_n_114,transmitter_inst_1_n_115,transmitter_inst_1_n_116,transmitter_inst_1_n_117,transmitter_inst_1_n_118,transmitter_inst_1_n_119,transmitter_inst_1_n_120,transmitter_inst_1_n_121,transmitter_inst_1_n_122,transmitter_inst_1_n_123,transmitter_inst_1_n_124,transmitter_inst_1_n_125,transmitter_inst_1_n_126,transmitter_inst_1_n_127,transmitter_inst_1_n_128,transmitter_inst_1_n_129,transmitter_inst_1_n_130,transmitter_inst_1_n_131,transmitter_inst_1_n_132,transmitter_inst_1_n_133}),
        .out_10_i_1_0({out_10_i_1_n_0,out_10_i_2_n_0,out_10_i_3_n_0,out_10_i_4_n_0,out_10_i_5_n_0,out_10_i_6_n_0,out_10_i_7_n_0,out_10_i_8_n_0,out_10_i_9_n_0,out_10_i_10_n_0,out_10_i_11_n_0,out_10_i_12_n_0,out_10_i_13_n_0,out_10_i_14_n_0,out_10_i_15_n_0,out_10_i_16_n_0,out_10_i_17_n_0,out_10_i_18_n_0,out_10_i_19_n_0,out_10_i_20_n_0,out_10_i_21_n_0,out_10_i_22_n_0,out_10_i_23_n_0,out_10_i_24_n_0}),
        .out_10_i_22(transmitter_inst_1_n_199),
        .out_20_0(transmitter_inst_1_n_2),
        .out_30_i_1({out_30_i_1_n_0,out_30_i_2_n_0,out_30_i_3_n_0,out_30_i_4_n_0,out_30_i_5_n_0,out_30_i_6_n_0,out_30_i_7_n_0,out_30_i_8_n_0,out_30_i_9_n_0,out_30_i_10_n_0,out_30_i_11_n_0,out_30_i_12_n_0,out_30_i_13_n_0,out_30_i_14_n_0,out_30_i_15_n_0,out_30_i_16_n_0,out_30_i_17_n_0,out_30_i_18_n_0,out_30_i_19_n_0,out_30_i_20_n_0,out_30_i_21_n_0,out_30_i_22_n_0,out_30_i_23_n_0,out_30_i_24_n_0}),
        .out_30_i_23(transmitter_inst_1_n_200),
        .out_50_i_1({out_50_i_1_n_0,out_50_i_2_n_0,out_50_i_3_n_0,out_50_i_4_n_0,out_50_i_5_n_0,out_50_i_6_n_0,out_50_i_7_n_0,out_50_i_8_n_0,out_50_i_9_n_0,out_50_i_10_n_0,out_50_i_11_n_0,out_50_i_12_n_0,out_50_i_13_n_0,out_50_i_14_n_0,out_50_i_15_n_0,out_50_i_16_n_0,out_50_i_17_n_0,out_50_i_18_n_0,out_50_i_19_n_0,out_50_i_20_n_0,out_50_i_21_n_0,out_50_i_22_n_0,out_50_i_23_n_0,out_50_i_24_n_0}),
        .out_50_i_22(transmitter_inst_1_n_201),
        .out_50_i_23(transmitter_inst_1_n_22),
        .out_70_i_1({out_70_i_1_n_0,out_70_i_2_n_0,out_70_i_3_n_0,out_70_i_4_n_0,out_70_i_5_n_0,out_70_i_6_n_0,out_70_i_7_n_0,out_70_i_8_n_0,out_70_i_9_n_0,out_70_i_10_n_0,out_70_i_11_n_0,out_70_i_12_n_0,out_70_i_13_n_0,out_70_i_14_n_0,out_70_i_15_n_0,out_70_i_16_n_0,out_70_i_17_n_0,out_70_i_18_n_0,out_70_i_19_n_0,out_70_i_20_n_0,out_70_i_21_n_0,out_70_i_22_n_0,out_70_i_23_n_0,out_70_i_24_n_0}),
        .out_70_i_23(transmitter_inst_1_n_202),
        .\output (rf_out_OBUF),
        .output_tx_am_ack(output_tx_am_ack),
        .p_0_in({transmitter_inst_1_n_23,transmitter_inst_1_n_24,transmitter_inst_1_n_25,transmitter_inst_1_n_26,transmitter_inst_1_n_27,transmitter_inst_1_n_28,transmitter_inst_1_n_29,transmitter_inst_1_n_30,transmitter_inst_1_n_31,transmitter_inst_1_n_32,transmitter_inst_1_n_33,transmitter_inst_1_n_34,transmitter_inst_1_n_35,transmitter_inst_1_n_36,transmitter_inst_1_n_37,transmitter_inst_1_n_38,transmitter_inst_1_n_39,transmitter_inst_1_n_40,transmitter_inst_1_n_41,transmitter_inst_1_n_42,transmitter_inst_1_n_43}),
        .\s_output_am_out_reg[23] ({amplitude[23:16],amplitude[7:0]}),
        .\s_output_am_out_reg[23]_0 ({user_design_inst_1_n_2,user_design_inst_1_n_3,user_design_inst_1_n_4,user_design_inst_1_n_5}),
        .\s_output_am_out_reg[3] ({user_design_inst_1_n_30,user_design_inst_1_n_31,user_design_inst_1_n_32,user_design_inst_1_n_33}),
        .\s_output_am_out_reg[7] ({user_design_inst_1_n_26,user_design_inst_1_n_27,user_design_inst_1_n_28,user_design_inst_1_n_29}),
        .\s_output_ctl_out_reg[0] (user_design_inst_1_n_0),
        .\s_output_freq_out_reg[31] (frequency));
  OBUF \txd_OBUF[0]_inst 
       (.I(txd_OBUF[0]),
        .O(txd[0]));
  OBUF \txd_OBUF[1]_inst 
       (.I(txd_OBUF[1]),
        .O(txd[1]));
  OBUF txen_OBUF_inst
       (.I(txen_OBUF),
        .O(txen));
  user_design user_design_inst_1
       (.E(frequency_stb),
        .Q(last_input),
        .S({user_design_inst_1_n_22,user_design_inst_1_n_23,user_design_inst_1_n_24,user_design_inst_1_n_25}),
        .clk(clk),
        .data_in_stb(data_in_stb),
        .\delta_reg[3] ({user_design_inst_1_n_30,user_design_inst_1_n_31,user_design_inst_1_n_32,user_design_inst_1_n_33}),
        .\delta_reg[7] ({user_design_inst_1_n_2,user_design_inst_1_n_3,user_design_inst_1_n_4,user_design_inst_1_n_5}),
        .\delta_reg[7]_0 ({user_design_inst_1_n_26,user_design_inst_1_n_27,user_design_inst_1_n_28,user_design_inst_1_n_29}),
        .dithering(dithering),
        .dithering_reg(user_design_inst_1_n_0),
        .input_rs232_rx_ack(input_rs232_rx_ack),
        .internal_rst_reg(internal_rst_reg_n_0),
        .\last_input_reg[7] ({transmitter_inst_1_n_14,transmitter_inst_1_n_15,transmitter_inst_1_n_16,transmitter_inst_1_n_17,transmitter_inst_1_n_18,transmitter_inst_1_n_19,transmitter_inst_1_n_20,transmitter_inst_1_n_21}),
        .out1_stb(input_rs232_rx_stb),
        .\output (out1),
        .output_am_out({amplitude[23:16],amplitude[7:0]}),
        .output_audio_ack(output_audio_ack),
        .output_audio_out(data_in),
        .output_freq_out(frequency),
        .output_rs232_tx(output_rs232_tx),
        .output_rs232_tx_ack(output_rs232_tx_ack),
        .output_rs232_tx_stb(output_rs232_tx_stb),
        .output_tx_am_ack(output_tx_am_ack),
        .pwropt(not_locked),
        .s_test_2_reg(user_design_inst_1_n_1),
        .test_2_OBUF(test_2_OBUF));
  OBUF \vga_b_OBUF[0]_inst 
       (.I(vga_b_OBUF),
        .O(vga_b[0]));
  OBUF \vga_b_OBUF[1]_inst 
       (.I(vga_b_OBUF),
        .O(vga_b[1]));
  OBUF \vga_b_OBUF[2]_inst 
       (.I(vga_b_OBUF),
        .O(vga_b[2]));
  OBUF \vga_b_OBUF[3]_inst 
       (.I(vga_b_OBUF),
        .O(vga_b[3]));
  OBUF \vga_g_OBUF[0]_inst 
       (.I(vga_b_OBUF),
        .O(vga_g[0]));
  OBUF \vga_g_OBUF[1]_inst 
       (.I(vga_b_OBUF),
        .O(vga_g[1]));
  OBUF \vga_g_OBUF[2]_inst 
       (.I(vga_b_OBUF),
        .O(vga_g[2]));
  OBUF \vga_g_OBUF[3]_inst 
       (.I(vga_b_OBUF),
        .O(vga_g[3]));
  OBUF \vga_r_OBUF[0]_inst 
       (.I(vga_b_OBUF),
        .O(vga_r[0]));
  OBUF \vga_r_OBUF[1]_inst 
       (.I(vga_b_OBUF),
        .O(vga_r[1]));
  OBUF \vga_r_OBUF[2]_inst 
       (.I(vga_b_OBUF),
        .O(vga_r[2]));
  OBUF \vga_r_OBUF[3]_inst 
       (.I(vga_b_OBUF),
        .O(vga_r[3]));
  OBUF vsynch_OBUF_inst
       (.I(vsynch_OBUF),
        .O(vsynch));
endmodule

module dac_interface
   (\output ,
    clk,
    dithering_reg,
    P,
    out_10,
    out_20,
    out_30,
    out_40,
    out_50,
    out_60,
    out_70);
  output \output ;
  input clk;
  input dithering_reg;
  input [31:0]P;
  input [31:0]out_10;
  input [31:0]out_20;
  input [31:0]out_30;
  input [31:0]out_40;
  input [31:0]out_50;
  input [31:0]out_60;
  input [31:0]out_70;

  wire [31:0]P;
  wire clk;
  wire dac_0;
  wire dac_0_i_1_n_0;
  wire dac_1;
  wire dac_1_i_1_n_0;
  wire dac_2;
  wire dac_2_i_1_n_0;
  wire dac_3;
  wire dac_3_i_1_n_0;
  wire dac_4;
  wire dac_4_i_1_n_0;
  wire dac_5;
  wire dac_5_i_1_n_0;
  wire dac_6;
  wire dac_6_i_1_n_0;
  wire dac_7;
  wire dac_7_i_1_n_0;
  wire dithered_0;
  wire dithered_1;
  wire dithered_2;
  wire dithered_3;
  wire dithered_4;
  wire dithered_5;
  wire dithered_6;
  wire dithered_7;
  wire dithering_reg;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_1__1_n_0;
  wire i__carry__0_i_1__2_n_0;
  wire i__carry__0_i_1__3_n_0;
  wire i__carry__0_i_1__4_n_0;
  wire i__carry__0_i_1__5_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_2__1_n_0;
  wire i__carry__0_i_2__2_n_0;
  wire i__carry__0_i_2__3_n_0;
  wire i__carry__0_i_2__4_n_0;
  wire i__carry__0_i_2__5_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_3__1_n_0;
  wire i__carry__0_i_3__2_n_0;
  wire i__carry__0_i_3__3_n_0;
  wire i__carry__0_i_3__4_n_0;
  wire i__carry__0_i_3__5_n_0;
  wire i__carry__0_i_3__6_n_0;
  wire i__carry__0_i_4__0_n_0;
  wire i__carry__0_i_4__1_n_0;
  wire i__carry__0_i_4__2_n_0;
  wire i__carry__0_i_4__3_n_0;
  wire i__carry__0_i_4__4_n_0;
  wire i__carry__0_i_4__5_n_0;
  wire i__carry__0_i_4__6_n_0;
  wire i__carry__0_i_5__0_n_0;
  wire i__carry__0_i_5__1_n_0;
  wire i__carry__0_i_5__2_n_0;
  wire i__carry__0_i_5__3_n_0;
  wire i__carry__0_i_5__4_n_0;
  wire i__carry__0_i_5__5_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry__0_i_6__0_n_0;
  wire i__carry__0_i_6__1_n_0;
  wire i__carry__0_i_6__2_n_0;
  wire i__carry__0_i_6__3_n_0;
  wire i__carry__0_i_6__4_n_0;
  wire i__carry__0_i_6__5_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7__0_n_0;
  wire i__carry__0_i_7__1_n_0;
  wire i__carry__0_i_7__2_n_0;
  wire i__carry__0_i_7__3_n_0;
  wire i__carry__0_i_7__4_n_0;
  wire i__carry__0_i_7__5_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8__0_n_0;
  wire i__carry__0_i_8__1_n_0;
  wire i__carry__0_i_8__2_n_0;
  wire i__carry__0_i_8__3_n_0;
  wire i__carry__0_i_8__4_n_0;
  wire i__carry__0_i_8__5_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry__1_i_1__0_n_0;
  wire i__carry__1_i_1__1_n_0;
  wire i__carry__1_i_1__2_n_0;
  wire i__carry__1_i_1__3_n_0;
  wire i__carry__1_i_1__4_n_0;
  wire i__carry__1_i_1__5_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2__0_n_0;
  wire i__carry__1_i_2__1_n_0;
  wire i__carry__1_i_2__2_n_0;
  wire i__carry__1_i_2__3_n_0;
  wire i__carry__1_i_2__4_n_0;
  wire i__carry__1_i_2__5_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3__0_n_0;
  wire i__carry__1_i_3__1_n_0;
  wire i__carry__1_i_3__2_n_0;
  wire i__carry__1_i_3__3_n_0;
  wire i__carry__1_i_3__4_n_0;
  wire i__carry__1_i_3__5_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4__0_n_0;
  wire i__carry__1_i_4__1_n_0;
  wire i__carry__1_i_4__2_n_0;
  wire i__carry__1_i_4__3_n_0;
  wire i__carry__1_i_4__4_n_0;
  wire i__carry__1_i_4__5_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__1_i_5__0_n_0;
  wire i__carry__1_i_5__1_n_0;
  wire i__carry__1_i_5__2_n_0;
  wire i__carry__1_i_5__3_n_0;
  wire i__carry__1_i_5__4_n_0;
  wire i__carry__1_i_5__5_n_0;
  wire i__carry__1_i_5_n_0;
  wire i__carry__1_i_6__0_n_0;
  wire i__carry__1_i_6__1_n_0;
  wire i__carry__1_i_6__2_n_0;
  wire i__carry__1_i_6__3_n_0;
  wire i__carry__1_i_6__4_n_0;
  wire i__carry__1_i_6__5_n_0;
  wire i__carry__1_i_6_n_0;
  wire i__carry__1_i_7__0_n_0;
  wire i__carry__1_i_7__1_n_0;
  wire i__carry__1_i_7__2_n_0;
  wire i__carry__1_i_7__3_n_0;
  wire i__carry__1_i_7__4_n_0;
  wire i__carry__1_i_7__5_n_0;
  wire i__carry__1_i_7_n_0;
  wire i__carry__1_i_8__0_n_0;
  wire i__carry__1_i_8__1_n_0;
  wire i__carry__1_i_8__2_n_0;
  wire i__carry__1_i_8__3_n_0;
  wire i__carry__1_i_8__4_n_0;
  wire i__carry__1_i_8__5_n_0;
  wire i__carry__1_i_8_n_0;
  wire i__carry__2_i_1__0_n_0;
  wire i__carry__2_i_1__1_n_0;
  wire i__carry__2_i_1__2_n_0;
  wire i__carry__2_i_1__3_n_0;
  wire i__carry__2_i_1__4_n_0;
  wire i__carry__2_i_1__5_n_0;
  wire i__carry__2_i_1_n_0;
  wire i__carry__2_i_2__0_n_0;
  wire i__carry__2_i_2__1_n_0;
  wire i__carry__2_i_2__2_n_0;
  wire i__carry__2_i_2__3_n_0;
  wire i__carry__2_i_2__4_n_0;
  wire i__carry__2_i_2__5_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry__2_i_3__0_n_0;
  wire i__carry__2_i_3__1_n_0;
  wire i__carry__2_i_3__2_n_0;
  wire i__carry__2_i_3__3_n_0;
  wire i__carry__2_i_3__4_n_0;
  wire i__carry__2_i_3__5_n_0;
  wire i__carry__2_i_3_n_0;
  wire i__carry__2_i_4__0_n_0;
  wire i__carry__2_i_4__1_n_0;
  wire i__carry__2_i_4__2_n_0;
  wire i__carry__2_i_4__3_n_0;
  wire i__carry__2_i_4__4_n_0;
  wire i__carry__2_i_4__5_n_0;
  wire i__carry__2_i_4_n_0;
  wire i__carry__2_i_5__0_n_0;
  wire i__carry__2_i_5__1_n_0;
  wire i__carry__2_i_5__2_n_0;
  wire i__carry__2_i_5__3_n_0;
  wire i__carry__2_i_5__4_n_0;
  wire i__carry__2_i_5__5_n_0;
  wire i__carry__2_i_5_n_0;
  wire i__carry__2_i_6__0_n_0;
  wire i__carry__2_i_6__1_n_0;
  wire i__carry__2_i_6__2_n_0;
  wire i__carry__2_i_6__3_n_0;
  wire i__carry__2_i_6__4_n_0;
  wire i__carry__2_i_6__5_n_0;
  wire i__carry__2_i_6_n_0;
  wire i__carry__2_i_7__0_n_0;
  wire i__carry__2_i_7__1_n_0;
  wire i__carry__2_i_7__2_n_0;
  wire i__carry__2_i_7__3_n_0;
  wire i__carry__2_i_7__4_n_0;
  wire i__carry__2_i_7__5_n_0;
  wire i__carry__2_i_7_n_0;
  wire i__carry__2_i_8__0_n_0;
  wire i__carry__2_i_8__1_n_0;
  wire i__carry__2_i_8__2_n_0;
  wire i__carry__2_i_8__3_n_0;
  wire i__carry__2_i_8__4_n_0;
  wire i__carry__2_i_8__5_n_0;
  wire i__carry__2_i_8_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_1__1_n_0;
  wire i__carry_i_1__2_n_0;
  wire i__carry_i_1__3_n_0;
  wire i__carry_i_1__4_n_0;
  wire i__carry_i_1__5_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2__1_n_0;
  wire i__carry_i_2__2_n_0;
  wire i__carry_i_2__3_n_0;
  wire i__carry_i_2__4_n_0;
  wire i__carry_i_2__5_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_3__2_n_0;
  wire i__carry_i_3__3_n_0;
  wire i__carry_i_3__4_n_0;
  wire i__carry_i_3__5_n_0;
  wire i__carry_i_3__6_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_4__2_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4__4_n_0;
  wire i__carry_i_4__5_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5__0_n_0;
  wire i__carry_i_5__1_n_0;
  wire i__carry_i_5__2_n_0;
  wire i__carry_i_5__3_n_0;
  wire i__carry_i_5__4_n_0;
  wire i__carry_i_5__5_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6__0_n_0;
  wire i__carry_i_6__1_n_0;
  wire i__carry_i_6__2_n_0;
  wire i__carry_i_6__3_n_0;
  wire i__carry_i_6__4_n_0;
  wire i__carry_i_6__5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7__0_n_0;
  wire i__carry_i_7__1_n_0;
  wire i__carry_i_7__2_n_0;
  wire i__carry_i_7__3_n_0;
  wire i__carry_i_7__4_n_0;
  wire i__carry_i_7__5_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8__0_n_0;
  wire i__carry_i_8__1_n_0;
  wire i__carry_i_8__2_n_0;
  wire i__carry_i_8__3_n_0;
  wire i__carry_i_8__4_n_0;
  wire i__carry_i_8__5_n_0;
  wire i__carry_i_8_n_0;
  wire [31:0]out_10;
  wire [31:0]out_20;
  wire [31:0]out_30;
  wire [31:0]out_40;
  wire [31:0]out_50;
  wire [31:0]out_60;
  wire [31:0]out_70;
  wire \output ;
  wire psdsp_n;
  wire psdsp_n_1;
  wire psdsp_n_10;
  wire psdsp_n_11;
  wire psdsp_n_12;
  wire psdsp_n_13;
  wire psdsp_n_14;
  wire psdsp_n_2;
  wire psdsp_n_3;
  wire psdsp_n_4;
  wire psdsp_n_5;
  wire psdsp_n_6;
  wire psdsp_n_7;
  wire psdsp_n_8;
  wire psdsp_n_9;
  wire [31:0]rand_0;
  wire rand_00_carry__0_i_4_n_0;
  wire rand_00_carry__0_n_0;
  wire rand_00_carry__0_n_4;
  wire rand_00_carry__0_n_5;
  wire rand_00_carry__0_n_6;
  wire rand_00_carry__0_n_7;
  wire rand_00_carry__1_i_1_n_0;
  wire rand_00_carry__1_n_0;
  wire rand_00_carry__1_n_4;
  wire rand_00_carry__1_n_5;
  wire rand_00_carry__1_n_6;
  wire rand_00_carry__1_n_7;
  wire rand_00_carry__2_i_4_n_0;
  wire rand_00_carry__2_n_0;
  wire rand_00_carry__2_n_4;
  wire rand_00_carry__2_n_5;
  wire rand_00_carry__2_n_6;
  wire rand_00_carry__2_n_7;
  wire rand_00_carry__3_n_0;
  wire rand_00_carry__3_n_4;
  wire rand_00_carry__3_n_5;
  wire rand_00_carry__3_n_6;
  wire rand_00_carry__3_n_7;
  wire rand_00_carry__4_n_0;
  wire rand_00_carry__4_n_4;
  wire rand_00_carry__4_n_5;
  wire rand_00_carry__4_n_6;
  wire rand_00_carry__4_n_7;
  wire rand_00_carry__5_n_0;
  wire rand_00_carry__5_n_4;
  wire rand_00_carry__5_n_5;
  wire rand_00_carry__5_n_6;
  wire rand_00_carry__5_n_7;
  wire rand_00_carry__6_n_5;
  wire rand_00_carry__6_n_6;
  wire rand_00_carry__6_n_7;
  wire rand_00_carry_i_1_n_0;
  wire rand_00_carry_i_2_n_0;
  wire rand_00_carry_n_0;
  wire rand_00_carry_n_4;
  wire rand_00_carry_n_5;
  wire rand_00_carry_n_6;
  wire rand_00_carry_n_7;
  wire rand_01__0_n_100;
  wire rand_01__0_n_101;
  wire rand_01__0_n_102;
  wire rand_01__0_n_103;
  wire rand_01__0_n_104;
  wire rand_01__0_n_105;
  wire rand_01__0_n_106;
  wire rand_01__0_n_107;
  wire rand_01__0_n_108;
  wire rand_01__0_n_109;
  wire rand_01__0_n_110;
  wire rand_01__0_n_111;
  wire rand_01__0_n_112;
  wire rand_01__0_n_113;
  wire rand_01__0_n_114;
  wire rand_01__0_n_115;
  wire rand_01__0_n_116;
  wire rand_01__0_n_117;
  wire rand_01__0_n_118;
  wire rand_01__0_n_119;
  wire rand_01__0_n_120;
  wire rand_01__0_n_121;
  wire rand_01__0_n_122;
  wire rand_01__0_n_123;
  wire rand_01__0_n_124;
  wire rand_01__0_n_125;
  wire rand_01__0_n_126;
  wire rand_01__0_n_127;
  wire rand_01__0_n_128;
  wire rand_01__0_n_129;
  wire rand_01__0_n_130;
  wire rand_01__0_n_131;
  wire rand_01__0_n_132;
  wire rand_01__0_n_133;
  wire rand_01__0_n_134;
  wire rand_01__0_n_135;
  wire rand_01__0_n_136;
  wire rand_01__0_n_137;
  wire rand_01__0_n_138;
  wire rand_01__0_n_139;
  wire rand_01__0_n_140;
  wire rand_01__0_n_141;
  wire rand_01__0_n_142;
  wire rand_01__0_n_143;
  wire rand_01__0_n_144;
  wire rand_01__0_n_145;
  wire rand_01__0_n_146;
  wire rand_01__0_n_147;
  wire rand_01__0_n_148;
  wire rand_01__0_n_149;
  wire rand_01__0_n_150;
  wire rand_01__0_n_151;
  wire rand_01__0_n_152;
  wire rand_01__0_n_153;
  wire rand_01__0_n_89;
  wire rand_01__0_n_90;
  wire rand_01__0_n_91;
  wire rand_01__0_n_92;
  wire rand_01__0_n_93;
  wire rand_01__0_n_94;
  wire rand_01__0_n_95;
  wire rand_01__0_n_96;
  wire rand_01__0_n_97;
  wire rand_01__0_n_98;
  wire rand_01__0_n_99;
  wire rand_01__1_n_100;
  wire rand_01__1_n_101;
  wire rand_01__1_n_102;
  wire rand_01__1_n_103;
  wire rand_01__1_n_104;
  wire rand_01__1_n_105;
  wire rand_01__1_n_91;
  wire rand_01__1_n_92;
  wire rand_01__1_n_93;
  wire rand_01__1_n_94;
  wire rand_01__1_n_95;
  wire rand_01__1_n_96;
  wire rand_01__1_n_97;
  wire rand_01__1_n_98;
  wire rand_01__1_n_99;
  wire rand_01_carry__0_i_1_n_0;
  wire rand_01_carry__0_i_2_n_0;
  wire rand_01_carry__0_i_3_n_0;
  wire rand_01_carry__0_i_4_n_0;
  wire rand_01_carry__0_n_0;
  wire rand_01_carry__0_n_4;
  wire rand_01_carry__0_n_5;
  wire rand_01_carry__0_n_6;
  wire rand_01_carry__0_n_7;
  wire rand_01_carry__1_i_1_n_0;
  wire rand_01_carry__1_i_2_n_0;
  wire rand_01_carry__1_i_3_n_0;
  wire rand_01_carry__1_i_4_n_0;
  wire rand_01_carry__1_n_0;
  wire rand_01_carry__1_n_4;
  wire rand_01_carry__1_n_5;
  wire rand_01_carry__1_n_6;
  wire rand_01_carry__1_n_7;
  wire rand_01_carry__2_i_1_n_0;
  wire rand_01_carry__2_i_2_n_0;
  wire rand_01_carry__2_i_3_n_0;
  wire rand_01_carry__2_i_4_n_0;
  wire rand_01_carry__2_n_4;
  wire rand_01_carry__2_n_5;
  wire rand_01_carry__2_n_6;
  wire rand_01_carry__2_n_7;
  wire rand_01_carry_i_1_n_0;
  wire rand_01_carry_i_2_n_0;
  wire rand_01_carry_i_3_n_0;
  wire rand_01_carry_n_0;
  wire rand_01_carry_n_4;
  wire rand_01_carry_n_5;
  wire rand_01_carry_n_6;
  wire rand_01_carry_n_7;
  wire rand_01_n_100;
  wire rand_01_n_101;
  wire rand_01_n_102;
  wire rand_01_n_103;
  wire rand_01_n_104;
  wire rand_01_n_105;
  wire rand_01_n_91;
  wire rand_01_n_92;
  wire rand_01_n_93;
  wire rand_01_n_94;
  wire rand_01_n_95;
  wire rand_01_n_96;
  wire rand_01_n_97;
  wire rand_01_n_98;
  wire rand_01_n_99;
  wire \rand_0[0]_i_1_n_0 ;
  wire [31:0]rand_1;
  wire rand_10_carry__0_i_4_n_0;
  wire rand_10_carry__0_n_0;
  wire rand_10_carry__0_n_4;
  wire rand_10_carry__0_n_5;
  wire rand_10_carry__0_n_6;
  wire rand_10_carry__0_n_7;
  wire rand_10_carry__1_i_1_n_0;
  wire rand_10_carry__1_n_0;
  wire rand_10_carry__1_n_4;
  wire rand_10_carry__1_n_5;
  wire rand_10_carry__1_n_6;
  wire rand_10_carry__1_n_7;
  wire rand_10_carry__2_i_4_n_0;
  wire rand_10_carry__2_n_0;
  wire rand_10_carry__2_n_4;
  wire rand_10_carry__2_n_5;
  wire rand_10_carry__2_n_6;
  wire rand_10_carry__2_n_7;
  wire rand_10_carry__3_n_0;
  wire rand_10_carry__3_n_4;
  wire rand_10_carry__3_n_5;
  wire rand_10_carry__3_n_6;
  wire rand_10_carry__3_n_7;
  wire rand_10_carry__4_n_0;
  wire rand_10_carry__4_n_4;
  wire rand_10_carry__4_n_5;
  wire rand_10_carry__4_n_6;
  wire rand_10_carry__4_n_7;
  wire rand_10_carry__5_n_0;
  wire rand_10_carry__5_n_4;
  wire rand_10_carry__5_n_5;
  wire rand_10_carry__5_n_6;
  wire rand_10_carry__5_n_7;
  wire rand_10_carry__6_n_5;
  wire rand_10_carry__6_n_6;
  wire rand_10_carry__6_n_7;
  wire rand_10_carry_i_1_n_0;
  wire rand_10_carry_i_2_n_0;
  wire rand_10_carry_n_0;
  wire rand_10_carry_n_4;
  wire rand_10_carry_n_5;
  wire rand_10_carry_n_6;
  wire rand_10_carry_n_7;
  wire rand_11__0_n_100;
  wire rand_11__0_n_101;
  wire rand_11__0_n_102;
  wire rand_11__0_n_103;
  wire rand_11__0_n_104;
  wire rand_11__0_n_105;
  wire rand_11__0_n_106;
  wire rand_11__0_n_107;
  wire rand_11__0_n_108;
  wire rand_11__0_n_109;
  wire rand_11__0_n_110;
  wire rand_11__0_n_111;
  wire rand_11__0_n_112;
  wire rand_11__0_n_113;
  wire rand_11__0_n_114;
  wire rand_11__0_n_115;
  wire rand_11__0_n_116;
  wire rand_11__0_n_117;
  wire rand_11__0_n_118;
  wire rand_11__0_n_119;
  wire rand_11__0_n_120;
  wire rand_11__0_n_121;
  wire rand_11__0_n_122;
  wire rand_11__0_n_123;
  wire rand_11__0_n_124;
  wire rand_11__0_n_125;
  wire rand_11__0_n_126;
  wire rand_11__0_n_127;
  wire rand_11__0_n_128;
  wire rand_11__0_n_129;
  wire rand_11__0_n_130;
  wire rand_11__0_n_131;
  wire rand_11__0_n_132;
  wire rand_11__0_n_133;
  wire rand_11__0_n_134;
  wire rand_11__0_n_135;
  wire rand_11__0_n_136;
  wire rand_11__0_n_137;
  wire rand_11__0_n_138;
  wire rand_11__0_n_139;
  wire rand_11__0_n_140;
  wire rand_11__0_n_141;
  wire rand_11__0_n_142;
  wire rand_11__0_n_143;
  wire rand_11__0_n_144;
  wire rand_11__0_n_145;
  wire rand_11__0_n_146;
  wire rand_11__0_n_147;
  wire rand_11__0_n_148;
  wire rand_11__0_n_149;
  wire rand_11__0_n_150;
  wire rand_11__0_n_151;
  wire rand_11__0_n_152;
  wire rand_11__0_n_153;
  wire rand_11__0_n_89;
  wire rand_11__0_n_90;
  wire rand_11__0_n_91;
  wire rand_11__0_n_92;
  wire rand_11__0_n_93;
  wire rand_11__0_n_94;
  wire rand_11__0_n_95;
  wire rand_11__0_n_96;
  wire rand_11__0_n_97;
  wire rand_11__0_n_98;
  wire rand_11__0_n_99;
  wire rand_11__1_n_100;
  wire rand_11__1_n_101;
  wire rand_11__1_n_102;
  wire rand_11__1_n_103;
  wire rand_11__1_n_104;
  wire rand_11__1_n_105;
  wire rand_11__1_n_91;
  wire rand_11__1_n_92;
  wire rand_11__1_n_93;
  wire rand_11__1_n_94;
  wire rand_11__1_n_95;
  wire rand_11__1_n_96;
  wire rand_11__1_n_97;
  wire rand_11__1_n_98;
  wire rand_11__1_n_99;
  wire rand_11_carry__0_i_1_n_0;
  wire rand_11_carry__0_i_2_n_0;
  wire rand_11_carry__0_i_3_n_0;
  wire rand_11_carry__0_i_4_n_0;
  wire rand_11_carry__0_n_0;
  wire rand_11_carry__0_n_4;
  wire rand_11_carry__0_n_5;
  wire rand_11_carry__0_n_6;
  wire rand_11_carry__0_n_7;
  wire rand_11_carry__1_i_1_n_0;
  wire rand_11_carry__1_i_2_n_0;
  wire rand_11_carry__1_i_3_n_0;
  wire rand_11_carry__1_i_4_n_0;
  wire rand_11_carry__1_n_0;
  wire rand_11_carry__1_n_4;
  wire rand_11_carry__1_n_5;
  wire rand_11_carry__1_n_6;
  wire rand_11_carry__1_n_7;
  wire rand_11_carry__2_i_1_n_0;
  wire rand_11_carry__2_i_2_n_0;
  wire rand_11_carry__2_i_3_n_0;
  wire rand_11_carry__2_i_4_n_0;
  wire rand_11_carry__2_n_4;
  wire rand_11_carry__2_n_5;
  wire rand_11_carry__2_n_6;
  wire rand_11_carry__2_n_7;
  wire rand_11_carry_i_1_n_0;
  wire rand_11_carry_i_2_n_0;
  wire rand_11_carry_i_3_n_0;
  wire rand_11_carry_n_0;
  wire rand_11_carry_n_4;
  wire rand_11_carry_n_5;
  wire rand_11_carry_n_6;
  wire rand_11_carry_n_7;
  wire rand_11_n_100;
  wire rand_11_n_101;
  wire rand_11_n_102;
  wire rand_11_n_103;
  wire rand_11_n_104;
  wire rand_11_n_105;
  wire rand_11_n_91;
  wire rand_11_n_92;
  wire rand_11_n_93;
  wire rand_11_n_94;
  wire rand_11_n_95;
  wire rand_11_n_96;
  wire rand_11_n_97;
  wire rand_11_n_98;
  wire rand_11_n_99;
  wire \rand_1[0]_i_1_n_0 ;
  wire [31:0]rand_2;
  wire rand_20_carry__0_i_4_n_0;
  wire rand_20_carry__0_n_0;
  wire rand_20_carry__0_n_4;
  wire rand_20_carry__0_n_5;
  wire rand_20_carry__0_n_6;
  wire rand_20_carry__0_n_7;
  wire rand_20_carry__1_i_1_n_0;
  wire rand_20_carry__1_n_0;
  wire rand_20_carry__1_n_4;
  wire rand_20_carry__1_n_5;
  wire rand_20_carry__1_n_6;
  wire rand_20_carry__1_n_7;
  wire rand_20_carry__2_i_4_n_0;
  wire rand_20_carry__2_n_0;
  wire rand_20_carry__2_n_4;
  wire rand_20_carry__2_n_5;
  wire rand_20_carry__2_n_6;
  wire rand_20_carry__2_n_7;
  wire rand_20_carry__3_n_0;
  wire rand_20_carry__3_n_4;
  wire rand_20_carry__3_n_5;
  wire rand_20_carry__3_n_6;
  wire rand_20_carry__3_n_7;
  wire rand_20_carry__4_n_0;
  wire rand_20_carry__4_n_4;
  wire rand_20_carry__4_n_5;
  wire rand_20_carry__4_n_6;
  wire rand_20_carry__4_n_7;
  wire rand_20_carry__5_n_0;
  wire rand_20_carry__5_n_4;
  wire rand_20_carry__5_n_5;
  wire rand_20_carry__5_n_6;
  wire rand_20_carry__5_n_7;
  wire rand_20_carry__6_n_5;
  wire rand_20_carry__6_n_6;
  wire rand_20_carry__6_n_7;
  wire rand_20_carry_i_1_n_0;
  wire rand_20_carry_i_2_n_0;
  wire rand_20_carry_n_0;
  wire rand_20_carry_n_4;
  wire rand_20_carry_n_5;
  wire rand_20_carry_n_6;
  wire rand_20_carry_n_7;
  wire rand_21__0_n_100;
  wire rand_21__0_n_101;
  wire rand_21__0_n_102;
  wire rand_21__0_n_103;
  wire rand_21__0_n_104;
  wire rand_21__0_n_105;
  wire rand_21__0_n_106;
  wire rand_21__0_n_107;
  wire rand_21__0_n_108;
  wire rand_21__0_n_109;
  wire rand_21__0_n_110;
  wire rand_21__0_n_111;
  wire rand_21__0_n_112;
  wire rand_21__0_n_113;
  wire rand_21__0_n_114;
  wire rand_21__0_n_115;
  wire rand_21__0_n_116;
  wire rand_21__0_n_117;
  wire rand_21__0_n_118;
  wire rand_21__0_n_119;
  wire rand_21__0_n_120;
  wire rand_21__0_n_121;
  wire rand_21__0_n_122;
  wire rand_21__0_n_123;
  wire rand_21__0_n_124;
  wire rand_21__0_n_125;
  wire rand_21__0_n_126;
  wire rand_21__0_n_127;
  wire rand_21__0_n_128;
  wire rand_21__0_n_129;
  wire rand_21__0_n_130;
  wire rand_21__0_n_131;
  wire rand_21__0_n_132;
  wire rand_21__0_n_133;
  wire rand_21__0_n_134;
  wire rand_21__0_n_135;
  wire rand_21__0_n_136;
  wire rand_21__0_n_137;
  wire rand_21__0_n_138;
  wire rand_21__0_n_139;
  wire rand_21__0_n_140;
  wire rand_21__0_n_141;
  wire rand_21__0_n_142;
  wire rand_21__0_n_143;
  wire rand_21__0_n_144;
  wire rand_21__0_n_145;
  wire rand_21__0_n_146;
  wire rand_21__0_n_147;
  wire rand_21__0_n_148;
  wire rand_21__0_n_149;
  wire rand_21__0_n_150;
  wire rand_21__0_n_151;
  wire rand_21__0_n_152;
  wire rand_21__0_n_153;
  wire rand_21__0_n_89;
  wire rand_21__0_n_90;
  wire rand_21__0_n_91;
  wire rand_21__0_n_92;
  wire rand_21__0_n_93;
  wire rand_21__0_n_94;
  wire rand_21__0_n_95;
  wire rand_21__0_n_96;
  wire rand_21__0_n_97;
  wire rand_21__0_n_98;
  wire rand_21__0_n_99;
  wire rand_21__1_n_100;
  wire rand_21__1_n_101;
  wire rand_21__1_n_102;
  wire rand_21__1_n_103;
  wire rand_21__1_n_104;
  wire rand_21__1_n_105;
  wire rand_21__1_n_91;
  wire rand_21__1_n_92;
  wire rand_21__1_n_93;
  wire rand_21__1_n_94;
  wire rand_21__1_n_95;
  wire rand_21__1_n_96;
  wire rand_21__1_n_97;
  wire rand_21__1_n_98;
  wire rand_21__1_n_99;
  wire rand_21_carry__0_i_1_n_0;
  wire rand_21_carry__0_i_2_n_0;
  wire rand_21_carry__0_i_3_n_0;
  wire rand_21_carry__0_i_4_n_0;
  wire rand_21_carry__0_n_0;
  wire rand_21_carry__0_n_4;
  wire rand_21_carry__0_n_5;
  wire rand_21_carry__0_n_6;
  wire rand_21_carry__0_n_7;
  wire rand_21_carry__1_i_1_n_0;
  wire rand_21_carry__1_i_2_n_0;
  wire rand_21_carry__1_i_3_n_0;
  wire rand_21_carry__1_i_4_n_0;
  wire rand_21_carry__1_n_0;
  wire rand_21_carry__1_n_4;
  wire rand_21_carry__1_n_5;
  wire rand_21_carry__1_n_6;
  wire rand_21_carry__1_n_7;
  wire rand_21_carry__2_i_1_n_0;
  wire rand_21_carry__2_i_2_n_0;
  wire rand_21_carry__2_i_3_n_0;
  wire rand_21_carry__2_i_4_n_0;
  wire rand_21_carry__2_n_4;
  wire rand_21_carry__2_n_5;
  wire rand_21_carry__2_n_6;
  wire rand_21_carry__2_n_7;
  wire rand_21_carry_i_1_n_0;
  wire rand_21_carry_i_2_n_0;
  wire rand_21_carry_i_3_n_0;
  wire rand_21_carry_n_0;
  wire rand_21_carry_n_4;
  wire rand_21_carry_n_5;
  wire rand_21_carry_n_6;
  wire rand_21_carry_n_7;
  wire rand_21_n_100;
  wire rand_21_n_101;
  wire rand_21_n_102;
  wire rand_21_n_103;
  wire rand_21_n_104;
  wire rand_21_n_105;
  wire rand_21_n_91;
  wire rand_21_n_92;
  wire rand_21_n_93;
  wire rand_21_n_94;
  wire rand_21_n_95;
  wire rand_21_n_96;
  wire rand_21_n_97;
  wire rand_21_n_98;
  wire rand_21_n_99;
  wire \rand_2[0]_i_1_n_0 ;
  wire [31:0]rand_3;
  wire rand_30_carry__0_i_4_n_0;
  wire rand_30_carry__0_n_0;
  wire rand_30_carry__0_n_4;
  wire rand_30_carry__0_n_5;
  wire rand_30_carry__0_n_6;
  wire rand_30_carry__0_n_7;
  wire rand_30_carry__1_i_1_n_0;
  wire rand_30_carry__1_n_0;
  wire rand_30_carry__1_n_4;
  wire rand_30_carry__1_n_5;
  wire rand_30_carry__1_n_6;
  wire rand_30_carry__1_n_7;
  wire rand_30_carry__2_i_4_n_0;
  wire rand_30_carry__2_n_0;
  wire rand_30_carry__2_n_4;
  wire rand_30_carry__2_n_5;
  wire rand_30_carry__2_n_6;
  wire rand_30_carry__2_n_7;
  wire rand_30_carry__3_n_0;
  wire rand_30_carry__3_n_4;
  wire rand_30_carry__3_n_5;
  wire rand_30_carry__3_n_6;
  wire rand_30_carry__3_n_7;
  wire rand_30_carry__4_n_0;
  wire rand_30_carry__4_n_4;
  wire rand_30_carry__4_n_5;
  wire rand_30_carry__4_n_6;
  wire rand_30_carry__4_n_7;
  wire rand_30_carry__5_n_0;
  wire rand_30_carry__5_n_4;
  wire rand_30_carry__5_n_5;
  wire rand_30_carry__5_n_6;
  wire rand_30_carry__5_n_7;
  wire rand_30_carry__6_n_5;
  wire rand_30_carry__6_n_6;
  wire rand_30_carry__6_n_7;
  wire rand_30_carry_i_1_n_0;
  wire rand_30_carry_i_2_n_0;
  wire rand_30_carry_n_0;
  wire rand_30_carry_n_4;
  wire rand_30_carry_n_5;
  wire rand_30_carry_n_6;
  wire rand_30_carry_n_7;
  wire rand_31__0_n_100;
  wire rand_31__0_n_101;
  wire rand_31__0_n_102;
  wire rand_31__0_n_103;
  wire rand_31__0_n_104;
  wire rand_31__0_n_105;
  wire rand_31__0_n_106;
  wire rand_31__0_n_107;
  wire rand_31__0_n_108;
  wire rand_31__0_n_109;
  wire rand_31__0_n_110;
  wire rand_31__0_n_111;
  wire rand_31__0_n_112;
  wire rand_31__0_n_113;
  wire rand_31__0_n_114;
  wire rand_31__0_n_115;
  wire rand_31__0_n_116;
  wire rand_31__0_n_117;
  wire rand_31__0_n_118;
  wire rand_31__0_n_119;
  wire rand_31__0_n_120;
  wire rand_31__0_n_121;
  wire rand_31__0_n_122;
  wire rand_31__0_n_123;
  wire rand_31__0_n_124;
  wire rand_31__0_n_125;
  wire rand_31__0_n_126;
  wire rand_31__0_n_127;
  wire rand_31__0_n_128;
  wire rand_31__0_n_129;
  wire rand_31__0_n_130;
  wire rand_31__0_n_131;
  wire rand_31__0_n_132;
  wire rand_31__0_n_133;
  wire rand_31__0_n_134;
  wire rand_31__0_n_135;
  wire rand_31__0_n_136;
  wire rand_31__0_n_137;
  wire rand_31__0_n_138;
  wire rand_31__0_n_139;
  wire rand_31__0_n_140;
  wire rand_31__0_n_141;
  wire rand_31__0_n_142;
  wire rand_31__0_n_143;
  wire rand_31__0_n_144;
  wire rand_31__0_n_145;
  wire rand_31__0_n_146;
  wire rand_31__0_n_147;
  wire rand_31__0_n_148;
  wire rand_31__0_n_149;
  wire rand_31__0_n_150;
  wire rand_31__0_n_151;
  wire rand_31__0_n_152;
  wire rand_31__0_n_153;
  wire rand_31__0_n_89;
  wire rand_31__0_n_90;
  wire rand_31__0_n_91;
  wire rand_31__0_n_92;
  wire rand_31__0_n_93;
  wire rand_31__0_n_94;
  wire rand_31__0_n_95;
  wire rand_31__0_n_96;
  wire rand_31__0_n_97;
  wire rand_31__0_n_98;
  wire rand_31__0_n_99;
  wire rand_31__1_n_100;
  wire rand_31__1_n_101;
  wire rand_31__1_n_102;
  wire rand_31__1_n_103;
  wire rand_31__1_n_104;
  wire rand_31__1_n_105;
  wire rand_31__1_n_91;
  wire rand_31__1_n_92;
  wire rand_31__1_n_93;
  wire rand_31__1_n_94;
  wire rand_31__1_n_95;
  wire rand_31__1_n_96;
  wire rand_31__1_n_97;
  wire rand_31__1_n_98;
  wire rand_31__1_n_99;
  wire rand_31_carry__0_i_1_n_0;
  wire rand_31_carry__0_i_2_n_0;
  wire rand_31_carry__0_i_3_n_0;
  wire rand_31_carry__0_i_4_n_0;
  wire rand_31_carry__0_n_0;
  wire rand_31_carry__0_n_4;
  wire rand_31_carry__0_n_5;
  wire rand_31_carry__0_n_6;
  wire rand_31_carry__0_n_7;
  wire rand_31_carry__1_i_1_n_0;
  wire rand_31_carry__1_i_2_n_0;
  wire rand_31_carry__1_i_3_n_0;
  wire rand_31_carry__1_i_4_n_0;
  wire rand_31_carry__1_n_0;
  wire rand_31_carry__1_n_4;
  wire rand_31_carry__1_n_5;
  wire rand_31_carry__1_n_6;
  wire rand_31_carry__1_n_7;
  wire rand_31_carry__2_i_1_n_0;
  wire rand_31_carry__2_i_2_n_0;
  wire rand_31_carry__2_i_3_n_0;
  wire rand_31_carry__2_i_4_n_0;
  wire rand_31_carry__2_n_4;
  wire rand_31_carry__2_n_5;
  wire rand_31_carry__2_n_6;
  wire rand_31_carry__2_n_7;
  wire rand_31_carry_i_1_n_0;
  wire rand_31_carry_i_2_n_0;
  wire rand_31_carry_i_3_n_0;
  wire rand_31_carry_n_0;
  wire rand_31_carry_n_4;
  wire rand_31_carry_n_5;
  wire rand_31_carry_n_6;
  wire rand_31_carry_n_7;
  wire rand_31_n_100;
  wire rand_31_n_101;
  wire rand_31_n_102;
  wire rand_31_n_103;
  wire rand_31_n_104;
  wire rand_31_n_105;
  wire rand_31_n_91;
  wire rand_31_n_92;
  wire rand_31_n_93;
  wire rand_31_n_94;
  wire rand_31_n_95;
  wire rand_31_n_96;
  wire rand_31_n_97;
  wire rand_31_n_98;
  wire rand_31_n_99;
  wire \rand_3[0]_i_1_n_0 ;
  wire [31:0]rand_4;
  wire rand_40_carry__0_i_4_n_0;
  wire rand_40_carry__0_n_0;
  wire rand_40_carry__0_n_4;
  wire rand_40_carry__0_n_5;
  wire rand_40_carry__0_n_6;
  wire rand_40_carry__0_n_7;
  wire rand_40_carry__1_i_1_n_0;
  wire rand_40_carry__1_n_0;
  wire rand_40_carry__1_n_4;
  wire rand_40_carry__1_n_5;
  wire rand_40_carry__1_n_6;
  wire rand_40_carry__1_n_7;
  wire rand_40_carry__2_i_4_n_0;
  wire rand_40_carry__2_n_0;
  wire rand_40_carry__2_n_4;
  wire rand_40_carry__2_n_5;
  wire rand_40_carry__2_n_6;
  wire rand_40_carry__2_n_7;
  wire rand_40_carry__3_n_0;
  wire rand_40_carry__3_n_4;
  wire rand_40_carry__3_n_5;
  wire rand_40_carry__3_n_6;
  wire rand_40_carry__3_n_7;
  wire rand_40_carry__4_n_0;
  wire rand_40_carry__4_n_4;
  wire rand_40_carry__4_n_5;
  wire rand_40_carry__4_n_6;
  wire rand_40_carry__4_n_7;
  wire rand_40_carry__5_n_0;
  wire rand_40_carry__5_n_4;
  wire rand_40_carry__5_n_5;
  wire rand_40_carry__5_n_6;
  wire rand_40_carry__5_n_7;
  wire rand_40_carry__6_n_5;
  wire rand_40_carry__6_n_6;
  wire rand_40_carry__6_n_7;
  wire rand_40_carry_i_1_n_0;
  wire rand_40_carry_i_2_n_0;
  wire rand_40_carry_n_0;
  wire rand_40_carry_n_4;
  wire rand_40_carry_n_5;
  wire rand_40_carry_n_6;
  wire rand_40_carry_n_7;
  wire rand_41__0_n_100;
  wire rand_41__0_n_101;
  wire rand_41__0_n_102;
  wire rand_41__0_n_103;
  wire rand_41__0_n_104;
  wire rand_41__0_n_105;
  wire rand_41__0_n_106;
  wire rand_41__0_n_107;
  wire rand_41__0_n_108;
  wire rand_41__0_n_109;
  wire rand_41__0_n_110;
  wire rand_41__0_n_111;
  wire rand_41__0_n_112;
  wire rand_41__0_n_113;
  wire rand_41__0_n_114;
  wire rand_41__0_n_115;
  wire rand_41__0_n_116;
  wire rand_41__0_n_117;
  wire rand_41__0_n_118;
  wire rand_41__0_n_119;
  wire rand_41__0_n_120;
  wire rand_41__0_n_121;
  wire rand_41__0_n_122;
  wire rand_41__0_n_123;
  wire rand_41__0_n_124;
  wire rand_41__0_n_125;
  wire rand_41__0_n_126;
  wire rand_41__0_n_127;
  wire rand_41__0_n_128;
  wire rand_41__0_n_129;
  wire rand_41__0_n_130;
  wire rand_41__0_n_131;
  wire rand_41__0_n_132;
  wire rand_41__0_n_133;
  wire rand_41__0_n_134;
  wire rand_41__0_n_135;
  wire rand_41__0_n_136;
  wire rand_41__0_n_137;
  wire rand_41__0_n_138;
  wire rand_41__0_n_139;
  wire rand_41__0_n_140;
  wire rand_41__0_n_141;
  wire rand_41__0_n_142;
  wire rand_41__0_n_143;
  wire rand_41__0_n_144;
  wire rand_41__0_n_145;
  wire rand_41__0_n_146;
  wire rand_41__0_n_147;
  wire rand_41__0_n_148;
  wire rand_41__0_n_149;
  wire rand_41__0_n_150;
  wire rand_41__0_n_151;
  wire rand_41__0_n_152;
  wire rand_41__0_n_153;
  wire rand_41__0_n_89;
  wire rand_41__0_n_90;
  wire rand_41__0_n_91;
  wire rand_41__0_n_92;
  wire rand_41__0_n_93;
  wire rand_41__0_n_94;
  wire rand_41__0_n_95;
  wire rand_41__0_n_96;
  wire rand_41__0_n_97;
  wire rand_41__0_n_98;
  wire rand_41__0_n_99;
  wire rand_41__1_n_100;
  wire rand_41__1_n_101;
  wire rand_41__1_n_102;
  wire rand_41__1_n_103;
  wire rand_41__1_n_104;
  wire rand_41__1_n_105;
  wire rand_41__1_n_91;
  wire rand_41__1_n_92;
  wire rand_41__1_n_93;
  wire rand_41__1_n_94;
  wire rand_41__1_n_95;
  wire rand_41__1_n_96;
  wire rand_41__1_n_97;
  wire rand_41__1_n_98;
  wire rand_41__1_n_99;
  wire rand_41_carry__0_i_1_n_0;
  wire rand_41_carry__0_i_2_n_0;
  wire rand_41_carry__0_i_3_n_0;
  wire rand_41_carry__0_i_4_n_0;
  wire rand_41_carry__0_n_0;
  wire rand_41_carry__0_n_4;
  wire rand_41_carry__0_n_5;
  wire rand_41_carry__0_n_6;
  wire rand_41_carry__0_n_7;
  wire rand_41_carry__1_i_1_n_0;
  wire rand_41_carry__1_i_2_n_0;
  wire rand_41_carry__1_i_3_n_0;
  wire rand_41_carry__1_i_4_n_0;
  wire rand_41_carry__1_n_0;
  wire rand_41_carry__1_n_4;
  wire rand_41_carry__1_n_5;
  wire rand_41_carry__1_n_6;
  wire rand_41_carry__1_n_7;
  wire rand_41_carry__2_i_1_n_0;
  wire rand_41_carry__2_i_2_n_0;
  wire rand_41_carry__2_i_3_n_0;
  wire rand_41_carry__2_i_4_n_0;
  wire rand_41_carry__2_n_4;
  wire rand_41_carry__2_n_5;
  wire rand_41_carry__2_n_6;
  wire rand_41_carry__2_n_7;
  wire rand_41_carry_i_1_n_0;
  wire rand_41_carry_i_2_n_0;
  wire rand_41_carry_i_3_n_0;
  wire rand_41_carry_n_0;
  wire rand_41_carry_n_4;
  wire rand_41_carry_n_5;
  wire rand_41_carry_n_6;
  wire rand_41_carry_n_7;
  wire rand_41_n_100;
  wire rand_41_n_101;
  wire rand_41_n_102;
  wire rand_41_n_103;
  wire rand_41_n_104;
  wire rand_41_n_105;
  wire rand_41_n_91;
  wire rand_41_n_92;
  wire rand_41_n_93;
  wire rand_41_n_94;
  wire rand_41_n_95;
  wire rand_41_n_96;
  wire rand_41_n_97;
  wire rand_41_n_98;
  wire rand_41_n_99;
  wire \rand_4[0]_i_1_n_0 ;
  wire [31:0]rand_5;
  wire rand_50_carry__0_i_4_n_0;
  wire rand_50_carry__0_n_0;
  wire rand_50_carry__0_n_4;
  wire rand_50_carry__0_n_5;
  wire rand_50_carry__0_n_6;
  wire rand_50_carry__0_n_7;
  wire rand_50_carry__1_i_1_n_0;
  wire rand_50_carry__1_n_0;
  wire rand_50_carry__1_n_4;
  wire rand_50_carry__1_n_5;
  wire rand_50_carry__1_n_6;
  wire rand_50_carry__1_n_7;
  wire rand_50_carry__2_i_4_n_0;
  wire rand_50_carry__2_n_0;
  wire rand_50_carry__2_n_4;
  wire rand_50_carry__2_n_5;
  wire rand_50_carry__2_n_6;
  wire rand_50_carry__2_n_7;
  wire rand_50_carry__3_n_0;
  wire rand_50_carry__3_n_4;
  wire rand_50_carry__3_n_5;
  wire rand_50_carry__3_n_6;
  wire rand_50_carry__3_n_7;
  wire rand_50_carry__4_n_0;
  wire rand_50_carry__4_n_4;
  wire rand_50_carry__4_n_5;
  wire rand_50_carry__4_n_6;
  wire rand_50_carry__4_n_7;
  wire rand_50_carry__5_n_0;
  wire rand_50_carry__5_n_4;
  wire rand_50_carry__5_n_5;
  wire rand_50_carry__5_n_6;
  wire rand_50_carry__5_n_7;
  wire rand_50_carry__6_n_5;
  wire rand_50_carry__6_n_6;
  wire rand_50_carry__6_n_7;
  wire rand_50_carry_i_1_n_0;
  wire rand_50_carry_i_2_n_0;
  wire rand_50_carry_n_0;
  wire rand_50_carry_n_4;
  wire rand_50_carry_n_5;
  wire rand_50_carry_n_6;
  wire rand_50_carry_n_7;
  wire rand_51__0_n_100;
  wire rand_51__0_n_101;
  wire rand_51__0_n_102;
  wire rand_51__0_n_103;
  wire rand_51__0_n_104;
  wire rand_51__0_n_105;
  wire rand_51__0_n_106;
  wire rand_51__0_n_107;
  wire rand_51__0_n_108;
  wire rand_51__0_n_109;
  wire rand_51__0_n_110;
  wire rand_51__0_n_111;
  wire rand_51__0_n_112;
  wire rand_51__0_n_113;
  wire rand_51__0_n_114;
  wire rand_51__0_n_115;
  wire rand_51__0_n_116;
  wire rand_51__0_n_117;
  wire rand_51__0_n_118;
  wire rand_51__0_n_119;
  wire rand_51__0_n_120;
  wire rand_51__0_n_121;
  wire rand_51__0_n_122;
  wire rand_51__0_n_123;
  wire rand_51__0_n_124;
  wire rand_51__0_n_125;
  wire rand_51__0_n_126;
  wire rand_51__0_n_127;
  wire rand_51__0_n_128;
  wire rand_51__0_n_129;
  wire rand_51__0_n_130;
  wire rand_51__0_n_131;
  wire rand_51__0_n_132;
  wire rand_51__0_n_133;
  wire rand_51__0_n_134;
  wire rand_51__0_n_135;
  wire rand_51__0_n_136;
  wire rand_51__0_n_137;
  wire rand_51__0_n_138;
  wire rand_51__0_n_139;
  wire rand_51__0_n_140;
  wire rand_51__0_n_141;
  wire rand_51__0_n_142;
  wire rand_51__0_n_143;
  wire rand_51__0_n_144;
  wire rand_51__0_n_145;
  wire rand_51__0_n_146;
  wire rand_51__0_n_147;
  wire rand_51__0_n_148;
  wire rand_51__0_n_149;
  wire rand_51__0_n_150;
  wire rand_51__0_n_151;
  wire rand_51__0_n_152;
  wire rand_51__0_n_153;
  wire rand_51__0_n_89;
  wire rand_51__0_n_90;
  wire rand_51__0_n_91;
  wire rand_51__0_n_92;
  wire rand_51__0_n_93;
  wire rand_51__0_n_94;
  wire rand_51__0_n_95;
  wire rand_51__0_n_96;
  wire rand_51__0_n_97;
  wire rand_51__0_n_98;
  wire rand_51__0_n_99;
  wire rand_51__1_n_100;
  wire rand_51__1_n_101;
  wire rand_51__1_n_102;
  wire rand_51__1_n_103;
  wire rand_51__1_n_104;
  wire rand_51__1_n_105;
  wire rand_51__1_n_91;
  wire rand_51__1_n_92;
  wire rand_51__1_n_93;
  wire rand_51__1_n_94;
  wire rand_51__1_n_95;
  wire rand_51__1_n_96;
  wire rand_51__1_n_97;
  wire rand_51__1_n_98;
  wire rand_51__1_n_99;
  wire rand_51_carry__0_i_1_n_0;
  wire rand_51_carry__0_i_2_n_0;
  wire rand_51_carry__0_i_3_n_0;
  wire rand_51_carry__0_i_4_n_0;
  wire rand_51_carry__0_n_0;
  wire rand_51_carry__0_n_4;
  wire rand_51_carry__0_n_5;
  wire rand_51_carry__0_n_6;
  wire rand_51_carry__0_n_7;
  wire rand_51_carry__1_i_1_n_0;
  wire rand_51_carry__1_i_2_n_0;
  wire rand_51_carry__1_i_3_n_0;
  wire rand_51_carry__1_i_4_n_0;
  wire rand_51_carry__1_n_0;
  wire rand_51_carry__1_n_4;
  wire rand_51_carry__1_n_5;
  wire rand_51_carry__1_n_6;
  wire rand_51_carry__1_n_7;
  wire rand_51_carry__2_i_1_n_0;
  wire rand_51_carry__2_i_2_n_0;
  wire rand_51_carry__2_i_3_n_0;
  wire rand_51_carry__2_i_4_n_0;
  wire rand_51_carry__2_n_4;
  wire rand_51_carry__2_n_5;
  wire rand_51_carry__2_n_6;
  wire rand_51_carry__2_n_7;
  wire rand_51_carry_i_1_n_0;
  wire rand_51_carry_i_2_n_0;
  wire rand_51_carry_i_3_n_0;
  wire rand_51_carry_n_0;
  wire rand_51_carry_n_4;
  wire rand_51_carry_n_5;
  wire rand_51_carry_n_6;
  wire rand_51_carry_n_7;
  wire rand_51_n_100;
  wire rand_51_n_101;
  wire rand_51_n_102;
  wire rand_51_n_103;
  wire rand_51_n_104;
  wire rand_51_n_105;
  wire rand_51_n_91;
  wire rand_51_n_92;
  wire rand_51_n_93;
  wire rand_51_n_94;
  wire rand_51_n_95;
  wire rand_51_n_96;
  wire rand_51_n_97;
  wire rand_51_n_98;
  wire rand_51_n_99;
  wire \rand_5[0]_i_1_n_0 ;
  wire [31:0]rand_6;
  wire rand_60_carry__0_i_4_n_0;
  wire rand_60_carry__0_n_0;
  wire rand_60_carry__0_n_4;
  wire rand_60_carry__0_n_5;
  wire rand_60_carry__0_n_6;
  wire rand_60_carry__0_n_7;
  wire rand_60_carry__1_i_1_n_0;
  wire rand_60_carry__1_n_0;
  wire rand_60_carry__1_n_4;
  wire rand_60_carry__1_n_5;
  wire rand_60_carry__1_n_6;
  wire rand_60_carry__1_n_7;
  wire rand_60_carry__2_i_4_n_0;
  wire rand_60_carry__2_n_0;
  wire rand_60_carry__2_n_4;
  wire rand_60_carry__2_n_5;
  wire rand_60_carry__2_n_6;
  wire rand_60_carry__2_n_7;
  wire rand_60_carry__3_n_0;
  wire rand_60_carry__3_n_4;
  wire rand_60_carry__3_n_5;
  wire rand_60_carry__3_n_6;
  wire rand_60_carry__3_n_7;
  wire rand_60_carry__4_n_0;
  wire rand_60_carry__4_n_4;
  wire rand_60_carry__4_n_5;
  wire rand_60_carry__4_n_6;
  wire rand_60_carry__4_n_7;
  wire rand_60_carry__5_n_0;
  wire rand_60_carry__5_n_4;
  wire rand_60_carry__5_n_5;
  wire rand_60_carry__5_n_6;
  wire rand_60_carry__5_n_7;
  wire rand_60_carry__6_n_5;
  wire rand_60_carry__6_n_6;
  wire rand_60_carry__6_n_7;
  wire rand_60_carry_i_1_n_0;
  wire rand_60_carry_i_2_n_0;
  wire rand_60_carry_n_0;
  wire rand_60_carry_n_4;
  wire rand_60_carry_n_5;
  wire rand_60_carry_n_6;
  wire rand_60_carry_n_7;
  wire rand_61__0_n_100;
  wire rand_61__0_n_101;
  wire rand_61__0_n_102;
  wire rand_61__0_n_103;
  wire rand_61__0_n_104;
  wire rand_61__0_n_105;
  wire rand_61__0_n_106;
  wire rand_61__0_n_107;
  wire rand_61__0_n_108;
  wire rand_61__0_n_109;
  wire rand_61__0_n_110;
  wire rand_61__0_n_111;
  wire rand_61__0_n_112;
  wire rand_61__0_n_113;
  wire rand_61__0_n_114;
  wire rand_61__0_n_115;
  wire rand_61__0_n_116;
  wire rand_61__0_n_117;
  wire rand_61__0_n_118;
  wire rand_61__0_n_119;
  wire rand_61__0_n_120;
  wire rand_61__0_n_121;
  wire rand_61__0_n_122;
  wire rand_61__0_n_123;
  wire rand_61__0_n_124;
  wire rand_61__0_n_125;
  wire rand_61__0_n_126;
  wire rand_61__0_n_127;
  wire rand_61__0_n_128;
  wire rand_61__0_n_129;
  wire rand_61__0_n_130;
  wire rand_61__0_n_131;
  wire rand_61__0_n_132;
  wire rand_61__0_n_133;
  wire rand_61__0_n_134;
  wire rand_61__0_n_135;
  wire rand_61__0_n_136;
  wire rand_61__0_n_137;
  wire rand_61__0_n_138;
  wire rand_61__0_n_139;
  wire rand_61__0_n_140;
  wire rand_61__0_n_141;
  wire rand_61__0_n_142;
  wire rand_61__0_n_143;
  wire rand_61__0_n_144;
  wire rand_61__0_n_145;
  wire rand_61__0_n_146;
  wire rand_61__0_n_147;
  wire rand_61__0_n_148;
  wire rand_61__0_n_149;
  wire rand_61__0_n_150;
  wire rand_61__0_n_151;
  wire rand_61__0_n_152;
  wire rand_61__0_n_153;
  wire rand_61__0_n_89;
  wire rand_61__0_n_90;
  wire rand_61__0_n_91;
  wire rand_61__0_n_92;
  wire rand_61__0_n_93;
  wire rand_61__0_n_94;
  wire rand_61__0_n_95;
  wire rand_61__0_n_96;
  wire rand_61__0_n_97;
  wire rand_61__0_n_98;
  wire rand_61__0_n_99;
  wire rand_61__1_n_100;
  wire rand_61__1_n_101;
  wire rand_61__1_n_102;
  wire rand_61__1_n_103;
  wire rand_61__1_n_104;
  wire rand_61__1_n_105;
  wire rand_61__1_n_91;
  wire rand_61__1_n_92;
  wire rand_61__1_n_93;
  wire rand_61__1_n_94;
  wire rand_61__1_n_95;
  wire rand_61__1_n_96;
  wire rand_61__1_n_97;
  wire rand_61__1_n_98;
  wire rand_61__1_n_99;
  wire rand_61_carry__0_i_1_n_0;
  wire rand_61_carry__0_i_2_n_0;
  wire rand_61_carry__0_i_3_n_0;
  wire rand_61_carry__0_i_4_n_0;
  wire rand_61_carry__0_n_0;
  wire rand_61_carry__0_n_4;
  wire rand_61_carry__0_n_5;
  wire rand_61_carry__0_n_6;
  wire rand_61_carry__0_n_7;
  wire rand_61_carry__1_i_1_n_0;
  wire rand_61_carry__1_i_2_n_0;
  wire rand_61_carry__1_i_3_n_0;
  wire rand_61_carry__1_i_4_n_0;
  wire rand_61_carry__1_n_0;
  wire rand_61_carry__1_n_4;
  wire rand_61_carry__1_n_5;
  wire rand_61_carry__1_n_6;
  wire rand_61_carry__1_n_7;
  wire rand_61_carry__2_i_1_n_0;
  wire rand_61_carry__2_i_2_n_0;
  wire rand_61_carry__2_i_3_n_0;
  wire rand_61_carry__2_i_4_n_0;
  wire rand_61_carry__2_n_4;
  wire rand_61_carry__2_n_5;
  wire rand_61_carry__2_n_6;
  wire rand_61_carry__2_n_7;
  wire rand_61_carry_i_1_n_0;
  wire rand_61_carry_i_2_n_0;
  wire rand_61_carry_i_3_n_0;
  wire rand_61_carry_n_0;
  wire rand_61_carry_n_4;
  wire rand_61_carry_n_5;
  wire rand_61_carry_n_6;
  wire rand_61_carry_n_7;
  wire rand_61_n_100;
  wire rand_61_n_101;
  wire rand_61_n_102;
  wire rand_61_n_103;
  wire rand_61_n_104;
  wire rand_61_n_105;
  wire rand_61_n_91;
  wire rand_61_n_92;
  wire rand_61_n_93;
  wire rand_61_n_94;
  wire rand_61_n_95;
  wire rand_61_n_96;
  wire rand_61_n_97;
  wire rand_61_n_98;
  wire rand_61_n_99;
  wire \rand_6[0]_i_1_n_0 ;
  wire [31:0]rand_7;
  wire rand_70_carry__0_i_4_n_0;
  wire rand_70_carry__0_n_0;
  wire rand_70_carry__0_n_4;
  wire rand_70_carry__0_n_5;
  wire rand_70_carry__0_n_6;
  wire rand_70_carry__0_n_7;
  wire rand_70_carry__1_i_1_n_0;
  wire rand_70_carry__1_n_0;
  wire rand_70_carry__1_n_4;
  wire rand_70_carry__1_n_5;
  wire rand_70_carry__1_n_6;
  wire rand_70_carry__1_n_7;
  wire rand_70_carry__2_i_4_n_0;
  wire rand_70_carry__2_n_0;
  wire rand_70_carry__2_n_4;
  wire rand_70_carry__2_n_5;
  wire rand_70_carry__2_n_6;
  wire rand_70_carry__2_n_7;
  wire rand_70_carry__3_n_0;
  wire rand_70_carry__3_n_4;
  wire rand_70_carry__3_n_5;
  wire rand_70_carry__3_n_6;
  wire rand_70_carry__3_n_7;
  wire rand_70_carry__4_n_0;
  wire rand_70_carry__4_n_4;
  wire rand_70_carry__4_n_5;
  wire rand_70_carry__4_n_6;
  wire rand_70_carry__4_n_7;
  wire rand_70_carry__5_n_0;
  wire rand_70_carry__5_n_4;
  wire rand_70_carry__5_n_5;
  wire rand_70_carry__5_n_6;
  wire rand_70_carry__5_n_7;
  wire rand_70_carry__6_n_5;
  wire rand_70_carry__6_n_6;
  wire rand_70_carry__6_n_7;
  wire rand_70_carry_i_1_n_0;
  wire rand_70_carry_i_2_n_0;
  wire rand_70_carry_n_0;
  wire rand_70_carry_n_4;
  wire rand_70_carry_n_5;
  wire rand_70_carry_n_6;
  wire rand_70_carry_n_7;
  wire rand_71__0_n_100;
  wire rand_71__0_n_101;
  wire rand_71__0_n_102;
  wire rand_71__0_n_103;
  wire rand_71__0_n_104;
  wire rand_71__0_n_105;
  wire rand_71__0_n_106;
  wire rand_71__0_n_107;
  wire rand_71__0_n_108;
  wire rand_71__0_n_109;
  wire rand_71__0_n_110;
  wire rand_71__0_n_111;
  wire rand_71__0_n_112;
  wire rand_71__0_n_113;
  wire rand_71__0_n_114;
  wire rand_71__0_n_115;
  wire rand_71__0_n_116;
  wire rand_71__0_n_117;
  wire rand_71__0_n_118;
  wire rand_71__0_n_119;
  wire rand_71__0_n_120;
  wire rand_71__0_n_121;
  wire rand_71__0_n_122;
  wire rand_71__0_n_123;
  wire rand_71__0_n_124;
  wire rand_71__0_n_125;
  wire rand_71__0_n_126;
  wire rand_71__0_n_127;
  wire rand_71__0_n_128;
  wire rand_71__0_n_129;
  wire rand_71__0_n_130;
  wire rand_71__0_n_131;
  wire rand_71__0_n_132;
  wire rand_71__0_n_133;
  wire rand_71__0_n_134;
  wire rand_71__0_n_135;
  wire rand_71__0_n_136;
  wire rand_71__0_n_137;
  wire rand_71__0_n_138;
  wire rand_71__0_n_139;
  wire rand_71__0_n_140;
  wire rand_71__0_n_141;
  wire rand_71__0_n_142;
  wire rand_71__0_n_143;
  wire rand_71__0_n_144;
  wire rand_71__0_n_145;
  wire rand_71__0_n_146;
  wire rand_71__0_n_147;
  wire rand_71__0_n_148;
  wire rand_71__0_n_149;
  wire rand_71__0_n_150;
  wire rand_71__0_n_151;
  wire rand_71__0_n_152;
  wire rand_71__0_n_153;
  wire rand_71__0_n_89;
  wire rand_71__0_n_90;
  wire rand_71__0_n_91;
  wire rand_71__0_n_92;
  wire rand_71__0_n_93;
  wire rand_71__0_n_94;
  wire rand_71__0_n_95;
  wire rand_71__0_n_96;
  wire rand_71__0_n_97;
  wire rand_71__0_n_98;
  wire rand_71__0_n_99;
  wire rand_71__1_n_100;
  wire rand_71__1_n_101;
  wire rand_71__1_n_102;
  wire rand_71__1_n_103;
  wire rand_71__1_n_104;
  wire rand_71__1_n_105;
  wire rand_71__1_n_91;
  wire rand_71__1_n_92;
  wire rand_71__1_n_93;
  wire rand_71__1_n_94;
  wire rand_71__1_n_95;
  wire rand_71__1_n_96;
  wire rand_71__1_n_97;
  wire rand_71__1_n_98;
  wire rand_71__1_n_99;
  wire rand_71_carry__0_i_1_n_0;
  wire rand_71_carry__0_i_2_n_0;
  wire rand_71_carry__0_i_3_n_0;
  wire rand_71_carry__0_i_4_n_0;
  wire rand_71_carry__0_n_0;
  wire rand_71_carry__0_n_4;
  wire rand_71_carry__0_n_5;
  wire rand_71_carry__0_n_6;
  wire rand_71_carry__0_n_7;
  wire rand_71_carry__1_i_1_n_0;
  wire rand_71_carry__1_i_2_n_0;
  wire rand_71_carry__1_i_3_n_0;
  wire rand_71_carry__1_i_4_n_0;
  wire rand_71_carry__1_n_0;
  wire rand_71_carry__1_n_4;
  wire rand_71_carry__1_n_5;
  wire rand_71_carry__1_n_6;
  wire rand_71_carry__1_n_7;
  wire rand_71_carry__2_i_1_n_0;
  wire rand_71_carry__2_i_2_n_0;
  wire rand_71_carry__2_i_3_n_0;
  wire rand_71_carry__2_i_4_n_0;
  wire rand_71_carry__2_n_4;
  wire rand_71_carry__2_n_5;
  wire rand_71_carry__2_n_6;
  wire rand_71_carry__2_n_7;
  wire rand_71_carry_i_1_n_0;
  wire rand_71_carry_i_2_n_0;
  wire rand_71_carry_i_3_n_0;
  wire rand_71_carry_n_0;
  wire rand_71_carry_n_4;
  wire rand_71_carry_n_5;
  wire rand_71_carry_n_6;
  wire rand_71_carry_n_7;
  wire rand_71_n_100;
  wire rand_71_n_101;
  wire rand_71_n_102;
  wire rand_71_n_103;
  wire rand_71_n_104;
  wire rand_71_n_105;
  wire rand_71_n_91;
  wire rand_71_n_92;
  wire rand_71_n_93;
  wire rand_71_n_94;
  wire rand_71_n_95;
  wire rand_71_n_96;
  wire rand_71_n_97;
  wire rand_71_n_98;
  wire rand_71_n_99;
  wire \rand_7[0]_i_1_n_0 ;
  wire \rand_7[13]_repN ;
  wire \rand_7[1]_repN ;
  wire \rand_7[3]_repN ;
  wire to_std;
  wire x_carry__0_i_1_n_0;
  wire x_carry__0_i_2_n_0;
  wire x_carry__0_i_3_n_0;
  wire x_carry__0_i_4_n_0;
  wire x_carry__0_i_5_n_0;
  wire x_carry__0_i_6_n_0;
  wire x_carry__0_i_7_n_0;
  wire x_carry__0_i_8_n_0;
  wire x_carry__0_n_0;
  wire x_carry__1_i_1_n_0;
  wire x_carry__1_i_2_n_0;
  wire x_carry__1_i_3_n_0;
  wire x_carry__1_i_4_n_0;
  wire x_carry__1_i_5_n_0;
  wire x_carry__1_i_6_n_0;
  wire x_carry__1_i_7_n_0;
  wire x_carry__1_i_8_n_0;
  wire x_carry__1_n_0;
  wire x_carry__2_i_1_n_0;
  wire x_carry__2_i_2_n_0;
  wire x_carry__2_i_3_n_0;
  wire x_carry__2_i_4_n_0;
  wire x_carry__2_i_5_n_0;
  wire x_carry__2_i_6_n_0;
  wire x_carry__2_i_7_n_0;
  wire x_carry__2_i_8_n_0;
  wire x_carry_i_1_n_0;
  wire x_carry_i_2_n_0;
  wire x_carry_i_3_n_0;
  wire x_carry_i_4_n_0;
  wire x_carry_i_5_n_0;
  wire x_carry_i_6_n_0;
  wire x_carry_i_7_n_0;
  wire x_carry_i_8_n_0;
  wire x_carry_n_0;
  wire \x_inferred__0/i__carry__0_n_0 ;
  wire \x_inferred__0/i__carry__1_n_0 ;
  wire \x_inferred__0/i__carry__2_n_0 ;
  wire \x_inferred__0/i__carry_n_0 ;
  wire \x_inferred__1/i__carry__0_n_0 ;
  wire \x_inferred__1/i__carry__1_n_0 ;
  wire \x_inferred__1/i__carry__2_n_0 ;
  wire \x_inferred__1/i__carry_n_0 ;
  wire \x_inferred__2/i__carry__0_n_0 ;
  wire \x_inferred__2/i__carry__1_n_0 ;
  wire \x_inferred__2/i__carry__2_n_0 ;
  wire \x_inferred__2/i__carry_n_0 ;
  wire \x_inferred__3/i__carry__0_n_0 ;
  wire \x_inferred__3/i__carry__1_n_0 ;
  wire \x_inferred__3/i__carry__2_n_0 ;
  wire \x_inferred__3/i__carry_n_0 ;
  wire \x_inferred__4/i__carry__0_n_0 ;
  wire \x_inferred__4/i__carry__1_n_0 ;
  wire \x_inferred__4/i__carry__2_n_0 ;
  wire \x_inferred__4/i__carry_n_0 ;
  wire \x_inferred__5/i__carry__0_n_0 ;
  wire \x_inferred__5/i__carry__1_n_0 ;
  wire \x_inferred__5/i__carry__2_n_0 ;
  wire \x_inferred__5/i__carry_n_0 ;
  wire \x_inferred__6/i__carry__0_n_0 ;
  wire \x_inferred__6/i__carry__1_n_0 ;
  wire \x_inferred__6/i__carry__2_n_0 ;
  wire \x_inferred__6/i__carry_n_0 ;
  wire [2:0]NLW_rand_00_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_00_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_00_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_00_carry__6_O_UNCONNECTED;
  wire NLW_rand_01_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_01_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_01_OVERFLOW_UNCONNECTED;
  wire NLW_rand_01_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_01_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_01_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_01_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_01_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_01_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_01_P_UNCONNECTED;
  wire [47:0]NLW_rand_01_PCOUT_UNCONNECTED;
  wire NLW_rand_01__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_01__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_01__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_01__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_01__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_01__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_01__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_01__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_01__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_01__0_P_UNCONNECTED;
  wire NLW_rand_01__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_01__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_01__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_01__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_01__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_01__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_01__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_01__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_01__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_01__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_01__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_01_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_01_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_01_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_01_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_10_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_10_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_10_carry__6_O_UNCONNECTED;
  wire NLW_rand_11_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_11_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_11_OVERFLOW_UNCONNECTED;
  wire NLW_rand_11_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_11_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_11_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_11_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_11_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_11_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_11_P_UNCONNECTED;
  wire [47:0]NLW_rand_11_PCOUT_UNCONNECTED;
  wire NLW_rand_11__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_11__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_11__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_11__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_11__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_11__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_11__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_11__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_11__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_11__0_P_UNCONNECTED;
  wire NLW_rand_11__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_11__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_11__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_11__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_11__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_11__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_11__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_11__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_11__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_11__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_11__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_11_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_11_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_11_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_11_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_20_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_20_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_20_carry__6_O_UNCONNECTED;
  wire NLW_rand_21_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_21_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_21_OVERFLOW_UNCONNECTED;
  wire NLW_rand_21_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_21_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_21_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_21_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_21_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_21_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_21_P_UNCONNECTED;
  wire [47:0]NLW_rand_21_PCOUT_UNCONNECTED;
  wire NLW_rand_21__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_21__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_21__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_21__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_21__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_21__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_21__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_21__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_21__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_21__0_P_UNCONNECTED;
  wire NLW_rand_21__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_21__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_21__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_21__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_21__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_21__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_21__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_21__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_21__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_21__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_21__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_21_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_21_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_21_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_21_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_30_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_30_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_30_carry__6_O_UNCONNECTED;
  wire NLW_rand_31_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_31_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_31_OVERFLOW_UNCONNECTED;
  wire NLW_rand_31_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_31_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_31_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_31_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_31_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_31_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_31_P_UNCONNECTED;
  wire [47:0]NLW_rand_31_PCOUT_UNCONNECTED;
  wire NLW_rand_31__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_31__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_31__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_31__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_31__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_31__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_31__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_31__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_31__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_31__0_P_UNCONNECTED;
  wire NLW_rand_31__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_31__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_31__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_31__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_31__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_31__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_31__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_31__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_31__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_31__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_31__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_31_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_31_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_31_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_31_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_40_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_40_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_40_carry__6_O_UNCONNECTED;
  wire NLW_rand_41_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_41_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_41_OVERFLOW_UNCONNECTED;
  wire NLW_rand_41_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_41_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_41_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_41_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_41_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_41_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_41_P_UNCONNECTED;
  wire [47:0]NLW_rand_41_PCOUT_UNCONNECTED;
  wire NLW_rand_41__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_41__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_41__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_41__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_41__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_41__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_41__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_41__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_41__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_41__0_P_UNCONNECTED;
  wire NLW_rand_41__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_41__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_41__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_41__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_41__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_41__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_41__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_41__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_41__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_41__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_41__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_41_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_41_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_41_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_41_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_50_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_50_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_50_carry__6_O_UNCONNECTED;
  wire NLW_rand_51_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_51_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_51_OVERFLOW_UNCONNECTED;
  wire NLW_rand_51_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_51_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_51_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_51_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_51_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_51_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_51_P_UNCONNECTED;
  wire [47:0]NLW_rand_51_PCOUT_UNCONNECTED;
  wire NLW_rand_51__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_51__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_51__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_51__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_51__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_51__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_51__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_51__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_51__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_51__0_P_UNCONNECTED;
  wire NLW_rand_51__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_51__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_51__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_51__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_51__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_51__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_51__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_51__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_51__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_51__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_51__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_51_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_51_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_51_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_51_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_60_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_60_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_60_carry__6_O_UNCONNECTED;
  wire NLW_rand_61_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_61_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_61_OVERFLOW_UNCONNECTED;
  wire NLW_rand_61_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_61_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_61_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_61_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_61_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_61_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_61_P_UNCONNECTED;
  wire [47:0]NLW_rand_61_PCOUT_UNCONNECTED;
  wire NLW_rand_61__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_61__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_61__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_61__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_61__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_61__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_61__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_61__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_61__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_61__0_P_UNCONNECTED;
  wire NLW_rand_61__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_61__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_61__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_61__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_61__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_61__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_61__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_61__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_61__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_61__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_61__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_61_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_61_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_61_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_61_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_rand_70_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_rand_70_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_rand_70_carry__6_O_UNCONNECTED;
  wire NLW_rand_71_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_71_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_71_OVERFLOW_UNCONNECTED;
  wire NLW_rand_71_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_71_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_71_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_71_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_71_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_71_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_71_P_UNCONNECTED;
  wire [47:0]NLW_rand_71_PCOUT_UNCONNECTED;
  wire NLW_rand_71__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_71__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_71__0_OVERFLOW_UNCONNECTED;
  wire NLW_rand_71__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_71__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_71__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_71__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_71__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_71__0_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_rand_71__0_P_UNCONNECTED;
  wire NLW_rand_71__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_rand_71__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_rand_71__1_OVERFLOW_UNCONNECTED;
  wire NLW_rand_71__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_rand_71__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_rand_71__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_rand_71__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_rand_71__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_rand_71__1_CARRYOUT_UNCONNECTED;
  wire [47:15]NLW_rand_71__1_P_UNCONNECTED;
  wire [47:0]NLW_rand_71__1_PCOUT_UNCONNECTED;
  wire [2:0]NLW_rand_71_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rand_71_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_rand_71_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_rand_71_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_x_carry_CO_UNCONNECTED;
  wire [3:0]NLW_x_carry_O_UNCONNECTED;
  wire [2:0]NLW_x_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_x_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_x_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_x_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_x_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_x_carry__2_O_UNCONNECTED;
  wire [2:0]\NLW_x_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__0/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__0/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__0/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__1/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__1/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__1/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__1/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__1/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__1/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__2/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__2/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__2/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__2/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__2/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__2/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__2/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__2/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__3/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__3/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__3/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__3/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__3/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__3/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__3/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__3/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__4/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__4/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__4/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__4/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__4/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__4/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__4/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__4/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__5/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__5/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__5/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__5/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__5/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__5/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__5/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__5/i__carry__2_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__6/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__6/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__6/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__6/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__6/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__6/i__carry__1_O_UNCONNECTED ;
  wire [2:0]\NLW_x_inferred__6/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_inferred__6/i__carry__2_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_0_i_1
       (.I0(dithered_0),
        .I1(dithering_reg),
        .I2(P[31]),
        .O(dac_0_i_1_n_0));
  FDRE dac_0_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_0_i_1_n_0),
        .Q(dac_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_1_i_1
       (.I0(dithered_1),
        .I1(dithering_reg),
        .I2(out_10[31]),
        .O(dac_1_i_1_n_0));
  FDRE dac_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_1_i_1_n_0),
        .Q(dac_1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_2_i_1
       (.I0(dithered_2),
        .I1(dithering_reg),
        .I2(out_20[31]),
        .O(dac_2_i_1_n_0));
  FDRE dac_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_2_i_1_n_0),
        .Q(dac_2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_3_i_1
       (.I0(dithered_3),
        .I1(dithering_reg),
        .I2(out_30[31]),
        .O(dac_3_i_1_n_0));
  FDRE dac_3_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_3_i_1_n_0),
        .Q(dac_3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_4_i_1
       (.I0(dithered_4),
        .I1(dithering_reg),
        .I2(out_40[31]),
        .O(dac_4_i_1_n_0));
  FDRE dac_4_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_4_i_1_n_0),
        .Q(dac_4),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_5_i_1
       (.I0(dithered_5),
        .I1(dithering_reg),
        .I2(out_50[31]),
        .O(dac_5_i_1_n_0));
  FDRE dac_5_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_5_i_1_n_0),
        .Q(dac_5),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_6_i_1
       (.I0(dithered_6),
        .I1(dithering_reg),
        .I2(out_60[31]),
        .O(dac_6_i_1_n_0));
  FDRE dac_6_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_6_i_1_n_0),
        .Q(dac_6),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    dac_7_i_1
       (.I0(dithered_7),
        .I1(dithering_reg),
        .I2(out_70[31]),
        .O(dac_7_i_1_n_0));
  FDRE dac_7_reg
       (.C(clk),
        .CE(1'b1),
        .D(dac_7_i_1_n_0),
        .Q(dac_7),
        .R(1'b0));
  FDRE dithered_0_reg
       (.C(clk),
        .CE(1'b1),
        .D(to_std),
        .Q(dithered_0),
        .R(1'b0));
  FDRE dithered_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__0/i__carry__2_n_0 ),
        .Q(dithered_1),
        .R(1'b0));
  FDRE dithered_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__1/i__carry__2_n_0 ),
        .Q(dithered_2),
        .R(1'b0));
  FDRE dithered_3_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__2/i__carry__2_n_0 ),
        .Q(dithered_3),
        .R(1'b0));
  FDRE dithered_4_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__3/i__carry__2_n_0 ),
        .Q(dithered_4),
        .R(1'b0));
  FDRE dithered_5_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__4/i__carry__2_n_0 ),
        .Q(dithered_5),
        .R(1'b0));
  FDRE dithered_6_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__5/i__carry__2_n_0 ),
        .Q(dithered_6),
        .R(1'b0));
  FDRE dithered_7_reg
       (.C(clk),
        .CE(1'b1),
        .D(\x_inferred__6/i__carry__2_n_0 ),
        .Q(dithered_7),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1
       (.I0(out_10[14]),
        .I1(rand_1[14]),
        .I2(rand_1[15]),
        .I3(out_10[15]),
        .O(i__carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__0
       (.I0(out_20[14]),
        .I1(rand_2[14]),
        .I2(rand_2[15]),
        .I3(out_20[15]),
        .O(i__carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__1
       (.I0(out_30[14]),
        .I1(rand_3[14]),
        .I2(rand_3[15]),
        .I3(out_30[15]),
        .O(i__carry__0_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__2
       (.I0(out_40[14]),
        .I1(rand_4[14]),
        .I2(rand_4[15]),
        .I3(out_40[15]),
        .O(i__carry__0_i_1__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__3
       (.I0(out_50[14]),
        .I1(rand_5[14]),
        .I2(rand_5[15]),
        .I3(out_50[15]),
        .O(i__carry__0_i_1__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__4
       (.I0(out_60[14]),
        .I1(rand_6[14]),
        .I2(rand_6[15]),
        .I3(out_60[15]),
        .O(i__carry__0_i_1__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__5
       (.I0(out_70[14]),
        .I1(rand_7[14]),
        .I2(rand_7[15]),
        .I3(out_70[15]),
        .O(i__carry__0_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2
       (.I0(out_10[12]),
        .I1(rand_1[12]),
        .I2(rand_1[13]),
        .I3(out_10[13]),
        .O(i__carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__0
       (.I0(out_20[12]),
        .I1(rand_2[12]),
        .I2(rand_2[13]),
        .I3(out_20[13]),
        .O(i__carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__1
       (.I0(out_30[12]),
        .I1(rand_3[12]),
        .I2(rand_3[13]),
        .I3(out_30[13]),
        .O(i__carry__0_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__2
       (.I0(out_40[12]),
        .I1(rand_4[12]),
        .I2(rand_4[13]),
        .I3(out_40[13]),
        .O(i__carry__0_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__3
       (.I0(out_50[12]),
        .I1(rand_5[12]),
        .I2(rand_5[13]),
        .I3(out_50[13]),
        .O(i__carry__0_i_2__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__4
       (.I0(out_60[12]),
        .I1(rand_6[12]),
        .I2(rand_6[13]),
        .I3(out_60[13]),
        .O(i__carry__0_i_2__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__5
       (.I0(out_70[12]),
        .I1(rand_7[12]),
        .I2(rand_7[13]),
        .I3(out_70[13]),
        .O(i__carry__0_i_2__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__0
       (.I0(out_10[10]),
        .I1(rand_1[10]),
        .I2(rand_1[11]),
        .I3(out_10[11]),
        .O(i__carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__1
       (.I0(out_20[10]),
        .I1(rand_2[10]),
        .I2(rand_2[11]),
        .I3(out_20[11]),
        .O(i__carry__0_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__2
       (.I0(out_30[10]),
        .I1(rand_3[10]),
        .I2(rand_3[11]),
        .I3(out_30[11]),
        .O(i__carry__0_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__3
       (.I0(out_40[10]),
        .I1(rand_4[10]),
        .I2(rand_4[11]),
        .I3(out_40[11]),
        .O(i__carry__0_i_3__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__4
       (.I0(out_50[10]),
        .I1(rand_5[10]),
        .I2(rand_5[11]),
        .I3(out_50[11]),
        .O(i__carry__0_i_3__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__5
       (.I0(out_60[10]),
        .I1(rand_6[10]),
        .I2(rand_6[11]),
        .I3(out_60[11]),
        .O(i__carry__0_i_3__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__6
       (.I0(out_70[10]),
        .I1(rand_7[10]),
        .I2(rand_7[11]),
        .I3(out_70[11]),
        .O(i__carry__0_i_3__6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__0
       (.I0(out_10[8]),
        .I1(rand_1[8]),
        .I2(rand_1[9]),
        .I3(out_10[9]),
        .O(i__carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__1
       (.I0(out_20[8]),
        .I1(rand_2[8]),
        .I2(rand_2[9]),
        .I3(out_20[9]),
        .O(i__carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__2
       (.I0(out_30[8]),
        .I1(rand_3[8]),
        .I2(rand_3[9]),
        .I3(out_30[9]),
        .O(i__carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__3
       (.I0(out_40[8]),
        .I1(rand_4[8]),
        .I2(rand_4[9]),
        .I3(out_40[9]),
        .O(i__carry__0_i_4__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__4
       (.I0(out_50[8]),
        .I1(rand_5[8]),
        .I2(rand_5[9]),
        .I3(out_50[9]),
        .O(i__carry__0_i_4__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__5
       (.I0(out_60[8]),
        .I1(rand_6[8]),
        .I2(rand_6[9]),
        .I3(out_60[9]),
        .O(i__carry__0_i_4__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__6
       (.I0(out_70[8]),
        .I1(rand_7[8]),
        .I2(rand_7[9]),
        .I3(out_70[9]),
        .O(i__carry__0_i_4__6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5
       (.I0(out_10[14]),
        .I1(rand_1[14]),
        .I2(out_10[15]),
        .I3(rand_1[15]),
        .O(i__carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__0
       (.I0(out_20[14]),
        .I1(rand_2[14]),
        .I2(out_20[15]),
        .I3(rand_2[15]),
        .O(i__carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__1
       (.I0(out_30[14]),
        .I1(rand_3[14]),
        .I2(out_30[15]),
        .I3(rand_3[15]),
        .O(i__carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__2
       (.I0(out_40[14]),
        .I1(rand_4[14]),
        .I2(out_40[15]),
        .I3(rand_4[15]),
        .O(i__carry__0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__3
       (.I0(out_50[14]),
        .I1(rand_5[14]),
        .I2(out_50[15]),
        .I3(rand_5[15]),
        .O(i__carry__0_i_5__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__4
       (.I0(out_60[14]),
        .I1(rand_6[14]),
        .I2(out_60[15]),
        .I3(rand_6[15]),
        .O(i__carry__0_i_5__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__5
       (.I0(out_70[14]),
        .I1(rand_7[14]),
        .I2(out_70[15]),
        .I3(rand_7[15]),
        .O(i__carry__0_i_5__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6
       (.I0(out_10[12]),
        .I1(rand_1[12]),
        .I2(out_10[13]),
        .I3(rand_1[13]),
        .O(i__carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__0
       (.I0(out_20[12]),
        .I1(rand_2[12]),
        .I2(out_20[13]),
        .I3(rand_2[13]),
        .O(i__carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__1
       (.I0(out_30[12]),
        .I1(rand_3[12]),
        .I2(out_30[13]),
        .I3(rand_3[13]),
        .O(i__carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__2
       (.I0(out_40[12]),
        .I1(rand_4[12]),
        .I2(out_40[13]),
        .I3(rand_4[13]),
        .O(i__carry__0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__3
       (.I0(out_50[12]),
        .I1(rand_5[12]),
        .I2(out_50[13]),
        .I3(rand_5[13]),
        .O(i__carry__0_i_6__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__4
       (.I0(out_60[12]),
        .I1(rand_6[12]),
        .I2(out_60[13]),
        .I3(rand_6[13]),
        .O(i__carry__0_i_6__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__5
       (.I0(out_70[12]),
        .I1(rand_7[12]),
        .I2(out_70[13]),
        .I3(rand_7[13]),
        .O(i__carry__0_i_6__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7
       (.I0(out_10[10]),
        .I1(rand_1[10]),
        .I2(out_10[11]),
        .I3(rand_1[11]),
        .O(i__carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__0
       (.I0(out_20[10]),
        .I1(rand_2[10]),
        .I2(out_20[11]),
        .I3(rand_2[11]),
        .O(i__carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__1
       (.I0(out_30[10]),
        .I1(rand_3[10]),
        .I2(out_30[11]),
        .I3(rand_3[11]),
        .O(i__carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__2
       (.I0(out_40[10]),
        .I1(rand_4[10]),
        .I2(out_40[11]),
        .I3(rand_4[11]),
        .O(i__carry__0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__3
       (.I0(out_50[10]),
        .I1(rand_5[10]),
        .I2(out_50[11]),
        .I3(rand_5[11]),
        .O(i__carry__0_i_7__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__4
       (.I0(out_60[10]),
        .I1(rand_6[10]),
        .I2(out_60[11]),
        .I3(rand_6[11]),
        .O(i__carry__0_i_7__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__5
       (.I0(out_70[10]),
        .I1(rand_7[10]),
        .I2(out_70[11]),
        .I3(rand_7[11]),
        .O(i__carry__0_i_7__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8
       (.I0(out_10[8]),
        .I1(rand_1[8]),
        .I2(out_10[9]),
        .I3(rand_1[9]),
        .O(i__carry__0_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__0
       (.I0(out_20[8]),
        .I1(rand_2[8]),
        .I2(out_20[9]),
        .I3(rand_2[9]),
        .O(i__carry__0_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__1
       (.I0(out_30[8]),
        .I1(rand_3[8]),
        .I2(out_30[9]),
        .I3(rand_3[9]),
        .O(i__carry__0_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__2
       (.I0(out_40[8]),
        .I1(rand_4[8]),
        .I2(out_40[9]),
        .I3(rand_4[9]),
        .O(i__carry__0_i_8__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__3
       (.I0(out_50[8]),
        .I1(rand_5[8]),
        .I2(out_50[9]),
        .I3(rand_5[9]),
        .O(i__carry__0_i_8__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__4
       (.I0(out_60[8]),
        .I1(rand_6[8]),
        .I2(out_60[9]),
        .I3(rand_6[9]),
        .O(i__carry__0_i_8__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__5
       (.I0(out_70[8]),
        .I1(rand_7[8]),
        .I2(out_70[9]),
        .I3(rand_7[9]),
        .O(i__carry__0_i_8__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1
       (.I0(out_10[22]),
        .I1(rand_1[22]),
        .I2(rand_1[23]),
        .I3(out_10[23]),
        .O(i__carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__0
       (.I0(out_20[22]),
        .I1(rand_2[22]),
        .I2(rand_2[23]),
        .I3(out_20[23]),
        .O(i__carry__1_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__1
       (.I0(out_30[22]),
        .I1(rand_3[22]),
        .I2(rand_3[23]),
        .I3(out_30[23]),
        .O(i__carry__1_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__2
       (.I0(out_40[22]),
        .I1(rand_4[22]),
        .I2(rand_4[23]),
        .I3(out_40[23]),
        .O(i__carry__1_i_1__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__3
       (.I0(out_50[22]),
        .I1(rand_5[22]),
        .I2(rand_5[23]),
        .I3(out_50[23]),
        .O(i__carry__1_i_1__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__4
       (.I0(out_60[22]),
        .I1(rand_6[22]),
        .I2(rand_6[23]),
        .I3(out_60[23]),
        .O(i__carry__1_i_1__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1__5
       (.I0(out_70[22]),
        .I1(rand_7[22]),
        .I2(rand_7[23]),
        .I3(out_70[23]),
        .O(i__carry__1_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2
       (.I0(out_10[20]),
        .I1(rand_1[20]),
        .I2(rand_1[21]),
        .I3(out_10[21]),
        .O(i__carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__0
       (.I0(out_20[20]),
        .I1(rand_2[20]),
        .I2(rand_2[21]),
        .I3(out_20[21]),
        .O(i__carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__1
       (.I0(out_30[20]),
        .I1(rand_3[20]),
        .I2(rand_3[21]),
        .I3(out_30[21]),
        .O(i__carry__1_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__2
       (.I0(out_40[20]),
        .I1(rand_4[20]),
        .I2(rand_4[21]),
        .I3(out_40[21]),
        .O(i__carry__1_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__3
       (.I0(out_50[20]),
        .I1(rand_5[20]),
        .I2(rand_5[21]),
        .I3(out_50[21]),
        .O(i__carry__1_i_2__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__4
       (.I0(out_60[20]),
        .I1(rand_6[20]),
        .I2(rand_6[21]),
        .I3(out_60[21]),
        .O(i__carry__1_i_2__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2__5
       (.I0(out_70[20]),
        .I1(rand_7[20]),
        .I2(rand_7[21]),
        .I3(out_70[21]),
        .O(i__carry__1_i_2__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3
       (.I0(out_10[18]),
        .I1(rand_1[18]),
        .I2(rand_1[19]),
        .I3(out_10[19]),
        .O(i__carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__0
       (.I0(out_20[18]),
        .I1(rand_2[18]),
        .I2(rand_2[19]),
        .I3(out_20[19]),
        .O(i__carry__1_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__1
       (.I0(out_30[18]),
        .I1(rand_3[18]),
        .I2(rand_3[19]),
        .I3(out_30[19]),
        .O(i__carry__1_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__2
       (.I0(out_40[18]),
        .I1(rand_4[18]),
        .I2(rand_4[19]),
        .I3(out_40[19]),
        .O(i__carry__1_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__3
       (.I0(out_50[18]),
        .I1(rand_5[18]),
        .I2(rand_5[19]),
        .I3(out_50[19]),
        .O(i__carry__1_i_3__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__4
       (.I0(out_60[18]),
        .I1(rand_6[18]),
        .I2(rand_6[19]),
        .I3(out_60[19]),
        .O(i__carry__1_i_3__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3__5
       (.I0(out_70[18]),
        .I1(rand_7[18]),
        .I2(rand_7[19]),
        .I3(out_70[19]),
        .O(i__carry__1_i_3__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4
       (.I0(out_10[16]),
        .I1(rand_1[16]),
        .I2(rand_1[17]),
        .I3(out_10[17]),
        .O(i__carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__0
       (.I0(out_20[16]),
        .I1(rand_2[16]),
        .I2(rand_2[17]),
        .I3(out_20[17]),
        .O(i__carry__1_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__1
       (.I0(out_30[16]),
        .I1(rand_3[16]),
        .I2(rand_3[17]),
        .I3(out_30[17]),
        .O(i__carry__1_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__2
       (.I0(out_40[16]),
        .I1(rand_4[16]),
        .I2(rand_4[17]),
        .I3(out_40[17]),
        .O(i__carry__1_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__3
       (.I0(out_50[16]),
        .I1(rand_5[16]),
        .I2(rand_5[17]),
        .I3(out_50[17]),
        .O(i__carry__1_i_4__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__4
       (.I0(out_60[16]),
        .I1(rand_6[16]),
        .I2(rand_6[17]),
        .I3(out_60[17]),
        .O(i__carry__1_i_4__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4__5
       (.I0(out_70[16]),
        .I1(rand_7[16]),
        .I2(rand_7[17]),
        .I3(out_70[17]),
        .O(i__carry__1_i_4__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5
       (.I0(out_10[22]),
        .I1(rand_1[22]),
        .I2(out_10[23]),
        .I3(rand_1[23]),
        .O(i__carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__0
       (.I0(out_20[22]),
        .I1(rand_2[22]),
        .I2(out_20[23]),
        .I3(rand_2[23]),
        .O(i__carry__1_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__1
       (.I0(out_30[22]),
        .I1(rand_3[22]),
        .I2(out_30[23]),
        .I3(rand_3[23]),
        .O(i__carry__1_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__2
       (.I0(out_40[22]),
        .I1(rand_4[22]),
        .I2(out_40[23]),
        .I3(rand_4[23]),
        .O(i__carry__1_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__3
       (.I0(out_50[22]),
        .I1(rand_5[22]),
        .I2(out_50[23]),
        .I3(rand_5[23]),
        .O(i__carry__1_i_5__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__4
       (.I0(out_60[22]),
        .I1(rand_6[22]),
        .I2(out_60[23]),
        .I3(rand_6[23]),
        .O(i__carry__1_i_5__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5__5
       (.I0(out_70[22]),
        .I1(rand_7[22]),
        .I2(out_70[23]),
        .I3(rand_7[23]),
        .O(i__carry__1_i_5__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6
       (.I0(out_10[20]),
        .I1(rand_1[20]),
        .I2(out_10[21]),
        .I3(rand_1[21]),
        .O(i__carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__0
       (.I0(out_20[20]),
        .I1(rand_2[20]),
        .I2(out_20[21]),
        .I3(rand_2[21]),
        .O(i__carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__1
       (.I0(out_30[20]),
        .I1(rand_3[20]),
        .I2(out_30[21]),
        .I3(rand_3[21]),
        .O(i__carry__1_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__2
       (.I0(out_40[20]),
        .I1(rand_4[20]),
        .I2(out_40[21]),
        .I3(rand_4[21]),
        .O(i__carry__1_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__3
       (.I0(out_50[20]),
        .I1(rand_5[20]),
        .I2(out_50[21]),
        .I3(rand_5[21]),
        .O(i__carry__1_i_6__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__4
       (.I0(out_60[20]),
        .I1(rand_6[20]),
        .I2(out_60[21]),
        .I3(rand_6[21]),
        .O(i__carry__1_i_6__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6__5
       (.I0(out_70[20]),
        .I1(rand_7[20]),
        .I2(out_70[21]),
        .I3(rand_7[21]),
        .O(i__carry__1_i_6__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7
       (.I0(out_10[18]),
        .I1(rand_1[18]),
        .I2(out_10[19]),
        .I3(rand_1[19]),
        .O(i__carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__0
       (.I0(out_20[18]),
        .I1(rand_2[18]),
        .I2(out_20[19]),
        .I3(rand_2[19]),
        .O(i__carry__1_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__1
       (.I0(out_30[18]),
        .I1(rand_3[18]),
        .I2(out_30[19]),
        .I3(rand_3[19]),
        .O(i__carry__1_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__2
       (.I0(out_40[18]),
        .I1(rand_4[18]),
        .I2(out_40[19]),
        .I3(rand_4[19]),
        .O(i__carry__1_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__3
       (.I0(out_50[18]),
        .I1(rand_5[18]),
        .I2(out_50[19]),
        .I3(rand_5[19]),
        .O(i__carry__1_i_7__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__4
       (.I0(out_60[18]),
        .I1(rand_6[18]),
        .I2(out_60[19]),
        .I3(rand_6[19]),
        .O(i__carry__1_i_7__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7__5
       (.I0(out_70[18]),
        .I1(rand_7[18]),
        .I2(out_70[19]),
        .I3(rand_7[19]),
        .O(i__carry__1_i_7__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8
       (.I0(out_10[16]),
        .I1(rand_1[16]),
        .I2(out_10[17]),
        .I3(rand_1[17]),
        .O(i__carry__1_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__0
       (.I0(out_20[16]),
        .I1(rand_2[16]),
        .I2(out_20[17]),
        .I3(rand_2[17]),
        .O(i__carry__1_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__1
       (.I0(out_30[16]),
        .I1(rand_3[16]),
        .I2(out_30[17]),
        .I3(rand_3[17]),
        .O(i__carry__1_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__2
       (.I0(out_40[16]),
        .I1(rand_4[16]),
        .I2(out_40[17]),
        .I3(rand_4[17]),
        .O(i__carry__1_i_8__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__3
       (.I0(out_50[16]),
        .I1(rand_5[16]),
        .I2(out_50[17]),
        .I3(rand_5[17]),
        .O(i__carry__1_i_8__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__4
       (.I0(out_60[16]),
        .I1(rand_6[16]),
        .I2(out_60[17]),
        .I3(rand_6[17]),
        .O(i__carry__1_i_8__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8__5
       (.I0(out_70[16]),
        .I1(rand_7[16]),
        .I2(out_70[17]),
        .I3(rand_7[17]),
        .O(i__carry__1_i_8__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1
       (.I0(out_10[30]),
        .I1(rand_1[30]),
        .I2(out_10[31]),
        .I3(rand_1[31]),
        .O(i__carry__2_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__0
       (.I0(out_20[30]),
        .I1(rand_2[30]),
        .I2(out_20[31]),
        .I3(rand_2[31]),
        .O(i__carry__2_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__1
       (.I0(out_30[30]),
        .I1(rand_3[30]),
        .I2(out_30[31]),
        .I3(rand_3[31]),
        .O(i__carry__2_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__2
       (.I0(out_40[30]),
        .I1(rand_4[30]),
        .I2(out_40[31]),
        .I3(rand_4[31]),
        .O(i__carry__2_i_1__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__3
       (.I0(out_50[30]),
        .I1(rand_5[30]),
        .I2(out_50[31]),
        .I3(rand_5[31]),
        .O(i__carry__2_i_1__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__4
       (.I0(out_60[30]),
        .I1(rand_6[30]),
        .I2(out_60[31]),
        .I3(rand_6[31]),
        .O(i__carry__2_i_1__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1__5
       (.I0(out_70[30]),
        .I1(rand_7[30]),
        .I2(out_70[31]),
        .I3(rand_7[31]),
        .O(i__carry__2_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2
       (.I0(out_10[28]),
        .I1(rand_1[28]),
        .I2(rand_1[29]),
        .I3(out_10[29]),
        .O(i__carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__0
       (.I0(out_20[28]),
        .I1(rand_2[28]),
        .I2(rand_2[29]),
        .I3(out_20[29]),
        .O(i__carry__2_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__1
       (.I0(out_30[28]),
        .I1(rand_3[28]),
        .I2(rand_3[29]),
        .I3(out_30[29]),
        .O(i__carry__2_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__2
       (.I0(out_40[28]),
        .I1(rand_4[28]),
        .I2(rand_4[29]),
        .I3(out_40[29]),
        .O(i__carry__2_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__3
       (.I0(out_50[28]),
        .I1(rand_5[28]),
        .I2(rand_5[29]),
        .I3(out_50[29]),
        .O(i__carry__2_i_2__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__4
       (.I0(out_60[28]),
        .I1(rand_6[28]),
        .I2(rand_6[29]),
        .I3(out_60[29]),
        .O(i__carry__2_i_2__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2__5
       (.I0(out_70[28]),
        .I1(rand_7[28]),
        .I2(rand_7[29]),
        .I3(out_70[29]),
        .O(i__carry__2_i_2__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3
       (.I0(out_10[26]),
        .I1(rand_1[26]),
        .I2(rand_1[27]),
        .I3(out_10[27]),
        .O(i__carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__0
       (.I0(out_20[26]),
        .I1(rand_2[26]),
        .I2(rand_2[27]),
        .I3(out_20[27]),
        .O(i__carry__2_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__1
       (.I0(out_30[26]),
        .I1(rand_3[26]),
        .I2(rand_3[27]),
        .I3(out_30[27]),
        .O(i__carry__2_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__2
       (.I0(out_40[26]),
        .I1(rand_4[26]),
        .I2(rand_4[27]),
        .I3(out_40[27]),
        .O(i__carry__2_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__3
       (.I0(out_50[26]),
        .I1(rand_5[26]),
        .I2(rand_5[27]),
        .I3(out_50[27]),
        .O(i__carry__2_i_3__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__4
       (.I0(out_60[26]),
        .I1(rand_6[26]),
        .I2(rand_6[27]),
        .I3(out_60[27]),
        .O(i__carry__2_i_3__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3__5
       (.I0(out_70[26]),
        .I1(rand_7[26]),
        .I2(rand_7[27]),
        .I3(out_70[27]),
        .O(i__carry__2_i_3__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4
       (.I0(out_10[24]),
        .I1(rand_1[24]),
        .I2(rand_1[25]),
        .I3(out_10[25]),
        .O(i__carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__0
       (.I0(out_20[24]),
        .I1(rand_2[24]),
        .I2(rand_2[25]),
        .I3(out_20[25]),
        .O(i__carry__2_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__1
       (.I0(out_30[24]),
        .I1(rand_3[24]),
        .I2(rand_3[25]),
        .I3(out_30[25]),
        .O(i__carry__2_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__2
       (.I0(out_40[24]),
        .I1(rand_4[24]),
        .I2(rand_4[25]),
        .I3(out_40[25]),
        .O(i__carry__2_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__3
       (.I0(out_50[24]),
        .I1(rand_5[24]),
        .I2(rand_5[25]),
        .I3(out_50[25]),
        .O(i__carry__2_i_4__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__4
       (.I0(out_60[24]),
        .I1(rand_6[24]),
        .I2(rand_6[25]),
        .I3(out_60[25]),
        .O(i__carry__2_i_4__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4__5
       (.I0(out_70[24]),
        .I1(rand_7[24]),
        .I2(rand_7[25]),
        .I3(out_70[25]),
        .O(i__carry__2_i_4__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5
       (.I0(out_10[30]),
        .I1(rand_1[30]),
        .I2(rand_1[31]),
        .I3(out_10[31]),
        .O(i__carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__0
       (.I0(out_20[30]),
        .I1(rand_2[30]),
        .I2(rand_2[31]),
        .I3(out_20[31]),
        .O(i__carry__2_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__1
       (.I0(out_30[30]),
        .I1(rand_3[30]),
        .I2(rand_3[31]),
        .I3(out_30[31]),
        .O(i__carry__2_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__2
       (.I0(out_40[30]),
        .I1(rand_4[30]),
        .I2(rand_4[31]),
        .I3(out_40[31]),
        .O(i__carry__2_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__3
       (.I0(out_50[30]),
        .I1(rand_5[30]),
        .I2(rand_5[31]),
        .I3(out_50[31]),
        .O(i__carry__2_i_5__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__4
       (.I0(out_60[30]),
        .I1(rand_6[30]),
        .I2(rand_6[31]),
        .I3(out_60[31]),
        .O(i__carry__2_i_5__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5__5
       (.I0(out_70[30]),
        .I1(rand_7[30]),
        .I2(rand_7[31]),
        .I3(out_70[31]),
        .O(i__carry__2_i_5__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6
       (.I0(out_10[28]),
        .I1(rand_1[28]),
        .I2(out_10[29]),
        .I3(rand_1[29]),
        .O(i__carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__0
       (.I0(out_20[28]),
        .I1(rand_2[28]),
        .I2(out_20[29]),
        .I3(rand_2[29]),
        .O(i__carry__2_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__1
       (.I0(out_30[28]),
        .I1(rand_3[28]),
        .I2(out_30[29]),
        .I3(rand_3[29]),
        .O(i__carry__2_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__2
       (.I0(out_40[28]),
        .I1(rand_4[28]),
        .I2(out_40[29]),
        .I3(rand_4[29]),
        .O(i__carry__2_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__3
       (.I0(out_50[28]),
        .I1(rand_5[28]),
        .I2(out_50[29]),
        .I3(rand_5[29]),
        .O(i__carry__2_i_6__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__4
       (.I0(out_60[28]),
        .I1(rand_6[28]),
        .I2(out_60[29]),
        .I3(rand_6[29]),
        .O(i__carry__2_i_6__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6__5
       (.I0(out_70[28]),
        .I1(rand_7[28]),
        .I2(out_70[29]),
        .I3(rand_7[29]),
        .O(i__carry__2_i_6__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7
       (.I0(out_10[26]),
        .I1(rand_1[26]),
        .I2(out_10[27]),
        .I3(rand_1[27]),
        .O(i__carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__0
       (.I0(out_20[26]),
        .I1(rand_2[26]),
        .I2(out_20[27]),
        .I3(rand_2[27]),
        .O(i__carry__2_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__1
       (.I0(out_30[26]),
        .I1(rand_3[26]),
        .I2(out_30[27]),
        .I3(rand_3[27]),
        .O(i__carry__2_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__2
       (.I0(out_40[26]),
        .I1(rand_4[26]),
        .I2(out_40[27]),
        .I3(rand_4[27]),
        .O(i__carry__2_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__3
       (.I0(out_50[26]),
        .I1(rand_5[26]),
        .I2(out_50[27]),
        .I3(rand_5[27]),
        .O(i__carry__2_i_7__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__4
       (.I0(out_60[26]),
        .I1(rand_6[26]),
        .I2(out_60[27]),
        .I3(rand_6[27]),
        .O(i__carry__2_i_7__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7__5
       (.I0(out_70[26]),
        .I1(rand_7[26]),
        .I2(out_70[27]),
        .I3(rand_7[27]),
        .O(i__carry__2_i_7__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8
       (.I0(out_10[24]),
        .I1(rand_1[24]),
        .I2(out_10[25]),
        .I3(rand_1[25]),
        .O(i__carry__2_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__0
       (.I0(out_20[24]),
        .I1(rand_2[24]),
        .I2(out_20[25]),
        .I3(rand_2[25]),
        .O(i__carry__2_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__1
       (.I0(out_30[24]),
        .I1(rand_3[24]),
        .I2(out_30[25]),
        .I3(rand_3[25]),
        .O(i__carry__2_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__2
       (.I0(out_40[24]),
        .I1(rand_4[24]),
        .I2(out_40[25]),
        .I3(rand_4[25]),
        .O(i__carry__2_i_8__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__3
       (.I0(out_50[24]),
        .I1(rand_5[24]),
        .I2(out_50[25]),
        .I3(rand_5[25]),
        .O(i__carry__2_i_8__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__4
       (.I0(out_60[24]),
        .I1(rand_6[24]),
        .I2(out_60[25]),
        .I3(rand_6[25]),
        .O(i__carry__2_i_8__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8__5
       (.I0(out_70[24]),
        .I1(rand_7[24]),
        .I2(out_70[25]),
        .I3(rand_7[25]),
        .O(i__carry__2_i_8__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1
       (.I0(out_10[6]),
        .I1(rand_1[6]),
        .I2(rand_1[7]),
        .I3(out_10[7]),
        .O(i__carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__0
       (.I0(out_20[6]),
        .I1(rand_2[6]),
        .I2(rand_2[7]),
        .I3(out_20[7]),
        .O(i__carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__1
       (.I0(out_30[6]),
        .I1(rand_3[6]),
        .I2(rand_3[7]),
        .I3(out_30[7]),
        .O(i__carry_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__2
       (.I0(out_40[6]),
        .I1(rand_4[6]),
        .I2(rand_4[7]),
        .I3(out_40[7]),
        .O(i__carry_i_1__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__3
       (.I0(out_50[6]),
        .I1(rand_5[6]),
        .I2(rand_5[7]),
        .I3(out_50[7]),
        .O(i__carry_i_1__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__4
       (.I0(out_60[6]),
        .I1(rand_6[6]),
        .I2(rand_6[7]),
        .I3(out_60[7]),
        .O(i__carry_i_1__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__5
       (.I0(out_70[6]),
        .I1(rand_7[6]),
        .I2(rand_7[7]),
        .I3(out_70[7]),
        .O(i__carry_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2
       (.I0(out_10[4]),
        .I1(rand_1[4]),
        .I2(rand_1[5]),
        .I3(out_10[5]),
        .O(i__carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__0
       (.I0(out_20[4]),
        .I1(rand_2[4]),
        .I2(rand_2[5]),
        .I3(out_20[5]),
        .O(i__carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__1
       (.I0(out_30[4]),
        .I1(rand_3[4]),
        .I2(rand_3[5]),
        .I3(out_30[5]),
        .O(i__carry_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__2
       (.I0(out_40[4]),
        .I1(rand_4[4]),
        .I2(rand_4[5]),
        .I3(out_40[5]),
        .O(i__carry_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__3
       (.I0(out_50[4]),
        .I1(rand_5[4]),
        .I2(rand_5[5]),
        .I3(out_50[5]),
        .O(i__carry_i_2__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__4
       (.I0(out_60[4]),
        .I1(rand_6[4]),
        .I2(rand_6[5]),
        .I3(out_60[5]),
        .O(i__carry_i_2__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__5
       (.I0(out_70[4]),
        .I1(rand_7[4]),
        .I2(rand_7[5]),
        .I3(out_70[5]),
        .O(i__carry_i_2__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__0
       (.I0(out_10[2]),
        .I1(rand_1[2]),
        .I2(rand_1[3]),
        .I3(out_10[3]),
        .O(i__carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__1
       (.I0(out_20[2]),
        .I1(rand_2[2]),
        .I2(rand_2[3]),
        .I3(out_20[3]),
        .O(i__carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__2
       (.I0(out_30[2]),
        .I1(rand_3[2]),
        .I2(rand_3[3]),
        .I3(out_30[3]),
        .O(i__carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__3
       (.I0(out_40[2]),
        .I1(rand_4[2]),
        .I2(rand_4[3]),
        .I3(out_40[3]),
        .O(i__carry_i_3__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__4
       (.I0(out_50[2]),
        .I1(rand_5[2]),
        .I2(rand_5[3]),
        .I3(out_50[3]),
        .O(i__carry_i_3__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__5
       (.I0(out_60[2]),
        .I1(rand_6[2]),
        .I2(rand_6[3]),
        .I3(out_60[3]),
        .O(i__carry_i_3__5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__6
       (.I0(out_70[2]),
        .I1(rand_7[2]),
        .I2(rand_7[3]),
        .I3(out_70[3]),
        .O(i__carry_i_3__6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4
       (.I0(out_10[0]),
        .I1(rand_1[0]),
        .I2(rand_1[1]),
        .I3(out_10[1]),
        .O(i__carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__0
       (.I0(out_20[0]),
        .I1(rand_2[0]),
        .I2(rand_2[1]),
        .I3(out_20[1]),
        .O(i__carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__1
       (.I0(out_30[0]),
        .I1(rand_3[0]),
        .I2(rand_3[1]),
        .I3(out_30[1]),
        .O(i__carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__2
       (.I0(out_40[0]),
        .I1(rand_4[0]),
        .I2(rand_4[1]),
        .I3(out_40[1]),
        .O(i__carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__3
       (.I0(out_50[0]),
        .I1(rand_5[0]),
        .I2(rand_5[1]),
        .I3(out_50[1]),
        .O(i__carry_i_4__3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__4
       (.I0(out_60[0]),
        .I1(rand_6[0]),
        .I2(rand_6[1]),
        .I3(out_60[1]),
        .O(i__carry_i_4__4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__5
       (.I0(out_70[0]),
        .I1(rand_7[0]),
        .I2(rand_7[1]),
        .I3(out_70[1]),
        .O(i__carry_i_4__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5
       (.I0(out_10[6]),
        .I1(rand_1[6]),
        .I2(out_10[7]),
        .I3(rand_1[7]),
        .O(i__carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__0
       (.I0(out_20[6]),
        .I1(rand_2[6]),
        .I2(out_20[7]),
        .I3(rand_2[7]),
        .O(i__carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__1
       (.I0(out_30[6]),
        .I1(rand_3[6]),
        .I2(out_30[7]),
        .I3(rand_3[7]),
        .O(i__carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__2
       (.I0(out_40[6]),
        .I1(rand_4[6]),
        .I2(out_40[7]),
        .I3(rand_4[7]),
        .O(i__carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__3
       (.I0(out_50[6]),
        .I1(rand_5[6]),
        .I2(out_50[7]),
        .I3(rand_5[7]),
        .O(i__carry_i_5__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__4
       (.I0(out_60[6]),
        .I1(rand_6[6]),
        .I2(out_60[7]),
        .I3(rand_6[7]),
        .O(i__carry_i_5__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__5
       (.I0(out_70[6]),
        .I1(rand_7[6]),
        .I2(out_70[7]),
        .I3(rand_7[7]),
        .O(i__carry_i_5__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6
       (.I0(out_10[4]),
        .I1(rand_1[4]),
        .I2(out_10[5]),
        .I3(rand_1[5]),
        .O(i__carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__0
       (.I0(out_20[4]),
        .I1(rand_2[4]),
        .I2(out_20[5]),
        .I3(rand_2[5]),
        .O(i__carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__1
       (.I0(out_30[4]),
        .I1(rand_3[4]),
        .I2(out_30[5]),
        .I3(rand_3[5]),
        .O(i__carry_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__2
       (.I0(out_40[4]),
        .I1(rand_4[4]),
        .I2(out_40[5]),
        .I3(rand_4[5]),
        .O(i__carry_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__3
       (.I0(out_50[4]),
        .I1(rand_5[4]),
        .I2(out_50[5]),
        .I3(rand_5[5]),
        .O(i__carry_i_6__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__4
       (.I0(out_60[4]),
        .I1(rand_6[4]),
        .I2(out_60[5]),
        .I3(rand_6[5]),
        .O(i__carry_i_6__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__5
       (.I0(out_70[4]),
        .I1(rand_7[4]),
        .I2(out_70[5]),
        .I3(rand_7[5]),
        .O(i__carry_i_6__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7
       (.I0(out_10[2]),
        .I1(rand_1[2]),
        .I2(out_10[3]),
        .I3(rand_1[3]),
        .O(i__carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__0
       (.I0(out_20[2]),
        .I1(rand_2[2]),
        .I2(out_20[3]),
        .I3(rand_2[3]),
        .O(i__carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__1
       (.I0(out_30[2]),
        .I1(rand_3[2]),
        .I2(out_30[3]),
        .I3(rand_3[3]),
        .O(i__carry_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__2
       (.I0(out_40[2]),
        .I1(rand_4[2]),
        .I2(out_40[3]),
        .I3(rand_4[3]),
        .O(i__carry_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__3
       (.I0(out_50[2]),
        .I1(rand_5[2]),
        .I2(out_50[3]),
        .I3(rand_5[3]),
        .O(i__carry_i_7__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__4
       (.I0(out_60[2]),
        .I1(rand_6[2]),
        .I2(out_60[3]),
        .I3(rand_6[3]),
        .O(i__carry_i_7__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__5
       (.I0(out_70[2]),
        .I1(rand_7[2]),
        .I2(out_70[3]),
        .I3(rand_7[3]),
        .O(i__carry_i_7__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8
       (.I0(out_10[0]),
        .I1(rand_1[0]),
        .I2(out_10[1]),
        .I3(rand_1[1]),
        .O(i__carry_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__0
       (.I0(out_20[0]),
        .I1(rand_2[0]),
        .I2(out_20[1]),
        .I3(rand_2[1]),
        .O(i__carry_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__1
       (.I0(out_30[0]),
        .I1(rand_3[0]),
        .I2(out_30[1]),
        .I3(rand_3[1]),
        .O(i__carry_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__2
       (.I0(out_40[0]),
        .I1(rand_4[0]),
        .I2(out_40[1]),
        .I3(rand_4[1]),
        .O(i__carry_i_8__2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__3
       (.I0(out_50[0]),
        .I1(rand_5[0]),
        .I2(out_50[1]),
        .I3(rand_5[1]),
        .O(i__carry_i_8__3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__4
       (.I0(out_60[0]),
        .I1(rand_6[0]),
        .I2(out_60[1]),
        .I3(rand_6[1]),
        .O(i__carry_i_8__4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__5
       (.I0(out_70[0]),
        .I1(rand_7[0]),
        .I2(out_70[1]),
        .I3(rand_7[1]),
        .O(i__carry_i_8__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_5),
        .Q(psdsp_n),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_1
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_6),
        .Q(psdsp_n_1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_10
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_7),
        .Q(psdsp_n_10),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_11
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_4),
        .Q(psdsp_n_11),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_12
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_5),
        .Q(psdsp_n_12),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_13
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_6),
        .Q(psdsp_n_13),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_14
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_7),
        .Q(psdsp_n_14),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_2
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_7),
        .Q(psdsp_n_2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_3
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_4),
        .Q(psdsp_n_3),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_4
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_5),
        .Q(psdsp_n_4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_5
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_6),
        .Q(psdsp_n_5),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_6
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_7),
        .Q(psdsp_n_6),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_7
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_4),
        .Q(psdsp_n_7),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_8
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_5),
        .Q(psdsp_n_8),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    psdsp_9
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_6),
        .Q(psdsp_n_9),
        .R(1'b0));
  CARRY4 rand_00_carry
       (.CI(1'b0),
        .CO({rand_00_carry_n_0,NLW_rand_00_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_01__0_n_105),
        .DI({rand_01__0_n_101,rand_01__0_n_102,1'b0,1'b0}),
        .O({rand_00_carry_n_4,rand_00_carry_n_5,rand_00_carry_n_6,rand_00_carry_n_7}),
        .S({rand_00_carry_i_1_n_0,rand_00_carry_i_2_n_0,rand_01__0_n_103,rand_01__0_n_104}));
  CARRY4 rand_00_carry__0
       (.CI(rand_00_carry_n_0),
        .CO({rand_00_carry__0_n_0,NLW_rand_00_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_01__0_n_100}),
        .O({rand_00_carry__0_n_4,rand_00_carry__0_n_5,rand_00_carry__0_n_6,rand_00_carry__0_n_7}),
        .S({rand_01__0_n_97,rand_01__0_n_98,rand_01__0_n_99,rand_00_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_00_carry__0_i_4
       (.I0(rand_01__0_n_100),
        .O(rand_00_carry__0_i_4_n_0));
  CARRY4 rand_00_carry__1
       (.CI(rand_00_carry__0_n_0),
        .CO({rand_00_carry__1_n_0,NLW_rand_00_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_01__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_00_carry__1_n_4,rand_00_carry__1_n_5,rand_00_carry__1_n_6,rand_00_carry__1_n_7}),
        .S({rand_00_carry__1_i_1_n_0,rand_01__0_n_94,rand_01__0_n_95,rand_01__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_00_carry__1_i_1
       (.I0(rand_01__0_n_93),
        .O(rand_00_carry__1_i_1_n_0));
  CARRY4 rand_00_carry__2
       (.CI(rand_00_carry__1_n_0),
        .CO({rand_00_carry__2_n_0,NLW_rand_00_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_01__0_n_92}),
        .O({rand_00_carry__2_n_4,rand_00_carry__2_n_5,rand_00_carry__2_n_6,rand_00_carry__2_n_7}),
        .S({rand_01_carry_n_7,rand_01__0_n_90,rand_01__0_n_91,rand_00_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_00_carry__2_i_4
       (.I0(rand_01__0_n_92),
        .O(rand_00_carry__2_i_4_n_0));
  CARRY4 rand_00_carry__3
       (.CI(rand_00_carry__2_n_0),
        .CO({rand_00_carry__3_n_0,NLW_rand_00_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_00_carry__3_n_4,rand_00_carry__3_n_5,rand_00_carry__3_n_6,rand_00_carry__3_n_7}),
        .S({rand_01_carry__0_n_7,rand_01_carry_n_4,rand_01_carry_n_5,rand_01_carry_n_6}));
  CARRY4 rand_00_carry__4
       (.CI(rand_00_carry__3_n_0),
        .CO({rand_00_carry__4_n_0,NLW_rand_00_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_00_carry__4_n_4,rand_00_carry__4_n_5,rand_00_carry__4_n_6,rand_00_carry__4_n_7}),
        .S({rand_01_carry__1_n_7,rand_01_carry__0_n_4,rand_01_carry__0_n_5,rand_01_carry__0_n_6}));
  CARRY4 rand_00_carry__5
       (.CI(rand_00_carry__4_n_0),
        .CO({rand_00_carry__5_n_0,NLW_rand_00_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_00_carry__5_n_4,rand_00_carry__5_n_5,rand_00_carry__5_n_6,rand_00_carry__5_n_7}),
        .S({rand_01_carry__2_n_7,rand_01_carry__1_n_4,rand_01_carry__1_n_5,rand_01_carry__1_n_6}));
  CARRY4 rand_00_carry__6
       (.CI(rand_00_carry__5_n_0),
        .CO(NLW_rand_00_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_00_carry__6_O_UNCONNECTED[3],rand_00_carry__6_n_5,rand_00_carry__6_n_6,rand_00_carry__6_n_7}),
        .S({1'b0,rand_01_carry__2_n_4,rand_01_carry__2_n_5,rand_01_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_00_carry_i_1
       (.I0(rand_01__0_n_101),
        .O(rand_00_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_00_carry_i_2
       (.I0(rand_01__0_n_102),
        .O(rand_00_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_01
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_0[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_01_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_01_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_01_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_01_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_01_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_01_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_01_P_UNCONNECTED[47:15],rand_01_n_91,rand_01_n_92,rand_01_n_93,rand_01_n_94,rand_01_n_95,rand_01_n_96,rand_01_n_97,rand_01_n_98,rand_01_n_99,rand_01_n_100,rand_01_n_101,rand_01_n_102,rand_01_n_103,rand_01_n_104,rand_01_n_105}),
        .PATTERNBDETECT(NLW_rand_01_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_01_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_01_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_01_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_01__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_01__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_01__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_01__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_01__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_01__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_01__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_01__0_P_UNCONNECTED[47:17],rand_01__0_n_89,rand_01__0_n_90,rand_01__0_n_91,rand_01__0_n_92,rand_01__0_n_93,rand_01__0_n_94,rand_01__0_n_95,rand_01__0_n_96,rand_01__0_n_97,rand_01__0_n_98,rand_01__0_n_99,rand_01__0_n_100,rand_01__0_n_101,rand_01__0_n_102,rand_01__0_n_103,rand_01__0_n_104,rand_01__0_n_105}),
        .PATTERNBDETECT(NLW_rand_01__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_01__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_01__0_n_106,rand_01__0_n_107,rand_01__0_n_108,rand_01__0_n_109,rand_01__0_n_110,rand_01__0_n_111,rand_01__0_n_112,rand_01__0_n_113,rand_01__0_n_114,rand_01__0_n_115,rand_01__0_n_116,rand_01__0_n_117,rand_01__0_n_118,rand_01__0_n_119,rand_01__0_n_120,rand_01__0_n_121,rand_01__0_n_122,rand_01__0_n_123,rand_01__0_n_124,rand_01__0_n_125,rand_01__0_n_126,rand_01__0_n_127,rand_01__0_n_128,rand_01__0_n_129,rand_01__0_n_130,rand_01__0_n_131,rand_01__0_n_132,rand_01__0_n_133,rand_01__0_n_134,rand_01__0_n_135,rand_01__0_n_136,rand_01__0_n_137,rand_01__0_n_138,rand_01__0_n_139,rand_01__0_n_140,rand_01__0_n_141,rand_01__0_n_142,rand_01__0_n_143,rand_01__0_n_144,rand_01__0_n_145,rand_01__0_n_146,rand_01__0_n_147,rand_01__0_n_148,rand_01__0_n_149,rand_01__0_n_150,rand_01__0_n_151,rand_01__0_n_152,rand_01__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_01__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_01__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_01__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_01__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_01__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_01__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_01__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_01__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_01__1_P_UNCONNECTED[47:15],rand_01__1_n_91,rand_01__1_n_92,rand_01__1_n_93,rand_01__1_n_94,rand_01__1_n_95,rand_01__1_n_96,rand_01__1_n_97,rand_01__1_n_98,rand_01__1_n_99,rand_01__1_n_100,rand_01__1_n_101,rand_01__1_n_102,rand_01__1_n_103,rand_01__1_n_104,rand_01__1_n_105}),
        .PATTERNBDETECT(NLW_rand_01__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_01__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_01__0_n_106,rand_01__0_n_107,rand_01__0_n_108,rand_01__0_n_109,rand_01__0_n_110,rand_01__0_n_111,rand_01__0_n_112,rand_01__0_n_113,rand_01__0_n_114,rand_01__0_n_115,rand_01__0_n_116,rand_01__0_n_117,rand_01__0_n_118,rand_01__0_n_119,rand_01__0_n_120,rand_01__0_n_121,rand_01__0_n_122,rand_01__0_n_123,rand_01__0_n_124,rand_01__0_n_125,rand_01__0_n_126,rand_01__0_n_127,rand_01__0_n_128,rand_01__0_n_129,rand_01__0_n_130,rand_01__0_n_131,rand_01__0_n_132,rand_01__0_n_133,rand_01__0_n_134,rand_01__0_n_135,rand_01__0_n_136,rand_01__0_n_137,rand_01__0_n_138,rand_01__0_n_139,rand_01__0_n_140,rand_01__0_n_141,rand_01__0_n_142,rand_01__0_n_143,rand_01__0_n_144,rand_01__0_n_145,rand_01__0_n_146,rand_01__0_n_147,rand_01__0_n_148,rand_01__0_n_149,rand_01__0_n_150,rand_01__0_n_151,rand_01__0_n_152,rand_01__0_n_153}),
        .PCOUT(NLW_rand_01__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_01__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_01_carry
       (.CI(1'b0),
        .CO({rand_01_carry_n_0,NLW_rand_01_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_01__1_n_103,rand_01__1_n_104,rand_01__1_n_105,1'b0}),
        .O({rand_01_carry_n_4,rand_01_carry_n_5,rand_01_carry_n_6,rand_01_carry_n_7}),
        .S({rand_01_carry_i_1_n_0,rand_01_carry_i_2_n_0,rand_01_carry_i_3_n_0,rand_01__0_n_89}));
  CARRY4 rand_01_carry__0
       (.CI(rand_01_carry_n_0),
        .CO({rand_01_carry__0_n_0,NLW_rand_01_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_01__1_n_99,rand_01__1_n_100,rand_01__1_n_101,rand_01__1_n_102}),
        .O({rand_01_carry__0_n_4,rand_01_carry__0_n_5,rand_01_carry__0_n_6,rand_01_carry__0_n_7}),
        .S({rand_01_carry__0_i_1_n_0,rand_01_carry__0_i_2_n_0,rand_01_carry__0_i_3_n_0,rand_01_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__0_i_1
       (.I0(rand_01__1_n_99),
        .I1(rand_01_n_99),
        .O(rand_01_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__0_i_2
       (.I0(rand_01__1_n_100),
        .I1(rand_01_n_100),
        .O(rand_01_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__0_i_3
       (.I0(rand_01__1_n_101),
        .I1(rand_01_n_101),
        .O(rand_01_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__0_i_4
       (.I0(rand_01__1_n_102),
        .I1(rand_01_n_102),
        .O(rand_01_carry__0_i_4_n_0));
  CARRY4 rand_01_carry__1
       (.CI(rand_01_carry__0_n_0),
        .CO({rand_01_carry__1_n_0,NLW_rand_01_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_01__1_n_95,rand_01__1_n_96,rand_01__1_n_97,rand_01__1_n_98}),
        .O({rand_01_carry__1_n_4,rand_01_carry__1_n_5,rand_01_carry__1_n_6,rand_01_carry__1_n_7}),
        .S({rand_01_carry__1_i_1_n_0,rand_01_carry__1_i_2_n_0,rand_01_carry__1_i_3_n_0,rand_01_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__1_i_1
       (.I0(rand_01__1_n_95),
        .I1(rand_01_n_95),
        .O(rand_01_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__1_i_2
       (.I0(rand_01__1_n_96),
        .I1(rand_01_n_96),
        .O(rand_01_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__1_i_3
       (.I0(rand_01__1_n_97),
        .I1(rand_01_n_97),
        .O(rand_01_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__1_i_4
       (.I0(rand_01__1_n_98),
        .I1(rand_01_n_98),
        .O(rand_01_carry__1_i_4_n_0));
  CARRY4 rand_01_carry__2
       (.CI(rand_01_carry__1_n_0),
        .CO(NLW_rand_01_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_01__1_n_92,rand_01__1_n_93,rand_01__1_n_94}),
        .O({rand_01_carry__2_n_4,rand_01_carry__2_n_5,rand_01_carry__2_n_6,rand_01_carry__2_n_7}),
        .S({rand_01_carry__2_i_1_n_0,rand_01_carry__2_i_2_n_0,rand_01_carry__2_i_3_n_0,rand_01_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__2_i_1
       (.I0(rand_01__1_n_91),
        .I1(rand_01_n_91),
        .O(rand_01_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__2_i_2
       (.I0(rand_01__1_n_92),
        .I1(rand_01_n_92),
        .O(rand_01_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__2_i_3
       (.I0(rand_01__1_n_93),
        .I1(rand_01_n_93),
        .O(rand_01_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry__2_i_4
       (.I0(rand_01__1_n_94),
        .I1(rand_01_n_94),
        .O(rand_01_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry_i_1
       (.I0(rand_01__1_n_103),
        .I1(rand_01_n_103),
        .O(rand_01_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry_i_2
       (.I0(rand_01__1_n_104),
        .I1(rand_01_n_104),
        .O(rand_01_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_01_carry_i_3
       (.I0(rand_01__1_n_105),
        .I1(rand_01_n_105),
        .O(rand_01_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_0[0]_i_1 
       (.I0(rand_01__0_n_105),
        .O(\rand_0[0]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_0[0]_i_1_n_0 ),
        .Q(rand_0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__1_n_6),
        .Q(rand_0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__1_n_5),
        .Q(rand_0[11]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__1_n_4),
        .Q(rand_0[12]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__2_n_7),
        .Q(rand_0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__2_n_6),
        .Q(rand_0[14]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__2_n_5),
        .Q(rand_0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__2_n_4),
        .Q(rand_0[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__3_n_7),
        .Q(rand_0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__3_n_6),
        .Q(rand_0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__3_n_5),
        .Q(rand_0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry_n_7),
        .Q(rand_0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__3_n_4),
        .Q(rand_0[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__4_n_7),
        .Q(rand_0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__4_n_6),
        .Q(rand_0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__4_n_5),
        .Q(rand_0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__4_n_4),
        .Q(rand_0[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__5_n_7),
        .Q(rand_0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__5_n_6),
        .Q(rand_0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__5_n_5),
        .Q(rand_0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__5_n_4),
        .Q(rand_0[28]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__6_n_7),
        .Q(rand_0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry_n_6),
        .Q(rand_0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__6_n_6),
        .Q(rand_0[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_0_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__6_n_5),
        .Q(rand_0[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry_n_5),
        .Q(rand_0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry_n_4),
        .Q(rand_0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__0_n_7),
        .Q(rand_0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__0_n_6),
        .Q(rand_0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__0_n_5),
        .Q(rand_0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__0_n_4),
        .Q(rand_0[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_0_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_00_carry__1_n_7),
        .Q(rand_0[9]),
        .R(1'b0));
  CARRY4 rand_10_carry
       (.CI(1'b0),
        .CO({rand_10_carry_n_0,NLW_rand_10_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_11__0_n_105),
        .DI({rand_11__0_n_101,rand_11__0_n_102,1'b0,1'b0}),
        .O({rand_10_carry_n_4,rand_10_carry_n_5,rand_10_carry_n_6,rand_10_carry_n_7}),
        .S({rand_10_carry_i_1_n_0,rand_10_carry_i_2_n_0,rand_11__0_n_103,rand_11__0_n_104}));
  CARRY4 rand_10_carry__0
       (.CI(rand_10_carry_n_0),
        .CO({rand_10_carry__0_n_0,NLW_rand_10_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_11__0_n_100}),
        .O({rand_10_carry__0_n_4,rand_10_carry__0_n_5,rand_10_carry__0_n_6,rand_10_carry__0_n_7}),
        .S({rand_11__0_n_97,rand_11__0_n_98,rand_11__0_n_99,rand_10_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_10_carry__0_i_4
       (.I0(rand_11__0_n_100),
        .O(rand_10_carry__0_i_4_n_0));
  CARRY4 rand_10_carry__1
       (.CI(rand_10_carry__0_n_0),
        .CO({rand_10_carry__1_n_0,NLW_rand_10_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_11__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_10_carry__1_n_4,rand_10_carry__1_n_5,rand_10_carry__1_n_6,rand_10_carry__1_n_7}),
        .S({rand_10_carry__1_i_1_n_0,rand_11__0_n_94,rand_11__0_n_95,rand_11__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_10_carry__1_i_1
       (.I0(rand_11__0_n_93),
        .O(rand_10_carry__1_i_1_n_0));
  CARRY4 rand_10_carry__2
       (.CI(rand_10_carry__1_n_0),
        .CO({rand_10_carry__2_n_0,NLW_rand_10_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_11__0_n_92}),
        .O({rand_10_carry__2_n_4,rand_10_carry__2_n_5,rand_10_carry__2_n_6,rand_10_carry__2_n_7}),
        .S({rand_11_carry_n_7,rand_11__0_n_90,rand_11__0_n_91,rand_10_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_10_carry__2_i_4
       (.I0(rand_11__0_n_92),
        .O(rand_10_carry__2_i_4_n_0));
  CARRY4 rand_10_carry__3
       (.CI(rand_10_carry__2_n_0),
        .CO({rand_10_carry__3_n_0,NLW_rand_10_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_10_carry__3_n_4,rand_10_carry__3_n_5,rand_10_carry__3_n_6,rand_10_carry__3_n_7}),
        .S({rand_11_carry__0_n_7,rand_11_carry_n_4,rand_11_carry_n_5,rand_11_carry_n_6}));
  CARRY4 rand_10_carry__4
       (.CI(rand_10_carry__3_n_0),
        .CO({rand_10_carry__4_n_0,NLW_rand_10_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_10_carry__4_n_4,rand_10_carry__4_n_5,rand_10_carry__4_n_6,rand_10_carry__4_n_7}),
        .S({rand_11_carry__1_n_7,rand_11_carry__0_n_4,rand_11_carry__0_n_5,rand_11_carry__0_n_6}));
  CARRY4 rand_10_carry__5
       (.CI(rand_10_carry__4_n_0),
        .CO({rand_10_carry__5_n_0,NLW_rand_10_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_10_carry__5_n_4,rand_10_carry__5_n_5,rand_10_carry__5_n_6,rand_10_carry__5_n_7}),
        .S({rand_11_carry__2_n_7,rand_11_carry__1_n_4,rand_11_carry__1_n_5,rand_11_carry__1_n_6}));
  CARRY4 rand_10_carry__6
       (.CI(rand_10_carry__5_n_0),
        .CO(NLW_rand_10_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_10_carry__6_O_UNCONNECTED[3],rand_10_carry__6_n_5,rand_10_carry__6_n_6,rand_10_carry__6_n_7}),
        .S({1'b0,rand_11_carry__2_n_4,rand_11_carry__2_n_5,rand_11_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_10_carry_i_1
       (.I0(rand_11__0_n_101),
        .O(rand_10_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_10_carry_i_2
       (.I0(rand_11__0_n_102),
        .O(rand_10_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_11
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_1[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_11_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_11_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_11_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_11_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_11_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_11_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_11_P_UNCONNECTED[47:15],rand_11_n_91,rand_11_n_92,rand_11_n_93,rand_11_n_94,rand_11_n_95,rand_11_n_96,rand_11_n_97,rand_11_n_98,rand_11_n_99,rand_11_n_100,rand_11_n_101,rand_11_n_102,rand_11_n_103,rand_11_n_104,rand_11_n_105}),
        .PATTERNBDETECT(NLW_rand_11_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_11_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_11_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_11_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_11__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_1[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_11__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_11__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_11__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_11__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_11__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_11__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_11__0_P_UNCONNECTED[47:17],rand_11__0_n_89,rand_11__0_n_90,rand_11__0_n_91,rand_11__0_n_92,rand_11__0_n_93,rand_11__0_n_94,rand_11__0_n_95,rand_11__0_n_96,rand_11__0_n_97,rand_11__0_n_98,rand_11__0_n_99,rand_11__0_n_100,rand_11__0_n_101,rand_11__0_n_102,rand_11__0_n_103,rand_11__0_n_104,rand_11__0_n_105}),
        .PATTERNBDETECT(NLW_rand_11__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_11__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_11__0_n_106,rand_11__0_n_107,rand_11__0_n_108,rand_11__0_n_109,rand_11__0_n_110,rand_11__0_n_111,rand_11__0_n_112,rand_11__0_n_113,rand_11__0_n_114,rand_11__0_n_115,rand_11__0_n_116,rand_11__0_n_117,rand_11__0_n_118,rand_11__0_n_119,rand_11__0_n_120,rand_11__0_n_121,rand_11__0_n_122,rand_11__0_n_123,rand_11__0_n_124,rand_11__0_n_125,rand_11__0_n_126,rand_11__0_n_127,rand_11__0_n_128,rand_11__0_n_129,rand_11__0_n_130,rand_11__0_n_131,rand_11__0_n_132,rand_11__0_n_133,rand_11__0_n_134,rand_11__0_n_135,rand_11__0_n_136,rand_11__0_n_137,rand_11__0_n_138,rand_11__0_n_139,rand_11__0_n_140,rand_11__0_n_141,rand_11__0_n_142,rand_11__0_n_143,rand_11__0_n_144,rand_11__0_n_145,rand_11__0_n_146,rand_11__0_n_147,rand_11__0_n_148,rand_11__0_n_149,rand_11__0_n_150,rand_11__0_n_151,rand_11__0_n_152,rand_11__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_11__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_11__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_1[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_11__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_11__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_11__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_11__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_11__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_11__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_11__1_P_UNCONNECTED[47:15],rand_11__1_n_91,rand_11__1_n_92,rand_11__1_n_93,rand_11__1_n_94,rand_11__1_n_95,rand_11__1_n_96,rand_11__1_n_97,rand_11__1_n_98,rand_11__1_n_99,rand_11__1_n_100,rand_11__1_n_101,rand_11__1_n_102,rand_11__1_n_103,rand_11__1_n_104,rand_11__1_n_105}),
        .PATTERNBDETECT(NLW_rand_11__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_11__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_11__0_n_106,rand_11__0_n_107,rand_11__0_n_108,rand_11__0_n_109,rand_11__0_n_110,rand_11__0_n_111,rand_11__0_n_112,rand_11__0_n_113,rand_11__0_n_114,rand_11__0_n_115,rand_11__0_n_116,rand_11__0_n_117,rand_11__0_n_118,rand_11__0_n_119,rand_11__0_n_120,rand_11__0_n_121,rand_11__0_n_122,rand_11__0_n_123,rand_11__0_n_124,rand_11__0_n_125,rand_11__0_n_126,rand_11__0_n_127,rand_11__0_n_128,rand_11__0_n_129,rand_11__0_n_130,rand_11__0_n_131,rand_11__0_n_132,rand_11__0_n_133,rand_11__0_n_134,rand_11__0_n_135,rand_11__0_n_136,rand_11__0_n_137,rand_11__0_n_138,rand_11__0_n_139,rand_11__0_n_140,rand_11__0_n_141,rand_11__0_n_142,rand_11__0_n_143,rand_11__0_n_144,rand_11__0_n_145,rand_11__0_n_146,rand_11__0_n_147,rand_11__0_n_148,rand_11__0_n_149,rand_11__0_n_150,rand_11__0_n_151,rand_11__0_n_152,rand_11__0_n_153}),
        .PCOUT(NLW_rand_11__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_11__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_11_carry
       (.CI(1'b0),
        .CO({rand_11_carry_n_0,NLW_rand_11_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_11__1_n_103,rand_11__1_n_104,rand_11__1_n_105,1'b0}),
        .O({rand_11_carry_n_4,rand_11_carry_n_5,rand_11_carry_n_6,rand_11_carry_n_7}),
        .S({rand_11_carry_i_1_n_0,rand_11_carry_i_2_n_0,rand_11_carry_i_3_n_0,rand_11__0_n_89}));
  CARRY4 rand_11_carry__0
       (.CI(rand_11_carry_n_0),
        .CO({rand_11_carry__0_n_0,NLW_rand_11_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_11__1_n_99,rand_11__1_n_100,rand_11__1_n_101,rand_11__1_n_102}),
        .O({rand_11_carry__0_n_4,rand_11_carry__0_n_5,rand_11_carry__0_n_6,rand_11_carry__0_n_7}),
        .S({rand_11_carry__0_i_1_n_0,rand_11_carry__0_i_2_n_0,rand_11_carry__0_i_3_n_0,rand_11_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__0_i_1
       (.I0(rand_11__1_n_99),
        .I1(rand_11_n_99),
        .O(rand_11_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__0_i_2
       (.I0(rand_11__1_n_100),
        .I1(rand_11_n_100),
        .O(rand_11_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__0_i_3
       (.I0(rand_11__1_n_101),
        .I1(rand_11_n_101),
        .O(rand_11_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__0_i_4
       (.I0(rand_11__1_n_102),
        .I1(rand_11_n_102),
        .O(rand_11_carry__0_i_4_n_0));
  CARRY4 rand_11_carry__1
       (.CI(rand_11_carry__0_n_0),
        .CO({rand_11_carry__1_n_0,NLW_rand_11_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_11__1_n_95,rand_11__1_n_96,rand_11__1_n_97,rand_11__1_n_98}),
        .O({rand_11_carry__1_n_4,rand_11_carry__1_n_5,rand_11_carry__1_n_6,rand_11_carry__1_n_7}),
        .S({rand_11_carry__1_i_1_n_0,rand_11_carry__1_i_2_n_0,rand_11_carry__1_i_3_n_0,rand_11_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__1_i_1
       (.I0(rand_11__1_n_95),
        .I1(rand_11_n_95),
        .O(rand_11_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__1_i_2
       (.I0(rand_11__1_n_96),
        .I1(rand_11_n_96),
        .O(rand_11_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__1_i_3
       (.I0(rand_11__1_n_97),
        .I1(rand_11_n_97),
        .O(rand_11_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__1_i_4
       (.I0(rand_11__1_n_98),
        .I1(rand_11_n_98),
        .O(rand_11_carry__1_i_4_n_0));
  CARRY4 rand_11_carry__2
       (.CI(rand_11_carry__1_n_0),
        .CO(NLW_rand_11_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_11__1_n_92,rand_11__1_n_93,rand_11__1_n_94}),
        .O({rand_11_carry__2_n_4,rand_11_carry__2_n_5,rand_11_carry__2_n_6,rand_11_carry__2_n_7}),
        .S({rand_11_carry__2_i_1_n_0,rand_11_carry__2_i_2_n_0,rand_11_carry__2_i_3_n_0,rand_11_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__2_i_1
       (.I0(rand_11__1_n_91),
        .I1(rand_11_n_91),
        .O(rand_11_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__2_i_2
       (.I0(rand_11__1_n_92),
        .I1(rand_11_n_92),
        .O(rand_11_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__2_i_3
       (.I0(rand_11__1_n_93),
        .I1(rand_11_n_93),
        .O(rand_11_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry__2_i_4
       (.I0(rand_11__1_n_94),
        .I1(rand_11_n_94),
        .O(rand_11_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry_i_1
       (.I0(rand_11__1_n_103),
        .I1(rand_11_n_103),
        .O(rand_11_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry_i_2
       (.I0(rand_11__1_n_104),
        .I1(rand_11_n_104),
        .O(rand_11_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_11_carry_i_3
       (.I0(rand_11__1_n_105),
        .I1(rand_11_n_105),
        .O(rand_11_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_1[0]_i_1 
       (.I0(rand_11__0_n_105),
        .O(\rand_1[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_1[0]_i_1_n_0 ),
        .Q(rand_1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__1_n_6),
        .Q(rand_1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__1_n_5),
        .Q(rand_1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__1_n_4),
        .Q(rand_1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__2_n_7),
        .Q(rand_1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__2_n_6),
        .Q(rand_1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__2_n_5),
        .Q(rand_1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__2_n_4),
        .Q(rand_1[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__3_n_7),
        .Q(rand_1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__3_n_6),
        .Q(rand_1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__3_n_5),
        .Q(rand_1[19]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry_n_7),
        .Q(rand_1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__3_n_4),
        .Q(rand_1[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__4_n_7),
        .Q(rand_1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__4_n_6),
        .Q(rand_1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__4_n_5),
        .Q(rand_1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__4_n_4),
        .Q(rand_1[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__5_n_7),
        .Q(rand_1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__5_n_6),
        .Q(rand_1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__5_n_5),
        .Q(rand_1[27]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_1_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__5_n_4),
        .Q(rand_1[28]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_1_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__6_n_7),
        .Q(rand_1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry_n_6),
        .Q(rand_1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__6_n_6),
        .Q(rand_1[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_1_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__6_n_5),
        .Q(rand_1[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry_n_5),
        .Q(rand_1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry_n_4),
        .Q(rand_1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__0_n_7),
        .Q(rand_1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__0_n_6),
        .Q(rand_1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__0_n_5),
        .Q(rand_1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__0_n_4),
        .Q(rand_1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_10_carry__1_n_7),
        .Q(rand_1[9]),
        .R(1'b0));
  CARRY4 rand_20_carry
       (.CI(1'b0),
        .CO({rand_20_carry_n_0,NLW_rand_20_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_21__0_n_105),
        .DI({rand_21__0_n_101,rand_21__0_n_102,1'b0,1'b0}),
        .O({rand_20_carry_n_4,rand_20_carry_n_5,rand_20_carry_n_6,rand_20_carry_n_7}),
        .S({rand_20_carry_i_1_n_0,rand_20_carry_i_2_n_0,rand_21__0_n_103,rand_21__0_n_104}));
  CARRY4 rand_20_carry__0
       (.CI(rand_20_carry_n_0),
        .CO({rand_20_carry__0_n_0,NLW_rand_20_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_21__0_n_100}),
        .O({rand_20_carry__0_n_4,rand_20_carry__0_n_5,rand_20_carry__0_n_6,rand_20_carry__0_n_7}),
        .S({rand_21__0_n_97,rand_21__0_n_98,rand_21__0_n_99,rand_20_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_20_carry__0_i_4
       (.I0(rand_21__0_n_100),
        .O(rand_20_carry__0_i_4_n_0));
  CARRY4 rand_20_carry__1
       (.CI(rand_20_carry__0_n_0),
        .CO({rand_20_carry__1_n_0,NLW_rand_20_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_21__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_20_carry__1_n_4,rand_20_carry__1_n_5,rand_20_carry__1_n_6,rand_20_carry__1_n_7}),
        .S({rand_20_carry__1_i_1_n_0,rand_21__0_n_94,rand_21__0_n_95,rand_21__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_20_carry__1_i_1
       (.I0(rand_21__0_n_93),
        .O(rand_20_carry__1_i_1_n_0));
  CARRY4 rand_20_carry__2
       (.CI(rand_20_carry__1_n_0),
        .CO({rand_20_carry__2_n_0,NLW_rand_20_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_21__0_n_92}),
        .O({rand_20_carry__2_n_4,rand_20_carry__2_n_5,rand_20_carry__2_n_6,rand_20_carry__2_n_7}),
        .S({rand_21_carry_n_7,rand_21__0_n_90,rand_21__0_n_91,rand_20_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_20_carry__2_i_4
       (.I0(rand_21__0_n_92),
        .O(rand_20_carry__2_i_4_n_0));
  CARRY4 rand_20_carry__3
       (.CI(rand_20_carry__2_n_0),
        .CO({rand_20_carry__3_n_0,NLW_rand_20_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_20_carry__3_n_4,rand_20_carry__3_n_5,rand_20_carry__3_n_6,rand_20_carry__3_n_7}),
        .S({rand_21_carry__0_n_7,rand_21_carry_n_4,rand_21_carry_n_5,rand_21_carry_n_6}));
  CARRY4 rand_20_carry__4
       (.CI(rand_20_carry__3_n_0),
        .CO({rand_20_carry__4_n_0,NLW_rand_20_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_20_carry__4_n_4,rand_20_carry__4_n_5,rand_20_carry__4_n_6,rand_20_carry__4_n_7}),
        .S({rand_21_carry__1_n_7,rand_21_carry__0_n_4,rand_21_carry__0_n_5,rand_21_carry__0_n_6}));
  CARRY4 rand_20_carry__5
       (.CI(rand_20_carry__4_n_0),
        .CO({rand_20_carry__5_n_0,NLW_rand_20_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_20_carry__5_n_4,rand_20_carry__5_n_5,rand_20_carry__5_n_6,rand_20_carry__5_n_7}),
        .S({rand_21_carry__2_n_7,rand_21_carry__1_n_4,rand_21_carry__1_n_5,rand_21_carry__1_n_6}));
  CARRY4 rand_20_carry__6
       (.CI(rand_20_carry__5_n_0),
        .CO(NLW_rand_20_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_20_carry__6_O_UNCONNECTED[3],rand_20_carry__6_n_5,rand_20_carry__6_n_6,rand_20_carry__6_n_7}),
        .S({1'b0,rand_21_carry__2_n_4,rand_21_carry__2_n_5,rand_21_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_20_carry_i_1
       (.I0(rand_21__0_n_101),
        .O(rand_20_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_20_carry_i_2
       (.I0(rand_21__0_n_102),
        .O(rand_20_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_21
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_2[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_21_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_21_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_21_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_21_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_21_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_21_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_21_P_UNCONNECTED[47:15],rand_21_n_91,rand_21_n_92,rand_21_n_93,rand_21_n_94,rand_21_n_95,rand_21_n_96,rand_21_n_97,rand_21_n_98,rand_21_n_99,rand_21_n_100,rand_21_n_101,rand_21_n_102,rand_21_n_103,rand_21_n_104,rand_21_n_105}),
        .PATTERNBDETECT(NLW_rand_21_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_21_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_21_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_21_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_21__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_2[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_21__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_21__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_21__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_21__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_21__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_21__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_21__0_P_UNCONNECTED[47:17],rand_21__0_n_89,rand_21__0_n_90,rand_21__0_n_91,rand_21__0_n_92,rand_21__0_n_93,rand_21__0_n_94,rand_21__0_n_95,rand_21__0_n_96,rand_21__0_n_97,rand_21__0_n_98,rand_21__0_n_99,rand_21__0_n_100,rand_21__0_n_101,rand_21__0_n_102,rand_21__0_n_103,rand_21__0_n_104,rand_21__0_n_105}),
        .PATTERNBDETECT(NLW_rand_21__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_21__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_21__0_n_106,rand_21__0_n_107,rand_21__0_n_108,rand_21__0_n_109,rand_21__0_n_110,rand_21__0_n_111,rand_21__0_n_112,rand_21__0_n_113,rand_21__0_n_114,rand_21__0_n_115,rand_21__0_n_116,rand_21__0_n_117,rand_21__0_n_118,rand_21__0_n_119,rand_21__0_n_120,rand_21__0_n_121,rand_21__0_n_122,rand_21__0_n_123,rand_21__0_n_124,rand_21__0_n_125,rand_21__0_n_126,rand_21__0_n_127,rand_21__0_n_128,rand_21__0_n_129,rand_21__0_n_130,rand_21__0_n_131,rand_21__0_n_132,rand_21__0_n_133,rand_21__0_n_134,rand_21__0_n_135,rand_21__0_n_136,rand_21__0_n_137,rand_21__0_n_138,rand_21__0_n_139,rand_21__0_n_140,rand_21__0_n_141,rand_21__0_n_142,rand_21__0_n_143,rand_21__0_n_144,rand_21__0_n_145,rand_21__0_n_146,rand_21__0_n_147,rand_21__0_n_148,rand_21__0_n_149,rand_21__0_n_150,rand_21__0_n_151,rand_21__0_n_152,rand_21__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_21__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_21__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_2[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_21__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_21__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_21__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_21__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_21__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_21__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_21__1_P_UNCONNECTED[47:15],rand_21__1_n_91,rand_21__1_n_92,rand_21__1_n_93,rand_21__1_n_94,rand_21__1_n_95,rand_21__1_n_96,rand_21__1_n_97,rand_21__1_n_98,rand_21__1_n_99,rand_21__1_n_100,rand_21__1_n_101,rand_21__1_n_102,rand_21__1_n_103,rand_21__1_n_104,rand_21__1_n_105}),
        .PATTERNBDETECT(NLW_rand_21__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_21__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_21__0_n_106,rand_21__0_n_107,rand_21__0_n_108,rand_21__0_n_109,rand_21__0_n_110,rand_21__0_n_111,rand_21__0_n_112,rand_21__0_n_113,rand_21__0_n_114,rand_21__0_n_115,rand_21__0_n_116,rand_21__0_n_117,rand_21__0_n_118,rand_21__0_n_119,rand_21__0_n_120,rand_21__0_n_121,rand_21__0_n_122,rand_21__0_n_123,rand_21__0_n_124,rand_21__0_n_125,rand_21__0_n_126,rand_21__0_n_127,rand_21__0_n_128,rand_21__0_n_129,rand_21__0_n_130,rand_21__0_n_131,rand_21__0_n_132,rand_21__0_n_133,rand_21__0_n_134,rand_21__0_n_135,rand_21__0_n_136,rand_21__0_n_137,rand_21__0_n_138,rand_21__0_n_139,rand_21__0_n_140,rand_21__0_n_141,rand_21__0_n_142,rand_21__0_n_143,rand_21__0_n_144,rand_21__0_n_145,rand_21__0_n_146,rand_21__0_n_147,rand_21__0_n_148,rand_21__0_n_149,rand_21__0_n_150,rand_21__0_n_151,rand_21__0_n_152,rand_21__0_n_153}),
        .PCOUT(NLW_rand_21__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_21__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_21_carry
       (.CI(1'b0),
        .CO({rand_21_carry_n_0,NLW_rand_21_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_21__1_n_103,rand_21__1_n_104,rand_21__1_n_105,1'b0}),
        .O({rand_21_carry_n_4,rand_21_carry_n_5,rand_21_carry_n_6,rand_21_carry_n_7}),
        .S({rand_21_carry_i_1_n_0,rand_21_carry_i_2_n_0,rand_21_carry_i_3_n_0,rand_21__0_n_89}));
  CARRY4 rand_21_carry__0
       (.CI(rand_21_carry_n_0),
        .CO({rand_21_carry__0_n_0,NLW_rand_21_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_21__1_n_99,rand_21__1_n_100,rand_21__1_n_101,rand_21__1_n_102}),
        .O({rand_21_carry__0_n_4,rand_21_carry__0_n_5,rand_21_carry__0_n_6,rand_21_carry__0_n_7}),
        .S({rand_21_carry__0_i_1_n_0,rand_21_carry__0_i_2_n_0,rand_21_carry__0_i_3_n_0,rand_21_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__0_i_1
       (.I0(rand_21__1_n_99),
        .I1(rand_21_n_99),
        .O(rand_21_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__0_i_2
       (.I0(rand_21__1_n_100),
        .I1(rand_21_n_100),
        .O(rand_21_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__0_i_3
       (.I0(rand_21__1_n_101),
        .I1(rand_21_n_101),
        .O(rand_21_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__0_i_4
       (.I0(rand_21__1_n_102),
        .I1(rand_21_n_102),
        .O(rand_21_carry__0_i_4_n_0));
  CARRY4 rand_21_carry__1
       (.CI(rand_21_carry__0_n_0),
        .CO({rand_21_carry__1_n_0,NLW_rand_21_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_21__1_n_95,rand_21__1_n_96,rand_21__1_n_97,rand_21__1_n_98}),
        .O({rand_21_carry__1_n_4,rand_21_carry__1_n_5,rand_21_carry__1_n_6,rand_21_carry__1_n_7}),
        .S({rand_21_carry__1_i_1_n_0,rand_21_carry__1_i_2_n_0,rand_21_carry__1_i_3_n_0,rand_21_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__1_i_1
       (.I0(rand_21__1_n_95),
        .I1(rand_21_n_95),
        .O(rand_21_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__1_i_2
       (.I0(rand_21__1_n_96),
        .I1(rand_21_n_96),
        .O(rand_21_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__1_i_3
       (.I0(rand_21__1_n_97),
        .I1(rand_21_n_97),
        .O(rand_21_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__1_i_4
       (.I0(rand_21__1_n_98),
        .I1(rand_21_n_98),
        .O(rand_21_carry__1_i_4_n_0));
  CARRY4 rand_21_carry__2
       (.CI(rand_21_carry__1_n_0),
        .CO(NLW_rand_21_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_21__1_n_92,rand_21__1_n_93,rand_21__1_n_94}),
        .O({rand_21_carry__2_n_4,rand_21_carry__2_n_5,rand_21_carry__2_n_6,rand_21_carry__2_n_7}),
        .S({rand_21_carry__2_i_1_n_0,rand_21_carry__2_i_2_n_0,rand_21_carry__2_i_3_n_0,rand_21_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__2_i_1
       (.I0(rand_21__1_n_91),
        .I1(rand_21_n_91),
        .O(rand_21_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__2_i_2
       (.I0(rand_21__1_n_92),
        .I1(rand_21_n_92),
        .O(rand_21_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__2_i_3
       (.I0(rand_21__1_n_93),
        .I1(rand_21_n_93),
        .O(rand_21_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry__2_i_4
       (.I0(rand_21__1_n_94),
        .I1(rand_21_n_94),
        .O(rand_21_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry_i_1
       (.I0(rand_21__1_n_103),
        .I1(rand_21_n_103),
        .O(rand_21_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry_i_2
       (.I0(rand_21__1_n_104),
        .I1(rand_21_n_104),
        .O(rand_21_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_21_carry_i_3
       (.I0(rand_21__1_n_105),
        .I1(rand_21_n_105),
        .O(rand_21_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_2[0]_i_1 
       (.I0(rand_21__0_n_105),
        .O(\rand_2[0]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_2[0]_i_1_n_0 ),
        .Q(rand_2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__1_n_6),
        .Q(rand_2[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__1_n_5),
        .Q(rand_2[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__1_n_4),
        .Q(rand_2[12]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__2_n_7),
        .Q(rand_2[13]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__2_n_6),
        .Q(rand_2[14]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__2_n_5),
        .Q(rand_2[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__2_n_4),
        .Q(rand_2[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__3_n_7),
        .Q(rand_2[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__3_n_6),
        .Q(rand_2[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__3_n_5),
        .Q(rand_2[19]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry_n_7),
        .Q(rand_2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__3_n_4),
        .Q(rand_2[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__4_n_7),
        .Q(rand_2[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__4_n_6),
        .Q(rand_2[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__4_n_5),
        .Q(rand_2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__4_n_4),
        .Q(rand_2[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__5_n_7),
        .Q(rand_2[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__5_n_6),
        .Q(rand_2[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__5_n_5),
        .Q(rand_2[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__5_n_4),
        .Q(rand_2[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__6_n_7),
        .Q(rand_2[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry_n_6),
        .Q(rand_2[2]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__6_n_6),
        .Q(rand_2[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_2_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__6_n_5),
        .Q(rand_2[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry_n_5),
        .Q(rand_2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry_n_4),
        .Q(rand_2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__0_n_7),
        .Q(rand_2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__0_n_6),
        .Q(rand_2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__0_n_5),
        .Q(rand_2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__0_n_4),
        .Q(rand_2[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_2_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_20_carry__1_n_7),
        .Q(rand_2[9]),
        .R(1'b0));
  CARRY4 rand_30_carry
       (.CI(1'b0),
        .CO({rand_30_carry_n_0,NLW_rand_30_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_31__0_n_105),
        .DI({rand_31__0_n_101,rand_31__0_n_102,1'b0,1'b0}),
        .O({rand_30_carry_n_4,rand_30_carry_n_5,rand_30_carry_n_6,rand_30_carry_n_7}),
        .S({rand_30_carry_i_1_n_0,rand_30_carry_i_2_n_0,rand_31__0_n_103,rand_31__0_n_104}));
  CARRY4 rand_30_carry__0
       (.CI(rand_30_carry_n_0),
        .CO({rand_30_carry__0_n_0,NLW_rand_30_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_31__0_n_100}),
        .O({rand_30_carry__0_n_4,rand_30_carry__0_n_5,rand_30_carry__0_n_6,rand_30_carry__0_n_7}),
        .S({rand_31__0_n_97,rand_31__0_n_98,rand_31__0_n_99,rand_30_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_30_carry__0_i_4
       (.I0(rand_31__0_n_100),
        .O(rand_30_carry__0_i_4_n_0));
  CARRY4 rand_30_carry__1
       (.CI(rand_30_carry__0_n_0),
        .CO({rand_30_carry__1_n_0,NLW_rand_30_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_31__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_30_carry__1_n_4,rand_30_carry__1_n_5,rand_30_carry__1_n_6,rand_30_carry__1_n_7}),
        .S({rand_30_carry__1_i_1_n_0,rand_31__0_n_94,rand_31__0_n_95,rand_31__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_30_carry__1_i_1
       (.I0(rand_31__0_n_93),
        .O(rand_30_carry__1_i_1_n_0));
  CARRY4 rand_30_carry__2
       (.CI(rand_30_carry__1_n_0),
        .CO({rand_30_carry__2_n_0,NLW_rand_30_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_31__0_n_92}),
        .O({rand_30_carry__2_n_4,rand_30_carry__2_n_5,rand_30_carry__2_n_6,rand_30_carry__2_n_7}),
        .S({rand_31_carry_n_7,rand_31__0_n_90,rand_31__0_n_91,rand_30_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_30_carry__2_i_4
       (.I0(rand_31__0_n_92),
        .O(rand_30_carry__2_i_4_n_0));
  CARRY4 rand_30_carry__3
       (.CI(rand_30_carry__2_n_0),
        .CO({rand_30_carry__3_n_0,NLW_rand_30_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_30_carry__3_n_4,rand_30_carry__3_n_5,rand_30_carry__3_n_6,rand_30_carry__3_n_7}),
        .S({rand_31_carry__0_n_7,rand_31_carry_n_4,rand_31_carry_n_5,rand_31_carry_n_6}));
  CARRY4 rand_30_carry__4
       (.CI(rand_30_carry__3_n_0),
        .CO({rand_30_carry__4_n_0,NLW_rand_30_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_30_carry__4_n_4,rand_30_carry__4_n_5,rand_30_carry__4_n_6,rand_30_carry__4_n_7}),
        .S({rand_31_carry__1_n_7,rand_31_carry__0_n_4,rand_31_carry__0_n_5,rand_31_carry__0_n_6}));
  CARRY4 rand_30_carry__5
       (.CI(rand_30_carry__4_n_0),
        .CO({rand_30_carry__5_n_0,NLW_rand_30_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_30_carry__5_n_4,rand_30_carry__5_n_5,rand_30_carry__5_n_6,rand_30_carry__5_n_7}),
        .S({rand_31_carry__2_n_7,rand_31_carry__1_n_4,rand_31_carry__1_n_5,rand_31_carry__1_n_6}));
  CARRY4 rand_30_carry__6
       (.CI(rand_30_carry__5_n_0),
        .CO(NLW_rand_30_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_30_carry__6_O_UNCONNECTED[3],rand_30_carry__6_n_5,rand_30_carry__6_n_6,rand_30_carry__6_n_7}),
        .S({1'b0,rand_31_carry__2_n_4,rand_31_carry__2_n_5,rand_31_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_30_carry_i_1
       (.I0(rand_31__0_n_101),
        .O(rand_30_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_30_carry_i_2
       (.I0(rand_31__0_n_102),
        .O(rand_30_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_31
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_3[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_31_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_31_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_31_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_31_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_31_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_31_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_31_P_UNCONNECTED[47:15],rand_31_n_91,rand_31_n_92,rand_31_n_93,rand_31_n_94,rand_31_n_95,rand_31_n_96,rand_31_n_97,rand_31_n_98,rand_31_n_99,rand_31_n_100,rand_31_n_101,rand_31_n_102,rand_31_n_103,rand_31_n_104,rand_31_n_105}),
        .PATTERNBDETECT(NLW_rand_31_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_31_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_31_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_31_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_31__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_3[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_31__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_31__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_31__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_31__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_31__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_31__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_31__0_P_UNCONNECTED[47:17],rand_31__0_n_89,rand_31__0_n_90,rand_31__0_n_91,rand_31__0_n_92,rand_31__0_n_93,rand_31__0_n_94,rand_31__0_n_95,rand_31__0_n_96,rand_31__0_n_97,rand_31__0_n_98,rand_31__0_n_99,rand_31__0_n_100,rand_31__0_n_101,rand_31__0_n_102,rand_31__0_n_103,rand_31__0_n_104,rand_31__0_n_105}),
        .PATTERNBDETECT(NLW_rand_31__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_31__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_31__0_n_106,rand_31__0_n_107,rand_31__0_n_108,rand_31__0_n_109,rand_31__0_n_110,rand_31__0_n_111,rand_31__0_n_112,rand_31__0_n_113,rand_31__0_n_114,rand_31__0_n_115,rand_31__0_n_116,rand_31__0_n_117,rand_31__0_n_118,rand_31__0_n_119,rand_31__0_n_120,rand_31__0_n_121,rand_31__0_n_122,rand_31__0_n_123,rand_31__0_n_124,rand_31__0_n_125,rand_31__0_n_126,rand_31__0_n_127,rand_31__0_n_128,rand_31__0_n_129,rand_31__0_n_130,rand_31__0_n_131,rand_31__0_n_132,rand_31__0_n_133,rand_31__0_n_134,rand_31__0_n_135,rand_31__0_n_136,rand_31__0_n_137,rand_31__0_n_138,rand_31__0_n_139,rand_31__0_n_140,rand_31__0_n_141,rand_31__0_n_142,rand_31__0_n_143,rand_31__0_n_144,rand_31__0_n_145,rand_31__0_n_146,rand_31__0_n_147,rand_31__0_n_148,rand_31__0_n_149,rand_31__0_n_150,rand_31__0_n_151,rand_31__0_n_152,rand_31__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_31__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_31__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_3[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_31__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_31__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_31__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_31__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_31__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_31__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_31__1_P_UNCONNECTED[47:15],rand_31__1_n_91,rand_31__1_n_92,rand_31__1_n_93,rand_31__1_n_94,rand_31__1_n_95,rand_31__1_n_96,rand_31__1_n_97,rand_31__1_n_98,rand_31__1_n_99,rand_31__1_n_100,rand_31__1_n_101,rand_31__1_n_102,rand_31__1_n_103,rand_31__1_n_104,rand_31__1_n_105}),
        .PATTERNBDETECT(NLW_rand_31__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_31__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_31__0_n_106,rand_31__0_n_107,rand_31__0_n_108,rand_31__0_n_109,rand_31__0_n_110,rand_31__0_n_111,rand_31__0_n_112,rand_31__0_n_113,rand_31__0_n_114,rand_31__0_n_115,rand_31__0_n_116,rand_31__0_n_117,rand_31__0_n_118,rand_31__0_n_119,rand_31__0_n_120,rand_31__0_n_121,rand_31__0_n_122,rand_31__0_n_123,rand_31__0_n_124,rand_31__0_n_125,rand_31__0_n_126,rand_31__0_n_127,rand_31__0_n_128,rand_31__0_n_129,rand_31__0_n_130,rand_31__0_n_131,rand_31__0_n_132,rand_31__0_n_133,rand_31__0_n_134,rand_31__0_n_135,rand_31__0_n_136,rand_31__0_n_137,rand_31__0_n_138,rand_31__0_n_139,rand_31__0_n_140,rand_31__0_n_141,rand_31__0_n_142,rand_31__0_n_143,rand_31__0_n_144,rand_31__0_n_145,rand_31__0_n_146,rand_31__0_n_147,rand_31__0_n_148,rand_31__0_n_149,rand_31__0_n_150,rand_31__0_n_151,rand_31__0_n_152,rand_31__0_n_153}),
        .PCOUT(NLW_rand_31__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_31__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_31_carry
       (.CI(1'b0),
        .CO({rand_31_carry_n_0,NLW_rand_31_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_31__1_n_103,rand_31__1_n_104,rand_31__1_n_105,1'b0}),
        .O({rand_31_carry_n_4,rand_31_carry_n_5,rand_31_carry_n_6,rand_31_carry_n_7}),
        .S({rand_31_carry_i_1_n_0,rand_31_carry_i_2_n_0,rand_31_carry_i_3_n_0,rand_31__0_n_89}));
  CARRY4 rand_31_carry__0
       (.CI(rand_31_carry_n_0),
        .CO({rand_31_carry__0_n_0,NLW_rand_31_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_31__1_n_99,rand_31__1_n_100,rand_31__1_n_101,rand_31__1_n_102}),
        .O({rand_31_carry__0_n_4,rand_31_carry__0_n_5,rand_31_carry__0_n_6,rand_31_carry__0_n_7}),
        .S({rand_31_carry__0_i_1_n_0,rand_31_carry__0_i_2_n_0,rand_31_carry__0_i_3_n_0,rand_31_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__0_i_1
       (.I0(rand_31__1_n_99),
        .I1(rand_31_n_99),
        .O(rand_31_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__0_i_2
       (.I0(rand_31__1_n_100),
        .I1(rand_31_n_100),
        .O(rand_31_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__0_i_3
       (.I0(rand_31__1_n_101),
        .I1(rand_31_n_101),
        .O(rand_31_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__0_i_4
       (.I0(rand_31__1_n_102),
        .I1(rand_31_n_102),
        .O(rand_31_carry__0_i_4_n_0));
  CARRY4 rand_31_carry__1
       (.CI(rand_31_carry__0_n_0),
        .CO({rand_31_carry__1_n_0,NLW_rand_31_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_31__1_n_95,rand_31__1_n_96,rand_31__1_n_97,rand_31__1_n_98}),
        .O({rand_31_carry__1_n_4,rand_31_carry__1_n_5,rand_31_carry__1_n_6,rand_31_carry__1_n_7}),
        .S({rand_31_carry__1_i_1_n_0,rand_31_carry__1_i_2_n_0,rand_31_carry__1_i_3_n_0,rand_31_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__1_i_1
       (.I0(rand_31__1_n_95),
        .I1(rand_31_n_95),
        .O(rand_31_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__1_i_2
       (.I0(rand_31__1_n_96),
        .I1(rand_31_n_96),
        .O(rand_31_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__1_i_3
       (.I0(rand_31__1_n_97),
        .I1(rand_31_n_97),
        .O(rand_31_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__1_i_4
       (.I0(rand_31__1_n_98),
        .I1(rand_31_n_98),
        .O(rand_31_carry__1_i_4_n_0));
  CARRY4 rand_31_carry__2
       (.CI(rand_31_carry__1_n_0),
        .CO(NLW_rand_31_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_31__1_n_92,rand_31__1_n_93,rand_31__1_n_94}),
        .O({rand_31_carry__2_n_4,rand_31_carry__2_n_5,rand_31_carry__2_n_6,rand_31_carry__2_n_7}),
        .S({rand_31_carry__2_i_1_n_0,rand_31_carry__2_i_2_n_0,rand_31_carry__2_i_3_n_0,rand_31_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__2_i_1
       (.I0(rand_31__1_n_91),
        .I1(rand_31_n_91),
        .O(rand_31_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__2_i_2
       (.I0(rand_31__1_n_92),
        .I1(rand_31_n_92),
        .O(rand_31_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__2_i_3
       (.I0(rand_31__1_n_93),
        .I1(rand_31_n_93),
        .O(rand_31_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry__2_i_4
       (.I0(rand_31__1_n_94),
        .I1(rand_31_n_94),
        .O(rand_31_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry_i_1
       (.I0(rand_31__1_n_103),
        .I1(rand_31_n_103),
        .O(rand_31_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry_i_2
       (.I0(rand_31__1_n_104),
        .I1(rand_31_n_104),
        .O(rand_31_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_31_carry_i_3
       (.I0(rand_31__1_n_105),
        .I1(rand_31_n_105),
        .O(rand_31_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_3[0]_i_1 
       (.I0(rand_31__0_n_105),
        .O(\rand_3[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_3[0]_i_1_n_0 ),
        .Q(rand_3[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__1_n_6),
        .Q(rand_3[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__1_n_5),
        .Q(rand_3[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__1_n_4),
        .Q(rand_3[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__2_n_7),
        .Q(rand_3[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__2_n_6),
        .Q(rand_3[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__2_n_5),
        .Q(rand_3[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__2_n_4),
        .Q(rand_3[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__3_n_7),
        .Q(rand_3[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__3_n_6),
        .Q(rand_3[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__3_n_5),
        .Q(rand_3[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry_n_7),
        .Q(rand_3[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__3_n_4),
        .Q(rand_3[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__4_n_7),
        .Q(rand_3[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__4_n_6),
        .Q(rand_3[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__4_n_5),
        .Q(rand_3[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__4_n_4),
        .Q(rand_3[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__5_n_7),
        .Q(rand_3[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__5_n_6),
        .Q(rand_3[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__5_n_5),
        .Q(rand_3[27]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_3_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__5_n_4),
        .Q(rand_3[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__6_n_7),
        .Q(rand_3[29]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_3_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry_n_6),
        .Q(rand_3[2]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_3_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__6_n_6),
        .Q(rand_3[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_3_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__6_n_5),
        .Q(rand_3[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry_n_5),
        .Q(rand_3[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry_n_4),
        .Q(rand_3[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__0_n_7),
        .Q(rand_3[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__0_n_6),
        .Q(rand_3[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__0_n_5),
        .Q(rand_3[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__0_n_4),
        .Q(rand_3[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_3_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_30_carry__1_n_7),
        .Q(rand_3[9]),
        .R(1'b0));
  CARRY4 rand_40_carry
       (.CI(1'b0),
        .CO({rand_40_carry_n_0,NLW_rand_40_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_41__0_n_105),
        .DI({rand_41__0_n_101,rand_41__0_n_102,1'b0,1'b0}),
        .O({rand_40_carry_n_4,rand_40_carry_n_5,rand_40_carry_n_6,rand_40_carry_n_7}),
        .S({rand_40_carry_i_1_n_0,rand_40_carry_i_2_n_0,rand_41__0_n_103,rand_41__0_n_104}));
  CARRY4 rand_40_carry__0
       (.CI(rand_40_carry_n_0),
        .CO({rand_40_carry__0_n_0,NLW_rand_40_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_41__0_n_100}),
        .O({rand_40_carry__0_n_4,rand_40_carry__0_n_5,rand_40_carry__0_n_6,rand_40_carry__0_n_7}),
        .S({rand_41__0_n_97,rand_41__0_n_98,rand_41__0_n_99,rand_40_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_40_carry__0_i_4
       (.I0(rand_41__0_n_100),
        .O(rand_40_carry__0_i_4_n_0));
  CARRY4 rand_40_carry__1
       (.CI(rand_40_carry__0_n_0),
        .CO({rand_40_carry__1_n_0,NLW_rand_40_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_41__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_40_carry__1_n_4,rand_40_carry__1_n_5,rand_40_carry__1_n_6,rand_40_carry__1_n_7}),
        .S({rand_40_carry__1_i_1_n_0,rand_41__0_n_94,rand_41__0_n_95,rand_41__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_40_carry__1_i_1
       (.I0(rand_41__0_n_93),
        .O(rand_40_carry__1_i_1_n_0));
  CARRY4 rand_40_carry__2
       (.CI(rand_40_carry__1_n_0),
        .CO({rand_40_carry__2_n_0,NLW_rand_40_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_41__0_n_92}),
        .O({rand_40_carry__2_n_4,rand_40_carry__2_n_5,rand_40_carry__2_n_6,rand_40_carry__2_n_7}),
        .S({rand_41_carry_n_7,rand_41__0_n_90,rand_41__0_n_91,rand_40_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_40_carry__2_i_4
       (.I0(rand_41__0_n_92),
        .O(rand_40_carry__2_i_4_n_0));
  CARRY4 rand_40_carry__3
       (.CI(rand_40_carry__2_n_0),
        .CO({rand_40_carry__3_n_0,NLW_rand_40_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_40_carry__3_n_4,rand_40_carry__3_n_5,rand_40_carry__3_n_6,rand_40_carry__3_n_7}),
        .S({rand_41_carry__0_n_7,rand_41_carry_n_4,rand_41_carry_n_5,rand_41_carry_n_6}));
  CARRY4 rand_40_carry__4
       (.CI(rand_40_carry__3_n_0),
        .CO({rand_40_carry__4_n_0,NLW_rand_40_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_40_carry__4_n_4,rand_40_carry__4_n_5,rand_40_carry__4_n_6,rand_40_carry__4_n_7}),
        .S({rand_41_carry__1_n_7,rand_41_carry__0_n_4,rand_41_carry__0_n_5,rand_41_carry__0_n_6}));
  CARRY4 rand_40_carry__5
       (.CI(rand_40_carry__4_n_0),
        .CO({rand_40_carry__5_n_0,NLW_rand_40_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_40_carry__5_n_4,rand_40_carry__5_n_5,rand_40_carry__5_n_6,rand_40_carry__5_n_7}),
        .S({rand_41_carry__2_n_7,rand_41_carry__1_n_4,rand_41_carry__1_n_5,rand_41_carry__1_n_6}));
  CARRY4 rand_40_carry__6
       (.CI(rand_40_carry__5_n_0),
        .CO(NLW_rand_40_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_40_carry__6_O_UNCONNECTED[3],rand_40_carry__6_n_5,rand_40_carry__6_n_6,rand_40_carry__6_n_7}),
        .S({1'b0,rand_41_carry__2_n_4,rand_41_carry__2_n_5,rand_41_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_40_carry_i_1
       (.I0(rand_41__0_n_101),
        .O(rand_40_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_40_carry_i_2
       (.I0(rand_41__0_n_102),
        .O(rand_40_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_41
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_4[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_41_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_41_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_41_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_41_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_41_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_41_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_41_P_UNCONNECTED[47:15],rand_41_n_91,rand_41_n_92,rand_41_n_93,rand_41_n_94,rand_41_n_95,rand_41_n_96,rand_41_n_97,rand_41_n_98,rand_41_n_99,rand_41_n_100,rand_41_n_101,rand_41_n_102,rand_41_n_103,rand_41_n_104,rand_41_n_105}),
        .PATTERNBDETECT(NLW_rand_41_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_41_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_41_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_41_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_41__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_4[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_41__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_41__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_41__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_41__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_41__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_41__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_41__0_P_UNCONNECTED[47:17],rand_41__0_n_89,rand_41__0_n_90,rand_41__0_n_91,rand_41__0_n_92,rand_41__0_n_93,rand_41__0_n_94,rand_41__0_n_95,rand_41__0_n_96,rand_41__0_n_97,rand_41__0_n_98,rand_41__0_n_99,rand_41__0_n_100,rand_41__0_n_101,rand_41__0_n_102,rand_41__0_n_103,rand_41__0_n_104,rand_41__0_n_105}),
        .PATTERNBDETECT(NLW_rand_41__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_41__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_41__0_n_106,rand_41__0_n_107,rand_41__0_n_108,rand_41__0_n_109,rand_41__0_n_110,rand_41__0_n_111,rand_41__0_n_112,rand_41__0_n_113,rand_41__0_n_114,rand_41__0_n_115,rand_41__0_n_116,rand_41__0_n_117,rand_41__0_n_118,rand_41__0_n_119,rand_41__0_n_120,rand_41__0_n_121,rand_41__0_n_122,rand_41__0_n_123,rand_41__0_n_124,rand_41__0_n_125,rand_41__0_n_126,rand_41__0_n_127,rand_41__0_n_128,rand_41__0_n_129,rand_41__0_n_130,rand_41__0_n_131,rand_41__0_n_132,rand_41__0_n_133,rand_41__0_n_134,rand_41__0_n_135,rand_41__0_n_136,rand_41__0_n_137,rand_41__0_n_138,rand_41__0_n_139,rand_41__0_n_140,rand_41__0_n_141,rand_41__0_n_142,rand_41__0_n_143,rand_41__0_n_144,rand_41__0_n_145,rand_41__0_n_146,rand_41__0_n_147,rand_41__0_n_148,rand_41__0_n_149,rand_41__0_n_150,rand_41__0_n_151,rand_41__0_n_152,rand_41__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_41__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_41__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_4[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_41__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_41__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_41__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_41__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_41__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_41__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_41__1_P_UNCONNECTED[47:15],rand_41__1_n_91,rand_41__1_n_92,rand_41__1_n_93,rand_41__1_n_94,rand_41__1_n_95,rand_41__1_n_96,rand_41__1_n_97,rand_41__1_n_98,rand_41__1_n_99,rand_41__1_n_100,rand_41__1_n_101,rand_41__1_n_102,rand_41__1_n_103,rand_41__1_n_104,rand_41__1_n_105}),
        .PATTERNBDETECT(NLW_rand_41__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_41__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_41__0_n_106,rand_41__0_n_107,rand_41__0_n_108,rand_41__0_n_109,rand_41__0_n_110,rand_41__0_n_111,rand_41__0_n_112,rand_41__0_n_113,rand_41__0_n_114,rand_41__0_n_115,rand_41__0_n_116,rand_41__0_n_117,rand_41__0_n_118,rand_41__0_n_119,rand_41__0_n_120,rand_41__0_n_121,rand_41__0_n_122,rand_41__0_n_123,rand_41__0_n_124,rand_41__0_n_125,rand_41__0_n_126,rand_41__0_n_127,rand_41__0_n_128,rand_41__0_n_129,rand_41__0_n_130,rand_41__0_n_131,rand_41__0_n_132,rand_41__0_n_133,rand_41__0_n_134,rand_41__0_n_135,rand_41__0_n_136,rand_41__0_n_137,rand_41__0_n_138,rand_41__0_n_139,rand_41__0_n_140,rand_41__0_n_141,rand_41__0_n_142,rand_41__0_n_143,rand_41__0_n_144,rand_41__0_n_145,rand_41__0_n_146,rand_41__0_n_147,rand_41__0_n_148,rand_41__0_n_149,rand_41__0_n_150,rand_41__0_n_151,rand_41__0_n_152,rand_41__0_n_153}),
        .PCOUT(NLW_rand_41__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_41__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_41_carry
       (.CI(1'b0),
        .CO({rand_41_carry_n_0,NLW_rand_41_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_41__1_n_103,rand_41__1_n_104,rand_41__1_n_105,1'b0}),
        .O({rand_41_carry_n_4,rand_41_carry_n_5,rand_41_carry_n_6,rand_41_carry_n_7}),
        .S({rand_41_carry_i_1_n_0,rand_41_carry_i_2_n_0,rand_41_carry_i_3_n_0,rand_41__0_n_89}));
  CARRY4 rand_41_carry__0
       (.CI(rand_41_carry_n_0),
        .CO({rand_41_carry__0_n_0,NLW_rand_41_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_41__1_n_99,rand_41__1_n_100,rand_41__1_n_101,rand_41__1_n_102}),
        .O({rand_41_carry__0_n_4,rand_41_carry__0_n_5,rand_41_carry__0_n_6,rand_41_carry__0_n_7}),
        .S({rand_41_carry__0_i_1_n_0,rand_41_carry__0_i_2_n_0,rand_41_carry__0_i_3_n_0,rand_41_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__0_i_1
       (.I0(rand_41__1_n_99),
        .I1(rand_41_n_99),
        .O(rand_41_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__0_i_2
       (.I0(rand_41__1_n_100),
        .I1(rand_41_n_100),
        .O(rand_41_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__0_i_3
       (.I0(rand_41__1_n_101),
        .I1(rand_41_n_101),
        .O(rand_41_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__0_i_4
       (.I0(rand_41__1_n_102),
        .I1(rand_41_n_102),
        .O(rand_41_carry__0_i_4_n_0));
  CARRY4 rand_41_carry__1
       (.CI(rand_41_carry__0_n_0),
        .CO({rand_41_carry__1_n_0,NLW_rand_41_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_41__1_n_95,rand_41__1_n_96,rand_41__1_n_97,rand_41__1_n_98}),
        .O({rand_41_carry__1_n_4,rand_41_carry__1_n_5,rand_41_carry__1_n_6,rand_41_carry__1_n_7}),
        .S({rand_41_carry__1_i_1_n_0,rand_41_carry__1_i_2_n_0,rand_41_carry__1_i_3_n_0,rand_41_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__1_i_1
       (.I0(rand_41__1_n_95),
        .I1(rand_41_n_95),
        .O(rand_41_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__1_i_2
       (.I0(rand_41__1_n_96),
        .I1(rand_41_n_96),
        .O(rand_41_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__1_i_3
       (.I0(rand_41__1_n_97),
        .I1(rand_41_n_97),
        .O(rand_41_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__1_i_4
       (.I0(rand_41__1_n_98),
        .I1(rand_41_n_98),
        .O(rand_41_carry__1_i_4_n_0));
  CARRY4 rand_41_carry__2
       (.CI(rand_41_carry__1_n_0),
        .CO(NLW_rand_41_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_41__1_n_92,rand_41__1_n_93,rand_41__1_n_94}),
        .O({rand_41_carry__2_n_4,rand_41_carry__2_n_5,rand_41_carry__2_n_6,rand_41_carry__2_n_7}),
        .S({rand_41_carry__2_i_1_n_0,rand_41_carry__2_i_2_n_0,rand_41_carry__2_i_3_n_0,rand_41_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__2_i_1
       (.I0(rand_41__1_n_91),
        .I1(rand_41_n_91),
        .O(rand_41_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__2_i_2
       (.I0(rand_41__1_n_92),
        .I1(rand_41_n_92),
        .O(rand_41_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__2_i_3
       (.I0(rand_41__1_n_93),
        .I1(rand_41_n_93),
        .O(rand_41_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry__2_i_4
       (.I0(rand_41__1_n_94),
        .I1(rand_41_n_94),
        .O(rand_41_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry_i_1
       (.I0(rand_41__1_n_103),
        .I1(rand_41_n_103),
        .O(rand_41_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry_i_2
       (.I0(rand_41__1_n_104),
        .I1(rand_41_n_104),
        .O(rand_41_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_41_carry_i_3
       (.I0(rand_41__1_n_105),
        .I1(rand_41_n_105),
        .O(rand_41_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_4[0]_i_1 
       (.I0(rand_41__0_n_105),
        .O(\rand_4[0]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_4[0]_i_1_n_0 ),
        .Q(rand_4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__1_n_6),
        .Q(rand_4[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__1_n_5),
        .Q(rand_4[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__1_n_4),
        .Q(rand_4[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__2_n_7),
        .Q(rand_4[13]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__2_n_6),
        .Q(rand_4[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__2_n_5),
        .Q(rand_4[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__2_n_4),
        .Q(rand_4[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__3_n_7),
        .Q(rand_4[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__3_n_6),
        .Q(rand_4[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__3_n_5),
        .Q(rand_4[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry_n_7),
        .Q(rand_4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__3_n_4),
        .Q(rand_4[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__4_n_7),
        .Q(rand_4[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__4_n_6),
        .Q(rand_4[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__4_n_5),
        .Q(rand_4[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__4_n_4),
        .Q(rand_4[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__5_n_7),
        .Q(rand_4[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__5_n_6),
        .Q(rand_4[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__5_n_5),
        .Q(rand_4[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__5_n_4),
        .Q(rand_4[28]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__6_n_7),
        .Q(rand_4[29]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry_n_6),
        .Q(rand_4[2]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__6_n_6),
        .Q(rand_4[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_4_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__6_n_5),
        .Q(rand_4[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry_n_5),
        .Q(rand_4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry_n_4),
        .Q(rand_4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__0_n_7),
        .Q(rand_4[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__0_n_6),
        .Q(rand_4[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__0_n_5),
        .Q(rand_4[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__0_n_4),
        .Q(rand_4[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_4_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_40_carry__1_n_7),
        .Q(rand_4[9]),
        .R(1'b0));
  CARRY4 rand_50_carry
       (.CI(1'b0),
        .CO({rand_50_carry_n_0,NLW_rand_50_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_51__0_n_105),
        .DI({rand_51__0_n_101,rand_51__0_n_102,1'b0,1'b0}),
        .O({rand_50_carry_n_4,rand_50_carry_n_5,rand_50_carry_n_6,rand_50_carry_n_7}),
        .S({rand_50_carry_i_1_n_0,rand_50_carry_i_2_n_0,rand_51__0_n_103,rand_51__0_n_104}));
  CARRY4 rand_50_carry__0
       (.CI(rand_50_carry_n_0),
        .CO({rand_50_carry__0_n_0,NLW_rand_50_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_51__0_n_100}),
        .O({rand_50_carry__0_n_4,rand_50_carry__0_n_5,rand_50_carry__0_n_6,rand_50_carry__0_n_7}),
        .S({rand_51__0_n_97,rand_51__0_n_98,rand_51__0_n_99,rand_50_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_50_carry__0_i_4
       (.I0(rand_51__0_n_100),
        .O(rand_50_carry__0_i_4_n_0));
  CARRY4 rand_50_carry__1
       (.CI(rand_50_carry__0_n_0),
        .CO({rand_50_carry__1_n_0,NLW_rand_50_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_51__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_50_carry__1_n_4,rand_50_carry__1_n_5,rand_50_carry__1_n_6,rand_50_carry__1_n_7}),
        .S({rand_50_carry__1_i_1_n_0,rand_51__0_n_94,rand_51__0_n_95,rand_51__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_50_carry__1_i_1
       (.I0(rand_51__0_n_93),
        .O(rand_50_carry__1_i_1_n_0));
  CARRY4 rand_50_carry__2
       (.CI(rand_50_carry__1_n_0),
        .CO({rand_50_carry__2_n_0,NLW_rand_50_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_51__0_n_92}),
        .O({rand_50_carry__2_n_4,rand_50_carry__2_n_5,rand_50_carry__2_n_6,rand_50_carry__2_n_7}),
        .S({rand_51_carry_n_7,rand_51__0_n_90,rand_51__0_n_91,rand_50_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_50_carry__2_i_4
       (.I0(rand_51__0_n_92),
        .O(rand_50_carry__2_i_4_n_0));
  CARRY4 rand_50_carry__3
       (.CI(rand_50_carry__2_n_0),
        .CO({rand_50_carry__3_n_0,NLW_rand_50_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_50_carry__3_n_4,rand_50_carry__3_n_5,rand_50_carry__3_n_6,rand_50_carry__3_n_7}),
        .S({rand_51_carry__0_n_7,rand_51_carry_n_4,rand_51_carry_n_5,rand_51_carry_n_6}));
  CARRY4 rand_50_carry__4
       (.CI(rand_50_carry__3_n_0),
        .CO({rand_50_carry__4_n_0,NLW_rand_50_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_50_carry__4_n_4,rand_50_carry__4_n_5,rand_50_carry__4_n_6,rand_50_carry__4_n_7}),
        .S({rand_51_carry__1_n_7,rand_51_carry__0_n_4,rand_51_carry__0_n_5,rand_51_carry__0_n_6}));
  CARRY4 rand_50_carry__5
       (.CI(rand_50_carry__4_n_0),
        .CO({rand_50_carry__5_n_0,NLW_rand_50_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_50_carry__5_n_4,rand_50_carry__5_n_5,rand_50_carry__5_n_6,rand_50_carry__5_n_7}),
        .S({rand_51_carry__2_n_7,rand_51_carry__1_n_4,rand_51_carry__1_n_5,rand_51_carry__1_n_6}));
  CARRY4 rand_50_carry__6
       (.CI(rand_50_carry__5_n_0),
        .CO(NLW_rand_50_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_50_carry__6_O_UNCONNECTED[3],rand_50_carry__6_n_5,rand_50_carry__6_n_6,rand_50_carry__6_n_7}),
        .S({1'b0,rand_51_carry__2_n_4,rand_51_carry__2_n_5,rand_51_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_50_carry_i_1
       (.I0(rand_51__0_n_101),
        .O(rand_50_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_50_carry_i_2
       (.I0(rand_51__0_n_102),
        .O(rand_50_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_51
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_5[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_51_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_51_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_51_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_51_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_51_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_51_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_51_P_UNCONNECTED[47:15],rand_51_n_91,rand_51_n_92,rand_51_n_93,rand_51_n_94,rand_51_n_95,rand_51_n_96,rand_51_n_97,rand_51_n_98,rand_51_n_99,rand_51_n_100,rand_51_n_101,rand_51_n_102,rand_51_n_103,rand_51_n_104,rand_51_n_105}),
        .PATTERNBDETECT(NLW_rand_51_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_51_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_51_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_51_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_51__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_5[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_51__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_51__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_51__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_51__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_51__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_51__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_51__0_P_UNCONNECTED[47:17],rand_51__0_n_89,rand_51__0_n_90,rand_51__0_n_91,rand_51__0_n_92,rand_51__0_n_93,rand_51__0_n_94,rand_51__0_n_95,rand_51__0_n_96,rand_51__0_n_97,rand_51__0_n_98,rand_51__0_n_99,rand_51__0_n_100,rand_51__0_n_101,rand_51__0_n_102,rand_51__0_n_103,rand_51__0_n_104,rand_51__0_n_105}),
        .PATTERNBDETECT(NLW_rand_51__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_51__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_51__0_n_106,rand_51__0_n_107,rand_51__0_n_108,rand_51__0_n_109,rand_51__0_n_110,rand_51__0_n_111,rand_51__0_n_112,rand_51__0_n_113,rand_51__0_n_114,rand_51__0_n_115,rand_51__0_n_116,rand_51__0_n_117,rand_51__0_n_118,rand_51__0_n_119,rand_51__0_n_120,rand_51__0_n_121,rand_51__0_n_122,rand_51__0_n_123,rand_51__0_n_124,rand_51__0_n_125,rand_51__0_n_126,rand_51__0_n_127,rand_51__0_n_128,rand_51__0_n_129,rand_51__0_n_130,rand_51__0_n_131,rand_51__0_n_132,rand_51__0_n_133,rand_51__0_n_134,rand_51__0_n_135,rand_51__0_n_136,rand_51__0_n_137,rand_51__0_n_138,rand_51__0_n_139,rand_51__0_n_140,rand_51__0_n_141,rand_51__0_n_142,rand_51__0_n_143,rand_51__0_n_144,rand_51__0_n_145,rand_51__0_n_146,rand_51__0_n_147,rand_51__0_n_148,rand_51__0_n_149,rand_51__0_n_150,rand_51__0_n_151,rand_51__0_n_152,rand_51__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_51__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_51__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_5[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_51__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_51__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_51__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_51__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_51__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_51__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_51__1_P_UNCONNECTED[47:15],rand_51__1_n_91,rand_51__1_n_92,rand_51__1_n_93,rand_51__1_n_94,rand_51__1_n_95,rand_51__1_n_96,rand_51__1_n_97,rand_51__1_n_98,rand_51__1_n_99,rand_51__1_n_100,rand_51__1_n_101,rand_51__1_n_102,rand_51__1_n_103,rand_51__1_n_104,rand_51__1_n_105}),
        .PATTERNBDETECT(NLW_rand_51__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_51__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_51__0_n_106,rand_51__0_n_107,rand_51__0_n_108,rand_51__0_n_109,rand_51__0_n_110,rand_51__0_n_111,rand_51__0_n_112,rand_51__0_n_113,rand_51__0_n_114,rand_51__0_n_115,rand_51__0_n_116,rand_51__0_n_117,rand_51__0_n_118,rand_51__0_n_119,rand_51__0_n_120,rand_51__0_n_121,rand_51__0_n_122,rand_51__0_n_123,rand_51__0_n_124,rand_51__0_n_125,rand_51__0_n_126,rand_51__0_n_127,rand_51__0_n_128,rand_51__0_n_129,rand_51__0_n_130,rand_51__0_n_131,rand_51__0_n_132,rand_51__0_n_133,rand_51__0_n_134,rand_51__0_n_135,rand_51__0_n_136,rand_51__0_n_137,rand_51__0_n_138,rand_51__0_n_139,rand_51__0_n_140,rand_51__0_n_141,rand_51__0_n_142,rand_51__0_n_143,rand_51__0_n_144,rand_51__0_n_145,rand_51__0_n_146,rand_51__0_n_147,rand_51__0_n_148,rand_51__0_n_149,rand_51__0_n_150,rand_51__0_n_151,rand_51__0_n_152,rand_51__0_n_153}),
        .PCOUT(NLW_rand_51__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_51__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_51_carry
       (.CI(1'b0),
        .CO({rand_51_carry_n_0,NLW_rand_51_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_51__1_n_103,rand_51__1_n_104,rand_51__1_n_105,1'b0}),
        .O({rand_51_carry_n_4,rand_51_carry_n_5,rand_51_carry_n_6,rand_51_carry_n_7}),
        .S({rand_51_carry_i_1_n_0,rand_51_carry_i_2_n_0,rand_51_carry_i_3_n_0,rand_51__0_n_89}));
  CARRY4 rand_51_carry__0
       (.CI(rand_51_carry_n_0),
        .CO({rand_51_carry__0_n_0,NLW_rand_51_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_51__1_n_99,rand_51__1_n_100,rand_51__1_n_101,rand_51__1_n_102}),
        .O({rand_51_carry__0_n_4,rand_51_carry__0_n_5,rand_51_carry__0_n_6,rand_51_carry__0_n_7}),
        .S({rand_51_carry__0_i_1_n_0,rand_51_carry__0_i_2_n_0,rand_51_carry__0_i_3_n_0,rand_51_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__0_i_1
       (.I0(rand_51__1_n_99),
        .I1(rand_51_n_99),
        .O(rand_51_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__0_i_2
       (.I0(rand_51__1_n_100),
        .I1(rand_51_n_100),
        .O(rand_51_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__0_i_3
       (.I0(rand_51__1_n_101),
        .I1(rand_51_n_101),
        .O(rand_51_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__0_i_4
       (.I0(rand_51__1_n_102),
        .I1(rand_51_n_102),
        .O(rand_51_carry__0_i_4_n_0));
  CARRY4 rand_51_carry__1
       (.CI(rand_51_carry__0_n_0),
        .CO({rand_51_carry__1_n_0,NLW_rand_51_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_51__1_n_95,rand_51__1_n_96,rand_51__1_n_97,rand_51__1_n_98}),
        .O({rand_51_carry__1_n_4,rand_51_carry__1_n_5,rand_51_carry__1_n_6,rand_51_carry__1_n_7}),
        .S({rand_51_carry__1_i_1_n_0,rand_51_carry__1_i_2_n_0,rand_51_carry__1_i_3_n_0,rand_51_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__1_i_1
       (.I0(rand_51__1_n_95),
        .I1(rand_51_n_95),
        .O(rand_51_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__1_i_2
       (.I0(rand_51__1_n_96),
        .I1(rand_51_n_96),
        .O(rand_51_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__1_i_3
       (.I0(rand_51__1_n_97),
        .I1(rand_51_n_97),
        .O(rand_51_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__1_i_4
       (.I0(rand_51__1_n_98),
        .I1(rand_51_n_98),
        .O(rand_51_carry__1_i_4_n_0));
  CARRY4 rand_51_carry__2
       (.CI(rand_51_carry__1_n_0),
        .CO(NLW_rand_51_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_51__1_n_92,rand_51__1_n_93,rand_51__1_n_94}),
        .O({rand_51_carry__2_n_4,rand_51_carry__2_n_5,rand_51_carry__2_n_6,rand_51_carry__2_n_7}),
        .S({rand_51_carry__2_i_1_n_0,rand_51_carry__2_i_2_n_0,rand_51_carry__2_i_3_n_0,rand_51_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__2_i_1
       (.I0(rand_51__1_n_91),
        .I1(rand_51_n_91),
        .O(rand_51_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__2_i_2
       (.I0(rand_51__1_n_92),
        .I1(rand_51_n_92),
        .O(rand_51_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__2_i_3
       (.I0(rand_51__1_n_93),
        .I1(rand_51_n_93),
        .O(rand_51_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry__2_i_4
       (.I0(rand_51__1_n_94),
        .I1(rand_51_n_94),
        .O(rand_51_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry_i_1
       (.I0(rand_51__1_n_103),
        .I1(rand_51_n_103),
        .O(rand_51_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry_i_2
       (.I0(rand_51__1_n_104),
        .I1(rand_51_n_104),
        .O(rand_51_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_51_carry_i_3
       (.I0(rand_51__1_n_105),
        .I1(rand_51_n_105),
        .O(rand_51_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_5[0]_i_1 
       (.I0(rand_51__0_n_105),
        .O(\rand_5[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_5[0]_i_1_n_0 ),
        .Q(rand_5[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__1_n_6),
        .Q(rand_5[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__1_n_5),
        .Q(rand_5[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__1_n_4),
        .Q(rand_5[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__2_n_7),
        .Q(rand_5[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__2_n_6),
        .Q(rand_5[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__2_n_5),
        .Q(rand_5[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__2_n_4),
        .Q(rand_5[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__3_n_7),
        .Q(rand_5[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__3_n_6),
        .Q(rand_5[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__3_n_5),
        .Q(rand_5[19]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry_n_7),
        .Q(rand_5[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__3_n_4),
        .Q(rand_5[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__4_n_7),
        .Q(rand_5[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__4_n_6),
        .Q(rand_5[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__4_n_5),
        .Q(rand_5[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__4_n_4),
        .Q(rand_5[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__5_n_7),
        .Q(rand_5[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__5_n_6),
        .Q(rand_5[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__5_n_5),
        .Q(rand_5[27]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__5_n_4),
        .Q(rand_5[28]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__6_n_7),
        .Q(rand_5[29]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry_n_6),
        .Q(rand_5[2]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__6_n_6),
        .Q(rand_5[30]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_5_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__6_n_5),
        .Q(rand_5[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry_n_5),
        .Q(rand_5[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry_n_4),
        .Q(rand_5[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__0_n_7),
        .Q(rand_5[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__0_n_6),
        .Q(rand_5[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__0_n_5),
        .Q(rand_5[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__0_n_4),
        .Q(rand_5[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_5_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_50_carry__1_n_7),
        .Q(rand_5[9]),
        .R(1'b0));
  CARRY4 rand_60_carry
       (.CI(1'b0),
        .CO({rand_60_carry_n_0,NLW_rand_60_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_61__0_n_105),
        .DI({rand_61__0_n_101,rand_61__0_n_102,1'b0,1'b0}),
        .O({rand_60_carry_n_4,rand_60_carry_n_5,rand_60_carry_n_6,rand_60_carry_n_7}),
        .S({rand_60_carry_i_1_n_0,rand_60_carry_i_2_n_0,rand_61__0_n_103,rand_61__0_n_104}));
  CARRY4 rand_60_carry__0
       (.CI(rand_60_carry_n_0),
        .CO({rand_60_carry__0_n_0,NLW_rand_60_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_61__0_n_100}),
        .O({rand_60_carry__0_n_4,rand_60_carry__0_n_5,rand_60_carry__0_n_6,rand_60_carry__0_n_7}),
        .S({rand_61__0_n_97,rand_61__0_n_98,rand_61__0_n_99,rand_60_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_60_carry__0_i_4
       (.I0(rand_61__0_n_100),
        .O(rand_60_carry__0_i_4_n_0));
  CARRY4 rand_60_carry__1
       (.CI(rand_60_carry__0_n_0),
        .CO({rand_60_carry__1_n_0,NLW_rand_60_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_61__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_60_carry__1_n_4,rand_60_carry__1_n_5,rand_60_carry__1_n_6,rand_60_carry__1_n_7}),
        .S({rand_60_carry__1_i_1_n_0,rand_61__0_n_94,rand_61__0_n_95,rand_61__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_60_carry__1_i_1
       (.I0(rand_61__0_n_93),
        .O(rand_60_carry__1_i_1_n_0));
  CARRY4 rand_60_carry__2
       (.CI(rand_60_carry__1_n_0),
        .CO({rand_60_carry__2_n_0,NLW_rand_60_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_61__0_n_92}),
        .O({rand_60_carry__2_n_4,rand_60_carry__2_n_5,rand_60_carry__2_n_6,rand_60_carry__2_n_7}),
        .S({rand_61_carry_n_7,rand_61__0_n_90,rand_61__0_n_91,rand_60_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_60_carry__2_i_4
       (.I0(rand_61__0_n_92),
        .O(rand_60_carry__2_i_4_n_0));
  CARRY4 rand_60_carry__3
       (.CI(rand_60_carry__2_n_0),
        .CO({rand_60_carry__3_n_0,NLW_rand_60_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_60_carry__3_n_4,rand_60_carry__3_n_5,rand_60_carry__3_n_6,rand_60_carry__3_n_7}),
        .S({rand_61_carry__0_n_7,rand_61_carry_n_4,rand_61_carry_n_5,rand_61_carry_n_6}));
  CARRY4 rand_60_carry__4
       (.CI(rand_60_carry__3_n_0),
        .CO({rand_60_carry__4_n_0,NLW_rand_60_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_60_carry__4_n_4,rand_60_carry__4_n_5,rand_60_carry__4_n_6,rand_60_carry__4_n_7}),
        .S({rand_61_carry__1_n_7,rand_61_carry__0_n_4,rand_61_carry__0_n_5,rand_61_carry__0_n_6}));
  CARRY4 rand_60_carry__5
       (.CI(rand_60_carry__4_n_0),
        .CO({rand_60_carry__5_n_0,NLW_rand_60_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_60_carry__5_n_4,rand_60_carry__5_n_5,rand_60_carry__5_n_6,rand_60_carry__5_n_7}),
        .S({rand_61_carry__2_n_7,rand_61_carry__1_n_4,rand_61_carry__1_n_5,rand_61_carry__1_n_6}));
  CARRY4 rand_60_carry__6
       (.CI(rand_60_carry__5_n_0),
        .CO(NLW_rand_60_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_60_carry__6_O_UNCONNECTED[3],rand_60_carry__6_n_5,rand_60_carry__6_n_6,rand_60_carry__6_n_7}),
        .S({1'b0,rand_61_carry__2_n_4,rand_61_carry__2_n_5,rand_61_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_60_carry_i_1
       (.I0(rand_61__0_n_101),
        .O(rand_60_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_60_carry_i_2
       (.I0(rand_61__0_n_102),
        .O(rand_60_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_61
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_6[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_61_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_61_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_61_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_61_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_61_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_61_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_61_P_UNCONNECTED[47:15],rand_61_n_91,rand_61_n_92,rand_61_n_93,rand_61_n_94,rand_61_n_95,rand_61_n_96,rand_61_n_97,rand_61_n_98,rand_61_n_99,rand_61_n_100,rand_61_n_101,rand_61_n_102,rand_61_n_103,rand_61_n_104,rand_61_n_105}),
        .PATTERNBDETECT(NLW_rand_61_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_61_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_61_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_61_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_61__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_6[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_61__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_61__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_61__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_61__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_61__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_61__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_61__0_P_UNCONNECTED[47:17],rand_61__0_n_89,rand_61__0_n_90,rand_61__0_n_91,rand_61__0_n_92,rand_61__0_n_93,rand_61__0_n_94,rand_61__0_n_95,rand_61__0_n_96,rand_61__0_n_97,rand_61__0_n_98,rand_61__0_n_99,rand_61__0_n_100,rand_61__0_n_101,rand_61__0_n_102,rand_61__0_n_103,rand_61__0_n_104,rand_61__0_n_105}),
        .PATTERNBDETECT(NLW_rand_61__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_61__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_61__0_n_106,rand_61__0_n_107,rand_61__0_n_108,rand_61__0_n_109,rand_61__0_n_110,rand_61__0_n_111,rand_61__0_n_112,rand_61__0_n_113,rand_61__0_n_114,rand_61__0_n_115,rand_61__0_n_116,rand_61__0_n_117,rand_61__0_n_118,rand_61__0_n_119,rand_61__0_n_120,rand_61__0_n_121,rand_61__0_n_122,rand_61__0_n_123,rand_61__0_n_124,rand_61__0_n_125,rand_61__0_n_126,rand_61__0_n_127,rand_61__0_n_128,rand_61__0_n_129,rand_61__0_n_130,rand_61__0_n_131,rand_61__0_n_132,rand_61__0_n_133,rand_61__0_n_134,rand_61__0_n_135,rand_61__0_n_136,rand_61__0_n_137,rand_61__0_n_138,rand_61__0_n_139,rand_61__0_n_140,rand_61__0_n_141,rand_61__0_n_142,rand_61__0_n_143,rand_61__0_n_144,rand_61__0_n_145,rand_61__0_n_146,rand_61__0_n_147,rand_61__0_n_148,rand_61__0_n_149,rand_61__0_n_150,rand_61__0_n_151,rand_61__0_n_152,rand_61__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_61__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_61__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_6[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_61__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_61__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_61__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_61__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_61__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_61__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_61__1_P_UNCONNECTED[47:15],rand_61__1_n_91,rand_61__1_n_92,rand_61__1_n_93,rand_61__1_n_94,rand_61__1_n_95,rand_61__1_n_96,rand_61__1_n_97,rand_61__1_n_98,rand_61__1_n_99,rand_61__1_n_100,rand_61__1_n_101,rand_61__1_n_102,rand_61__1_n_103,rand_61__1_n_104,rand_61__1_n_105}),
        .PATTERNBDETECT(NLW_rand_61__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_61__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_61__0_n_106,rand_61__0_n_107,rand_61__0_n_108,rand_61__0_n_109,rand_61__0_n_110,rand_61__0_n_111,rand_61__0_n_112,rand_61__0_n_113,rand_61__0_n_114,rand_61__0_n_115,rand_61__0_n_116,rand_61__0_n_117,rand_61__0_n_118,rand_61__0_n_119,rand_61__0_n_120,rand_61__0_n_121,rand_61__0_n_122,rand_61__0_n_123,rand_61__0_n_124,rand_61__0_n_125,rand_61__0_n_126,rand_61__0_n_127,rand_61__0_n_128,rand_61__0_n_129,rand_61__0_n_130,rand_61__0_n_131,rand_61__0_n_132,rand_61__0_n_133,rand_61__0_n_134,rand_61__0_n_135,rand_61__0_n_136,rand_61__0_n_137,rand_61__0_n_138,rand_61__0_n_139,rand_61__0_n_140,rand_61__0_n_141,rand_61__0_n_142,rand_61__0_n_143,rand_61__0_n_144,rand_61__0_n_145,rand_61__0_n_146,rand_61__0_n_147,rand_61__0_n_148,rand_61__0_n_149,rand_61__0_n_150,rand_61__0_n_151,rand_61__0_n_152,rand_61__0_n_153}),
        .PCOUT(NLW_rand_61__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_61__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_61_carry
       (.CI(1'b0),
        .CO({rand_61_carry_n_0,NLW_rand_61_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_61__1_n_103,rand_61__1_n_104,rand_61__1_n_105,1'b0}),
        .O({rand_61_carry_n_4,rand_61_carry_n_5,rand_61_carry_n_6,rand_61_carry_n_7}),
        .S({rand_61_carry_i_1_n_0,rand_61_carry_i_2_n_0,rand_61_carry_i_3_n_0,rand_61__0_n_89}));
  CARRY4 rand_61_carry__0
       (.CI(rand_61_carry_n_0),
        .CO({rand_61_carry__0_n_0,NLW_rand_61_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_61__1_n_99,rand_61__1_n_100,rand_61__1_n_101,rand_61__1_n_102}),
        .O({rand_61_carry__0_n_4,rand_61_carry__0_n_5,rand_61_carry__0_n_6,rand_61_carry__0_n_7}),
        .S({rand_61_carry__0_i_1_n_0,rand_61_carry__0_i_2_n_0,rand_61_carry__0_i_3_n_0,rand_61_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__0_i_1
       (.I0(rand_61__1_n_99),
        .I1(rand_61_n_99),
        .O(rand_61_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__0_i_2
       (.I0(rand_61__1_n_100),
        .I1(rand_61_n_100),
        .O(rand_61_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__0_i_3
       (.I0(rand_61__1_n_101),
        .I1(rand_61_n_101),
        .O(rand_61_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__0_i_4
       (.I0(rand_61__1_n_102),
        .I1(rand_61_n_102),
        .O(rand_61_carry__0_i_4_n_0));
  CARRY4 rand_61_carry__1
       (.CI(rand_61_carry__0_n_0),
        .CO({rand_61_carry__1_n_0,NLW_rand_61_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_61__1_n_95,rand_61__1_n_96,rand_61__1_n_97,rand_61__1_n_98}),
        .O({rand_61_carry__1_n_4,rand_61_carry__1_n_5,rand_61_carry__1_n_6,rand_61_carry__1_n_7}),
        .S({rand_61_carry__1_i_1_n_0,rand_61_carry__1_i_2_n_0,rand_61_carry__1_i_3_n_0,rand_61_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__1_i_1
       (.I0(rand_61__1_n_95),
        .I1(rand_61_n_95),
        .O(rand_61_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__1_i_2
       (.I0(rand_61__1_n_96),
        .I1(rand_61_n_96),
        .O(rand_61_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__1_i_3
       (.I0(rand_61__1_n_97),
        .I1(rand_61_n_97),
        .O(rand_61_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__1_i_4
       (.I0(rand_61__1_n_98),
        .I1(rand_61_n_98),
        .O(rand_61_carry__1_i_4_n_0));
  CARRY4 rand_61_carry__2
       (.CI(rand_61_carry__1_n_0),
        .CO(NLW_rand_61_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_61__1_n_92,rand_61__1_n_93,rand_61__1_n_94}),
        .O({rand_61_carry__2_n_4,rand_61_carry__2_n_5,rand_61_carry__2_n_6,rand_61_carry__2_n_7}),
        .S({rand_61_carry__2_i_1_n_0,rand_61_carry__2_i_2_n_0,rand_61_carry__2_i_3_n_0,rand_61_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__2_i_1
       (.I0(rand_61__1_n_91),
        .I1(rand_61_n_91),
        .O(rand_61_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__2_i_2
       (.I0(rand_61__1_n_92),
        .I1(rand_61_n_92),
        .O(rand_61_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__2_i_3
       (.I0(rand_61__1_n_93),
        .I1(rand_61_n_93),
        .O(rand_61_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry__2_i_4
       (.I0(rand_61__1_n_94),
        .I1(rand_61_n_94),
        .O(rand_61_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry_i_1
       (.I0(rand_61__1_n_103),
        .I1(rand_61_n_103),
        .O(rand_61_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry_i_2
       (.I0(rand_61__1_n_104),
        .I1(rand_61_n_104),
        .O(rand_61_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_61_carry_i_3
       (.I0(rand_61__1_n_105),
        .I1(rand_61_n_105),
        .O(rand_61_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_6[0]_i_1 
       (.I0(rand_61__0_n_105),
        .O(\rand_6[0]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_6[0]_i_1_n_0 ),
        .Q(rand_6[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__1_n_6),
        .Q(rand_6[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__1_n_5),
        .Q(rand_6[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__1_n_4),
        .Q(rand_6[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__2_n_7),
        .Q(rand_6[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__2_n_6),
        .Q(rand_6[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__2_n_5),
        .Q(rand_6[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__2_n_4),
        .Q(rand_6[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__3_n_7),
        .Q(rand_6[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__3_n_6),
        .Q(rand_6[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__3_n_5),
        .Q(rand_6[19]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry_n_7),
        .Q(rand_6[1]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__3_n_4),
        .Q(rand_6[20]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__4_n_7),
        .Q(rand_6[21]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__4_n_6),
        .Q(rand_6[22]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__4_n_5),
        .Q(rand_6[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__4_n_4),
        .Q(rand_6[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__5_n_7),
        .Q(rand_6[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__5_n_6),
        .Q(rand_6[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__5_n_5),
        .Q(rand_6[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__5_n_4),
        .Q(rand_6[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__6_n_7),
        .Q(rand_6[29]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_6_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry_n_6),
        .Q(rand_6[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__6_n_6),
        .Q(rand_6[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__6_n_5),
        .Q(rand_6[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry_n_5),
        .Q(rand_6[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry_n_4),
        .Q(rand_6[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__0_n_7),
        .Q(rand_6[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__0_n_6),
        .Q(rand_6[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__0_n_5),
        .Q(rand_6[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__0_n_4),
        .Q(rand_6[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_6_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_60_carry__1_n_7),
        .Q(rand_6[9]),
        .R(1'b0));
  CARRY4 rand_70_carry
       (.CI(1'b0),
        .CO({rand_70_carry_n_0,NLW_rand_70_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(rand_71__0_n_105),
        .DI({rand_71__0_n_101,rand_71__0_n_102,1'b0,1'b0}),
        .O({rand_70_carry_n_4,rand_70_carry_n_5,rand_70_carry_n_6,rand_70_carry_n_7}),
        .S({rand_70_carry_i_1_n_0,rand_70_carry_i_2_n_0,rand_71__0_n_103,rand_71__0_n_104}));
  CARRY4 rand_70_carry__0
       (.CI(rand_70_carry_n_0),
        .CO({rand_70_carry__0_n_0,NLW_rand_70_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_71__0_n_100}),
        .O({rand_70_carry__0_n_4,rand_70_carry__0_n_5,rand_70_carry__0_n_6,rand_70_carry__0_n_7}),
        .S({rand_71__0_n_97,rand_71__0_n_98,rand_71__0_n_99,rand_70_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_70_carry__0_i_4
       (.I0(rand_71__0_n_100),
        .O(rand_70_carry__0_i_4_n_0));
  CARRY4 rand_70_carry__1
       (.CI(rand_70_carry__0_n_0),
        .CO({rand_70_carry__1_n_0,NLW_rand_70_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_71__0_n_93,1'b0,1'b0,1'b0}),
        .O({rand_70_carry__1_n_4,rand_70_carry__1_n_5,rand_70_carry__1_n_6,rand_70_carry__1_n_7}),
        .S({rand_70_carry__1_i_1_n_0,rand_71__0_n_94,rand_71__0_n_95,rand_71__0_n_96}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_70_carry__1_i_1
       (.I0(rand_71__0_n_93),
        .O(rand_70_carry__1_i_1_n_0));
  CARRY4 rand_70_carry__2
       (.CI(rand_70_carry__1_n_0),
        .CO({rand_70_carry__2_n_0,NLW_rand_70_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rand_71__0_n_92}),
        .O({rand_70_carry__2_n_4,rand_70_carry__2_n_5,rand_70_carry__2_n_6,rand_70_carry__2_n_7}),
        .S({rand_71_carry_n_7,rand_71__0_n_90,rand_71__0_n_91,rand_70_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_70_carry__2_i_4
       (.I0(rand_71__0_n_92),
        .O(rand_70_carry__2_i_4_n_0));
  CARRY4 rand_70_carry__3
       (.CI(rand_70_carry__2_n_0),
        .CO({rand_70_carry__3_n_0,NLW_rand_70_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_70_carry__3_n_4,rand_70_carry__3_n_5,rand_70_carry__3_n_6,rand_70_carry__3_n_7}),
        .S({rand_71_carry__0_n_7,rand_71_carry_n_4,rand_71_carry_n_5,rand_71_carry_n_6}));
  CARRY4 rand_70_carry__4
       (.CI(rand_70_carry__3_n_0),
        .CO({rand_70_carry__4_n_0,NLW_rand_70_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_70_carry__4_n_4,rand_70_carry__4_n_5,rand_70_carry__4_n_6,rand_70_carry__4_n_7}),
        .S({rand_71_carry__1_n_7,rand_71_carry__0_n_4,rand_71_carry__0_n_5,rand_71_carry__0_n_6}));
  CARRY4 rand_70_carry__5
       (.CI(rand_70_carry__4_n_0),
        .CO({rand_70_carry__5_n_0,NLW_rand_70_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({rand_70_carry__5_n_4,rand_70_carry__5_n_5,rand_70_carry__5_n_6,rand_70_carry__5_n_7}),
        .S({rand_71_carry__2_n_7,rand_71_carry__1_n_4,rand_71_carry__1_n_5,rand_71_carry__1_n_6}));
  CARRY4 rand_70_carry__6
       (.CI(rand_70_carry__5_n_0),
        .CO(NLW_rand_70_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rand_70_carry__6_O_UNCONNECTED[3],rand_70_carry__6_n_5,rand_70_carry__6_n_6,rand_70_carry__6_n_7}),
        .S({1'b0,rand_71_carry__2_n_4,rand_71_carry__2_n_5,rand_71_carry__2_n_6}));
  LUT1 #(
    .INIT(2'h1)) 
    rand_70_carry_i_1
       (.I0(rand_71__0_n_101),
        .O(rand_70_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rand_70_carry_i_2
       (.I0(rand_71__0_n_102),
        .O(rand_70_carry_i_2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_71
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,psdsp_n,psdsp_n_1,psdsp_n_2,psdsp_n_3,psdsp_n_4,psdsp_n_5,psdsp_n_6,psdsp_n_7,psdsp_n_8,psdsp_n_9,psdsp_n_10,psdsp_n_11,psdsp_n_12,psdsp_n_13,psdsp_n_14}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_71_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_71_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_71_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_71_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_71_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_71_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_71_P_UNCONNECTED[47:15],rand_71_n_91,rand_71_n_92,rand_71_n_93,rand_71_n_94,rand_71_n_95,rand_71_n_96,rand_71_n_97,rand_71_n_98,rand_71_n_99,rand_71_n_100,rand_71_n_101,rand_71_n_102,rand_71_n_103,rand_71_n_104,rand_71_n_105}),
        .PATTERNBDETECT(NLW_rand_71_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_71_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_rand_71_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_71_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_71__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_7[16:14],\rand_7[13]_repN ,rand_7[12:4],\rand_7[3]_repN ,rand_7[2],\rand_7[1]_repN ,rand_7[0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_71__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_71__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_71__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_71__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_71__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_71__0_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_71__0_P_UNCONNECTED[47:17],rand_71__0_n_89,rand_71__0_n_90,rand_71__0_n_91,rand_71__0_n_92,rand_71__0_n_93,rand_71__0_n_94,rand_71__0_n_95,rand_71__0_n_96,rand_71__0_n_97,rand_71__0_n_98,rand_71__0_n_99,rand_71__0_n_100,rand_71__0_n_101,rand_71__0_n_102,rand_71__0_n_103,rand_71__0_n_104,rand_71__0_n_105}),
        .PATTERNBDETECT(NLW_rand_71__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_71__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({rand_71__0_n_106,rand_71__0_n_107,rand_71__0_n_108,rand_71__0_n_109,rand_71__0_n_110,rand_71__0_n_111,rand_71__0_n_112,rand_71__0_n_113,rand_71__0_n_114,rand_71__0_n_115,rand_71__0_n_116,rand_71__0_n_117,rand_71__0_n_118,rand_71__0_n_119,rand_71__0_n_120,rand_71__0_n_121,rand_71__0_n_122,rand_71__0_n_123,rand_71__0_n_124,rand_71__0_n_125,rand_71__0_n_126,rand_71__0_n_127,rand_71__0_n_128,rand_71__0_n_129,rand_71__0_n_130,rand_71__0_n_131,rand_71__0_n_132,rand_71__0_n_133,rand_71__0_n_134,rand_71__0_n_135,rand_71__0_n_136,rand_71__0_n_137,rand_71__0_n_138,rand_71__0_n_139,rand_71__0_n_140,rand_71__0_n_141,rand_71__0_n_142,rand_71__0_n_143,rand_71__0_n_144,rand_71__0_n_145,rand_71__0_n_146,rand_71__0_n_147,rand_71__0_n_148,rand_71__0_n_149,rand_71__0_n_150,rand_71__0_n_151,rand_71__0_n_152,rand_71__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_71__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    rand_71__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,rand_7[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_rand_71__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_rand_71__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_rand_71__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_rand_71__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_rand_71__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_rand_71__1_OVERFLOW_UNCONNECTED),
        .P({NLW_rand_71__1_P_UNCONNECTED[47:15],rand_71__1_n_91,rand_71__1_n_92,rand_71__1_n_93,rand_71__1_n_94,rand_71__1_n_95,rand_71__1_n_96,rand_71__1_n_97,rand_71__1_n_98,rand_71__1_n_99,rand_71__1_n_100,rand_71__1_n_101,rand_71__1_n_102,rand_71__1_n_103,rand_71__1_n_104,rand_71__1_n_105}),
        .PATTERNBDETECT(NLW_rand_71__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_rand_71__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({rand_71__0_n_106,rand_71__0_n_107,rand_71__0_n_108,rand_71__0_n_109,rand_71__0_n_110,rand_71__0_n_111,rand_71__0_n_112,rand_71__0_n_113,rand_71__0_n_114,rand_71__0_n_115,rand_71__0_n_116,rand_71__0_n_117,rand_71__0_n_118,rand_71__0_n_119,rand_71__0_n_120,rand_71__0_n_121,rand_71__0_n_122,rand_71__0_n_123,rand_71__0_n_124,rand_71__0_n_125,rand_71__0_n_126,rand_71__0_n_127,rand_71__0_n_128,rand_71__0_n_129,rand_71__0_n_130,rand_71__0_n_131,rand_71__0_n_132,rand_71__0_n_133,rand_71__0_n_134,rand_71__0_n_135,rand_71__0_n_136,rand_71__0_n_137,rand_71__0_n_138,rand_71__0_n_139,rand_71__0_n_140,rand_71__0_n_141,rand_71__0_n_142,rand_71__0_n_143,rand_71__0_n_144,rand_71__0_n_145,rand_71__0_n_146,rand_71__0_n_147,rand_71__0_n_148,rand_71__0_n_149,rand_71__0_n_150,rand_71__0_n_151,rand_71__0_n_152,rand_71__0_n_153}),
        .PCOUT(NLW_rand_71__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_rand_71__1_UNDERFLOW_UNCONNECTED));
  CARRY4 rand_71_carry
       (.CI(1'b0),
        .CO({rand_71_carry_n_0,NLW_rand_71_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_71__1_n_103,rand_71__1_n_104,rand_71__1_n_105,1'b0}),
        .O({rand_71_carry_n_4,rand_71_carry_n_5,rand_71_carry_n_6,rand_71_carry_n_7}),
        .S({rand_71_carry_i_1_n_0,rand_71_carry_i_2_n_0,rand_71_carry_i_3_n_0,rand_71__0_n_89}));
  CARRY4 rand_71_carry__0
       (.CI(rand_71_carry_n_0),
        .CO({rand_71_carry__0_n_0,NLW_rand_71_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_71__1_n_99,rand_71__1_n_100,rand_71__1_n_101,rand_71__1_n_102}),
        .O({rand_71_carry__0_n_4,rand_71_carry__0_n_5,rand_71_carry__0_n_6,rand_71_carry__0_n_7}),
        .S({rand_71_carry__0_i_1_n_0,rand_71_carry__0_i_2_n_0,rand_71_carry__0_i_3_n_0,rand_71_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__0_i_1
       (.I0(rand_71__1_n_99),
        .I1(rand_71_n_99),
        .O(rand_71_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__0_i_2
       (.I0(rand_71__1_n_100),
        .I1(rand_71_n_100),
        .O(rand_71_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__0_i_3
       (.I0(rand_71__1_n_101),
        .I1(rand_71_n_101),
        .O(rand_71_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__0_i_4
       (.I0(rand_71__1_n_102),
        .I1(rand_71_n_102),
        .O(rand_71_carry__0_i_4_n_0));
  CARRY4 rand_71_carry__1
       (.CI(rand_71_carry__0_n_0),
        .CO({rand_71_carry__1_n_0,NLW_rand_71_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rand_71__1_n_95,rand_71__1_n_96,rand_71__1_n_97,rand_71__1_n_98}),
        .O({rand_71_carry__1_n_4,rand_71_carry__1_n_5,rand_71_carry__1_n_6,rand_71_carry__1_n_7}),
        .S({rand_71_carry__1_i_1_n_0,rand_71_carry__1_i_2_n_0,rand_71_carry__1_i_3_n_0,rand_71_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__1_i_1
       (.I0(rand_71__1_n_95),
        .I1(rand_71_n_95),
        .O(rand_71_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__1_i_2
       (.I0(rand_71__1_n_96),
        .I1(rand_71_n_96),
        .O(rand_71_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__1_i_3
       (.I0(rand_71__1_n_97),
        .I1(rand_71_n_97),
        .O(rand_71_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__1_i_4
       (.I0(rand_71__1_n_98),
        .I1(rand_71_n_98),
        .O(rand_71_carry__1_i_4_n_0));
  CARRY4 rand_71_carry__2
       (.CI(rand_71_carry__1_n_0),
        .CO(NLW_rand_71_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rand_71__1_n_92,rand_71__1_n_93,rand_71__1_n_94}),
        .O({rand_71_carry__2_n_4,rand_71_carry__2_n_5,rand_71_carry__2_n_6,rand_71_carry__2_n_7}),
        .S({rand_71_carry__2_i_1_n_0,rand_71_carry__2_i_2_n_0,rand_71_carry__2_i_3_n_0,rand_71_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__2_i_1
       (.I0(rand_71__1_n_91),
        .I1(rand_71_n_91),
        .O(rand_71_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__2_i_2
       (.I0(rand_71__1_n_92),
        .I1(rand_71_n_92),
        .O(rand_71_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__2_i_3
       (.I0(rand_71__1_n_93),
        .I1(rand_71_n_93),
        .O(rand_71_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry__2_i_4
       (.I0(rand_71__1_n_94),
        .I1(rand_71_n_94),
        .O(rand_71_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry_i_1
       (.I0(rand_71__1_n_103),
        .I1(rand_71_n_103),
        .O(rand_71_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry_i_2
       (.I0(rand_71__1_n_104),
        .I1(rand_71_n_104),
        .O(rand_71_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    rand_71_carry_i_3
       (.I0(rand_71__1_n_105),
        .I1(rand_71_n_105),
        .O(rand_71_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rand_7[0]_i_1 
       (.I0(rand_71__0_n_105),
        .O(\rand_7[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\rand_7[0]_i_1_n_0 ),
        .Q(rand_7[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__1_n_6),
        .Q(rand_7[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__1_n_5),
        .Q(rand_7[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__1_n_4),
        .Q(rand_7[12]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__2_n_7),
        .Q(rand_7[13]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "transmitter_inst_1/dac_interface_inst_1/rand_7_reg[13]" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[13]_replica 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__2_n_7),
        .Q(\rand_7[13]_repN ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__2_n_6),
        .Q(rand_7[14]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__2_n_5),
        .Q(rand_7[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__2_n_4),
        .Q(rand_7[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_7),
        .Q(rand_7[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_6),
        .Q(rand_7[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_5),
        .Q(rand_7[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_7),
        .Q(rand_7[1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "transmitter_inst_1/dac_interface_inst_1/rand_7_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[1]_replica 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_7),
        .Q(\rand_7[1]_repN ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__3_n_4),
        .Q(rand_7[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_7),
        .Q(rand_7[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_6),
        .Q(rand_7[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_5),
        .Q(rand_7[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__4_n_4),
        .Q(rand_7[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_7),
        .Q(rand_7[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_6),
        .Q(rand_7[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_5),
        .Q(rand_7[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__5_n_4),
        .Q(rand_7[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_7),
        .Q(rand_7[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_6),
        .Q(rand_7[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_6),
        .Q(rand_7[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__6_n_5),
        .Q(rand_7[31]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-14 {cell *THIS*}}" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_5),
        .Q(rand_7[3]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "transmitter_inst_1/dac_interface_inst_1/rand_7_reg[3]" *) 
  FDRE #(
    .INIT(1'b1)) 
    \rand_7_reg[3]_replica 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_5),
        .Q(\rand_7[3]_repN ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry_n_4),
        .Q(rand_7[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__0_n_7),
        .Q(rand_7[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__0_n_6),
        .Q(rand_7[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__0_n_5),
        .Q(rand_7[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__0_n_4),
        .Q(rand_7[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rand_7_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(rand_70_carry__1_n_7),
        .Q(rand_7[9]),
        .R(1'b0));
  serdes serdes_inst_1
       (.clk(clk),
        .input_0(dac_0),
        .input_1(dac_1),
        .input_2(dac_2),
        .input_3(dac_3),
        .input_4(dac_4),
        .input_5(dac_5),
        .input_6(dac_6),
        .input_7(dac_7),
        .\output (\output ));
  CARRY4 x_carry
       (.CI(1'b0),
        .CO({x_carry_n_0,NLW_x_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({x_carry_i_1_n_0,x_carry_i_2_n_0,x_carry_i_3_n_0,x_carry_i_4_n_0}),
        .O(NLW_x_carry_O_UNCONNECTED[3:0]),
        .S({x_carry_i_5_n_0,x_carry_i_6_n_0,x_carry_i_7_n_0,x_carry_i_8_n_0}));
  CARRY4 x_carry__0
       (.CI(x_carry_n_0),
        .CO({x_carry__0_n_0,NLW_x_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({x_carry__0_i_1_n_0,x_carry__0_i_2_n_0,x_carry__0_i_3_n_0,x_carry__0_i_4_n_0}),
        .O(NLW_x_carry__0_O_UNCONNECTED[3:0]),
        .S({x_carry__0_i_5_n_0,x_carry__0_i_6_n_0,x_carry__0_i_7_n_0,x_carry__0_i_8_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__0_i_1
       (.I0(P[14]),
        .I1(rand_0[14]),
        .I2(rand_0[15]),
        .I3(P[15]),
        .O(x_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__0_i_2
       (.I0(P[12]),
        .I1(rand_0[12]),
        .I2(rand_0[13]),
        .I3(P[13]),
        .O(x_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__0_i_3
       (.I0(P[10]),
        .I1(rand_0[10]),
        .I2(rand_0[11]),
        .I3(P[11]),
        .O(x_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__0_i_4
       (.I0(P[8]),
        .I1(rand_0[8]),
        .I2(rand_0[9]),
        .I3(P[9]),
        .O(x_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__0_i_5
       (.I0(P[14]),
        .I1(rand_0[14]),
        .I2(P[15]),
        .I3(rand_0[15]),
        .O(x_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__0_i_6
       (.I0(P[12]),
        .I1(rand_0[12]),
        .I2(P[13]),
        .I3(rand_0[13]),
        .O(x_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__0_i_7
       (.I0(P[10]),
        .I1(rand_0[10]),
        .I2(P[11]),
        .I3(rand_0[11]),
        .O(x_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__0_i_8
       (.I0(P[8]),
        .I1(rand_0[8]),
        .I2(P[9]),
        .I3(rand_0[9]),
        .O(x_carry__0_i_8_n_0));
  CARRY4 x_carry__1
       (.CI(x_carry__0_n_0),
        .CO({x_carry__1_n_0,NLW_x_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({x_carry__1_i_1_n_0,x_carry__1_i_2_n_0,x_carry__1_i_3_n_0,x_carry__1_i_4_n_0}),
        .O(NLW_x_carry__1_O_UNCONNECTED[3:0]),
        .S({x_carry__1_i_5_n_0,x_carry__1_i_6_n_0,x_carry__1_i_7_n_0,x_carry__1_i_8_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__1_i_1
       (.I0(P[22]),
        .I1(rand_0[22]),
        .I2(rand_0[23]),
        .I3(P[23]),
        .O(x_carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__1_i_2
       (.I0(P[20]),
        .I1(rand_0[20]),
        .I2(rand_0[21]),
        .I3(P[21]),
        .O(x_carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__1_i_3
       (.I0(P[18]),
        .I1(rand_0[18]),
        .I2(rand_0[19]),
        .I3(P[19]),
        .O(x_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__1_i_4
       (.I0(P[16]),
        .I1(rand_0[16]),
        .I2(rand_0[17]),
        .I3(P[17]),
        .O(x_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__1_i_5
       (.I0(P[22]),
        .I1(rand_0[22]),
        .I2(P[23]),
        .I3(rand_0[23]),
        .O(x_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__1_i_6
       (.I0(P[20]),
        .I1(rand_0[20]),
        .I2(P[21]),
        .I3(rand_0[21]),
        .O(x_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__1_i_7
       (.I0(P[18]),
        .I1(rand_0[18]),
        .I2(P[19]),
        .I3(rand_0[19]),
        .O(x_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__1_i_8
       (.I0(P[16]),
        .I1(rand_0[16]),
        .I2(P[17]),
        .I3(rand_0[17]),
        .O(x_carry__1_i_8_n_0));
  CARRY4 x_carry__2
       (.CI(x_carry__1_n_0),
        .CO({to_std,NLW_x_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({x_carry__2_i_1_n_0,x_carry__2_i_2_n_0,x_carry__2_i_3_n_0,x_carry__2_i_4_n_0}),
        .O(NLW_x_carry__2_O_UNCONNECTED[3:0]),
        .S({x_carry__2_i_5_n_0,x_carry__2_i_6_n_0,x_carry__2_i_7_n_0,x_carry__2_i_8_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__2_i_1
       (.I0(P[30]),
        .I1(rand_0[30]),
        .I2(P[31]),
        .I3(rand_0[31]),
        .O(x_carry__2_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__2_i_2
       (.I0(P[28]),
        .I1(rand_0[28]),
        .I2(rand_0[29]),
        .I3(P[29]),
        .O(x_carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__2_i_3
       (.I0(P[26]),
        .I1(rand_0[26]),
        .I2(rand_0[27]),
        .I3(P[27]),
        .O(x_carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry__2_i_4
       (.I0(P[24]),
        .I1(rand_0[24]),
        .I2(rand_0[25]),
        .I3(P[25]),
        .O(x_carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__2_i_5
       (.I0(P[30]),
        .I1(rand_0[30]),
        .I2(rand_0[31]),
        .I3(P[31]),
        .O(x_carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__2_i_6
       (.I0(P[28]),
        .I1(rand_0[28]),
        .I2(P[29]),
        .I3(rand_0[29]),
        .O(x_carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__2_i_7
       (.I0(P[26]),
        .I1(rand_0[26]),
        .I2(P[27]),
        .I3(rand_0[27]),
        .O(x_carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry__2_i_8
       (.I0(P[24]),
        .I1(rand_0[24]),
        .I2(P[25]),
        .I3(rand_0[25]),
        .O(x_carry__2_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry_i_1
       (.I0(P[6]),
        .I1(rand_0[6]),
        .I2(rand_0[7]),
        .I3(P[7]),
        .O(x_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry_i_2
       (.I0(P[4]),
        .I1(rand_0[4]),
        .I2(rand_0[5]),
        .I3(P[5]),
        .O(x_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry_i_3
       (.I0(P[2]),
        .I1(rand_0[2]),
        .I2(rand_0[3]),
        .I3(P[3]),
        .O(x_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    x_carry_i_4
       (.I0(P[0]),
        .I1(rand_0[0]),
        .I2(rand_0[1]),
        .I3(P[1]),
        .O(x_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry_i_5
       (.I0(P[6]),
        .I1(rand_0[6]),
        .I2(P[7]),
        .I3(rand_0[7]),
        .O(x_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry_i_6
       (.I0(P[4]),
        .I1(rand_0[4]),
        .I2(P[5]),
        .I3(rand_0[5]),
        .O(x_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry_i_7
       (.I0(P[2]),
        .I1(rand_0[2]),
        .I2(P[3]),
        .I3(rand_0[3]),
        .O(x_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_carry_i_8
       (.I0(P[0]),
        .I1(rand_0[0]),
        .I2(P[1]),
        .I3(rand_0[1]),
        .O(x_carry_i_8_n_0));
  CARRY4 \x_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__0/i__carry_n_0 ,\NLW_x_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3__0_n_0,i__carry_i_4_n_0}),
        .O(\NLW_x_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5_n_0,i__carry_i_6_n_0,i__carry_i_7_n_0,i__carry_i_8_n_0}));
  CARRY4 \x_inferred__0/i__carry__0 
       (.CI(\x_inferred__0/i__carry_n_0 ),
        .CO({\x_inferred__0/i__carry__0_n_0 ,\NLW_x_inferred__0/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3__0_n_0,i__carry__0_i_4__0_n_0}),
        .O(\NLW_x_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5_n_0,i__carry__0_i_6_n_0,i__carry__0_i_7_n_0,i__carry__0_i_8_n_0}));
  CARRY4 \x_inferred__0/i__carry__1 
       (.CI(\x_inferred__0/i__carry__0_n_0 ),
        .CO({\x_inferred__0/i__carry__1_n_0 ,\NLW_x_inferred__0/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0}),
        .O(\NLW_x_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5_n_0,i__carry__1_i_6_n_0,i__carry__1_i_7_n_0,i__carry__1_i_8_n_0}));
  CARRY4 \x_inferred__0/i__carry__2 
       (.CI(\x_inferred__0/i__carry__1_n_0 ),
        .CO({\x_inferred__0/i__carry__2_n_0 ,\NLW_x_inferred__0/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1_n_0,i__carry__2_i_2_n_0,i__carry__2_i_3_n_0,i__carry__2_i_4_n_0}),
        .O(\NLW_x_inferred__0/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5_n_0,i__carry__2_i_6_n_0,i__carry__2_i_7_n_0,i__carry__2_i_8_n_0}));
  CARRY4 \x_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__1/i__carry_n_0 ,\NLW_x_inferred__1/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__0_n_0,i__carry_i_2__0_n_0,i__carry_i_3__1_n_0,i__carry_i_4__0_n_0}),
        .O(\NLW_x_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__0_n_0,i__carry_i_6__0_n_0,i__carry_i_7__0_n_0,i__carry_i_8__0_n_0}));
  CARRY4 \x_inferred__1/i__carry__0 
       (.CI(\x_inferred__1/i__carry_n_0 ),
        .CO({\x_inferred__1/i__carry__0_n_0 ,\NLW_x_inferred__1/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__0_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__1_n_0,i__carry__0_i_4__1_n_0}),
        .O(\NLW_x_inferred__1/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__0_n_0,i__carry__0_i_6__0_n_0,i__carry__0_i_7__0_n_0,i__carry__0_i_8__0_n_0}));
  CARRY4 \x_inferred__1/i__carry__1 
       (.CI(\x_inferred__1/i__carry__0_n_0 ),
        .CO({\x_inferred__1/i__carry__1_n_0 ,\NLW_x_inferred__1/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__0_n_0,i__carry__1_i_2__0_n_0,i__carry__1_i_3__0_n_0,i__carry__1_i_4__0_n_0}),
        .O(\NLW_x_inferred__1/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__0_n_0,i__carry__1_i_6__0_n_0,i__carry__1_i_7__0_n_0,i__carry__1_i_8__0_n_0}));
  CARRY4 \x_inferred__1/i__carry__2 
       (.CI(\x_inferred__1/i__carry__1_n_0 ),
        .CO({\x_inferred__1/i__carry__2_n_0 ,\NLW_x_inferred__1/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__0_n_0,i__carry__2_i_2__0_n_0,i__carry__2_i_3__0_n_0,i__carry__2_i_4__0_n_0}),
        .O(\NLW_x_inferred__1/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__0_n_0,i__carry__2_i_6__0_n_0,i__carry__2_i_7__0_n_0,i__carry__2_i_8__0_n_0}));
  CARRY4 \x_inferred__2/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__2/i__carry_n_0 ,\NLW_x_inferred__2/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__1_n_0,i__carry_i_2__1_n_0,i__carry_i_3__2_n_0,i__carry_i_4__1_n_0}),
        .O(\NLW_x_inferred__2/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__1_n_0,i__carry_i_6__1_n_0,i__carry_i_7__1_n_0,i__carry_i_8__1_n_0}));
  CARRY4 \x_inferred__2/i__carry__0 
       (.CI(\x_inferred__2/i__carry_n_0 ),
        .CO({\x_inferred__2/i__carry__0_n_0 ,\NLW_x_inferred__2/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__1_n_0,i__carry__0_i_2__1_n_0,i__carry__0_i_3__2_n_0,i__carry__0_i_4__2_n_0}),
        .O(\NLW_x_inferred__2/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__1_n_0,i__carry__0_i_6__1_n_0,i__carry__0_i_7__1_n_0,i__carry__0_i_8__1_n_0}));
  CARRY4 \x_inferred__2/i__carry__1 
       (.CI(\x_inferred__2/i__carry__0_n_0 ),
        .CO({\x_inferred__2/i__carry__1_n_0 ,\NLW_x_inferred__2/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__1_n_0,i__carry__1_i_2__1_n_0,i__carry__1_i_3__1_n_0,i__carry__1_i_4__1_n_0}),
        .O(\NLW_x_inferred__2/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__1_n_0,i__carry__1_i_6__1_n_0,i__carry__1_i_7__1_n_0,i__carry__1_i_8__1_n_0}));
  CARRY4 \x_inferred__2/i__carry__2 
       (.CI(\x_inferred__2/i__carry__1_n_0 ),
        .CO({\x_inferred__2/i__carry__2_n_0 ,\NLW_x_inferred__2/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__1_n_0,i__carry__2_i_2__1_n_0,i__carry__2_i_3__1_n_0,i__carry__2_i_4__1_n_0}),
        .O(\NLW_x_inferred__2/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__1_n_0,i__carry__2_i_6__1_n_0,i__carry__2_i_7__1_n_0,i__carry__2_i_8__1_n_0}));
  CARRY4 \x_inferred__3/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__3/i__carry_n_0 ,\NLW_x_inferred__3/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__2_n_0,i__carry_i_2__2_n_0,i__carry_i_3__3_n_0,i__carry_i_4__2_n_0}),
        .O(\NLW_x_inferred__3/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__2_n_0,i__carry_i_6__2_n_0,i__carry_i_7__2_n_0,i__carry_i_8__2_n_0}));
  CARRY4 \x_inferred__3/i__carry__0 
       (.CI(\x_inferred__3/i__carry_n_0 ),
        .CO({\x_inferred__3/i__carry__0_n_0 ,\NLW_x_inferred__3/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__2_n_0,i__carry__0_i_2__2_n_0,i__carry__0_i_3__3_n_0,i__carry__0_i_4__3_n_0}),
        .O(\NLW_x_inferred__3/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__2_n_0,i__carry__0_i_6__2_n_0,i__carry__0_i_7__2_n_0,i__carry__0_i_8__2_n_0}));
  CARRY4 \x_inferred__3/i__carry__1 
       (.CI(\x_inferred__3/i__carry__0_n_0 ),
        .CO({\x_inferred__3/i__carry__1_n_0 ,\NLW_x_inferred__3/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__2_n_0,i__carry__1_i_2__2_n_0,i__carry__1_i_3__2_n_0,i__carry__1_i_4__2_n_0}),
        .O(\NLW_x_inferred__3/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__2_n_0,i__carry__1_i_6__2_n_0,i__carry__1_i_7__2_n_0,i__carry__1_i_8__2_n_0}));
  CARRY4 \x_inferred__3/i__carry__2 
       (.CI(\x_inferred__3/i__carry__1_n_0 ),
        .CO({\x_inferred__3/i__carry__2_n_0 ,\NLW_x_inferred__3/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__2_n_0,i__carry__2_i_2__2_n_0,i__carry__2_i_3__2_n_0,i__carry__2_i_4__2_n_0}),
        .O(\NLW_x_inferred__3/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__2_n_0,i__carry__2_i_6__2_n_0,i__carry__2_i_7__2_n_0,i__carry__2_i_8__2_n_0}));
  CARRY4 \x_inferred__4/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__4/i__carry_n_0 ,\NLW_x_inferred__4/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__3_n_0,i__carry_i_2__3_n_0,i__carry_i_3__4_n_0,i__carry_i_4__3_n_0}),
        .O(\NLW_x_inferred__4/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__3_n_0,i__carry_i_6__3_n_0,i__carry_i_7__3_n_0,i__carry_i_8__3_n_0}));
  CARRY4 \x_inferred__4/i__carry__0 
       (.CI(\x_inferred__4/i__carry_n_0 ),
        .CO({\x_inferred__4/i__carry__0_n_0 ,\NLW_x_inferred__4/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__3_n_0,i__carry__0_i_2__3_n_0,i__carry__0_i_3__4_n_0,i__carry__0_i_4__4_n_0}),
        .O(\NLW_x_inferred__4/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__3_n_0,i__carry__0_i_6__3_n_0,i__carry__0_i_7__3_n_0,i__carry__0_i_8__3_n_0}));
  CARRY4 \x_inferred__4/i__carry__1 
       (.CI(\x_inferred__4/i__carry__0_n_0 ),
        .CO({\x_inferred__4/i__carry__1_n_0 ,\NLW_x_inferred__4/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__3_n_0,i__carry__1_i_2__3_n_0,i__carry__1_i_3__3_n_0,i__carry__1_i_4__3_n_0}),
        .O(\NLW_x_inferred__4/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__3_n_0,i__carry__1_i_6__3_n_0,i__carry__1_i_7__3_n_0,i__carry__1_i_8__3_n_0}));
  CARRY4 \x_inferred__4/i__carry__2 
       (.CI(\x_inferred__4/i__carry__1_n_0 ),
        .CO({\x_inferred__4/i__carry__2_n_0 ,\NLW_x_inferred__4/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__3_n_0,i__carry__2_i_2__3_n_0,i__carry__2_i_3__3_n_0,i__carry__2_i_4__3_n_0}),
        .O(\NLW_x_inferred__4/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__3_n_0,i__carry__2_i_6__3_n_0,i__carry__2_i_7__3_n_0,i__carry__2_i_8__3_n_0}));
  CARRY4 \x_inferred__5/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__5/i__carry_n_0 ,\NLW_x_inferred__5/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__4_n_0,i__carry_i_2__4_n_0,i__carry_i_3__5_n_0,i__carry_i_4__4_n_0}),
        .O(\NLW_x_inferred__5/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__4_n_0,i__carry_i_6__4_n_0,i__carry_i_7__4_n_0,i__carry_i_8__4_n_0}));
  CARRY4 \x_inferred__5/i__carry__0 
       (.CI(\x_inferred__5/i__carry_n_0 ),
        .CO({\x_inferred__5/i__carry__0_n_0 ,\NLW_x_inferred__5/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__4_n_0,i__carry__0_i_2__4_n_0,i__carry__0_i_3__5_n_0,i__carry__0_i_4__5_n_0}),
        .O(\NLW_x_inferred__5/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__4_n_0,i__carry__0_i_6__4_n_0,i__carry__0_i_7__4_n_0,i__carry__0_i_8__4_n_0}));
  CARRY4 \x_inferred__5/i__carry__1 
       (.CI(\x_inferred__5/i__carry__0_n_0 ),
        .CO({\x_inferred__5/i__carry__1_n_0 ,\NLW_x_inferred__5/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__4_n_0,i__carry__1_i_2__4_n_0,i__carry__1_i_3__4_n_0,i__carry__1_i_4__4_n_0}),
        .O(\NLW_x_inferred__5/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__4_n_0,i__carry__1_i_6__4_n_0,i__carry__1_i_7__4_n_0,i__carry__1_i_8__4_n_0}));
  CARRY4 \x_inferred__5/i__carry__2 
       (.CI(\x_inferred__5/i__carry__1_n_0 ),
        .CO({\x_inferred__5/i__carry__2_n_0 ,\NLW_x_inferred__5/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__4_n_0,i__carry__2_i_2__4_n_0,i__carry__2_i_3__4_n_0,i__carry__2_i_4__4_n_0}),
        .O(\NLW_x_inferred__5/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__4_n_0,i__carry__2_i_6__4_n_0,i__carry__2_i_7__4_n_0,i__carry__2_i_8__4_n_0}));
  CARRY4 \x_inferred__6/i__carry 
       (.CI(1'b0),
        .CO({\x_inferred__6/i__carry_n_0 ,\NLW_x_inferred__6/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__5_n_0,i__carry_i_2__5_n_0,i__carry_i_3__6_n_0,i__carry_i_4__5_n_0}),
        .O(\NLW_x_inferred__6/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__5_n_0,i__carry_i_6__5_n_0,i__carry_i_7__5_n_0,i__carry_i_8__5_n_0}));
  CARRY4 \x_inferred__6/i__carry__0 
       (.CI(\x_inferred__6/i__carry_n_0 ),
        .CO({\x_inferred__6/i__carry__0_n_0 ,\NLW_x_inferred__6/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__5_n_0,i__carry__0_i_2__5_n_0,i__carry__0_i_3__6_n_0,i__carry__0_i_4__6_n_0}),
        .O(\NLW_x_inferred__6/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__5_n_0,i__carry__0_i_6__5_n_0,i__carry__0_i_7__5_n_0,i__carry__0_i_8__5_n_0}));
  CARRY4 \x_inferred__6/i__carry__1 
       (.CI(\x_inferred__6/i__carry__0_n_0 ),
        .CO({\x_inferred__6/i__carry__1_n_0 ,\NLW_x_inferred__6/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1__5_n_0,i__carry__1_i_2__5_n_0,i__carry__1_i_3__5_n_0,i__carry__1_i_4__5_n_0}),
        .O(\NLW_x_inferred__6/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5__5_n_0,i__carry__1_i_6__5_n_0,i__carry__1_i_7__5_n_0,i__carry__1_i_8__5_n_0}));
  CARRY4 \x_inferred__6/i__carry__2 
       (.CI(\x_inferred__6/i__carry__1_n_0 ),
        .CO({\x_inferred__6/i__carry__2_n_0 ,\NLW_x_inferred__6/i__carry__2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1__5_n_0,i__carry__2_i_2__5_n_0,i__carry__2_i_3__5_n_0,i__carry__2_i_4__5_n_0}),
        .O(\NLW_x_inferred__6/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5__5_n_0,i__carry__2_i_6__5_n_0,i__carry__2_i_7__5_n_0,i__carry__2_i_8__5_n_0}));
endmodule

module fifo
   (out1_stb,
    \state_reg[0] ,
    \state_reg[1] ,
    int_out1_stb_reg,
    \output ,
    internal_rst_reg,
    clk,
    input_rs232_rx_ack,
    rx_d2,
    \state_reg[0]_0 ,
    \state_reg[1]_0 ,
    \bit_count_reg[2] ,
    data,
    int_out1_stb_reg_0,
    Q,
    \input ,
    \data_reg[7] );
  output out1_stb;
  output \state_reg[0] ;
  output \state_reg[1] ;
  output int_out1_stb_reg;
  output [7:0]\output ;
  input internal_rst_reg;
  input clk;
  input input_rs232_rx_ack;
  input rx_d2;
  input \state_reg[0]_0 ;
  input \state_reg[1]_0 ;
  input \bit_count_reg[2] ;
  input data;
  input int_out1_stb_reg_0;
  input [3:0]Q;
  input [7:0]\input ;
  input [7:0]\data_reg[7] ;

  wire [3:0]Q;
  wire [12:0]a_in;
  wire \a_in[0]_i_1_n_0 ;
  wire \a_in[0]_repN ;
  wire \a_in[10]_i_1_n_0 ;
  wire \a_in[11]_i_1_n_0 ;
  wire \a_in[12]_i_13_n_0 ;
  wire \a_in[12]_i_14_n_0 ;
  wire \a_in[12]_i_2_n_0 ;
  wire \a_in[12]_i_3_n_0 ;
  wire \a_in[12]_i_4_n_0 ;
  wire \a_in[12]_i_6_n_0 ;
  wire \a_in[12]_i_7_n_0 ;
  wire \a_in[12]_i_8_n_0 ;
  wire \a_in[1]_i_1_n_0 ;
  wire \a_in[1]_repN ;
  wire \a_in[2]_i_1_n_0 ;
  wire \a_in[2]_repN ;
  wire \a_in[3]_i_1_n_0 ;
  wire \a_in[3]_rep_i_1__0_n_0 ;
  wire \a_in[3]_rep_i_1__10_n_0 ;
  wire \a_in[3]_rep_i_1__11_n_0 ;
  wire \a_in[3]_rep_i_1__12_n_0 ;
  wire \a_in[3]_rep_i_1__13_n_0 ;
  wire \a_in[3]_rep_i_1__14_n_0 ;
  wire \a_in[3]_rep_i_1__1_n_0 ;
  wire \a_in[3]_rep_i_1__2_n_0 ;
  wire \a_in[3]_rep_i_1__3_n_0 ;
  wire \a_in[3]_rep_i_1__4_n_0 ;
  wire \a_in[3]_rep_i_1__5_n_0 ;
  wire \a_in[3]_rep_i_1__6_n_0 ;
  wire \a_in[3]_rep_i_1__7_n_0 ;
  wire \a_in[3]_rep_i_1__8_n_0 ;
  wire \a_in[3]_rep_i_1__9_n_0 ;
  wire \a_in[3]_rep_i_1_n_0 ;
  wire \a_in[4]_i_1_n_0 ;
  wire \a_in[4]_repN ;
  wire \a_in[5]_i_1_n_0 ;
  wire \a_in[5]_repN ;
  wire \a_in[6]_i_1_n_0 ;
  wire \a_in[6]_repN ;
  wire \a_in[7]_i_1_n_0 ;
  wire \a_in[8]_i_1_n_0 ;
  wire \a_in[9]_i_1_n_0 ;
  wire \a_in_reg[12]_i_5_n_4 ;
  wire \a_in_reg[12]_i_5_n_5 ;
  wire \a_in_reg[12]_i_5_n_6 ;
  wire \a_in_reg[12]_i_5_n_7 ;
  wire \a_in_reg[3]_rep__0_n_0 ;
  wire \a_in_reg[3]_rep__10_n_0 ;
  wire \a_in_reg[3]_rep__11_n_0 ;
  wire \a_in_reg[3]_rep__12_n_0 ;
  wire \a_in_reg[3]_rep__13_n_0 ;
  wire \a_in_reg[3]_rep__14_n_0 ;
  wire \a_in_reg[3]_rep__1_n_0 ;
  wire \a_in_reg[3]_rep__2_n_0 ;
  wire \a_in_reg[3]_rep__3_n_0 ;
  wire \a_in_reg[3]_rep__4_n_0 ;
  wire \a_in_reg[3]_rep__5_n_0 ;
  wire \a_in_reg[3]_rep__6_n_0 ;
  wire \a_in_reg[3]_rep__7_n_0 ;
  wire \a_in_reg[3]_rep__8_n_0 ;
  wire \a_in_reg[3]_rep__9_n_0 ;
  wire \a_in_reg[3]_rep_n_0 ;
  wire \a_in_reg[4]_i_2_n_0 ;
  wire \a_in_reg[4]_i_2_n_4 ;
  wire \a_in_reg[4]_i_2_n_5 ;
  wire \a_in_reg[4]_i_2_n_6 ;
  wire \a_in_reg[4]_i_2_n_7 ;
  wire \a_in_reg[8]_i_2_n_0 ;
  wire \a_in_reg[8]_i_2_n_4 ;
  wire \a_in_reg[8]_i_2_n_5 ;
  wire \a_in_reg[8]_i_2_n_6 ;
  wire \a_in_reg[8]_i_2_n_7 ;
  wire \a_out[0]_i_1_n_0 ;
  wire \a_out[0]_rep_i_1__0_n_0 ;
  wire \a_out[0]_rep_i_1__10_n_0 ;
  wire \a_out[0]_rep_i_1__1_n_0 ;
  wire \a_out[0]_rep_i_1__2_n_0 ;
  wire \a_out[0]_rep_i_1__3_n_0 ;
  wire \a_out[0]_rep_i_1__4_n_0 ;
  wire \a_out[0]_rep_i_1__5_n_0 ;
  wire \a_out[0]_rep_i_1__6_n_0 ;
  wire \a_out[0]_rep_i_1__7_n_0 ;
  wire \a_out[0]_rep_i_1__8_n_0 ;
  wire \a_out[0]_rep_i_1__9_n_0 ;
  wire \a_out[0]_rep_i_1_n_0 ;
  wire \a_out[10]_i_1_n_0 ;
  wire \a_out[11]_i_1_n_0 ;
  wire \a_out[12]_i_1_n_0 ;
  wire \a_out[1]_i_1_n_0 ;
  wire \a_out[1]_i_2_n_0 ;
  wire \a_out[1]_i_4_n_0 ;
  wire \a_out[1]_i_5_n_0 ;
  wire \a_out[1]_rep_i_1__0_n_0 ;
  wire \a_out[1]_rep_i_1__10_n_0 ;
  wire \a_out[1]_rep_i_1__11_n_0 ;
  wire \a_out[1]_rep_i_1__12_n_0 ;
  wire \a_out[1]_rep_i_1__13_n_0 ;
  wire \a_out[1]_rep_i_1__14_n_0 ;
  wire \a_out[1]_rep_i_1__1_n_0 ;
  wire \a_out[1]_rep_i_1__2_n_0 ;
  wire \a_out[1]_rep_i_1__3_n_0 ;
  wire \a_out[1]_rep_i_1__4_n_0 ;
  wire \a_out[1]_rep_i_1__5_n_0 ;
  wire \a_out[1]_rep_i_1__6_n_0 ;
  wire \a_out[1]_rep_i_1__7_n_0 ;
  wire \a_out[1]_rep_i_1__8_n_0 ;
  wire \a_out[1]_rep_i_1__9_n_0 ;
  wire \a_out[1]_rep_i_1_n_0 ;
  wire \a_out[2]_i_1_n_0 ;
  wire \a_out[3]_i_1_n_0 ;
  wire \a_out[4]_i_1_n_0 ;
  wire \a_out[5]_i_1_n_0 ;
  wire \a_out[6]_i_1_n_0 ;
  wire \a_out[7]_i_1_n_0 ;
  wire \a_out[8]_i_1_n_0 ;
  wire \a_out[9]_i_1_n_0 ;
  wire \a_out_reg[0]_rep__0_n_0 ;
  wire \a_out_reg[0]_rep__10_n_0 ;
  wire \a_out_reg[0]_rep__1_n_0 ;
  wire \a_out_reg[0]_rep__2_n_0 ;
  wire \a_out_reg[0]_rep__3_n_0 ;
  wire \a_out_reg[0]_rep__4_n_0 ;
  wire \a_out_reg[0]_rep__5_n_0 ;
  wire \a_out_reg[0]_rep__6_n_0 ;
  wire \a_out_reg[0]_rep__7_n_0 ;
  wire \a_out_reg[0]_rep__8_n_0 ;
  wire \a_out_reg[0]_rep__9_n_0 ;
  wire \a_out_reg[0]_rep_n_0 ;
  wire \a_out_reg[1]_i_3_n_0 ;
  wire \a_out_reg[1]_rep__0_n_0 ;
  wire \a_out_reg[1]_rep__10_n_0 ;
  wire \a_out_reg[1]_rep__11_n_0 ;
  wire \a_out_reg[1]_rep__12_n_0 ;
  wire \a_out_reg[1]_rep__13_n_0 ;
  wire \a_out_reg[1]_rep__14_n_0 ;
  wire \a_out_reg[1]_rep__1_n_0 ;
  wire \a_out_reg[1]_rep__2_n_0 ;
  wire \a_out_reg[1]_rep__3_n_0 ;
  wire \a_out_reg[1]_rep__4_n_0 ;
  wire \a_out_reg[1]_rep__5_n_0 ;
  wire \a_out_reg[1]_rep__6_n_0 ;
  wire \a_out_reg[1]_rep__7_n_0 ;
  wire \a_out_reg[1]_rep__8_n_0 ;
  wire \a_out_reg[1]_rep__9_n_0 ;
  wire \a_out_reg[1]_rep_n_0 ;
  wire \a_out_reg[5]_i_2_n_0 ;
  wire \a_out_reg_n_0_[0] ;
  wire \a_out_reg_n_0_[10] ;
  wire \a_out_reg_n_0_[11] ;
  wire \a_out_reg_n_0_[12] ;
  wire \a_out_reg_n_0_[1] ;
  wire \a_out_reg_n_0_[2] ;
  wire \a_out_reg_n_0_[3] ;
  wire \a_out_reg_n_0_[4] ;
  wire \a_out_reg_n_0_[5] ;
  wire \a_out_reg_n_0_[6] ;
  wire \a_out_reg_n_0_[7] ;
  wire \a_out_reg_n_0_[8] ;
  wire \a_out_reg_n_0_[9] ;
  wire \bit_count_reg[2] ;
  wire clk;
  wire data;
  wire [12:1]data0;
  wire [7:0]\data_reg[7] ;
  wire empty;
  wire full1_carry__0_i_1_n_0;
  wire full1_carry__0_i_2_n_3;
  wire full1_carry__0_n_3;
  wire full1_carry_i_10_n_0;
  wire full1_carry_i_11_n_0;
  wire full1_carry_i_12_n_0;
  wire full1_carry_i_13_n_0;
  wire full1_carry_i_14_n_0;
  wire full1_carry_i_15_n_0;
  wire full1_carry_i_16_n_0;
  wire full1_carry_i_17_n_0;
  wire full1_carry_i_18_n_0;
  wire full1_carry_i_19_n_0;
  wire full1_carry_i_1_n_0;
  wire full1_carry_i_2_n_0;
  wire full1_carry_i_3_n_0;
  wire full1_carry_i_4_n_0;
  wire full1_carry_i_5_n_0;
  wire full1_carry_i_6_n_0;
  wire full1_carry_i_7_n_0;
  wire full1_carry_i_8_n_0;
  wire full1_carry_i_9_n_0;
  wire full1_carry_n_0;
  wire [12:1]full2;
  wire [7:0]\input ;
  wire input_rs232_rx_ack;
  wire int_out1_stb_reg;
  wire int_out1_stb_reg_0;
  wire internal_rst_reg;
  wire memory_reg_0_127_0_0_i_1_n_0;
  wire memory_reg_0_127_0_0_i_2_n_0;
  wire memory_reg_0_127_0_0_n_0;
  wire memory_reg_0_127_0_0_n_1;
  wire memory_reg_0_127_1_1_n_0;
  wire memory_reg_0_127_1_1_n_1;
  wire memory_reg_0_127_2_2_n_0;
  wire memory_reg_0_127_2_2_n_1;
  wire memory_reg_0_127_3_3_n_0;
  wire memory_reg_0_127_3_3_n_1;
  wire memory_reg_0_127_4_4_n_0;
  wire memory_reg_0_127_4_4_n_1;
  wire memory_reg_0_127_5_5_n_0;
  wire memory_reg_0_127_5_5_n_1;
  wire memory_reg_0_127_6_6_n_0;
  wire memory_reg_0_127_6_6_n_1;
  wire memory_reg_0_127_7_7_n_0;
  wire memory_reg_0_127_7_7_n_1;
  wire memory_reg_1024_1151_0_0_i_1_n_0;
  wire memory_reg_1024_1151_0_0_i_2_n_0;
  wire memory_reg_1024_1151_0_0_n_0;
  wire memory_reg_1024_1151_0_0_n_1;
  wire memory_reg_1024_1151_1_1_n_0;
  wire memory_reg_1024_1151_1_1_n_1;
  wire memory_reg_1024_1151_2_2_n_0;
  wire memory_reg_1024_1151_2_2_n_1;
  wire memory_reg_1024_1151_3_3_n_0;
  wire memory_reg_1024_1151_3_3_n_1;
  wire memory_reg_1024_1151_4_4_n_0;
  wire memory_reg_1024_1151_4_4_n_1;
  wire memory_reg_1024_1151_5_5_n_0;
  wire memory_reg_1024_1151_5_5_n_1;
  wire memory_reg_1024_1151_6_6_n_0;
  wire memory_reg_1024_1151_6_6_n_1;
  wire memory_reg_1024_1151_7_7_n_0;
  wire memory_reg_1024_1151_7_7_n_1;
  wire memory_reg_1152_1279_0_0_i_1_n_0;
  wire memory_reg_1152_1279_0_0_i_2_n_0;
  wire memory_reg_1152_1279_0_0_n_0;
  wire memory_reg_1152_1279_0_0_n_1;
  wire memory_reg_1152_1279_1_1_n_0;
  wire memory_reg_1152_1279_1_1_n_1;
  wire memory_reg_1152_1279_2_2_n_0;
  wire memory_reg_1152_1279_2_2_n_1;
  wire memory_reg_1152_1279_3_3_n_0;
  wire memory_reg_1152_1279_3_3_n_1;
  wire memory_reg_1152_1279_4_4_n_0;
  wire memory_reg_1152_1279_4_4_n_1;
  wire memory_reg_1152_1279_5_5_n_0;
  wire memory_reg_1152_1279_5_5_n_1;
  wire memory_reg_1152_1279_6_6_n_0;
  wire memory_reg_1152_1279_6_6_n_1;
  wire memory_reg_1152_1279_7_7_n_0;
  wire memory_reg_1152_1279_7_7_n_1;
  wire memory_reg_1280_1407_0_0_i_1_n_0;
  wire memory_reg_1280_1407_0_0_i_2_n_0;
  wire memory_reg_1280_1407_0_0_n_0;
  wire memory_reg_1280_1407_0_0_n_1;
  wire memory_reg_1280_1407_1_1_n_0;
  wire memory_reg_1280_1407_1_1_n_1;
  wire memory_reg_1280_1407_2_2_n_0;
  wire memory_reg_1280_1407_2_2_n_1;
  wire memory_reg_1280_1407_3_3_n_0;
  wire memory_reg_1280_1407_3_3_n_1;
  wire memory_reg_1280_1407_4_4_n_0;
  wire memory_reg_1280_1407_4_4_n_1;
  wire memory_reg_1280_1407_5_5_n_0;
  wire memory_reg_1280_1407_5_5_n_1;
  wire memory_reg_1280_1407_6_6_n_0;
  wire memory_reg_1280_1407_6_6_n_1;
  wire memory_reg_1280_1407_7_7_n_0;
  wire memory_reg_1280_1407_7_7_n_1;
  wire memory_reg_128_255_0_0_i_1_n_0;
  wire memory_reg_128_255_0_0_i_2_n_0;
  wire memory_reg_128_255_0_0_n_0;
  wire memory_reg_128_255_0_0_n_1;
  wire memory_reg_128_255_1_1_n_0;
  wire memory_reg_128_255_1_1_n_1;
  wire memory_reg_128_255_2_2_n_0;
  wire memory_reg_128_255_2_2_n_1;
  wire memory_reg_128_255_3_3_n_0;
  wire memory_reg_128_255_3_3_n_1;
  wire memory_reg_128_255_4_4_n_0;
  wire memory_reg_128_255_4_4_n_1;
  wire memory_reg_128_255_5_5_n_0;
  wire memory_reg_128_255_5_5_n_1;
  wire memory_reg_128_255_6_6_n_0;
  wire memory_reg_128_255_6_6_n_1;
  wire memory_reg_128_255_7_7_n_0;
  wire memory_reg_128_255_7_7_n_1;
  wire memory_reg_1408_1535_0_0_i_1_n_0;
  wire memory_reg_1408_1535_0_0_i_2_n_0;
  wire memory_reg_1408_1535_0_0_n_0;
  wire memory_reg_1408_1535_0_0_n_1;
  wire memory_reg_1408_1535_1_1_n_0;
  wire memory_reg_1408_1535_1_1_n_1;
  wire memory_reg_1408_1535_2_2_n_0;
  wire memory_reg_1408_1535_2_2_n_1;
  wire memory_reg_1408_1535_3_3_n_0;
  wire memory_reg_1408_1535_3_3_n_1;
  wire memory_reg_1408_1535_4_4_n_0;
  wire memory_reg_1408_1535_4_4_n_1;
  wire memory_reg_1408_1535_5_5_n_0;
  wire memory_reg_1408_1535_5_5_n_1;
  wire memory_reg_1408_1535_6_6_n_0;
  wire memory_reg_1408_1535_6_6_n_1;
  wire memory_reg_1408_1535_7_7_n_0;
  wire memory_reg_1408_1535_7_7_n_1;
  wire memory_reg_1536_1663_0_0_i_1_n_0;
  wire memory_reg_1536_1663_0_0_i_2_n_0;
  wire memory_reg_1536_1663_0_0_n_0;
  wire memory_reg_1536_1663_0_0_n_1;
  wire memory_reg_1536_1663_1_1_n_0;
  wire memory_reg_1536_1663_1_1_n_1;
  wire memory_reg_1536_1663_2_2_n_0;
  wire memory_reg_1536_1663_2_2_n_1;
  wire memory_reg_1536_1663_3_3_n_0;
  wire memory_reg_1536_1663_3_3_n_1;
  wire memory_reg_1536_1663_4_4_n_0;
  wire memory_reg_1536_1663_4_4_n_1;
  wire memory_reg_1536_1663_5_5_n_0;
  wire memory_reg_1536_1663_5_5_n_1;
  wire memory_reg_1536_1663_6_6_n_0;
  wire memory_reg_1536_1663_6_6_n_1;
  wire memory_reg_1536_1663_7_7_n_0;
  wire memory_reg_1536_1663_7_7_n_1;
  wire memory_reg_1664_1791_0_0_i_1_n_0;
  wire memory_reg_1664_1791_0_0_i_2_n_0;
  wire memory_reg_1664_1791_0_0_n_0;
  wire memory_reg_1664_1791_0_0_n_1;
  wire memory_reg_1664_1791_1_1_n_0;
  wire memory_reg_1664_1791_1_1_n_1;
  wire memory_reg_1664_1791_2_2_n_0;
  wire memory_reg_1664_1791_2_2_n_1;
  wire memory_reg_1664_1791_3_3_n_0;
  wire memory_reg_1664_1791_3_3_n_1;
  wire memory_reg_1664_1791_4_4_n_0;
  wire memory_reg_1664_1791_4_4_n_1;
  wire memory_reg_1664_1791_5_5_n_0;
  wire memory_reg_1664_1791_5_5_n_1;
  wire memory_reg_1664_1791_6_6_n_0;
  wire memory_reg_1664_1791_6_6_n_1;
  wire memory_reg_1664_1791_7_7_n_0;
  wire memory_reg_1664_1791_7_7_n_1;
  wire memory_reg_1792_1919_0_0_i_1_n_0;
  wire memory_reg_1792_1919_0_0_i_2_n_0;
  wire memory_reg_1792_1919_0_0_n_0;
  wire memory_reg_1792_1919_0_0_n_1;
  wire memory_reg_1792_1919_1_1_n_0;
  wire memory_reg_1792_1919_1_1_n_1;
  wire memory_reg_1792_1919_2_2_n_0;
  wire memory_reg_1792_1919_2_2_n_1;
  wire memory_reg_1792_1919_3_3_n_0;
  wire memory_reg_1792_1919_3_3_n_1;
  wire memory_reg_1792_1919_4_4_n_0;
  wire memory_reg_1792_1919_4_4_n_1;
  wire memory_reg_1792_1919_5_5_n_0;
  wire memory_reg_1792_1919_5_5_n_1;
  wire memory_reg_1792_1919_6_6_n_0;
  wire memory_reg_1792_1919_6_6_n_1;
  wire memory_reg_1792_1919_7_7_n_0;
  wire memory_reg_1792_1919_7_7_n_1;
  wire memory_reg_1920_2047_0_0_i_1_n_0;
  wire memory_reg_1920_2047_0_0_i_2_n_0;
  wire memory_reg_1920_2047_0_0_n_0;
  wire memory_reg_1920_2047_0_0_n_1;
  wire memory_reg_1920_2047_1_1_n_0;
  wire memory_reg_1920_2047_1_1_n_1;
  wire memory_reg_1920_2047_2_2_n_0;
  wire memory_reg_1920_2047_2_2_n_1;
  wire memory_reg_1920_2047_3_3_n_0;
  wire memory_reg_1920_2047_3_3_n_1;
  wire memory_reg_1920_2047_4_4_n_0;
  wire memory_reg_1920_2047_4_4_n_1;
  wire memory_reg_1920_2047_5_5_n_0;
  wire memory_reg_1920_2047_5_5_n_1;
  wire memory_reg_1920_2047_6_6_n_0;
  wire memory_reg_1920_2047_6_6_n_1;
  wire memory_reg_1920_2047_7_7_n_0;
  wire memory_reg_1920_2047_7_7_n_1;
  wire memory_reg_2048_2175_0_0_i_1_n_0;
  wire memory_reg_2048_2175_0_0_i_2_n_0;
  wire memory_reg_2048_2175_0_0_n_0;
  wire memory_reg_2048_2175_0_0_n_1;
  wire memory_reg_2048_2175_1_1_n_0;
  wire memory_reg_2048_2175_1_1_n_1;
  wire memory_reg_2048_2175_2_2_n_0;
  wire memory_reg_2048_2175_2_2_n_1;
  wire memory_reg_2048_2175_3_3_n_0;
  wire memory_reg_2048_2175_3_3_n_1;
  wire memory_reg_2048_2175_4_4_n_0;
  wire memory_reg_2048_2175_4_4_n_1;
  wire memory_reg_2048_2175_5_5_n_0;
  wire memory_reg_2048_2175_5_5_n_1;
  wire memory_reg_2048_2175_6_6_n_0;
  wire memory_reg_2048_2175_6_6_n_1;
  wire memory_reg_2048_2175_7_7_n_0;
  wire memory_reg_2048_2175_7_7_n_1;
  wire memory_reg_2176_2303_0_0_i_1_n_0;
  wire memory_reg_2176_2303_0_0_i_2_n_0;
  wire memory_reg_2176_2303_0_0_n_0;
  wire memory_reg_2176_2303_0_0_n_1;
  wire memory_reg_2176_2303_1_1_n_0;
  wire memory_reg_2176_2303_1_1_n_1;
  wire memory_reg_2176_2303_2_2_n_0;
  wire memory_reg_2176_2303_2_2_n_1;
  wire memory_reg_2176_2303_3_3_n_0;
  wire memory_reg_2176_2303_3_3_n_1;
  wire memory_reg_2176_2303_4_4_n_0;
  wire memory_reg_2176_2303_4_4_n_1;
  wire memory_reg_2176_2303_5_5_n_0;
  wire memory_reg_2176_2303_5_5_n_1;
  wire memory_reg_2176_2303_6_6_n_0;
  wire memory_reg_2176_2303_6_6_n_1;
  wire memory_reg_2176_2303_7_7_n_0;
  wire memory_reg_2176_2303_7_7_n_1;
  wire memory_reg_2304_2431_0_0_i_1_n_0;
  wire memory_reg_2304_2431_0_0_i_2_n_0;
  wire memory_reg_2304_2431_0_0_n_0;
  wire memory_reg_2304_2431_0_0_n_1;
  wire memory_reg_2304_2431_1_1_n_0;
  wire memory_reg_2304_2431_1_1_n_1;
  wire memory_reg_2304_2431_2_2_n_0;
  wire memory_reg_2304_2431_2_2_n_1;
  wire memory_reg_2304_2431_3_3_n_0;
  wire memory_reg_2304_2431_3_3_n_1;
  wire memory_reg_2304_2431_4_4_n_0;
  wire memory_reg_2304_2431_4_4_n_1;
  wire memory_reg_2304_2431_5_5_n_0;
  wire memory_reg_2304_2431_5_5_n_1;
  wire memory_reg_2304_2431_6_6_n_0;
  wire memory_reg_2304_2431_6_6_n_1;
  wire memory_reg_2304_2431_7_7_n_0;
  wire memory_reg_2304_2431_7_7_n_1;
  wire memory_reg_2432_2559_0_0_i_1_n_0;
  wire memory_reg_2432_2559_0_0_i_2_n_0;
  wire memory_reg_2432_2559_0_0_n_0;
  wire memory_reg_2432_2559_0_0_n_1;
  wire memory_reg_2432_2559_1_1_n_0;
  wire memory_reg_2432_2559_1_1_n_1;
  wire memory_reg_2432_2559_2_2_n_0;
  wire memory_reg_2432_2559_2_2_n_1;
  wire memory_reg_2432_2559_3_3_n_0;
  wire memory_reg_2432_2559_3_3_n_1;
  wire memory_reg_2432_2559_4_4_n_0;
  wire memory_reg_2432_2559_4_4_n_1;
  wire memory_reg_2432_2559_5_5_n_0;
  wire memory_reg_2432_2559_5_5_n_1;
  wire memory_reg_2432_2559_6_6_n_0;
  wire memory_reg_2432_2559_6_6_n_1;
  wire memory_reg_2432_2559_7_7_n_0;
  wire memory_reg_2432_2559_7_7_n_1;
  wire memory_reg_2560_2687_0_0_i_1_n_0;
  wire memory_reg_2560_2687_0_0_i_2_n_0;
  wire memory_reg_2560_2687_0_0_n_0;
  wire memory_reg_2560_2687_0_0_n_1;
  wire memory_reg_2560_2687_1_1_n_0;
  wire memory_reg_2560_2687_1_1_n_1;
  wire memory_reg_2560_2687_2_2_n_0;
  wire memory_reg_2560_2687_2_2_n_1;
  wire memory_reg_2560_2687_3_3_n_0;
  wire memory_reg_2560_2687_3_3_n_1;
  wire memory_reg_2560_2687_4_4_n_0;
  wire memory_reg_2560_2687_4_4_n_1;
  wire memory_reg_2560_2687_5_5_n_0;
  wire memory_reg_2560_2687_5_5_n_1;
  wire memory_reg_2560_2687_6_6_n_0;
  wire memory_reg_2560_2687_6_6_n_1;
  wire memory_reg_2560_2687_7_7_n_0;
  wire memory_reg_2560_2687_7_7_n_1;
  wire memory_reg_256_383_0_0_i_1_n_0;
  wire memory_reg_256_383_0_0_i_2_n_0;
  wire memory_reg_256_383_0_0_n_0;
  wire memory_reg_256_383_0_0_n_1;
  wire memory_reg_256_383_1_1_n_0;
  wire memory_reg_256_383_1_1_n_1;
  wire memory_reg_256_383_2_2_n_0;
  wire memory_reg_256_383_2_2_n_1;
  wire memory_reg_256_383_3_3_n_0;
  wire memory_reg_256_383_3_3_n_1;
  wire memory_reg_256_383_4_4_n_0;
  wire memory_reg_256_383_4_4_n_1;
  wire memory_reg_256_383_5_5_n_0;
  wire memory_reg_256_383_5_5_n_1;
  wire memory_reg_256_383_6_6_n_0;
  wire memory_reg_256_383_6_6_n_1;
  wire memory_reg_256_383_7_7_n_0;
  wire memory_reg_256_383_7_7_n_1;
  wire memory_reg_2688_2815_0_0_i_1_n_0;
  wire memory_reg_2688_2815_0_0_i_2_n_0;
  wire memory_reg_2688_2815_0_0_n_0;
  wire memory_reg_2688_2815_0_0_n_1;
  wire memory_reg_2688_2815_1_1_n_0;
  wire memory_reg_2688_2815_1_1_n_1;
  wire memory_reg_2688_2815_2_2_n_0;
  wire memory_reg_2688_2815_2_2_n_1;
  wire memory_reg_2688_2815_3_3_n_0;
  wire memory_reg_2688_2815_3_3_n_1;
  wire memory_reg_2688_2815_4_4_n_0;
  wire memory_reg_2688_2815_4_4_n_1;
  wire memory_reg_2688_2815_5_5_n_0;
  wire memory_reg_2688_2815_5_5_n_1;
  wire memory_reg_2688_2815_6_6_n_0;
  wire memory_reg_2688_2815_6_6_n_1;
  wire memory_reg_2688_2815_7_7_n_0;
  wire memory_reg_2688_2815_7_7_n_1;
  wire memory_reg_2816_2943_0_0_i_1_n_0;
  wire memory_reg_2816_2943_0_0_i_2_n_0;
  wire memory_reg_2816_2943_0_0_n_0;
  wire memory_reg_2816_2943_0_0_n_1;
  wire memory_reg_2816_2943_1_1_n_0;
  wire memory_reg_2816_2943_1_1_n_1;
  wire memory_reg_2816_2943_2_2_n_0;
  wire memory_reg_2816_2943_2_2_n_1;
  wire memory_reg_2816_2943_3_3_n_0;
  wire memory_reg_2816_2943_3_3_n_1;
  wire memory_reg_2816_2943_4_4_n_0;
  wire memory_reg_2816_2943_4_4_n_1;
  wire memory_reg_2816_2943_5_5_n_0;
  wire memory_reg_2816_2943_5_5_n_1;
  wire memory_reg_2816_2943_6_6_n_0;
  wire memory_reg_2816_2943_6_6_n_1;
  wire memory_reg_2816_2943_7_7_n_0;
  wire memory_reg_2816_2943_7_7_n_1;
  wire memory_reg_2944_3071_0_0_i_1_n_0;
  wire memory_reg_2944_3071_0_0_i_2_n_0;
  wire memory_reg_2944_3071_0_0_n_0;
  wire memory_reg_2944_3071_0_0_n_1;
  wire memory_reg_2944_3071_1_1_n_0;
  wire memory_reg_2944_3071_1_1_n_1;
  wire memory_reg_2944_3071_2_2_n_0;
  wire memory_reg_2944_3071_2_2_n_1;
  wire memory_reg_2944_3071_3_3_n_0;
  wire memory_reg_2944_3071_3_3_n_1;
  wire memory_reg_2944_3071_4_4_n_0;
  wire memory_reg_2944_3071_4_4_n_1;
  wire memory_reg_2944_3071_5_5_n_0;
  wire memory_reg_2944_3071_5_5_n_1;
  wire memory_reg_2944_3071_6_6_n_0;
  wire memory_reg_2944_3071_6_6_n_1;
  wire memory_reg_2944_3071_7_7_n_0;
  wire memory_reg_2944_3071_7_7_n_1;
  wire memory_reg_3072_3199_0_0_i_1_n_0;
  wire memory_reg_3072_3199_0_0_i_2_n_0;
  wire memory_reg_3072_3199_0_0_n_0;
  wire memory_reg_3072_3199_0_0_n_1;
  wire memory_reg_3072_3199_1_1_n_0;
  wire memory_reg_3072_3199_1_1_n_1;
  wire memory_reg_3072_3199_2_2_n_0;
  wire memory_reg_3072_3199_2_2_n_1;
  wire memory_reg_3072_3199_3_3_n_0;
  wire memory_reg_3072_3199_3_3_n_1;
  wire memory_reg_3072_3199_4_4_n_0;
  wire memory_reg_3072_3199_4_4_n_1;
  wire memory_reg_3072_3199_5_5_n_0;
  wire memory_reg_3072_3199_5_5_n_1;
  wire memory_reg_3072_3199_6_6_n_0;
  wire memory_reg_3072_3199_6_6_n_1;
  wire memory_reg_3072_3199_7_7_n_0;
  wire memory_reg_3072_3199_7_7_n_1;
  wire memory_reg_3200_3327_0_0_i_1_n_0;
  wire memory_reg_3200_3327_0_0_i_2_n_0;
  wire memory_reg_3200_3327_0_0_n_0;
  wire memory_reg_3200_3327_0_0_n_1;
  wire memory_reg_3200_3327_1_1_n_0;
  wire memory_reg_3200_3327_1_1_n_1;
  wire memory_reg_3200_3327_2_2_n_0;
  wire memory_reg_3200_3327_2_2_n_1;
  wire memory_reg_3200_3327_3_3_n_0;
  wire memory_reg_3200_3327_3_3_n_1;
  wire memory_reg_3200_3327_4_4_n_0;
  wire memory_reg_3200_3327_4_4_n_1;
  wire memory_reg_3200_3327_5_5_n_0;
  wire memory_reg_3200_3327_5_5_n_1;
  wire memory_reg_3200_3327_6_6_n_0;
  wire memory_reg_3200_3327_6_6_n_1;
  wire memory_reg_3200_3327_7_7_n_0;
  wire memory_reg_3200_3327_7_7_n_1;
  wire memory_reg_3328_3455_0_0_i_1_n_0;
  wire memory_reg_3328_3455_0_0_i_2_n_0;
  wire memory_reg_3328_3455_0_0_n_0;
  wire memory_reg_3328_3455_0_0_n_1;
  wire memory_reg_3328_3455_1_1_n_0;
  wire memory_reg_3328_3455_1_1_n_1;
  wire memory_reg_3328_3455_2_2_n_0;
  wire memory_reg_3328_3455_2_2_n_1;
  wire memory_reg_3328_3455_3_3_n_0;
  wire memory_reg_3328_3455_3_3_n_1;
  wire memory_reg_3328_3455_4_4_n_0;
  wire memory_reg_3328_3455_4_4_n_1;
  wire memory_reg_3328_3455_5_5_n_0;
  wire memory_reg_3328_3455_5_5_n_1;
  wire memory_reg_3328_3455_6_6_n_0;
  wire memory_reg_3328_3455_6_6_n_1;
  wire memory_reg_3328_3455_7_7_n_0;
  wire memory_reg_3328_3455_7_7_n_1;
  wire memory_reg_3456_3583_0_0_i_1_n_0;
  wire memory_reg_3456_3583_0_0_i_2_n_0;
  wire memory_reg_3456_3583_0_0_n_0;
  wire memory_reg_3456_3583_0_0_n_1;
  wire memory_reg_3456_3583_1_1_n_0;
  wire memory_reg_3456_3583_1_1_n_1;
  wire memory_reg_3456_3583_2_2_n_0;
  wire memory_reg_3456_3583_2_2_n_1;
  wire memory_reg_3456_3583_3_3_n_0;
  wire memory_reg_3456_3583_3_3_n_1;
  wire memory_reg_3456_3583_4_4_n_0;
  wire memory_reg_3456_3583_4_4_n_1;
  wire memory_reg_3456_3583_5_5_n_0;
  wire memory_reg_3456_3583_5_5_n_1;
  wire memory_reg_3456_3583_6_6_n_0;
  wire memory_reg_3456_3583_6_6_n_1;
  wire memory_reg_3456_3583_7_7_n_0;
  wire memory_reg_3456_3583_7_7_n_1;
  wire memory_reg_3584_3711_0_0_i_1_n_0;
  wire memory_reg_3584_3711_0_0_i_2_n_0;
  wire memory_reg_3584_3711_0_0_n_0;
  wire memory_reg_3584_3711_0_0_n_1;
  wire memory_reg_3584_3711_1_1_n_0;
  wire memory_reg_3584_3711_1_1_n_1;
  wire memory_reg_3584_3711_2_2_n_0;
  wire memory_reg_3584_3711_2_2_n_1;
  wire memory_reg_3584_3711_3_3_n_0;
  wire memory_reg_3584_3711_3_3_n_1;
  wire memory_reg_3584_3711_4_4_n_0;
  wire memory_reg_3584_3711_4_4_n_1;
  wire memory_reg_3584_3711_5_5_n_0;
  wire memory_reg_3584_3711_5_5_n_1;
  wire memory_reg_3584_3711_6_6_n_0;
  wire memory_reg_3584_3711_6_6_n_1;
  wire memory_reg_3584_3711_7_7_n_0;
  wire memory_reg_3584_3711_7_7_n_1;
  wire memory_reg_3712_3839_0_0_i_1_n_0;
  wire memory_reg_3712_3839_0_0_i_2_n_0;
  wire memory_reg_3712_3839_0_0_n_0;
  wire memory_reg_3712_3839_0_0_n_1;
  wire memory_reg_3712_3839_1_1_n_0;
  wire memory_reg_3712_3839_1_1_n_1;
  wire memory_reg_3712_3839_2_2_n_0;
  wire memory_reg_3712_3839_2_2_n_1;
  wire memory_reg_3712_3839_3_3_n_0;
  wire memory_reg_3712_3839_3_3_n_1;
  wire memory_reg_3712_3839_4_4_n_0;
  wire memory_reg_3712_3839_4_4_n_1;
  wire memory_reg_3712_3839_5_5_n_0;
  wire memory_reg_3712_3839_5_5_n_1;
  wire memory_reg_3712_3839_6_6_n_0;
  wire memory_reg_3712_3839_6_6_n_1;
  wire memory_reg_3712_3839_7_7_n_0;
  wire memory_reg_3712_3839_7_7_n_1;
  wire memory_reg_3840_3967_0_0_i_1_n_0;
  wire memory_reg_3840_3967_0_0_i_2_n_0;
  wire memory_reg_3840_3967_0_0_n_0;
  wire memory_reg_3840_3967_0_0_n_1;
  wire memory_reg_3840_3967_1_1_n_0;
  wire memory_reg_3840_3967_1_1_n_1;
  wire memory_reg_3840_3967_2_2_n_0;
  wire memory_reg_3840_3967_2_2_n_1;
  wire memory_reg_3840_3967_3_3_n_0;
  wire memory_reg_3840_3967_3_3_n_1;
  wire memory_reg_3840_3967_4_4_n_0;
  wire memory_reg_3840_3967_4_4_n_1;
  wire memory_reg_3840_3967_5_5_n_0;
  wire memory_reg_3840_3967_5_5_n_1;
  wire memory_reg_3840_3967_6_6_n_0;
  wire memory_reg_3840_3967_6_6_n_1;
  wire memory_reg_3840_3967_7_7_n_0;
  wire memory_reg_3840_3967_7_7_n_1;
  wire memory_reg_384_511_0_0_i_1_n_0;
  wire memory_reg_384_511_0_0_i_2_n_0;
  wire memory_reg_384_511_0_0_n_0;
  wire memory_reg_384_511_0_0_n_1;
  wire memory_reg_384_511_1_1_n_0;
  wire memory_reg_384_511_1_1_n_1;
  wire memory_reg_384_511_2_2_n_0;
  wire memory_reg_384_511_2_2_n_1;
  wire memory_reg_384_511_3_3_n_0;
  wire memory_reg_384_511_3_3_n_1;
  wire memory_reg_384_511_4_4_n_0;
  wire memory_reg_384_511_4_4_n_1;
  wire memory_reg_384_511_5_5_n_0;
  wire memory_reg_384_511_5_5_n_1;
  wire memory_reg_384_511_6_6_n_0;
  wire memory_reg_384_511_6_6_n_1;
  wire memory_reg_384_511_7_7_n_0;
  wire memory_reg_384_511_7_7_n_1;
  wire memory_reg_3968_4095_0_0_i_1_n_0;
  wire memory_reg_3968_4095_0_0_i_2_n_0;
  wire memory_reg_3968_4095_0_0_n_0;
  wire memory_reg_3968_4095_0_0_n_1;
  wire memory_reg_3968_4095_1_1_n_0;
  wire memory_reg_3968_4095_1_1_n_1;
  wire memory_reg_3968_4095_2_2_n_0;
  wire memory_reg_3968_4095_2_2_n_1;
  wire memory_reg_3968_4095_3_3_n_0;
  wire memory_reg_3968_4095_3_3_n_1;
  wire memory_reg_3968_4095_4_4_n_0;
  wire memory_reg_3968_4095_4_4_n_1;
  wire memory_reg_3968_4095_5_5_n_0;
  wire memory_reg_3968_4095_5_5_n_1;
  wire memory_reg_3968_4095_6_6_n_0;
  wire memory_reg_3968_4095_6_6_n_1;
  wire memory_reg_3968_4095_7_7_n_0;
  wire memory_reg_3968_4095_7_7_n_1;
  wire memory_reg_4096_4223_0_0_i_1_n_0;
  wire memory_reg_4096_4223_0_0_n_0;
  wire memory_reg_4096_4223_0_0_n_1;
  wire memory_reg_4096_4223_1_1_n_0;
  wire memory_reg_4096_4223_1_1_n_1;
  wire memory_reg_4096_4223_2_2_n_0;
  wire memory_reg_4096_4223_2_2_n_1;
  wire memory_reg_4096_4223_3_3_n_0;
  wire memory_reg_4096_4223_3_3_n_1;
  wire memory_reg_4096_4223_4_4_n_0;
  wire memory_reg_4096_4223_4_4_n_1;
  wire memory_reg_4096_4223_5_5_n_0;
  wire memory_reg_4096_4223_5_5_n_1;
  wire memory_reg_4096_4223_6_6_n_0;
  wire memory_reg_4096_4223_6_6_n_1;
  wire memory_reg_4096_4223_7_7_n_0;
  wire memory_reg_4096_4223_7_7_n_1;
  wire memory_reg_4224_4351_0_0_i_1_n_0;
  wire memory_reg_4224_4351_0_0_n_0;
  wire memory_reg_4224_4351_0_0_n_1;
  wire memory_reg_4224_4351_1_1_n_0;
  wire memory_reg_4224_4351_1_1_n_1;
  wire memory_reg_4224_4351_2_2_n_0;
  wire memory_reg_4224_4351_2_2_n_1;
  wire memory_reg_4224_4351_3_3_n_0;
  wire memory_reg_4224_4351_3_3_n_1;
  wire memory_reg_4224_4351_4_4_n_0;
  wire memory_reg_4224_4351_4_4_n_1;
  wire memory_reg_4224_4351_5_5_n_0;
  wire memory_reg_4224_4351_5_5_n_1;
  wire memory_reg_4224_4351_6_6_n_0;
  wire memory_reg_4224_4351_6_6_n_1;
  wire memory_reg_4224_4351_7_7_n_0;
  wire memory_reg_4224_4351_7_7_n_1;
  wire memory_reg_4352_4479_0_0_i_1_n_0;
  wire memory_reg_4352_4479_0_0_n_0;
  wire memory_reg_4352_4479_0_0_n_1;
  wire memory_reg_4352_4479_1_1_n_0;
  wire memory_reg_4352_4479_1_1_n_1;
  wire memory_reg_4352_4479_2_2_n_0;
  wire memory_reg_4352_4479_2_2_n_1;
  wire memory_reg_4352_4479_3_3_n_0;
  wire memory_reg_4352_4479_3_3_n_1;
  wire memory_reg_4352_4479_4_4_n_0;
  wire memory_reg_4352_4479_4_4_n_1;
  wire memory_reg_4352_4479_5_5_n_0;
  wire memory_reg_4352_4479_5_5_n_1;
  wire memory_reg_4352_4479_6_6_n_0;
  wire memory_reg_4352_4479_6_6_n_1;
  wire memory_reg_4352_4479_7_7_n_0;
  wire memory_reg_4352_4479_7_7_n_1;
  wire memory_reg_4480_4607_0_0_i_1_n_0;
  wire memory_reg_4480_4607_0_0_n_0;
  wire memory_reg_4480_4607_0_0_n_1;
  wire memory_reg_4480_4607_1_1_n_0;
  wire memory_reg_4480_4607_1_1_n_1;
  wire memory_reg_4480_4607_2_2_n_0;
  wire memory_reg_4480_4607_2_2_n_1;
  wire memory_reg_4480_4607_3_3_n_0;
  wire memory_reg_4480_4607_3_3_n_1;
  wire memory_reg_4480_4607_4_4_n_0;
  wire memory_reg_4480_4607_4_4_n_1;
  wire memory_reg_4480_4607_5_5_n_0;
  wire memory_reg_4480_4607_5_5_n_1;
  wire memory_reg_4480_4607_6_6_n_0;
  wire memory_reg_4480_4607_6_6_n_1;
  wire memory_reg_4480_4607_7_7_n_0;
  wire memory_reg_4480_4607_7_7_n_1;
  wire memory_reg_4608_4735_0_0_i_1_n_0;
  wire memory_reg_4608_4735_0_0_n_0;
  wire memory_reg_4608_4735_0_0_n_1;
  wire memory_reg_4608_4735_1_1_n_0;
  wire memory_reg_4608_4735_1_1_n_1;
  wire memory_reg_4608_4735_2_2_n_0;
  wire memory_reg_4608_4735_2_2_n_1;
  wire memory_reg_4608_4735_3_3_n_0;
  wire memory_reg_4608_4735_3_3_n_1;
  wire memory_reg_4608_4735_4_4_n_0;
  wire memory_reg_4608_4735_4_4_n_1;
  wire memory_reg_4608_4735_5_5_n_0;
  wire memory_reg_4608_4735_5_5_n_1;
  wire memory_reg_4608_4735_6_6_n_0;
  wire memory_reg_4608_4735_6_6_n_1;
  wire memory_reg_4608_4735_7_7_n_0;
  wire memory_reg_4608_4735_7_7_n_1;
  wire memory_reg_4736_4863_0_0_i_1_n_0;
  wire memory_reg_4736_4863_0_0_n_0;
  wire memory_reg_4736_4863_0_0_n_1;
  wire memory_reg_4736_4863_1_1_n_0;
  wire memory_reg_4736_4863_1_1_n_1;
  wire memory_reg_4736_4863_2_2_n_0;
  wire memory_reg_4736_4863_2_2_n_1;
  wire memory_reg_4736_4863_3_3_n_0;
  wire memory_reg_4736_4863_3_3_n_1;
  wire memory_reg_4736_4863_4_4_n_0;
  wire memory_reg_4736_4863_4_4_n_1;
  wire memory_reg_4736_4863_5_5_n_0;
  wire memory_reg_4736_4863_5_5_n_1;
  wire memory_reg_4736_4863_6_6_n_0;
  wire memory_reg_4736_4863_6_6_n_1;
  wire memory_reg_4736_4863_7_7_n_0;
  wire memory_reg_4736_4863_7_7_n_1;
  wire memory_reg_4864_4991_0_0_i_1_n_0;
  wire memory_reg_4864_4991_0_0_n_0;
  wire memory_reg_4864_4991_0_0_n_1;
  wire memory_reg_4864_4991_1_1_n_0;
  wire memory_reg_4864_4991_1_1_n_1;
  wire memory_reg_4864_4991_2_2_n_0;
  wire memory_reg_4864_4991_2_2_n_1;
  wire memory_reg_4864_4991_3_3_n_0;
  wire memory_reg_4864_4991_3_3_n_1;
  wire memory_reg_4864_4991_4_4_n_0;
  wire memory_reg_4864_4991_4_4_n_1;
  wire memory_reg_4864_4991_5_5_n_0;
  wire memory_reg_4864_4991_5_5_n_1;
  wire memory_reg_4864_4991_6_6_n_0;
  wire memory_reg_4864_4991_6_6_n_1;
  wire memory_reg_4864_4991_7_7_n_0;
  wire memory_reg_4864_4991_7_7_n_1;
  wire memory_reg_4992_5119_0_0_i_1_n_0;
  wire memory_reg_4992_5119_0_0_n_0;
  wire memory_reg_4992_5119_0_0_n_1;
  wire memory_reg_4992_5119_1_1_n_0;
  wire memory_reg_4992_5119_1_1_n_1;
  wire memory_reg_4992_5119_2_2_n_0;
  wire memory_reg_4992_5119_2_2_n_1;
  wire memory_reg_4992_5119_3_3_n_0;
  wire memory_reg_4992_5119_3_3_n_1;
  wire memory_reg_4992_5119_4_4_n_0;
  wire memory_reg_4992_5119_4_4_n_1;
  wire memory_reg_4992_5119_5_5_n_0;
  wire memory_reg_4992_5119_5_5_n_1;
  wire memory_reg_4992_5119_6_6_n_0;
  wire memory_reg_4992_5119_6_6_n_1;
  wire memory_reg_4992_5119_7_7_n_0;
  wire memory_reg_4992_5119_7_7_n_1;
  wire memory_reg_5120_5247_0_0_i_1_n_0;
  wire memory_reg_5120_5247_0_0_n_0;
  wire memory_reg_5120_5247_0_0_n_1;
  wire memory_reg_5120_5247_1_1_n_0;
  wire memory_reg_5120_5247_1_1_n_1;
  wire memory_reg_5120_5247_2_2_n_0;
  wire memory_reg_5120_5247_2_2_n_1;
  wire memory_reg_5120_5247_3_3_n_0;
  wire memory_reg_5120_5247_3_3_n_1;
  wire memory_reg_5120_5247_4_4_n_0;
  wire memory_reg_5120_5247_4_4_n_1;
  wire memory_reg_5120_5247_5_5_n_0;
  wire memory_reg_5120_5247_5_5_n_1;
  wire memory_reg_5120_5247_6_6_n_0;
  wire memory_reg_5120_5247_6_6_n_1;
  wire memory_reg_5120_5247_7_7_n_0;
  wire memory_reg_5120_5247_7_7_n_1;
  wire memory_reg_512_639_0_0_i_1_n_0;
  wire memory_reg_512_639_0_0_i_2_n_0;
  wire memory_reg_512_639_0_0_n_0;
  wire memory_reg_512_639_0_0_n_1;
  wire memory_reg_512_639_1_1_n_0;
  wire memory_reg_512_639_1_1_n_1;
  wire memory_reg_512_639_2_2_n_0;
  wire memory_reg_512_639_2_2_n_1;
  wire memory_reg_512_639_3_3_n_0;
  wire memory_reg_512_639_3_3_n_1;
  wire memory_reg_512_639_4_4_n_0;
  wire memory_reg_512_639_4_4_n_1;
  wire memory_reg_512_639_5_5_n_0;
  wire memory_reg_512_639_5_5_n_1;
  wire memory_reg_512_639_6_6_n_0;
  wire memory_reg_512_639_6_6_n_1;
  wire memory_reg_512_639_7_7_n_0;
  wire memory_reg_512_639_7_7_n_1;
  wire memory_reg_5248_5375_0_0_i_1_n_0;
  wire memory_reg_5248_5375_0_0_n_0;
  wire memory_reg_5248_5375_0_0_n_1;
  wire memory_reg_5248_5375_1_1_n_0;
  wire memory_reg_5248_5375_1_1_n_1;
  wire memory_reg_5248_5375_2_2_n_0;
  wire memory_reg_5248_5375_2_2_n_1;
  wire memory_reg_5248_5375_3_3_n_0;
  wire memory_reg_5248_5375_3_3_n_1;
  wire memory_reg_5248_5375_4_4_n_0;
  wire memory_reg_5248_5375_4_4_n_1;
  wire memory_reg_5248_5375_5_5_n_0;
  wire memory_reg_5248_5375_5_5_n_1;
  wire memory_reg_5248_5375_6_6_n_0;
  wire memory_reg_5248_5375_6_6_n_1;
  wire memory_reg_5248_5375_7_7_n_0;
  wire memory_reg_5248_5375_7_7_n_1;
  wire memory_reg_5376_5503_0_0_i_1_n_0;
  wire memory_reg_5376_5503_0_0_n_0;
  wire memory_reg_5376_5503_0_0_n_1;
  wire memory_reg_5376_5503_1_1_n_0;
  wire memory_reg_5376_5503_1_1_n_1;
  wire memory_reg_5376_5503_2_2_n_0;
  wire memory_reg_5376_5503_2_2_n_1;
  wire memory_reg_5376_5503_3_3_n_0;
  wire memory_reg_5376_5503_3_3_n_1;
  wire memory_reg_5376_5503_4_4_n_0;
  wire memory_reg_5376_5503_4_4_n_1;
  wire memory_reg_5376_5503_5_5_n_0;
  wire memory_reg_5376_5503_5_5_n_1;
  wire memory_reg_5376_5503_6_6_n_0;
  wire memory_reg_5376_5503_6_6_n_1;
  wire memory_reg_5376_5503_7_7_n_0;
  wire memory_reg_5376_5503_7_7_n_1;
  wire memory_reg_5504_5631_0_0_i_1_n_0;
  wire memory_reg_5504_5631_0_0_n_0;
  wire memory_reg_5504_5631_0_0_n_1;
  wire memory_reg_5504_5631_1_1_n_0;
  wire memory_reg_5504_5631_1_1_n_1;
  wire memory_reg_5504_5631_2_2_n_0;
  wire memory_reg_5504_5631_2_2_n_1;
  wire memory_reg_5504_5631_3_3_n_0;
  wire memory_reg_5504_5631_3_3_n_1;
  wire memory_reg_5504_5631_4_4_n_0;
  wire memory_reg_5504_5631_4_4_n_1;
  wire memory_reg_5504_5631_5_5_n_0;
  wire memory_reg_5504_5631_5_5_n_1;
  wire memory_reg_5504_5631_6_6_n_0;
  wire memory_reg_5504_5631_6_6_n_1;
  wire memory_reg_5504_5631_7_7_n_0;
  wire memory_reg_5504_5631_7_7_n_1;
  wire memory_reg_5632_5759_0_0_i_1_n_0;
  wire memory_reg_5632_5759_0_0_n_0;
  wire memory_reg_5632_5759_0_0_n_1;
  wire memory_reg_5632_5759_1_1_n_0;
  wire memory_reg_5632_5759_1_1_n_1;
  wire memory_reg_5632_5759_2_2_n_0;
  wire memory_reg_5632_5759_2_2_n_1;
  wire memory_reg_5632_5759_3_3_n_0;
  wire memory_reg_5632_5759_3_3_n_1;
  wire memory_reg_5632_5759_4_4_n_0;
  wire memory_reg_5632_5759_4_4_n_1;
  wire memory_reg_5632_5759_5_5_n_0;
  wire memory_reg_5632_5759_5_5_n_1;
  wire memory_reg_5632_5759_6_6_n_0;
  wire memory_reg_5632_5759_6_6_n_1;
  wire memory_reg_5632_5759_7_7_n_0;
  wire memory_reg_5632_5759_7_7_n_1;
  wire memory_reg_5760_5887_0_0_i_1_n_0;
  wire memory_reg_5760_5887_0_0_n_0;
  wire memory_reg_5760_5887_0_0_n_1;
  wire memory_reg_5760_5887_1_1_n_0;
  wire memory_reg_5760_5887_1_1_n_1;
  wire memory_reg_5760_5887_2_2_n_0;
  wire memory_reg_5760_5887_2_2_n_1;
  wire memory_reg_5760_5887_3_3_n_0;
  wire memory_reg_5760_5887_3_3_n_1;
  wire memory_reg_5760_5887_4_4_n_0;
  wire memory_reg_5760_5887_4_4_n_1;
  wire memory_reg_5760_5887_5_5_n_0;
  wire memory_reg_5760_5887_5_5_n_1;
  wire memory_reg_5760_5887_6_6_n_0;
  wire memory_reg_5760_5887_6_6_n_1;
  wire memory_reg_5760_5887_7_7_n_0;
  wire memory_reg_5760_5887_7_7_n_1;
  wire memory_reg_5888_6015_0_0_i_1_n_0;
  wire memory_reg_5888_6015_0_0_n_0;
  wire memory_reg_5888_6015_0_0_n_1;
  wire memory_reg_5888_6015_1_1_n_0;
  wire memory_reg_5888_6015_1_1_n_1;
  wire memory_reg_5888_6015_2_2_n_0;
  wire memory_reg_5888_6015_2_2_n_1;
  wire memory_reg_5888_6015_3_3_n_0;
  wire memory_reg_5888_6015_3_3_n_1;
  wire memory_reg_5888_6015_4_4_n_0;
  wire memory_reg_5888_6015_4_4_n_1;
  wire memory_reg_5888_6015_5_5_n_0;
  wire memory_reg_5888_6015_5_5_n_1;
  wire memory_reg_5888_6015_6_6_n_0;
  wire memory_reg_5888_6015_6_6_n_1;
  wire memory_reg_5888_6015_7_7_n_0;
  wire memory_reg_5888_6015_7_7_n_1;
  wire memory_reg_6016_6143_0_0_i_1_n_0;
  wire memory_reg_6016_6143_0_0_n_0;
  wire memory_reg_6016_6143_0_0_n_1;
  wire memory_reg_6016_6143_1_1_n_0;
  wire memory_reg_6016_6143_1_1_n_1;
  wire memory_reg_6016_6143_2_2_n_0;
  wire memory_reg_6016_6143_2_2_n_1;
  wire memory_reg_6016_6143_3_3_n_0;
  wire memory_reg_6016_6143_3_3_n_1;
  wire memory_reg_6016_6143_4_4_n_0;
  wire memory_reg_6016_6143_4_4_n_1;
  wire memory_reg_6016_6143_5_5_n_0;
  wire memory_reg_6016_6143_5_5_n_1;
  wire memory_reg_6016_6143_6_6_n_0;
  wire memory_reg_6016_6143_6_6_n_1;
  wire memory_reg_6016_6143_7_7_n_0;
  wire memory_reg_6016_6143_7_7_n_1;
  wire memory_reg_6144_6271_0_0_i_1_n_0;
  wire memory_reg_6144_6271_0_0_n_0;
  wire memory_reg_6144_6271_0_0_n_1;
  wire memory_reg_6144_6271_1_1_n_0;
  wire memory_reg_6144_6271_1_1_n_1;
  wire memory_reg_6144_6271_2_2_n_0;
  wire memory_reg_6144_6271_2_2_n_1;
  wire memory_reg_6144_6271_3_3_n_0;
  wire memory_reg_6144_6271_3_3_n_1;
  wire memory_reg_6144_6271_4_4_n_0;
  wire memory_reg_6144_6271_4_4_n_1;
  wire memory_reg_6144_6271_5_5_n_0;
  wire memory_reg_6144_6271_5_5_n_1;
  wire memory_reg_6144_6271_6_6_n_0;
  wire memory_reg_6144_6271_6_6_n_1;
  wire memory_reg_6144_6271_7_7_n_0;
  wire memory_reg_6144_6271_7_7_n_1;
  wire memory_reg_6272_6399_0_0_i_1_n_0;
  wire memory_reg_6272_6399_0_0_n_0;
  wire memory_reg_6272_6399_0_0_n_1;
  wire memory_reg_6272_6399_1_1_n_0;
  wire memory_reg_6272_6399_1_1_n_1;
  wire memory_reg_6272_6399_2_2_n_0;
  wire memory_reg_6272_6399_2_2_n_1;
  wire memory_reg_6272_6399_3_3_n_0;
  wire memory_reg_6272_6399_3_3_n_1;
  wire memory_reg_6272_6399_4_4_n_0;
  wire memory_reg_6272_6399_4_4_n_1;
  wire memory_reg_6272_6399_5_5_n_0;
  wire memory_reg_6272_6399_5_5_n_1;
  wire memory_reg_6272_6399_6_6_n_0;
  wire memory_reg_6272_6399_6_6_n_1;
  wire memory_reg_6272_6399_7_7_n_0;
  wire memory_reg_6272_6399_7_7_n_1;
  wire memory_reg_6400_6527_0_0_i_1_n_0;
  wire memory_reg_6400_6527_0_0_n_0;
  wire memory_reg_6400_6527_0_0_n_1;
  wire memory_reg_6400_6527_1_1_n_0;
  wire memory_reg_6400_6527_1_1_n_1;
  wire memory_reg_6400_6527_2_2_n_0;
  wire memory_reg_6400_6527_2_2_n_1;
  wire memory_reg_6400_6527_3_3_n_0;
  wire memory_reg_6400_6527_3_3_n_1;
  wire memory_reg_6400_6527_4_4_n_0;
  wire memory_reg_6400_6527_4_4_n_1;
  wire memory_reg_6400_6527_5_5_n_0;
  wire memory_reg_6400_6527_5_5_n_1;
  wire memory_reg_6400_6527_6_6_n_0;
  wire memory_reg_6400_6527_6_6_n_1;
  wire memory_reg_6400_6527_7_7_n_0;
  wire memory_reg_6400_6527_7_7_n_1;
  wire memory_reg_640_767_0_0_i_1_n_0;
  wire memory_reg_640_767_0_0_i_2_n_0;
  wire memory_reg_640_767_0_0_n_0;
  wire memory_reg_640_767_0_0_n_1;
  wire memory_reg_640_767_1_1_n_0;
  wire memory_reg_640_767_1_1_n_1;
  wire memory_reg_640_767_2_2_n_0;
  wire memory_reg_640_767_2_2_n_1;
  wire memory_reg_640_767_3_3_n_0;
  wire memory_reg_640_767_3_3_n_1;
  wire memory_reg_640_767_4_4_n_0;
  wire memory_reg_640_767_4_4_n_1;
  wire memory_reg_640_767_5_5_n_0;
  wire memory_reg_640_767_5_5_n_1;
  wire memory_reg_640_767_6_6_n_0;
  wire memory_reg_640_767_6_6_n_1;
  wire memory_reg_640_767_7_7_n_0;
  wire memory_reg_640_767_7_7_n_1;
  wire memory_reg_6528_6655_0_0_i_1_n_0;
  wire memory_reg_6528_6655_0_0_n_0;
  wire memory_reg_6528_6655_0_0_n_1;
  wire memory_reg_6528_6655_1_1_n_0;
  wire memory_reg_6528_6655_1_1_n_1;
  wire memory_reg_6528_6655_2_2_n_0;
  wire memory_reg_6528_6655_2_2_n_1;
  wire memory_reg_6528_6655_3_3_n_0;
  wire memory_reg_6528_6655_3_3_n_1;
  wire memory_reg_6528_6655_4_4_n_0;
  wire memory_reg_6528_6655_4_4_n_1;
  wire memory_reg_6528_6655_5_5_n_0;
  wire memory_reg_6528_6655_5_5_n_1;
  wire memory_reg_6528_6655_6_6_n_0;
  wire memory_reg_6528_6655_6_6_n_1;
  wire memory_reg_6528_6655_7_7_n_0;
  wire memory_reg_6528_6655_7_7_n_1;
  wire memory_reg_6656_6783_0_0_i_1_n_0;
  wire memory_reg_6656_6783_0_0_n_0;
  wire memory_reg_6656_6783_0_0_n_1;
  wire memory_reg_6656_6783_1_1_n_0;
  wire memory_reg_6656_6783_1_1_n_1;
  wire memory_reg_6656_6783_2_2_n_0;
  wire memory_reg_6656_6783_2_2_n_1;
  wire memory_reg_6656_6783_3_3_n_0;
  wire memory_reg_6656_6783_3_3_n_1;
  wire memory_reg_6656_6783_4_4_n_0;
  wire memory_reg_6656_6783_4_4_n_1;
  wire memory_reg_6656_6783_5_5_n_0;
  wire memory_reg_6656_6783_5_5_n_1;
  wire memory_reg_6656_6783_6_6_n_0;
  wire memory_reg_6656_6783_6_6_n_1;
  wire memory_reg_6656_6783_7_7_n_0;
  wire memory_reg_6656_6783_7_7_n_1;
  wire memory_reg_6784_6911_0_0_i_1_n_0;
  wire memory_reg_6784_6911_0_0_n_0;
  wire memory_reg_6784_6911_0_0_n_1;
  wire memory_reg_6784_6911_1_1_n_0;
  wire memory_reg_6784_6911_1_1_n_1;
  wire memory_reg_6784_6911_2_2_n_0;
  wire memory_reg_6784_6911_2_2_n_1;
  wire memory_reg_6784_6911_3_3_n_0;
  wire memory_reg_6784_6911_3_3_n_1;
  wire memory_reg_6784_6911_4_4_n_0;
  wire memory_reg_6784_6911_4_4_n_1;
  wire memory_reg_6784_6911_5_5_n_0;
  wire memory_reg_6784_6911_5_5_n_1;
  wire memory_reg_6784_6911_6_6_n_0;
  wire memory_reg_6784_6911_6_6_n_1;
  wire memory_reg_6784_6911_7_7_n_0;
  wire memory_reg_6784_6911_7_7_n_1;
  wire memory_reg_6912_7039_0_0_i_1_n_0;
  wire memory_reg_6912_7039_0_0_n_0;
  wire memory_reg_6912_7039_0_0_n_1;
  wire memory_reg_6912_7039_1_1_n_0;
  wire memory_reg_6912_7039_1_1_n_1;
  wire memory_reg_6912_7039_2_2_n_0;
  wire memory_reg_6912_7039_2_2_n_1;
  wire memory_reg_6912_7039_3_3_n_0;
  wire memory_reg_6912_7039_3_3_n_1;
  wire memory_reg_6912_7039_4_4_n_0;
  wire memory_reg_6912_7039_4_4_n_1;
  wire memory_reg_6912_7039_5_5_n_0;
  wire memory_reg_6912_7039_5_5_n_1;
  wire memory_reg_6912_7039_6_6_n_0;
  wire memory_reg_6912_7039_6_6_n_1;
  wire memory_reg_6912_7039_7_7_n_0;
  wire memory_reg_6912_7039_7_7_n_1;
  wire memory_reg_7040_7167_0_0_i_1_n_0;
  wire memory_reg_7040_7167_0_0_n_0;
  wire memory_reg_7040_7167_0_0_n_1;
  wire memory_reg_7040_7167_1_1_n_0;
  wire memory_reg_7040_7167_1_1_n_1;
  wire memory_reg_7040_7167_2_2_n_0;
  wire memory_reg_7040_7167_2_2_n_1;
  wire memory_reg_7040_7167_3_3_n_0;
  wire memory_reg_7040_7167_3_3_n_1;
  wire memory_reg_7040_7167_4_4_n_0;
  wire memory_reg_7040_7167_4_4_n_1;
  wire memory_reg_7040_7167_5_5_n_0;
  wire memory_reg_7040_7167_5_5_n_1;
  wire memory_reg_7040_7167_6_6_n_0;
  wire memory_reg_7040_7167_6_6_n_1;
  wire memory_reg_7040_7167_7_7_n_0;
  wire memory_reg_7040_7167_7_7_n_1;
  wire memory_reg_7168_7295_0_0_i_1_n_0;
  wire memory_reg_7168_7295_0_0_n_0;
  wire memory_reg_7168_7295_0_0_n_1;
  wire memory_reg_7168_7295_1_1_n_0;
  wire memory_reg_7168_7295_1_1_n_1;
  wire memory_reg_7168_7295_2_2_n_0;
  wire memory_reg_7168_7295_2_2_n_1;
  wire memory_reg_7168_7295_3_3_n_0;
  wire memory_reg_7168_7295_3_3_n_1;
  wire memory_reg_7168_7295_4_4_n_0;
  wire memory_reg_7168_7295_4_4_n_1;
  wire memory_reg_7168_7295_5_5_n_0;
  wire memory_reg_7168_7295_5_5_n_1;
  wire memory_reg_7168_7295_6_6_n_0;
  wire memory_reg_7168_7295_6_6_n_1;
  wire memory_reg_7168_7295_7_7_n_0;
  wire memory_reg_7168_7295_7_7_n_1;
  wire memory_reg_7296_7423_0_0_i_1_n_0;
  wire memory_reg_7296_7423_0_0_n_0;
  wire memory_reg_7296_7423_0_0_n_1;
  wire memory_reg_7296_7423_1_1_n_0;
  wire memory_reg_7296_7423_1_1_n_1;
  wire memory_reg_7296_7423_2_2_n_0;
  wire memory_reg_7296_7423_2_2_n_1;
  wire memory_reg_7296_7423_3_3_n_0;
  wire memory_reg_7296_7423_3_3_n_1;
  wire memory_reg_7296_7423_4_4_n_0;
  wire memory_reg_7296_7423_4_4_n_1;
  wire memory_reg_7296_7423_5_5_n_0;
  wire memory_reg_7296_7423_5_5_n_1;
  wire memory_reg_7296_7423_6_6_n_0;
  wire memory_reg_7296_7423_6_6_n_1;
  wire memory_reg_7296_7423_7_7_n_0;
  wire memory_reg_7296_7423_7_7_n_1;
  wire memory_reg_7424_7551_0_0_i_1_n_0;
  wire memory_reg_7424_7551_0_0_n_0;
  wire memory_reg_7424_7551_0_0_n_1;
  wire memory_reg_7424_7551_1_1_n_0;
  wire memory_reg_7424_7551_1_1_n_1;
  wire memory_reg_7424_7551_2_2_n_0;
  wire memory_reg_7424_7551_2_2_n_1;
  wire memory_reg_7424_7551_3_3_n_0;
  wire memory_reg_7424_7551_3_3_n_1;
  wire memory_reg_7424_7551_4_4_n_0;
  wire memory_reg_7424_7551_4_4_n_1;
  wire memory_reg_7424_7551_5_5_n_0;
  wire memory_reg_7424_7551_5_5_n_1;
  wire memory_reg_7424_7551_6_6_n_0;
  wire memory_reg_7424_7551_6_6_n_1;
  wire memory_reg_7424_7551_7_7_n_0;
  wire memory_reg_7424_7551_7_7_n_1;
  wire memory_reg_7552_7679_0_0_i_1_n_0;
  wire memory_reg_7552_7679_0_0_n_0;
  wire memory_reg_7552_7679_0_0_n_1;
  wire memory_reg_7552_7679_1_1_n_0;
  wire memory_reg_7552_7679_1_1_n_1;
  wire memory_reg_7552_7679_2_2_n_0;
  wire memory_reg_7552_7679_2_2_n_1;
  wire memory_reg_7552_7679_3_3_n_0;
  wire memory_reg_7552_7679_3_3_n_1;
  wire memory_reg_7552_7679_4_4_n_0;
  wire memory_reg_7552_7679_4_4_n_1;
  wire memory_reg_7552_7679_5_5_n_0;
  wire memory_reg_7552_7679_5_5_n_1;
  wire memory_reg_7552_7679_6_6_n_0;
  wire memory_reg_7552_7679_6_6_n_1;
  wire memory_reg_7552_7679_7_7_n_0;
  wire memory_reg_7552_7679_7_7_n_1;
  wire memory_reg_7680_7807_0_0_i_1_n_0;
  wire memory_reg_7680_7807_0_0_n_0;
  wire memory_reg_7680_7807_0_0_n_1;
  wire memory_reg_7680_7807_1_1_n_0;
  wire memory_reg_7680_7807_1_1_n_1;
  wire memory_reg_7680_7807_2_2_n_0;
  wire memory_reg_7680_7807_2_2_n_1;
  wire memory_reg_7680_7807_3_3_n_0;
  wire memory_reg_7680_7807_3_3_n_1;
  wire memory_reg_7680_7807_4_4_n_0;
  wire memory_reg_7680_7807_4_4_n_1;
  wire memory_reg_7680_7807_5_5_n_0;
  wire memory_reg_7680_7807_5_5_n_1;
  wire memory_reg_7680_7807_6_6_n_0;
  wire memory_reg_7680_7807_6_6_n_1;
  wire memory_reg_7680_7807_7_7_n_0;
  wire memory_reg_7680_7807_7_7_n_1;
  wire memory_reg_768_895_0_0_i_1_n_0;
  wire memory_reg_768_895_0_0_i_2_n_0;
  wire memory_reg_768_895_0_0_n_0;
  wire memory_reg_768_895_0_0_n_1;
  wire memory_reg_768_895_1_1_n_0;
  wire memory_reg_768_895_1_1_n_1;
  wire memory_reg_768_895_2_2_n_0;
  wire memory_reg_768_895_2_2_n_1;
  wire memory_reg_768_895_3_3_n_0;
  wire memory_reg_768_895_3_3_n_1;
  wire memory_reg_768_895_4_4_n_0;
  wire memory_reg_768_895_4_4_n_1;
  wire memory_reg_768_895_5_5_n_0;
  wire memory_reg_768_895_5_5_n_1;
  wire memory_reg_768_895_6_6_n_0;
  wire memory_reg_768_895_6_6_n_1;
  wire memory_reg_768_895_7_7_n_0;
  wire memory_reg_768_895_7_7_n_1;
  wire memory_reg_7808_7935_0_0_i_1_n_0;
  wire memory_reg_7808_7935_0_0_n_0;
  wire memory_reg_7808_7935_0_0_n_1;
  wire memory_reg_7808_7935_1_1_n_0;
  wire memory_reg_7808_7935_1_1_n_1;
  wire memory_reg_7808_7935_2_2_n_0;
  wire memory_reg_7808_7935_2_2_n_1;
  wire memory_reg_7808_7935_3_3_n_0;
  wire memory_reg_7808_7935_3_3_n_1;
  wire memory_reg_7808_7935_4_4_n_0;
  wire memory_reg_7808_7935_4_4_n_1;
  wire memory_reg_7808_7935_5_5_n_0;
  wire memory_reg_7808_7935_5_5_n_1;
  wire memory_reg_7808_7935_6_6_n_0;
  wire memory_reg_7808_7935_6_6_n_1;
  wire memory_reg_7808_7935_7_7_n_0;
  wire memory_reg_7808_7935_7_7_n_1;
  wire memory_reg_7936_8063_0_0_i_1_n_0;
  wire memory_reg_7936_8063_0_0_n_0;
  wire memory_reg_7936_8063_0_0_n_1;
  wire memory_reg_7936_8063_1_1_n_0;
  wire memory_reg_7936_8063_1_1_n_1;
  wire memory_reg_7936_8063_2_2_n_0;
  wire memory_reg_7936_8063_2_2_n_1;
  wire memory_reg_7936_8063_3_3_n_0;
  wire memory_reg_7936_8063_3_3_n_1;
  wire memory_reg_7936_8063_4_4_n_0;
  wire memory_reg_7936_8063_4_4_n_1;
  wire memory_reg_7936_8063_5_5_n_0;
  wire memory_reg_7936_8063_5_5_n_1;
  wire memory_reg_7936_8063_6_6_n_0;
  wire memory_reg_7936_8063_6_6_n_1;
  wire memory_reg_7936_8063_7_7_n_0;
  wire memory_reg_7936_8063_7_7_n_1;
  wire memory_reg_8064_8191_0_0_i_1_n_0;
  wire memory_reg_8064_8191_0_0_n_0;
  wire memory_reg_8064_8191_0_0_n_1;
  wire memory_reg_8064_8191_1_1_n_0;
  wire memory_reg_8064_8191_1_1_n_1;
  wire memory_reg_8064_8191_2_2_n_0;
  wire memory_reg_8064_8191_2_2_n_1;
  wire memory_reg_8064_8191_3_3_n_0;
  wire memory_reg_8064_8191_3_3_n_1;
  wire memory_reg_8064_8191_4_4_n_0;
  wire memory_reg_8064_8191_4_4_n_1;
  wire memory_reg_8064_8191_5_5_n_0;
  wire memory_reg_8064_8191_5_5_n_1;
  wire memory_reg_8064_8191_6_6_n_0;
  wire memory_reg_8064_8191_6_6_n_1;
  wire memory_reg_8064_8191_7_7_n_0;
  wire memory_reg_8064_8191_7_7_n_1;
  wire memory_reg_896_1023_0_0_i_1_n_0;
  wire memory_reg_896_1023_0_0_i_2_n_0;
  wire memory_reg_896_1023_0_0_n_0;
  wire memory_reg_896_1023_0_0_n_1;
  wire memory_reg_896_1023_1_1_n_0;
  wire memory_reg_896_1023_1_1_n_1;
  wire memory_reg_896_1023_2_2_n_0;
  wire memory_reg_896_1023_2_2_n_1;
  wire memory_reg_896_1023_3_3_n_0;
  wire memory_reg_896_1023_3_3_n_1;
  wire memory_reg_896_1023_4_4_n_0;
  wire memory_reg_896_1023_4_4_n_1;
  wire memory_reg_896_1023_5_5_n_0;
  wire memory_reg_896_1023_5_5_n_1;
  wire memory_reg_896_1023_6_6_n_0;
  wire memory_reg_896_1023_6_6_n_1;
  wire memory_reg_896_1023_7_7_n_0;
  wire memory_reg_896_1023_7_7_n_1;
  wire out1_stb;
  wire [7:0]\output ;
  wire \output[0]_i_28_n_0 ;
  wire \output[0]_i_29_n_0 ;
  wire \output[0]_i_30_n_0 ;
  wire \output[0]_i_31_n_0 ;
  wire \output[0]_i_32_n_0 ;
  wire \output[0]_i_33_n_0 ;
  wire \output[0]_i_34_n_0 ;
  wire \output[0]_i_35_n_0 ;
  wire \output[0]_i_36_n_0 ;
  wire \output[0]_i_37_n_0 ;
  wire \output[0]_i_38_n_0 ;
  wire \output[0]_i_39_n_0 ;
  wire \output[0]_i_40_n_0 ;
  wire \output[0]_i_41_n_0 ;
  wire \output[0]_i_42_n_0 ;
  wire \output[0]_i_43_n_0 ;
  wire \output[0]_i_44_n_0 ;
  wire \output[0]_i_45_n_0 ;
  wire \output[0]_i_46_n_0 ;
  wire \output[0]_i_47_n_0 ;
  wire \output[0]_i_48_n_0 ;
  wire \output[0]_i_49_n_0 ;
  wire \output[0]_i_50_n_0 ;
  wire \output[0]_i_51_n_0 ;
  wire \output[0]_i_52_n_0 ;
  wire \output[0]_i_53_n_0 ;
  wire \output[0]_i_54_n_0 ;
  wire \output[0]_i_55_n_0 ;
  wire \output[0]_i_56_n_0 ;
  wire \output[0]_i_57_n_0 ;
  wire \output[0]_i_58_n_0 ;
  wire \output[0]_i_59_n_0 ;
  wire \output[1]_i_28_n_0 ;
  wire \output[1]_i_29_n_0 ;
  wire \output[1]_i_30_n_0 ;
  wire \output[1]_i_31_n_0 ;
  wire \output[1]_i_32_n_0 ;
  wire \output[1]_i_33_n_0 ;
  wire \output[1]_i_34_n_0 ;
  wire \output[1]_i_35_n_0 ;
  wire \output[1]_i_36_n_0 ;
  wire \output[1]_i_37_n_0 ;
  wire \output[1]_i_38_n_0 ;
  wire \output[1]_i_39_n_0 ;
  wire \output[1]_i_40_n_0 ;
  wire \output[1]_i_41_n_0 ;
  wire \output[1]_i_42_n_0 ;
  wire \output[1]_i_43_n_0 ;
  wire \output[1]_i_44_n_0 ;
  wire \output[1]_i_45_n_0 ;
  wire \output[1]_i_46_n_0 ;
  wire \output[1]_i_47_n_0 ;
  wire \output[1]_i_48_n_0 ;
  wire \output[1]_i_49_n_0 ;
  wire \output[1]_i_50_n_0 ;
  wire \output[1]_i_51_n_0 ;
  wire \output[1]_i_52_n_0 ;
  wire \output[1]_i_53_n_0 ;
  wire \output[1]_i_54_n_0 ;
  wire \output[1]_i_55_n_0 ;
  wire \output[1]_i_56_n_0 ;
  wire \output[1]_i_57_n_0 ;
  wire \output[1]_i_58_n_0 ;
  wire \output[1]_i_59_n_0 ;
  wire \output[2]_i_28_n_0 ;
  wire \output[2]_i_29_n_0 ;
  wire \output[2]_i_30_n_0 ;
  wire \output[2]_i_31_n_0 ;
  wire \output[2]_i_32_n_0 ;
  wire \output[2]_i_33_n_0 ;
  wire \output[2]_i_34_n_0 ;
  wire \output[2]_i_35_n_0 ;
  wire \output[2]_i_36_n_0 ;
  wire \output[2]_i_37_n_0 ;
  wire \output[2]_i_38_n_0 ;
  wire \output[2]_i_39_n_0 ;
  wire \output[2]_i_40_n_0 ;
  wire \output[2]_i_41_n_0 ;
  wire \output[2]_i_42_n_0 ;
  wire \output[2]_i_43_n_0 ;
  wire \output[2]_i_44_n_0 ;
  wire \output[2]_i_45_n_0 ;
  wire \output[2]_i_46_n_0 ;
  wire \output[2]_i_47_n_0 ;
  wire \output[2]_i_48_n_0 ;
  wire \output[2]_i_49_n_0 ;
  wire \output[2]_i_50_n_0 ;
  wire \output[2]_i_51_n_0 ;
  wire \output[2]_i_52_n_0 ;
  wire \output[2]_i_53_n_0 ;
  wire \output[2]_i_54_n_0 ;
  wire \output[2]_i_55_n_0 ;
  wire \output[2]_i_56_n_0 ;
  wire \output[2]_i_57_n_0 ;
  wire \output[2]_i_58_n_0 ;
  wire \output[2]_i_59_n_0 ;
  wire \output[3]_i_28_n_0 ;
  wire \output[3]_i_29_n_0 ;
  wire \output[3]_i_30_n_0 ;
  wire \output[3]_i_31_n_0 ;
  wire \output[3]_i_32_n_0 ;
  wire \output[3]_i_33_n_0 ;
  wire \output[3]_i_34_n_0 ;
  wire \output[3]_i_35_n_0 ;
  wire \output[3]_i_36_n_0 ;
  wire \output[3]_i_37_n_0 ;
  wire \output[3]_i_38_n_0 ;
  wire \output[3]_i_39_n_0 ;
  wire \output[3]_i_40_n_0 ;
  wire \output[3]_i_41_n_0 ;
  wire \output[3]_i_42_n_0 ;
  wire \output[3]_i_43_n_0 ;
  wire \output[3]_i_44_n_0 ;
  wire \output[3]_i_45_n_0 ;
  wire \output[3]_i_46_n_0 ;
  wire \output[3]_i_47_n_0 ;
  wire \output[3]_i_48_n_0 ;
  wire \output[3]_i_49_n_0 ;
  wire \output[3]_i_50_n_0 ;
  wire \output[3]_i_51_n_0 ;
  wire \output[3]_i_52_n_0 ;
  wire \output[3]_i_53_n_0 ;
  wire \output[3]_i_54_n_0 ;
  wire \output[3]_i_55_n_0 ;
  wire \output[3]_i_56_n_0 ;
  wire \output[3]_i_57_n_0 ;
  wire \output[3]_i_58_n_0 ;
  wire \output[3]_i_59_n_0 ;
  wire \output[4]_i_28_n_0 ;
  wire \output[4]_i_29_n_0 ;
  wire \output[4]_i_30_n_0 ;
  wire \output[4]_i_31_n_0 ;
  wire \output[4]_i_32_n_0 ;
  wire \output[4]_i_33_n_0 ;
  wire \output[4]_i_34_n_0 ;
  wire \output[4]_i_35_n_0 ;
  wire \output[4]_i_36_n_0 ;
  wire \output[4]_i_37_n_0 ;
  wire \output[4]_i_38_n_0 ;
  wire \output[4]_i_39_n_0 ;
  wire \output[4]_i_40_n_0 ;
  wire \output[4]_i_41_n_0 ;
  wire \output[4]_i_42_n_0 ;
  wire \output[4]_i_43_n_0 ;
  wire \output[4]_i_44_n_0 ;
  wire \output[4]_i_45_n_0 ;
  wire \output[4]_i_46_n_0 ;
  wire \output[4]_i_47_n_0 ;
  wire \output[4]_i_48_n_0 ;
  wire \output[4]_i_49_n_0 ;
  wire \output[4]_i_50_n_0 ;
  wire \output[4]_i_51_n_0 ;
  wire \output[4]_i_52_n_0 ;
  wire \output[4]_i_53_n_0 ;
  wire \output[4]_i_54_n_0 ;
  wire \output[4]_i_55_n_0 ;
  wire \output[4]_i_56_n_0 ;
  wire \output[4]_i_57_n_0 ;
  wire \output[4]_i_58_n_0 ;
  wire \output[4]_i_59_n_0 ;
  wire \output[5]_i_28_n_0 ;
  wire \output[5]_i_29_n_0 ;
  wire \output[5]_i_30_n_0 ;
  wire \output[5]_i_31_n_0 ;
  wire \output[5]_i_32_n_0 ;
  wire \output[5]_i_33_n_0 ;
  wire \output[5]_i_34_n_0 ;
  wire \output[5]_i_35_n_0 ;
  wire \output[5]_i_36_n_0 ;
  wire \output[5]_i_37_n_0 ;
  wire \output[5]_i_38_n_0 ;
  wire \output[5]_i_39_n_0 ;
  wire \output[5]_i_40_n_0 ;
  wire \output[5]_i_41_n_0 ;
  wire \output[5]_i_42_n_0 ;
  wire \output[5]_i_43_n_0 ;
  wire \output[5]_i_44_n_0 ;
  wire \output[5]_i_45_n_0 ;
  wire \output[5]_i_46_n_0 ;
  wire \output[5]_i_47_n_0 ;
  wire \output[5]_i_48_n_0 ;
  wire \output[5]_i_49_n_0 ;
  wire \output[5]_i_50_n_0 ;
  wire \output[5]_i_51_n_0 ;
  wire \output[5]_i_52_n_0 ;
  wire \output[5]_i_53_n_0 ;
  wire \output[5]_i_54_n_0 ;
  wire \output[5]_i_55_n_0 ;
  wire \output[5]_i_56_n_0 ;
  wire \output[5]_i_57_n_0 ;
  wire \output[5]_i_58_n_0 ;
  wire \output[5]_i_59_n_0 ;
  wire \output[6]_i_28_n_0 ;
  wire \output[6]_i_29_n_0 ;
  wire \output[6]_i_30_n_0 ;
  wire \output[6]_i_31_n_0 ;
  wire \output[6]_i_32_n_0 ;
  wire \output[6]_i_33_n_0 ;
  wire \output[6]_i_34_n_0 ;
  wire \output[6]_i_35_n_0 ;
  wire \output[6]_i_36_n_0 ;
  wire \output[6]_i_37_n_0 ;
  wire \output[6]_i_38_n_0 ;
  wire \output[6]_i_39_n_0 ;
  wire \output[6]_i_40_n_0 ;
  wire \output[6]_i_41_n_0 ;
  wire \output[6]_i_42_n_0 ;
  wire \output[6]_i_43_n_0 ;
  wire \output[6]_i_44_n_0 ;
  wire \output[6]_i_45_n_0 ;
  wire \output[6]_i_46_n_0 ;
  wire \output[6]_i_47_n_0 ;
  wire \output[6]_i_48_n_0 ;
  wire \output[6]_i_49_n_0 ;
  wire \output[6]_i_50_n_0 ;
  wire \output[6]_i_51_n_0 ;
  wire \output[6]_i_52_n_0 ;
  wire \output[6]_i_53_n_0 ;
  wire \output[6]_i_54_n_0 ;
  wire \output[6]_i_55_n_0 ;
  wire \output[6]_i_56_n_0 ;
  wire \output[6]_i_57_n_0 ;
  wire \output[6]_i_58_n_0 ;
  wire \output[6]_i_59_n_0 ;
  wire \output[7]_i_29_n_0 ;
  wire \output[7]_i_30_n_0 ;
  wire \output[7]_i_31_n_0 ;
  wire \output[7]_i_32_n_0 ;
  wire \output[7]_i_33_n_0 ;
  wire \output[7]_i_34_n_0 ;
  wire \output[7]_i_35_n_0 ;
  wire \output[7]_i_36_n_0 ;
  wire \output[7]_i_37_n_0 ;
  wire \output[7]_i_38_n_0 ;
  wire \output[7]_i_39_n_0 ;
  wire \output[7]_i_40_n_0 ;
  wire \output[7]_i_41_n_0 ;
  wire \output[7]_i_42_n_0 ;
  wire \output[7]_i_43_n_0 ;
  wire \output[7]_i_44_n_0 ;
  wire \output[7]_i_45_n_0 ;
  wire \output[7]_i_46_n_0 ;
  wire \output[7]_i_47_n_0 ;
  wire \output[7]_i_48_n_0 ;
  wire \output[7]_i_49_n_0 ;
  wire \output[7]_i_50_n_0 ;
  wire \output[7]_i_51_n_0 ;
  wire \output[7]_i_52_n_0 ;
  wire \output[7]_i_53_n_0 ;
  wire \output[7]_i_54_n_0 ;
  wire \output[7]_i_55_n_0 ;
  wire \output[7]_i_56_n_0 ;
  wire \output[7]_i_57_n_0 ;
  wire \output[7]_i_58_n_0 ;
  wire \output[7]_i_59_n_0 ;
  wire \output[7]_i_60_n_0 ;
  wire \output_reg[0]_i_10_n_0 ;
  wire \output_reg[0]_i_11_n_0 ;
  wire \output_reg[0]_i_12_n_0 ;
  wire \output_reg[0]_i_13_n_0 ;
  wire \output_reg[0]_i_14_n_0 ;
  wire \output_reg[0]_i_15_n_0 ;
  wire \output_reg[0]_i_16_n_0 ;
  wire \output_reg[0]_i_17_n_0 ;
  wire \output_reg[0]_i_18_n_0 ;
  wire \output_reg[0]_i_19_n_0 ;
  wire \output_reg[0]_i_20_n_0 ;
  wire \output_reg[0]_i_21_n_0 ;
  wire \output_reg[0]_i_22_n_0 ;
  wire \output_reg[0]_i_23_n_0 ;
  wire \output_reg[0]_i_24_n_0 ;
  wire \output_reg[0]_i_25_n_0 ;
  wire \output_reg[0]_i_26_n_0 ;
  wire \output_reg[0]_i_27_n_0 ;
  wire \output_reg[0]_i_4_n_0 ;
  wire \output_reg[0]_i_5_n_0 ;
  wire \output_reg[0]_i_6_n_0 ;
  wire \output_reg[0]_i_7_n_0 ;
  wire \output_reg[0]_i_8_n_0 ;
  wire \output_reg[0]_i_9_n_0 ;
  wire \output_reg[1]_i_10_n_0 ;
  wire \output_reg[1]_i_11_n_0 ;
  wire \output_reg[1]_i_12_n_0 ;
  wire \output_reg[1]_i_13_n_0 ;
  wire \output_reg[1]_i_14_n_0 ;
  wire \output_reg[1]_i_15_n_0 ;
  wire \output_reg[1]_i_16_n_0 ;
  wire \output_reg[1]_i_17_n_0 ;
  wire \output_reg[1]_i_18_n_0 ;
  wire \output_reg[1]_i_19_n_0 ;
  wire \output_reg[1]_i_20_n_0 ;
  wire \output_reg[1]_i_21_n_0 ;
  wire \output_reg[1]_i_22_n_0 ;
  wire \output_reg[1]_i_23_n_0 ;
  wire \output_reg[1]_i_24_n_0 ;
  wire \output_reg[1]_i_25_n_0 ;
  wire \output_reg[1]_i_26_n_0 ;
  wire \output_reg[1]_i_27_n_0 ;
  wire \output_reg[1]_i_4_n_0 ;
  wire \output_reg[1]_i_5_n_0 ;
  wire \output_reg[1]_i_6_n_0 ;
  wire \output_reg[1]_i_7_n_0 ;
  wire \output_reg[1]_i_8_n_0 ;
  wire \output_reg[1]_i_9_n_0 ;
  wire \output_reg[2]_i_10_n_0 ;
  wire \output_reg[2]_i_11_n_0 ;
  wire \output_reg[2]_i_12_n_0 ;
  wire \output_reg[2]_i_13_n_0 ;
  wire \output_reg[2]_i_14_n_0 ;
  wire \output_reg[2]_i_15_n_0 ;
  wire \output_reg[2]_i_16_n_0 ;
  wire \output_reg[2]_i_17_n_0 ;
  wire \output_reg[2]_i_18_n_0 ;
  wire \output_reg[2]_i_19_n_0 ;
  wire \output_reg[2]_i_20_n_0 ;
  wire \output_reg[2]_i_21_n_0 ;
  wire \output_reg[2]_i_22_n_0 ;
  wire \output_reg[2]_i_23_n_0 ;
  wire \output_reg[2]_i_24_n_0 ;
  wire \output_reg[2]_i_25_n_0 ;
  wire \output_reg[2]_i_26_n_0 ;
  wire \output_reg[2]_i_27_n_0 ;
  wire \output_reg[2]_i_4_n_0 ;
  wire \output_reg[2]_i_5_n_0 ;
  wire \output_reg[2]_i_6_n_0 ;
  wire \output_reg[2]_i_7_n_0 ;
  wire \output_reg[2]_i_8_n_0 ;
  wire \output_reg[2]_i_9_n_0 ;
  wire \output_reg[3]_i_10_n_0 ;
  wire \output_reg[3]_i_11_n_0 ;
  wire \output_reg[3]_i_12_n_0 ;
  wire \output_reg[3]_i_13_n_0 ;
  wire \output_reg[3]_i_14_n_0 ;
  wire \output_reg[3]_i_15_n_0 ;
  wire \output_reg[3]_i_16_n_0 ;
  wire \output_reg[3]_i_17_n_0 ;
  wire \output_reg[3]_i_18_n_0 ;
  wire \output_reg[3]_i_19_n_0 ;
  wire \output_reg[3]_i_20_n_0 ;
  wire \output_reg[3]_i_21_n_0 ;
  wire \output_reg[3]_i_22_n_0 ;
  wire \output_reg[3]_i_23_n_0 ;
  wire \output_reg[3]_i_24_n_0 ;
  wire \output_reg[3]_i_25_n_0 ;
  wire \output_reg[3]_i_26_n_0 ;
  wire \output_reg[3]_i_27_n_0 ;
  wire \output_reg[3]_i_4_n_0 ;
  wire \output_reg[3]_i_5_n_0 ;
  wire \output_reg[3]_i_6_n_0 ;
  wire \output_reg[3]_i_7_n_0 ;
  wire \output_reg[3]_i_8_n_0 ;
  wire \output_reg[3]_i_9_n_0 ;
  wire \output_reg[4]_i_10_n_0 ;
  wire \output_reg[4]_i_11_n_0 ;
  wire \output_reg[4]_i_12_n_0 ;
  wire \output_reg[4]_i_13_n_0 ;
  wire \output_reg[4]_i_14_n_0 ;
  wire \output_reg[4]_i_15_n_0 ;
  wire \output_reg[4]_i_16_n_0 ;
  wire \output_reg[4]_i_17_n_0 ;
  wire \output_reg[4]_i_18_n_0 ;
  wire \output_reg[4]_i_19_n_0 ;
  wire \output_reg[4]_i_20_n_0 ;
  wire \output_reg[4]_i_21_n_0 ;
  wire \output_reg[4]_i_22_n_0 ;
  wire \output_reg[4]_i_23_n_0 ;
  wire \output_reg[4]_i_24_n_0 ;
  wire \output_reg[4]_i_25_n_0 ;
  wire \output_reg[4]_i_26_n_0 ;
  wire \output_reg[4]_i_27_n_0 ;
  wire \output_reg[4]_i_4_n_0 ;
  wire \output_reg[4]_i_5_n_0 ;
  wire \output_reg[4]_i_6_n_0 ;
  wire \output_reg[4]_i_7_n_0 ;
  wire \output_reg[4]_i_8_n_0 ;
  wire \output_reg[4]_i_9_n_0 ;
  wire \output_reg[5]_i_10_n_0 ;
  wire \output_reg[5]_i_11_n_0 ;
  wire \output_reg[5]_i_12_n_0 ;
  wire \output_reg[5]_i_13_n_0 ;
  wire \output_reg[5]_i_14_n_0 ;
  wire \output_reg[5]_i_15_n_0 ;
  wire \output_reg[5]_i_16_n_0 ;
  wire \output_reg[5]_i_17_n_0 ;
  wire \output_reg[5]_i_18_n_0 ;
  wire \output_reg[5]_i_19_n_0 ;
  wire \output_reg[5]_i_20_n_0 ;
  wire \output_reg[5]_i_21_n_0 ;
  wire \output_reg[5]_i_22_n_0 ;
  wire \output_reg[5]_i_23_n_0 ;
  wire \output_reg[5]_i_24_n_0 ;
  wire \output_reg[5]_i_25_n_0 ;
  wire \output_reg[5]_i_26_n_0 ;
  wire \output_reg[5]_i_27_n_0 ;
  wire \output_reg[5]_i_4_n_0 ;
  wire \output_reg[5]_i_5_n_0 ;
  wire \output_reg[5]_i_6_n_0 ;
  wire \output_reg[5]_i_7_n_0 ;
  wire \output_reg[5]_i_8_n_0 ;
  wire \output_reg[5]_i_9_n_0 ;
  wire \output_reg[6]_i_10_n_0 ;
  wire \output_reg[6]_i_11_n_0 ;
  wire \output_reg[6]_i_12_n_0 ;
  wire \output_reg[6]_i_13_n_0 ;
  wire \output_reg[6]_i_14_n_0 ;
  wire \output_reg[6]_i_15_n_0 ;
  wire \output_reg[6]_i_16_n_0 ;
  wire \output_reg[6]_i_17_n_0 ;
  wire \output_reg[6]_i_18_n_0 ;
  wire \output_reg[6]_i_19_n_0 ;
  wire \output_reg[6]_i_20_n_0 ;
  wire \output_reg[6]_i_21_n_0 ;
  wire \output_reg[6]_i_22_n_0 ;
  wire \output_reg[6]_i_23_n_0 ;
  wire \output_reg[6]_i_24_n_0 ;
  wire \output_reg[6]_i_25_n_0 ;
  wire \output_reg[6]_i_26_n_0 ;
  wire \output_reg[6]_i_27_n_0 ;
  wire \output_reg[6]_i_4_n_0 ;
  wire \output_reg[6]_i_5_n_0 ;
  wire \output_reg[6]_i_6_n_0 ;
  wire \output_reg[6]_i_7_n_0 ;
  wire \output_reg[6]_i_8_n_0 ;
  wire \output_reg[6]_i_9_n_0 ;
  wire \output_reg[7]_i_10_n_0 ;
  wire \output_reg[7]_i_11_n_0 ;
  wire \output_reg[7]_i_12_n_0 ;
  wire \output_reg[7]_i_13_n_0 ;
  wire \output_reg[7]_i_14_n_0 ;
  wire \output_reg[7]_i_15_n_0 ;
  wire \output_reg[7]_i_16_n_0 ;
  wire \output_reg[7]_i_17_n_0 ;
  wire \output_reg[7]_i_18_n_0 ;
  wire \output_reg[7]_i_19_n_0 ;
  wire \output_reg[7]_i_20_n_0 ;
  wire \output_reg[7]_i_21_n_0 ;
  wire \output_reg[7]_i_22_n_0 ;
  wire \output_reg[7]_i_23_n_0 ;
  wire \output_reg[7]_i_24_n_0 ;
  wire \output_reg[7]_i_25_n_0 ;
  wire \output_reg[7]_i_26_n_0 ;
  wire \output_reg[7]_i_27_n_0 ;
  wire \output_reg[7]_i_28_n_0 ;
  wire \output_reg[7]_i_5_n_0 ;
  wire \output_reg[7]_i_6_n_0 ;
  wire \output_reg[7]_i_7_n_0 ;
  wire \output_reg[7]_i_8_n_0 ;
  wire \output_reg[7]_i_9_n_0 ;
  wire [7:0]p_0_out;
  wire [7:0]p_0_out1_out;
  wire [7:0]p_1_out;
  wire read;
  wire read1_carry__0_i_1_n_0;
  wire read1_carry_i_1_n_0;
  wire read1_carry_i_2_n_0;
  wire read1_carry_i_3_n_0;
  wire read1_carry_i_4_n_0;
  wire read1_carry_n_0;
  wire rx_d2;
  wire s_output_stb_i_1_n_0;
  wire \state[0]_i_2__0_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state_reg[0] ;
  wire \state_reg[0]_0 ;
  wire \state_reg[1] ;
  wire \state_reg[1]_0 ;
  wire write;
  wire [3:0]\NLW_a_in_reg[12]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_a_in_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_a_in_reg[8]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_a_out_reg[1]_i_3_CO_UNCONNECTED ;
  wire [2:0]\NLW_a_out_reg[5]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_a_out_reg[9]_i_2_CO_UNCONNECTED ;
  wire [2:0]NLW_full1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_full1_carry_O_UNCONNECTED;
  wire [3:1]NLW_full1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_full1_carry__0_O_UNCONNECTED;
  wire [3:1]NLW_full1_carry__0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_full1_carry__0_i_2_O_UNCONNECTED;
  wire [2:0]NLW_full1_carry_i_5_CO_UNCONNECTED;
  wire [2:0]NLW_full1_carry_i_6_CO_UNCONNECTED;
  wire [2:0]NLW_full1_carry_i_7_CO_UNCONNECTED;
  wire [2:0]NLW_read1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_read1_carry_O_UNCONNECTED;
  wire [3:1]NLW_read1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_read1_carry__0_O_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \a_in[0]_i_1 
       (.I0(\a_in[0]_repN ),
        .O(\a_in[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[10]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[12]_i_5_n_6 ),
        .O(\a_in[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[11]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[12]_i_5_n_5 ),
        .O(\a_in[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \a_in[12]_i_1 
       (.I0(\a_in[12]_i_3_n_0 ),
        .I1(full1_carry__0_n_3),
        .I2(int_out1_stb_reg_0),
        .O(write));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \a_in[12]_i_13 
       (.I0(\a_out_reg_n_0_[8] ),
        .I1(\a_out_reg_n_0_[7] ),
        .I2(\a_out_reg_n_0_[10] ),
        .I3(\a_out_reg_n_0_[9] ),
        .O(\a_in[12]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \a_in[12]_i_14 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .I1(\a_out_reg_n_0_[11] ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\a_out_reg_n_0_[2] ),
        .I4(\a_out_reg_n_0_[1] ),
        .O(\a_in[12]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[12]_i_2 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[12]_i_5_n_4 ),
        .O(\a_in[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \a_in[12]_i_3 
       (.I0(\a_in[12]_i_6_n_0 ),
        .I1(\a_in[12]_i_4_n_0 ),
        .O(\a_in[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \a_in[12]_i_4 
       (.I0(\a_in[12]_i_7_n_0 ),
        .I1(\a_in[4]_repN ),
        .I2(a_in[3]),
        .I3(\a_in[6]_repN ),
        .I4(\a_in[5]_repN ),
        .I5(\a_in[12]_i_8_n_0 ),
        .O(\a_in[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \a_in[12]_i_6 
       (.I0(\a_in[12]_i_13_n_0 ),
        .I1(\a_out_reg_n_0_[4] ),
        .I2(\a_out_reg_n_0_[3] ),
        .I3(\a_out_reg_n_0_[6] ),
        .I4(\a_out_reg_n_0_[5] ),
        .I5(\a_in[12]_i_14_n_0 ),
        .O(\a_in[12]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \a_in[12]_i_7 
       (.I0(a_in[8]),
        .I1(a_in[7]),
        .I2(a_in[10]),
        .I3(a_in[9]),
        .O(\a_in[12]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \a_in[12]_i_8 
       (.I0(\a_in[0]_repN ),
        .I1(a_in[11]),
        .I2(a_in[12]),
        .I3(\a_in[2]_repN ),
        .I4(\a_in[1]_repN ),
        .O(\a_in[12]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[1]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_7 ),
        .O(\a_in[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[2]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_6 ),
        .O(\a_in[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__0 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__10 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__10_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__11 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__11_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__12 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__12_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__13 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__13_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__14 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__14_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__2 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__3 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__4 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__5 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__6 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__7 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__8 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[3]_rep_i_1__9 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_5 ),
        .O(\a_in[3]_rep_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[4]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[4]_i_2_n_4 ),
        .O(\a_in[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[5]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[8]_i_2_n_7 ),
        .O(\a_in[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[6]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[8]_i_2_n_6 ),
        .O(\a_in[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[7]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[8]_i_2_n_5 ),
        .O(\a_in[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[8]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[8]_i_2_n_4 ),
        .O(\a_in[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_in[9]_i_1 
       (.I0(\a_in[12]_i_4_n_0 ),
        .I1(\a_in_reg[12]_i_5_n_7 ),
        .O(\a_in[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[0] 
       (.C(clk),
        .CE(write),
        .D(\a_in[0]_i_1_n_0 ),
        .Q(a_in[0]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[0]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[0]_i_1_n_0 ),
        .Q(\a_in[0]_repN ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[10] 
       (.C(clk),
        .CE(write),
        .D(\a_in[10]_i_1_n_0 ),
        .Q(a_in[10]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[11] 
       (.C(clk),
        .CE(write),
        .D(\a_in[11]_i_1_n_0 ),
        .Q(a_in[11]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[12] 
       (.C(clk),
        .CE(write),
        .D(\a_in[12]_i_2_n_0 ),
        .Q(a_in[12]),
        .R(internal_rst_reg));
  CARRY4 \a_in_reg[12]_i_5 
       (.CI(\a_in_reg[8]_i_2_n_0 ),
        .CO(\NLW_a_in_reg[12]_i_5_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\a_in_reg[12]_i_5_n_4 ,\a_in_reg[12]_i_5_n_5 ,\a_in_reg[12]_i_5_n_6 ,\a_in_reg[12]_i_5_n_7 }),
        .S(a_in[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[1] 
       (.C(clk),
        .CE(write),
        .D(\a_in[1]_i_1_n_0 ),
        .Q(a_in[1]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[1]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[1]_i_1_n_0 ),
        .Q(\a_in[1]_repN ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[2] 
       (.C(clk),
        .CE(write),
        .D(\a_in[2]_i_1_n_0 ),
        .Q(a_in[2]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[2]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[2]_i_1_n_0 ),
        .Q(\a_in[2]_repN ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3] 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_i_1_n_0 ),
        .Q(a_in[3]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1_n_0 ),
        .Q(\a_in_reg[3]_rep_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__0 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__0_n_0 ),
        .Q(\a_in_reg[3]_rep__0_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__1 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__1_n_0 ),
        .Q(\a_in_reg[3]_rep__1_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__10 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__10_n_0 ),
        .Q(\a_in_reg[3]_rep__10_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__11 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__11_n_0 ),
        .Q(\a_in_reg[3]_rep__11_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__12 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__12_n_0 ),
        .Q(\a_in_reg[3]_rep__12_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__13 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__13_n_0 ),
        .Q(\a_in_reg[3]_rep__13_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__14 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__14_n_0 ),
        .Q(\a_in_reg[3]_rep__14_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__2 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__2_n_0 ),
        .Q(\a_in_reg[3]_rep__2_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__3 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__3_n_0 ),
        .Q(\a_in_reg[3]_rep__3_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__4 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__4_n_0 ),
        .Q(\a_in_reg[3]_rep__4_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__5 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__5_n_0 ),
        .Q(\a_in_reg[3]_rep__5_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__6 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__6_n_0 ),
        .Q(\a_in_reg[3]_rep__6_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__7 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__7_n_0 ),
        .Q(\a_in_reg[3]_rep__7_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__8 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__8_n_0 ),
        .Q(\a_in_reg[3]_rep__8_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_in_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[3]_rep__9 
       (.C(clk),
        .CE(write),
        .D(\a_in[3]_rep_i_1__9_n_0 ),
        .Q(\a_in_reg[3]_rep__9_n_0 ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[4] 
       (.C(clk),
        .CE(write),
        .D(\a_in[4]_i_1_n_0 ),
        .Q(a_in[4]),
        .R(internal_rst_reg));
  CARRY4 \a_in_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\a_in_reg[4]_i_2_n_0 ,\NLW_a_in_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(a_in[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\a_in_reg[4]_i_2_n_4 ,\a_in_reg[4]_i_2_n_5 ,\a_in_reg[4]_i_2_n_6 ,\a_in_reg[4]_i_2_n_7 }),
        .S(a_in[4:1]));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[4]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[4]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[4]_i_1_n_0 ),
        .Q(\a_in[4]_repN ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[5] 
       (.C(clk),
        .CE(write),
        .D(\a_in[5]_i_1_n_0 ),
        .Q(a_in[5]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[5]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[5]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[5]_i_1_n_0 ),
        .Q(\a_in[5]_repN ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[6] 
       (.C(clk),
        .CE(write),
        .D(\a_in[6]_i_1_n_0 ),
        .Q(a_in[6]),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "serial_input_inst_1/fifo_1/a_in_reg[6]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[6]_replica 
       (.C(clk),
        .CE(write),
        .D(\a_in[6]_i_1_n_0 ),
        .Q(\a_in[6]_repN ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[7] 
       (.C(clk),
        .CE(write),
        .D(\a_in[7]_i_1_n_0 ),
        .Q(a_in[7]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[8] 
       (.C(clk),
        .CE(write),
        .D(\a_in[8]_i_1_n_0 ),
        .Q(a_in[8]),
        .R(internal_rst_reg));
  CARRY4 \a_in_reg[8]_i_2 
       (.CI(\a_in_reg[4]_i_2_n_0 ),
        .CO({\a_in_reg[8]_i_2_n_0 ,\NLW_a_in_reg[8]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\a_in_reg[8]_i_2_n_4 ,\a_in_reg[8]_i_2_n_5 ,\a_in_reg[8]_i_2_n_6 ,\a_in_reg[8]_i_2_n_7 }),
        .S(a_in[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \a_in_reg[9] 
       (.C(clk),
        .CE(write),
        .D(\a_in[9]_i_1_n_0 ),
        .Q(a_in[9]),
        .R(internal_rst_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_i_1 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__0 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__1 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__10 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__2 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__3 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__4 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__5 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__6 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__7 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__8 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \a_out[0]_rep_i_1__9 
       (.I0(\a_out_reg[0]_rep__10_n_0 ),
        .O(\a_out[0]_rep_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[10]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[10]),
        .O(\a_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[11]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[11]),
        .O(\a_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[12]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[12]),
        .O(\a_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \a_out[1]_i_2 
       (.I0(\a_out[1]_i_4_n_0 ),
        .I1(\a_out_reg_n_0_[4] ),
        .I2(\a_out_reg_n_0_[3] ),
        .I3(\a_out_reg_n_0_[6] ),
        .I4(\a_out_reg_n_0_[5] ),
        .I5(\a_out[1]_i_5_n_0 ),
        .O(\a_out[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \a_out[1]_i_4 
       (.I0(\a_out_reg_n_0_[8] ),
        .I1(\a_out_reg_n_0_[7] ),
        .I2(\a_out_reg_n_0_[10] ),
        .I3(\a_out_reg_n_0_[9] ),
        .O(\a_out[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \a_out[1]_i_5 
       (.I0(\a_out_reg_n_0_[0] ),
        .I1(\a_out_reg_n_0_[11] ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\a_out_reg_n_0_[2] ),
        .I4(\a_out_reg_n_0_[1] ),
        .O(\a_out[1]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__0 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__10 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__10_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__11 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__11_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__12 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__12_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__13 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__13_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__14 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__14_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__2 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__3 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__4 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__5 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__6 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__7 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__8 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[1]_rep_i_1__9 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[1]),
        .O(\a_out[1]_rep_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[2]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[2]),
        .O(\a_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[3]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[3]),
        .O(\a_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[4]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[4]),
        .O(\a_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[5]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[5]),
        .O(\a_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[6]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[6]),
        .O(\a_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[7]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[7]),
        .O(\a_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[8]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[8]),
        .O(\a_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \a_out[9]_i_1 
       (.I0(\a_out[1]_i_2_n_0 ),
        .I1(data0[9]),
        .O(\a_out[9]_i_1_n_0 ));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0] 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[0] ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1_n_0 ),
        .Q(\a_out_reg[0]_rep_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__0 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__0_n_0 ),
        .Q(\a_out_reg[0]_rep__0_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__1 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__1_n_0 ),
        .Q(\a_out_reg[0]_rep__1_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__10 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__10_n_0 ),
        .Q(\a_out_reg[0]_rep__10_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__2 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__2_n_0 ),
        .Q(\a_out_reg[0]_rep__2_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__3 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__3_n_0 ),
        .Q(\a_out_reg[0]_rep__3_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__4 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__4_n_0 ),
        .Q(\a_out_reg[0]_rep__4_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__5 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__5_n_0 ),
        .Q(\a_out_reg[0]_rep__5_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__6 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__6_n_0 ),
        .Q(\a_out_reg[0]_rep__6_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__7 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__7_n_0 ),
        .Q(\a_out_reg[0]_rep__7_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__8 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__8_n_0 ),
        .Q(\a_out_reg[0]_rep__8_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[0]_rep__9 
       (.C(clk),
        .CE(read),
        .D(\a_out[0]_rep_i_1__9_n_0 ),
        .Q(\a_out_reg[0]_rep__9_n_0 ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[10] 
       (.C(clk),
        .CE(read),
        .D(\a_out[10]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[10] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[11] 
       (.C(clk),
        .CE(read),
        .D(\a_out[11]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[11] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[12] 
       (.C(clk),
        .CE(read),
        .D(\a_out[12]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[12] ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1] 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[1] ),
        .R(internal_rst_reg));
  CARRY4 \a_out_reg[1]_i_3 
       (.CI(1'b0),
        .CO({\a_out_reg[1]_i_3_n_0 ,\NLW_a_out_reg[1]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(\a_out_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S({\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg_n_0_[1] }));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1_n_0 ),
        .Q(\a_out_reg[1]_rep_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__0 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__0_n_0 ),
        .Q(\a_out_reg[1]_rep__0_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__1 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__1_n_0 ),
        .Q(\a_out_reg[1]_rep__1_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__10 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__10_n_0 ),
        .Q(\a_out_reg[1]_rep__10_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__11 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__11_n_0 ),
        .Q(\a_out_reg[1]_rep__11_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__12 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__12_n_0 ),
        .Q(\a_out_reg[1]_rep__12_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__13 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__13_n_0 ),
        .Q(\a_out_reg[1]_rep__13_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__14 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__14_n_0 ),
        .Q(\a_out_reg[1]_rep__14_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__2 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__2_n_0 ),
        .Q(\a_out_reg[1]_rep__2_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__3 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__3_n_0 ),
        .Q(\a_out_reg[1]_rep__3_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__4 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__4_n_0 ),
        .Q(\a_out_reg[1]_rep__4_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__5 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__5_n_0 ),
        .Q(\a_out_reg[1]_rep__5_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__6 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__6_n_0 ),
        .Q(\a_out_reg[1]_rep__6_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__7 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__7_n_0 ),
        .Q(\a_out_reg[1]_rep__7_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__8 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__8_n_0 ),
        .Q(\a_out_reg[1]_rep__8_n_0 ),
        .R(internal_rst_reg));
  (* ORIG_CELL_NAME = "a_out_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[1]_rep__9 
       (.C(clk),
        .CE(read),
        .D(\a_out[1]_rep_i_1__9_n_0 ),
        .Q(\a_out_reg[1]_rep__9_n_0 ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[2] 
       (.C(clk),
        .CE(read),
        .D(\a_out[2]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[2] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[3] 
       (.C(clk),
        .CE(read),
        .D(\a_out[3]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[3] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[4] 
       (.C(clk),
        .CE(read),
        .D(\a_out[4]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[4] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[5] 
       (.C(clk),
        .CE(read),
        .D(\a_out[5]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[5] ),
        .R(internal_rst_reg));
  CARRY4 \a_out_reg[5]_i_2 
       (.CI(\a_out_reg[1]_i_3_n_0 ),
        .CO({\a_out_reg[5]_i_2_n_0 ,\NLW_a_out_reg[5]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S({\a_out_reg_n_0_[8] ,\a_out_reg_n_0_[7] ,\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] }));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[6] 
       (.C(clk),
        .CE(read),
        .D(\a_out[6]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[6] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[7] 
       (.C(clk),
        .CE(read),
        .D(\a_out[7]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[7] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[8] 
       (.C(clk),
        .CE(read),
        .D(\a_out[8]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[8] ),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \a_out_reg[9] 
       (.C(clk),
        .CE(read),
        .D(\a_out[9]_i_1_n_0 ),
        .Q(\a_out_reg_n_0_[9] ),
        .R(internal_rst_reg));
  CARRY4 \a_out_reg[9]_i_2 
       (.CI(\a_out_reg[5]_i_2_n_0 ),
        .CO(\NLW_a_out_reg[9]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S({\a_out_reg_n_0_[12] ,\a_out_reg_n_0_[11] ,\a_out_reg_n_0_[10] ,\a_out_reg_n_0_[9] }));
  CARRY4 full1_carry
       (.CI(1'b0),
        .CO({full1_carry_n_0,NLW_full1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_full1_carry_O_UNCONNECTED[3:0]),
        .S({full1_carry_i_1_n_0,full1_carry_i_2_n_0,full1_carry_i_3_n_0,full1_carry_i_4_n_0}));
  CARRY4 full1_carry__0
       (.CI(full1_carry_n_0),
        .CO({NLW_full1_carry__0_CO_UNCONNECTED[3:1],full1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_full1_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,full1_carry__0_i_1_n_0}));
  LUT3 #(
    .INIT(8'h90)) 
    full1_carry__0_i_1
       (.I0(full2[12]),
        .I1(a_in[12]),
        .I2(full1_carry__0_i_2_n_3),
        .O(full1_carry__0_i_1_n_0));
  CARRY4 full1_carry__0_i_2
       (.CI(full1_carry_i_5_n_0),
        .CO({NLW_full1_carry__0_i_2_CO_UNCONNECTED[3:1],full1_carry__0_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_full1_carry__0_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    full1_carry_i_1
       (.I0(a_in[11]),
        .I1(full2[11]),
        .I2(a_in[10]),
        .I3(full2[10]),
        .I4(full2[9]),
        .I5(a_in[9]),
        .O(full1_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_10
       (.I0(\a_out_reg_n_0_[10] ),
        .O(full1_carry_i_10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_11
       (.I0(\a_out_reg_n_0_[9] ),
        .O(full1_carry_i_11_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_12
       (.I0(\a_out_reg_n_0_[8] ),
        .O(full1_carry_i_12_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_13
       (.I0(\a_out_reg_n_0_[7] ),
        .O(full1_carry_i_13_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_14
       (.I0(\a_out_reg_n_0_[6] ),
        .O(full1_carry_i_14_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_15
       (.I0(\a_out_reg_n_0_[5] ),
        .O(full1_carry_i_15_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_16
       (.I0(\a_out_reg_n_0_[4] ),
        .O(full1_carry_i_16_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_17
       (.I0(\a_out_reg_n_0_[3] ),
        .O(full1_carry_i_17_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_18
       (.I0(\a_out_reg_n_0_[2] ),
        .O(full1_carry_i_18_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_19
       (.I0(\a_out_reg_n_0_[1] ),
        .O(full1_carry_i_19_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    full1_carry_i_2
       (.I0(a_in[8]),
        .I1(full2[8]),
        .I2(a_in[7]),
        .I3(full2[7]),
        .I4(full2[6]),
        .I5(\a_in[6]_repN ),
        .O(full1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    full1_carry_i_3
       (.I0(\a_in[5]_repN ),
        .I1(full2[5]),
        .I2(\a_in[4]_repN ),
        .I3(full2[4]),
        .I4(full2[3]),
        .I5(a_in[3]),
        .O(full1_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000900990090000)) 
    full1_carry_i_4
       (.I0(\a_in[2]_repN ),
        .I1(full2[2]),
        .I2(\a_in[1]_repN ),
        .I3(full2[1]),
        .I4(\a_in[0]_repN ),
        .I5(\a_out_reg[0]_rep__10_n_0 ),
        .O(full1_carry_i_4_n_0));
  CARRY4 full1_carry_i_5
       (.CI(full1_carry_i_6_n_0),
        .CO({full1_carry_i_5_n_0,NLW_full1_carry_i_5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\a_out_reg_n_0_[12] ,\a_out_reg_n_0_[11] ,\a_out_reg_n_0_[10] ,\a_out_reg_n_0_[9] }),
        .O(full2[12:9]),
        .S({full1_carry_i_8_n_0,full1_carry_i_9_n_0,full1_carry_i_10_n_0,full1_carry_i_11_n_0}));
  CARRY4 full1_carry_i_6
       (.CI(full1_carry_i_7_n_0),
        .CO({full1_carry_i_6_n_0,NLW_full1_carry_i_6_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\a_out_reg_n_0_[8] ,\a_out_reg_n_0_[7] ,\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] }),
        .O(full2[8:5]),
        .S({full1_carry_i_12_n_0,full1_carry_i_13_n_0,full1_carry_i_14_n_0,full1_carry_i_15_n_0}));
  CARRY4 full1_carry_i_7
       (.CI(1'b0),
        .CO({full1_carry_i_7_n_0,NLW_full1_carry_i_7_CO_UNCONNECTED[2:0]}),
        .CYINIT(\a_out_reg[0]_rep__10_n_0 ),
        .DI({\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg_n_0_[1] }),
        .O(full2[4:1]),
        .S({full1_carry_i_16_n_0,full1_carry_i_17_n_0,full1_carry_i_18_n_0,full1_carry_i_19_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_8
       (.I0(\a_out_reg_n_0_[12] ),
        .O(full1_carry_i_8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    full1_carry_i_9
       (.I0(\a_out_reg_n_0_[11] ),
        .O(full1_carry_i_9_n_0));
  LUT3 #(
    .INIT(8'h74)) 
    int_out1_stb_i_1
       (.I0(\state_reg[1]_0 ),
        .I1(\state[0]_i_2__0_n_0 ),
        .I2(int_out1_stb_reg_0),
        .O(int_out1_stb_reg));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_UNIQ_BASE_ memory_reg_0_127_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_0_127_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_0_127_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_0_127_0_0_i_1
       (.I0(memory_reg_0_127_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    memory_reg_0_127_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_0_127_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD71 memory_reg_0_127_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_0_127_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_0_127_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD135 memory_reg_0_127_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_0_127_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_0_127_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD199 memory_reg_0_127_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_0_127_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_0_127_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD263 memory_reg_0_127_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_0_127_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_0_127_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD327 memory_reg_0_127_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_0_127_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_0_127_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD391 memory_reg_0_127_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_0_127_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_0_127_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD455 memory_reg_0_127_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_0_127_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_0_127_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_0_127_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD15 memory_reg_1024_1151_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1024_1151_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1024_1151_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1024_1151_0_0_i_1
       (.I0(memory_reg_1024_1151_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1024_1151_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    memory_reg_1024_1151_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1024_1151_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD79 memory_reg_1024_1151_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1024_1151_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_1024_1151_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD143 memory_reg_1024_1151_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1024_1151_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1024_1151_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD207 memory_reg_1024_1151_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1024_1151_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1024_1151_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD271 memory_reg_1024_1151_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1024_1151_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1024_1151_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD335 memory_reg_1024_1151_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1024_1151_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1024_1151_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD399 memory_reg_1024_1151_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1024_1151_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_1024_1151_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD463 memory_reg_1024_1151_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1024_1151_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1024_1151_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD16 memory_reg_1152_1279_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1152_1279_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1152_1279_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1152_1279_0_0_i_1
       (.I0(memory_reg_1152_1279_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1152_1279_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    memory_reg_1152_1279_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1152_1279_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD80 memory_reg_1152_1279_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1152_1279_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1152_1279_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD144 memory_reg_1152_1279_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1152_1279_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1152_1279_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD208 memory_reg_1152_1279_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1152_1279_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1152_1279_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD272 memory_reg_1152_1279_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1152_1279_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1152_1279_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD336 memory_reg_1152_1279_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1152_1279_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1152_1279_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD400 memory_reg_1152_1279_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1152_1279_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1152_1279_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD464 memory_reg_1152_1279_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1152_1279_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1152_1279_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD17 memory_reg_1280_1407_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1280_1407_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1280_1407_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1280_1407_0_0_i_1
       (.I0(memory_reg_1280_1407_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1280_1407_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    memory_reg_1280_1407_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1280_1407_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD81 memory_reg_1280_1407_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1280_1407_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1280_1407_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD145 memory_reg_1280_1407_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1280_1407_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1280_1407_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD209 memory_reg_1280_1407_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1280_1407_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1280_1407_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD273 memory_reg_1280_1407_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1280_1407_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1280_1407_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD337 memory_reg_1280_1407_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1280_1407_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1280_1407_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD401 memory_reg_1280_1407_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1280_1407_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1280_1407_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD465 memory_reg_1280_1407_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1280_1407_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1280_1407_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD8 memory_reg_128_255_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_128_255_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_128_255_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_128_255_0_0_i_1
       (.I0(memory_reg_128_255_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_128_255_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    memory_reg_128_255_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_128_255_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD72 memory_reg_128_255_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_128_255_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_128_255_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD136 memory_reg_128_255_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_128_255_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_128_255_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD200 memory_reg_128_255_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_128_255_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_128_255_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD264 memory_reg_128_255_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_128_255_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_128_255_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD328 memory_reg_128_255_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_128_255_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_128_255_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD392 memory_reg_128_255_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_128_255_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_128_255_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD456 memory_reg_128_255_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_128_255_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_128_255_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD18 memory_reg_1408_1535_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1408_1535_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1408_1535_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1408_1535_0_0_i_1
       (.I0(memory_reg_1408_1535_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1408_1535_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    memory_reg_1408_1535_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1408_1535_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD82 memory_reg_1408_1535_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1408_1535_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1408_1535_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD146 memory_reg_1408_1535_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1408_1535_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1408_1535_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD210 memory_reg_1408_1535_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1408_1535_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1408_1535_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD274 memory_reg_1408_1535_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1408_1535_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1408_1535_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD338 memory_reg_1408_1535_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1408_1535_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1408_1535_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD402 memory_reg_1408_1535_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1408_1535_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1408_1535_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD466 memory_reg_1408_1535_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1408_1535_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1408_1535_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD19 memory_reg_1536_1663_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1536_1663_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1536_1663_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1536_1663_0_0_i_1
       (.I0(memory_reg_1536_1663_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1536_1663_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    memory_reg_1536_1663_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1536_1663_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD83 memory_reg_1536_1663_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1536_1663_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1536_1663_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD147 memory_reg_1536_1663_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1536_1663_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1536_1663_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD211 memory_reg_1536_1663_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1536_1663_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1536_1663_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD275 memory_reg_1536_1663_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1536_1663_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1536_1663_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD339 memory_reg_1536_1663_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1536_1663_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1536_1663_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD403 memory_reg_1536_1663_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1536_1663_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1536_1663_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD467 memory_reg_1536_1663_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1536_1663_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1536_1663_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD20 memory_reg_1664_1791_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1664_1791_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1664_1791_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1664_1791_0_0_i_1
       (.I0(memory_reg_1664_1791_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1664_1791_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    memory_reg_1664_1791_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1664_1791_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD84 memory_reg_1664_1791_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1664_1791_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1664_1791_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD148 memory_reg_1664_1791_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1664_1791_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1664_1791_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD212 memory_reg_1664_1791_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1664_1791_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1664_1791_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD276 memory_reg_1664_1791_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1664_1791_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1664_1791_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD340 memory_reg_1664_1791_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1664_1791_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1664_1791_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD404 memory_reg_1664_1791_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1664_1791_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1664_1791_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD468 memory_reg_1664_1791_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1664_1791_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1664_1791_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD21 memory_reg_1792_1919_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1792_1919_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1792_1919_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1792_1919_0_0_i_1
       (.I0(memory_reg_1792_1919_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1792_1919_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    memory_reg_1792_1919_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1792_1919_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD85 memory_reg_1792_1919_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1792_1919_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1792_1919_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD149 memory_reg_1792_1919_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1792_1919_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1792_1919_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD213 memory_reg_1792_1919_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1792_1919_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1792_1919_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD277 memory_reg_1792_1919_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1792_1919_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1792_1919_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD341 memory_reg_1792_1919_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1792_1919_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1792_1919_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD405 memory_reg_1792_1919_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1792_1919_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1792_1919_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD469 memory_reg_1792_1919_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1792_1919_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1792_1919_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD22 memory_reg_1920_2047_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_1920_2047_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_1920_2047_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_1920_2047_0_0_i_1
       (.I0(memory_reg_1920_2047_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_1920_2047_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    memory_reg_1920_2047_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_1920_2047_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD86 memory_reg_1920_2047_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_1920_2047_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_1920_2047_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD150 memory_reg_1920_2047_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_1920_2047_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_1920_2047_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD214 memory_reg_1920_2047_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_1920_2047_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_1920_2047_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD278 memory_reg_1920_2047_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_1920_2047_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_1920_2047_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD342 memory_reg_1920_2047_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_1920_2047_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_1920_2047_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD406 memory_reg_1920_2047_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_1920_2047_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_1920_2047_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD470 memory_reg_1920_2047_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_1920_2047_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_1920_2047_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD23 memory_reg_2048_2175_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2048_2175_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2048_2175_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2048_2175_0_0_i_1
       (.I0(memory_reg_2048_2175_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2048_2175_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    memory_reg_2048_2175_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2048_2175_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD87 memory_reg_2048_2175_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2048_2175_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2048_2175_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD151 memory_reg_2048_2175_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2048_2175_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2048_2175_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD215 memory_reg_2048_2175_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2048_2175_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2048_2175_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD279 memory_reg_2048_2175_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2048_2175_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_2048_2175_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD343 memory_reg_2048_2175_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2048_2175_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2048_2175_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD407 memory_reg_2048_2175_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2048_2175_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2048_2175_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD471 memory_reg_2048_2175_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2048_2175_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2048_2175_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2048_2175_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD24 memory_reg_2176_2303_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2176_2303_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2176_2303_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2176_2303_0_0_i_1
       (.I0(memory_reg_2176_2303_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2176_2303_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    memory_reg_2176_2303_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2176_2303_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD88 memory_reg_2176_2303_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2176_2303_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2176_2303_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD152 memory_reg_2176_2303_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2176_2303_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2176_2303_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD216 memory_reg_2176_2303_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2176_2303_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2176_2303_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD280 memory_reg_2176_2303_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2176_2303_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2176_2303_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD344 memory_reg_2176_2303_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2176_2303_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2176_2303_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD408 memory_reg_2176_2303_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2176_2303_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2176_2303_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD472 memory_reg_2176_2303_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2176_2303_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2176_2303_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2176_2303_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD25 memory_reg_2304_2431_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2304_2431_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2304_2431_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2304_2431_0_0_i_1
       (.I0(memory_reg_2304_2431_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2304_2431_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    memory_reg_2304_2431_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2304_2431_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD89 memory_reg_2304_2431_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2304_2431_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2304_2431_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD153 memory_reg_2304_2431_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2304_2431_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2304_2431_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD217 memory_reg_2304_2431_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2304_2431_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2304_2431_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD281 memory_reg_2304_2431_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2304_2431_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2304_2431_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD345 memory_reg_2304_2431_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2304_2431_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2304_2431_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD409 memory_reg_2304_2431_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2304_2431_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2304_2431_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD473 memory_reg_2304_2431_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2304_2431_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2304_2431_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2304_2431_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD26 memory_reg_2432_2559_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2432_2559_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2432_2559_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2432_2559_0_0_i_1
       (.I0(memory_reg_2432_2559_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2432_2559_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    memory_reg_2432_2559_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2432_2559_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD90 memory_reg_2432_2559_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2432_2559_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2432_2559_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD154 memory_reg_2432_2559_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2432_2559_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2432_2559_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD218 memory_reg_2432_2559_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2432_2559_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2432_2559_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD282 memory_reg_2432_2559_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2432_2559_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2432_2559_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD346 memory_reg_2432_2559_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2432_2559_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2432_2559_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD410 memory_reg_2432_2559_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2432_2559_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2432_2559_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD474 memory_reg_2432_2559_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2432_2559_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2432_2559_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2432_2559_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD27 memory_reg_2560_2687_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2560_2687_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2560_2687_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2560_2687_0_0_i_1
       (.I0(memory_reg_2560_2687_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2560_2687_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    memory_reg_2560_2687_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2560_2687_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD91 memory_reg_2560_2687_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2560_2687_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2560_2687_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD155 memory_reg_2560_2687_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2560_2687_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2560_2687_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD219 memory_reg_2560_2687_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2560_2687_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2560_2687_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD283 memory_reg_2560_2687_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2560_2687_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2560_2687_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD347 memory_reg_2560_2687_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2560_2687_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2560_2687_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD411 memory_reg_2560_2687_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2560_2687_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2560_2687_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD475 memory_reg_2560_2687_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2560_2687_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2560_2687_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2560_2687_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD9 memory_reg_256_383_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_256_383_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_256_383_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_256_383_0_0_i_1
       (.I0(memory_reg_256_383_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_256_383_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    memory_reg_256_383_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_256_383_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD73 memory_reg_256_383_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_256_383_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_256_383_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD137 memory_reg_256_383_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_256_383_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_256_383_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD201 memory_reg_256_383_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_256_383_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_256_383_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD265 memory_reg_256_383_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_256_383_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_256_383_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD329 memory_reg_256_383_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_256_383_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_256_383_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD393 memory_reg_256_383_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_256_383_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_256_383_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD457 memory_reg_256_383_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_256_383_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_256_383_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD28 memory_reg_2688_2815_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2688_2815_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2688_2815_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2688_2815_0_0_i_1
       (.I0(memory_reg_2688_2815_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2688_2815_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    memory_reg_2688_2815_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2688_2815_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD92 memory_reg_2688_2815_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2688_2815_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2688_2815_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD156 memory_reg_2688_2815_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2688_2815_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2688_2815_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD220 memory_reg_2688_2815_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2688_2815_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2688_2815_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD284 memory_reg_2688_2815_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2688_2815_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2688_2815_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD348 memory_reg_2688_2815_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2688_2815_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2688_2815_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD412 memory_reg_2688_2815_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2688_2815_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2688_2815_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD476 memory_reg_2688_2815_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2688_2815_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2688_2815_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2688_2815_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD29 memory_reg_2816_2943_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2816_2943_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2816_2943_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2816_2943_0_0_i_1
       (.I0(memory_reg_2816_2943_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2816_2943_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    memory_reg_2816_2943_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2816_2943_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD93 memory_reg_2816_2943_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2816_2943_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2816_2943_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD157 memory_reg_2816_2943_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2816_2943_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2816_2943_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD221 memory_reg_2816_2943_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2816_2943_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2816_2943_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD285 memory_reg_2816_2943_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2816_2943_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2816_2943_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD349 memory_reg_2816_2943_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2816_2943_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2816_2943_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD413 memory_reg_2816_2943_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2816_2943_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2816_2943_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD477 memory_reg_2816_2943_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2816_2943_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2816_2943_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2816_2943_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD30 memory_reg_2944_3071_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_2944_3071_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_2944_3071_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_2944_3071_0_0_i_1
       (.I0(memory_reg_2944_3071_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_2944_3071_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    memory_reg_2944_3071_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_2944_3071_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD94 memory_reg_2944_3071_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_2944_3071_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_2944_3071_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD158 memory_reg_2944_3071_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_2944_3071_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_2944_3071_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD222 memory_reg_2944_3071_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_2944_3071_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_2944_3071_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD286 memory_reg_2944_3071_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_2944_3071_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_2944_3071_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD350 memory_reg_2944_3071_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_2944_3071_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_2944_3071_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD414 memory_reg_2944_3071_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_2944_3071_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_2944_3071_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD478 memory_reg_2944_3071_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_2944_3071_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_2944_3071_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_2944_3071_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD31 memory_reg_3072_3199_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3072_3199_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3072_3199_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3072_3199_0_0_i_1
       (.I0(memory_reg_3072_3199_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3072_3199_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    memory_reg_3072_3199_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3072_3199_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD95 memory_reg_3072_3199_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3072_3199_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3072_3199_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD159 memory_reg_3072_3199_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3072_3199_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_3072_3199_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD223 memory_reg_3072_3199_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3072_3199_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3072_3199_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD287 memory_reg_3072_3199_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3072_3199_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3072_3199_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD351 memory_reg_3072_3199_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3072_3199_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3072_3199_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD415 memory_reg_3072_3199_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3072_3199_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3072_3199_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD479 memory_reg_3072_3199_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3072_3199_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_3072_3199_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3072_3199_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD32 memory_reg_3200_3327_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3200_3327_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3200_3327_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3200_3327_0_0_i_1
       (.I0(memory_reg_3200_3327_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3200_3327_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    memory_reg_3200_3327_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3200_3327_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD96 memory_reg_3200_3327_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3200_3327_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3200_3327_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD160 memory_reg_3200_3327_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3200_3327_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3200_3327_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD224 memory_reg_3200_3327_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3200_3327_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3200_3327_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD288 memory_reg_3200_3327_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3200_3327_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3200_3327_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD352 memory_reg_3200_3327_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3200_3327_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3200_3327_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD416 memory_reg_3200_3327_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3200_3327_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3200_3327_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD480 memory_reg_3200_3327_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3200_3327_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3200_3327_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3200_3327_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD33 memory_reg_3328_3455_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3328_3455_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3328_3455_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3328_3455_0_0_i_1
       (.I0(memory_reg_3328_3455_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3328_3455_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    memory_reg_3328_3455_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3328_3455_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD97 memory_reg_3328_3455_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3328_3455_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3328_3455_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD161 memory_reg_3328_3455_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3328_3455_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3328_3455_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD225 memory_reg_3328_3455_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3328_3455_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3328_3455_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD289 memory_reg_3328_3455_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3328_3455_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3328_3455_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD353 memory_reg_3328_3455_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3328_3455_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3328_3455_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD417 memory_reg_3328_3455_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3328_3455_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3328_3455_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD481 memory_reg_3328_3455_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3328_3455_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3328_3455_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3328_3455_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD34 memory_reg_3456_3583_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3456_3583_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3456_3583_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3456_3583_0_0_i_1
       (.I0(memory_reg_3456_3583_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3456_3583_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    memory_reg_3456_3583_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3456_3583_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD98 memory_reg_3456_3583_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3456_3583_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3456_3583_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD162 memory_reg_3456_3583_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3456_3583_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3456_3583_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD226 memory_reg_3456_3583_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3456_3583_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3456_3583_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD290 memory_reg_3456_3583_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3456_3583_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3456_3583_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD354 memory_reg_3456_3583_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3456_3583_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3456_3583_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD418 memory_reg_3456_3583_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3456_3583_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3456_3583_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD482 memory_reg_3456_3583_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3456_3583_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3456_3583_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3456_3583_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD35 memory_reg_3584_3711_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3584_3711_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3584_3711_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3584_3711_0_0_i_1
       (.I0(memory_reg_3584_3711_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3584_3711_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    memory_reg_3584_3711_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3584_3711_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD99 memory_reg_3584_3711_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3584_3711_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3584_3711_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD163 memory_reg_3584_3711_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3584_3711_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3584_3711_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD227 memory_reg_3584_3711_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3584_3711_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3584_3711_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD291 memory_reg_3584_3711_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3584_3711_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3584_3711_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD355 memory_reg_3584_3711_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3584_3711_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3584_3711_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD419 memory_reg_3584_3711_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3584_3711_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3584_3711_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD483 memory_reg_3584_3711_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3584_3711_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3584_3711_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3584_3711_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD36 memory_reg_3712_3839_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3712_3839_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3712_3839_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3712_3839_0_0_i_1
       (.I0(memory_reg_3712_3839_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3712_3839_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    memory_reg_3712_3839_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3712_3839_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD100 memory_reg_3712_3839_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3712_3839_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3712_3839_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD164 memory_reg_3712_3839_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3712_3839_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3712_3839_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD228 memory_reg_3712_3839_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3712_3839_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3712_3839_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD292 memory_reg_3712_3839_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3712_3839_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3712_3839_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD356 memory_reg_3712_3839_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3712_3839_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3712_3839_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD420 memory_reg_3712_3839_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3712_3839_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3712_3839_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD484 memory_reg_3712_3839_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3712_3839_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3712_3839_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3712_3839_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD37 memory_reg_3840_3967_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3840_3967_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3840_3967_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3840_3967_0_0_i_1
       (.I0(memory_reg_3840_3967_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3840_3967_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    memory_reg_3840_3967_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3840_3967_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD101 memory_reg_3840_3967_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3840_3967_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3840_3967_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD165 memory_reg_3840_3967_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3840_3967_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3840_3967_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD229 memory_reg_3840_3967_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3840_3967_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3840_3967_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD293 memory_reg_3840_3967_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3840_3967_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3840_3967_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD357 memory_reg_3840_3967_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3840_3967_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3840_3967_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD421 memory_reg_3840_3967_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3840_3967_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3840_3967_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD485 memory_reg_3840_3967_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3840_3967_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3840_3967_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3840_3967_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD10 memory_reg_384_511_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_384_511_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_384_511_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_384_511_0_0_i_1
       (.I0(memory_reg_384_511_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_384_511_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    memory_reg_384_511_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_384_511_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD74 memory_reg_384_511_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_384_511_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_384_511_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD138 memory_reg_384_511_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_384_511_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_384_511_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD202 memory_reg_384_511_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_384_511_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_384_511_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD266 memory_reg_384_511_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_384_511_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_384_511_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD330 memory_reg_384_511_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_384_511_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_384_511_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD394 memory_reg_384_511_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_384_511_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_384_511_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD458 memory_reg_384_511_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_384_511_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_384_511_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD38 memory_reg_3968_4095_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_3968_4095_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_3968_4095_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_3968_4095_0_0_i_1
       (.I0(memory_reg_3968_4095_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_3968_4095_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    memory_reg_3968_4095_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_3968_4095_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD102 memory_reg_3968_4095_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_3968_4095_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_3968_4095_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD166 memory_reg_3968_4095_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_3968_4095_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_3968_4095_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD230 memory_reg_3968_4095_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_3968_4095_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_3968_4095_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD294 memory_reg_3968_4095_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_3968_4095_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_3968_4095_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD358 memory_reg_3968_4095_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_3968_4095_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_3968_4095_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD422 memory_reg_3968_4095_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_3968_4095_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_3968_4095_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD486 memory_reg_3968_4095_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_3968_4095_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_3968_4095_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_3968_4095_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD39 memory_reg_4096_4223_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4096_4223_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_4096_4223_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4096_4223_0_0_i_1
       (.I0(memory_reg_0_127_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD103 memory_reg_4096_4223_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4096_4223_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4096_4223_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD167 memory_reg_4096_4223_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4096_4223_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4096_4223_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD231 memory_reg_4096_4223_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4096_4223_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4096_4223_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD295 memory_reg_4096_4223_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4096_4223_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4096_4223_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD359 memory_reg_4096_4223_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4096_4223_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_4096_4223_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD423 memory_reg_4096_4223_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4096_4223_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4096_4223_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD487 memory_reg_4096_4223_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4096_4223_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4096_4223_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4096_4223_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD40 memory_reg_4224_4351_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4224_4351_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4224_4351_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4224_4351_0_0_i_1
       (.I0(memory_reg_128_255_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD104 memory_reg_4224_4351_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4224_4351_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4224_4351_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD168 memory_reg_4224_4351_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4224_4351_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4224_4351_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD232 memory_reg_4224_4351_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__5_n_0 ,a_in[2:0]}),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4224_4351_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4224_4351_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD296 memory_reg_4224_4351_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4224_4351_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4224_4351_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD360 memory_reg_4224_4351_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4224_4351_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4224_4351_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD424 memory_reg_4224_4351_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4224_4351_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4224_4351_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD488 memory_reg_4224_4351_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4224_4351_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4224_4351_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4224_4351_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD41 memory_reg_4352_4479_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4352_4479_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4352_4479_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4352_4479_0_0_i_1
       (.I0(memory_reg_256_383_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD105 memory_reg_4352_4479_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4352_4479_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4352_4479_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD169 memory_reg_4352_4479_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4352_4479_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4352_4479_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD233 memory_reg_4352_4479_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4352_4479_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4352_4479_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD297 memory_reg_4352_4479_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4352_4479_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4352_4479_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD361 memory_reg_4352_4479_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4352_4479_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4352_4479_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD425 memory_reg_4352_4479_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4352_4479_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4352_4479_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD489 memory_reg_4352_4479_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4352_4479_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4352_4479_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4352_4479_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD42 memory_reg_4480_4607_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4480_4607_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4480_4607_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4480_4607_0_0_i_1
       (.I0(memory_reg_384_511_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD106 memory_reg_4480_4607_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4480_4607_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4480_4607_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD170 memory_reg_4480_4607_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4480_4607_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4480_4607_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD234 memory_reg_4480_4607_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4480_4607_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4480_4607_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD298 memory_reg_4480_4607_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4480_4607_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4480_4607_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD362 memory_reg_4480_4607_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4480_4607_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4480_4607_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD426 memory_reg_4480_4607_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4480_4607_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4480_4607_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD490 memory_reg_4480_4607_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4480_4607_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4480_4607_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4480_4607_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD43 memory_reg_4608_4735_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4608_4735_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4608_4735_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4608_4735_0_0_i_1
       (.I0(memory_reg_512_639_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD107 memory_reg_4608_4735_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4608_4735_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4608_4735_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD171 memory_reg_4608_4735_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4608_4735_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4608_4735_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD235 memory_reg_4608_4735_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4608_4735_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4608_4735_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD299 memory_reg_4608_4735_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4608_4735_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4608_4735_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD363 memory_reg_4608_4735_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4608_4735_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4608_4735_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD427 memory_reg_4608_4735_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4608_4735_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4608_4735_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD491 memory_reg_4608_4735_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4608_4735_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4608_4735_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4608_4735_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD44 memory_reg_4736_4863_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4736_4863_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4736_4863_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4736_4863_0_0_i_1
       (.I0(memory_reg_640_767_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD108 memory_reg_4736_4863_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4736_4863_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4736_4863_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD172 memory_reg_4736_4863_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4736_4863_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4736_4863_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD236 memory_reg_4736_4863_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__5_n_0 ,a_in[2:0]}),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4736_4863_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4736_4863_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD300 memory_reg_4736_4863_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4736_4863_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4736_4863_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD364 memory_reg_4736_4863_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4736_4863_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4736_4863_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD428 memory_reg_4736_4863_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4736_4863_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4736_4863_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD492 memory_reg_4736_4863_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4736_4863_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4736_4863_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4736_4863_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD45 memory_reg_4864_4991_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4864_4991_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4864_4991_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4864_4991_0_0_i_1
       (.I0(memory_reg_768_895_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD109 memory_reg_4864_4991_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4864_4991_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4864_4991_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD173 memory_reg_4864_4991_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4864_4991_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4864_4991_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD237 memory_reg_4864_4991_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4864_4991_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4864_4991_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD301 memory_reg_4864_4991_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4864_4991_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4864_4991_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD365 memory_reg_4864_4991_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4864_4991_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4864_4991_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD429 memory_reg_4864_4991_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4864_4991_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4864_4991_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD493 memory_reg_4864_4991_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4864_4991_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4864_4991_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4864_4991_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD46 memory_reg_4992_5119_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_4992_5119_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_4992_5119_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_4992_5119_0_0_i_1
       (.I0(memory_reg_896_1023_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD110 memory_reg_4992_5119_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_4992_5119_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_4992_5119_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD174 memory_reg_4992_5119_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_4992_5119_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_4992_5119_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD238 memory_reg_4992_5119_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_4992_5119_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_4992_5119_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD302 memory_reg_4992_5119_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_4992_5119_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_4992_5119_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD366 memory_reg_4992_5119_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_4992_5119_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_4992_5119_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD430 memory_reg_4992_5119_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_4992_5119_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_4992_5119_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD494 memory_reg_4992_5119_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_4992_5119_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_4992_5119_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_4992_5119_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD47 memory_reg_5120_5247_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5120_5247_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5120_5247_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5120_5247_0_0_i_1
       (.I0(memory_reg_1024_1151_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD111 memory_reg_5120_5247_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5120_5247_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5120_5247_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD175 memory_reg_5120_5247_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5120_5247_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5120_5247_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD239 memory_reg_5120_5247_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5120_5247_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_5120_5247_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD303 memory_reg_5120_5247_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5120_5247_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5120_5247_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD367 memory_reg_5120_5247_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5120_5247_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5120_5247_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD431 memory_reg_5120_5247_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5120_5247_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5120_5247_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD495 memory_reg_5120_5247_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5120_5247_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5120_5247_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5120_5247_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD11 memory_reg_512_639_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_512_639_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_512_639_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_512_639_0_0_i_1
       (.I0(memory_reg_512_639_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_512_639_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    memory_reg_512_639_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_512_639_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD75 memory_reg_512_639_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_512_639_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_512_639_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD139 memory_reg_512_639_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_512_639_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_512_639_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD203 memory_reg_512_639_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_512_639_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_512_639_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD267 memory_reg_512_639_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_512_639_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_512_639_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD331 memory_reg_512_639_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_512_639_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_512_639_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD395 memory_reg_512_639_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_512_639_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_512_639_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD459 memory_reg_512_639_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_512_639_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_512_639_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD48 memory_reg_5248_5375_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5248_5375_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5248_5375_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5248_5375_0_0_i_1
       (.I0(memory_reg_1152_1279_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD112 memory_reg_5248_5375_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5248_5375_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5248_5375_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD176 memory_reg_5248_5375_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5248_5375_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5248_5375_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD240 memory_reg_5248_5375_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5248_5375_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5248_5375_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD304 memory_reg_5248_5375_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5248_5375_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5248_5375_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD368 memory_reg_5248_5375_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5248_5375_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5248_5375_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD432 memory_reg_5248_5375_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5248_5375_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5248_5375_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD496 memory_reg_5248_5375_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5248_5375_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5248_5375_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5248_5375_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD49 memory_reg_5376_5503_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5376_5503_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5376_5503_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5376_5503_0_0_i_1
       (.I0(memory_reg_1280_1407_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD113 memory_reg_5376_5503_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5376_5503_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5376_5503_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD177 memory_reg_5376_5503_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5376_5503_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5376_5503_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD241 memory_reg_5376_5503_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5376_5503_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5376_5503_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD305 memory_reg_5376_5503_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5376_5503_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5376_5503_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD369 memory_reg_5376_5503_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5376_5503_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5376_5503_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD433 memory_reg_5376_5503_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5376_5503_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5376_5503_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD497 memory_reg_5376_5503_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5376_5503_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5376_5503_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5376_5503_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD50 memory_reg_5504_5631_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5504_5631_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5504_5631_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5504_5631_0_0_i_1
       (.I0(memory_reg_1408_1535_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD114 memory_reg_5504_5631_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5504_5631_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5504_5631_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD178 memory_reg_5504_5631_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5504_5631_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5504_5631_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD242 memory_reg_5504_5631_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5504_5631_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5504_5631_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD306 memory_reg_5504_5631_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5504_5631_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5504_5631_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD370 memory_reg_5504_5631_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5504_5631_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5504_5631_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD434 memory_reg_5504_5631_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5504_5631_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5504_5631_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD498 memory_reg_5504_5631_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5504_5631_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5504_5631_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5504_5631_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD51 memory_reg_5632_5759_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5632_5759_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5632_5759_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5632_5759_0_0_i_1
       (.I0(memory_reg_1536_1663_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD115 memory_reg_5632_5759_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5632_5759_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5632_5759_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD179 memory_reg_5632_5759_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5632_5759_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5632_5759_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD243 memory_reg_5632_5759_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5632_5759_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5632_5759_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD307 memory_reg_5632_5759_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5632_5759_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5632_5759_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD371 memory_reg_5632_5759_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5632_5759_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5632_5759_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD435 memory_reg_5632_5759_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5632_5759_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5632_5759_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD499 memory_reg_5632_5759_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5632_5759_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5632_5759_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5632_5759_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD52 memory_reg_5760_5887_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5760_5887_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5760_5887_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5760_5887_0_0_i_1
       (.I0(memory_reg_1664_1791_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD116 memory_reg_5760_5887_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5760_5887_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5760_5887_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD180 memory_reg_5760_5887_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5760_5887_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5760_5887_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD244 memory_reg_5760_5887_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__5_n_0 ,a_in[2:0]}),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5760_5887_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5760_5887_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD308 memory_reg_5760_5887_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5760_5887_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5760_5887_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD372 memory_reg_5760_5887_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5760_5887_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5760_5887_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD436 memory_reg_5760_5887_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5760_5887_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5760_5887_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD500 memory_reg_5760_5887_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5760_5887_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5760_5887_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5760_5887_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD53 memory_reg_5888_6015_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_5888_6015_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_5888_6015_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_5888_6015_0_0_i_1
       (.I0(memory_reg_1792_1919_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD117 memory_reg_5888_6015_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_5888_6015_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_5888_6015_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD181 memory_reg_5888_6015_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_5888_6015_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_5888_6015_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD245 memory_reg_5888_6015_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_5888_6015_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_5888_6015_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD309 memory_reg_5888_6015_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_5888_6015_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_5888_6015_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD373 memory_reg_5888_6015_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_5888_6015_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_5888_6015_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD437 memory_reg_5888_6015_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_5888_6015_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_5888_6015_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD501 memory_reg_5888_6015_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_5888_6015_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_5888_6015_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_5888_6015_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD54 memory_reg_6016_6143_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6016_6143_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6016_6143_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6016_6143_0_0_i_1
       (.I0(memory_reg_1920_2047_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD118 memory_reg_6016_6143_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6016_6143_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_6016_6143_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD182 memory_reg_6016_6143_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6016_6143_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6016_6143_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD246 memory_reg_6016_6143_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__5_n_0 ,a_in[2:0]}),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6016_6143_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6016_6143_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD310 memory_reg_6016_6143_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6016_6143_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6016_6143_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD374 memory_reg_6016_6143_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6016_6143_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6016_6143_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD438 memory_reg_6016_6143_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6016_6143_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_6016_6143_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD502 memory_reg_6016_6143_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6016_6143_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6016_6143_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6016_6143_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD55 memory_reg_6144_6271_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6144_6271_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6144_6271_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6144_6271_0_0_i_1
       (.I0(memory_reg_2048_2175_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD119 memory_reg_6144_6271_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6144_6271_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__8_n_0 }),
        .SPO(memory_reg_6144_6271_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD183 memory_reg_6144_6271_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6144_6271_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6144_6271_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD247 memory_reg_6144_6271_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6144_6271_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6144_6271_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD311 memory_reg_6144_6271_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6144_6271_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6144_6271_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD375 memory_reg_6144_6271_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6144_6271_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6144_6271_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD439 memory_reg_6144_6271_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6144_6271_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep__0_n_0 }),
        .SPO(memory_reg_6144_6271_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD503 memory_reg_6144_6271_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6144_6271_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6144_6271_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6144_6271_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD56 memory_reg_6272_6399_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6272_6399_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6272_6399_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6272_6399_0_0_i_1
       (.I0(memory_reg_2176_2303_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD120 memory_reg_6272_6399_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6272_6399_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6272_6399_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD184 memory_reg_6272_6399_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6272_6399_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6272_6399_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD248 memory_reg_6272_6399_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6272_6399_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6272_6399_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD312 memory_reg_6272_6399_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6272_6399_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6272_6399_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD376 memory_reg_6272_6399_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6272_6399_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6272_6399_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD440 memory_reg_6272_6399_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6272_6399_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6272_6399_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD504 memory_reg_6272_6399_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6272_6399_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6272_6399_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6272_6399_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD57 memory_reg_6400_6527_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6400_6527_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6400_6527_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6400_6527_0_0_i_1
       (.I0(memory_reg_2304_2431_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD121 memory_reg_6400_6527_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6400_6527_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6400_6527_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD185 memory_reg_6400_6527_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6400_6527_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6400_6527_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD249 memory_reg_6400_6527_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6400_6527_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6400_6527_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD313 memory_reg_6400_6527_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6400_6527_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6400_6527_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD377 memory_reg_6400_6527_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6400_6527_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6400_6527_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD441 memory_reg_6400_6527_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6400_6527_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6400_6527_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD505 memory_reg_6400_6527_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6400_6527_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6400_6527_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6400_6527_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD12 memory_reg_640_767_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_640_767_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_640_767_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_640_767_0_0_i_1
       (.I0(memory_reg_640_767_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_640_767_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    memory_reg_640_767_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_640_767_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD76 memory_reg_640_767_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_640_767_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_640_767_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD140 memory_reg_640_767_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_640_767_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_640_767_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD204 memory_reg_640_767_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_640_767_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_640_767_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD268 memory_reg_640_767_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_640_767_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_640_767_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD332 memory_reg_640_767_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_640_767_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_640_767_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD396 memory_reg_640_767_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_640_767_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_640_767_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD460 memory_reg_640_767_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_640_767_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_640_767_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD58 memory_reg_6528_6655_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6528_6655_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6528_6655_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6528_6655_0_0_i_1
       (.I0(memory_reg_2432_2559_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD122 memory_reg_6528_6655_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6528_6655_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6528_6655_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD186 memory_reg_6528_6655_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6528_6655_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6528_6655_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD250 memory_reg_6528_6655_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6528_6655_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6528_6655_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD314 memory_reg_6528_6655_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6528_6655_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6528_6655_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD378 memory_reg_6528_6655_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6528_6655_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6528_6655_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD442 memory_reg_6528_6655_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6528_6655_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6528_6655_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD506 memory_reg_6528_6655_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6528_6655_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6528_6655_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6528_6655_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD59 memory_reg_6656_6783_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6656_6783_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6656_6783_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6656_6783_0_0_i_1
       (.I0(memory_reg_2560_2687_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD123 memory_reg_6656_6783_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6656_6783_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6656_6783_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD187 memory_reg_6656_6783_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6656_6783_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6656_6783_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD251 memory_reg_6656_6783_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__5_n_0 ,a_in[2:0]}),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6656_6783_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6656_6783_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD315 memory_reg_6656_6783_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6656_6783_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6656_6783_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD379 memory_reg_6656_6783_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6656_6783_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6656_6783_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD443 memory_reg_6656_6783_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6656_6783_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6656_6783_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD507 memory_reg_6656_6783_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6656_6783_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6656_6783_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6656_6783_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD60 memory_reg_6784_6911_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6784_6911_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6784_6911_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6784_6911_0_0_i_1
       (.I0(memory_reg_2688_2815_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD124 memory_reg_6784_6911_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6784_6911_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6784_6911_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD188 memory_reg_6784_6911_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6784_6911_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6784_6911_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD252 memory_reg_6784_6911_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6784_6911_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6784_6911_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD316 memory_reg_6784_6911_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6784_6911_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6784_6911_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD380 memory_reg_6784_6911_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6784_6911_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6784_6911_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD444 memory_reg_6784_6911_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6784_6911_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6784_6911_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD508 memory_reg_6784_6911_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6784_6911_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6784_6911_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6784_6911_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD61 memory_reg_6912_7039_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_6912_7039_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_6912_7039_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_6912_7039_0_0_i_1
       (.I0(memory_reg_2816_2943_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD125 memory_reg_6912_7039_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_6912_7039_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_6912_7039_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD189 memory_reg_6912_7039_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_6912_7039_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_6912_7039_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD253 memory_reg_6912_7039_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_6912_7039_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_6912_7039_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD317 memory_reg_6912_7039_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_6912_7039_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_6912_7039_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD381 memory_reg_6912_7039_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_6912_7039_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_6912_7039_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD445 memory_reg_6912_7039_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_6912_7039_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_6912_7039_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD509 memory_reg_6912_7039_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_6912_7039_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_6912_7039_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_6912_7039_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD62 memory_reg_7040_7167_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7040_7167_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7040_7167_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7040_7167_0_0_i_1
       (.I0(memory_reg_2944_3071_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD126 memory_reg_7040_7167_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7040_7167_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7040_7167_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD190 memory_reg_7040_7167_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7040_7167_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7040_7167_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD254 memory_reg_7040_7167_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7040_7167_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7040_7167_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD318 memory_reg_7040_7167_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7040_7167_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_7040_7167_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD382 memory_reg_7040_7167_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7040_7167_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7040_7167_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD446 memory_reg_7040_7167_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7040_7167_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7040_7167_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD510 memory_reg_7040_7167_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7040_7167_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7040_7167_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7040_7167_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD63 memory_reg_7168_7295_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7168_7295_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7168_7295_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7168_7295_0_0_i_1
       (.I0(memory_reg_3072_3199_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD127 memory_reg_7168_7295_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7168_7295_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7168_7295_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD191 memory_reg_7168_7295_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7168_7295_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7168_7295_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD255 memory_reg_7168_7295_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7168_7295_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7168_7295_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD319 memory_reg_7168_7295_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7168_7295_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__3_n_0 }),
        .SPO(memory_reg_7168_7295_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD383 memory_reg_7168_7295_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7168_7295_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7168_7295_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD447 memory_reg_7168_7295_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7168_7295_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7168_7295_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD511 memory_reg_7168_7295_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7168_7295_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7168_7295_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7168_7295_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD64 memory_reg_7296_7423_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7296_7423_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7296_7423_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7296_7423_0_0_i_1
       (.I0(memory_reg_3200_3327_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD128 memory_reg_7296_7423_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7296_7423_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7296_7423_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD192 memory_reg_7296_7423_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7296_7423_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7296_7423_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD256 memory_reg_7296_7423_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7296_7423_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7296_7423_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD320 memory_reg_7296_7423_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7296_7423_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7296_7423_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD384 memory_reg_7296_7423_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7296_7423_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7296_7423_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD448 memory_reg_7296_7423_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7296_7423_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7296_7423_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD512 memory_reg_7296_7423_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7296_7423_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7296_7423_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7296_7423_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD65 memory_reg_7424_7551_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7424_7551_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7424_7551_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7424_7551_0_0_i_1
       (.I0(memory_reg_3328_3455_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD129 memory_reg_7424_7551_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7424_7551_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7424_7551_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD193 memory_reg_7424_7551_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7424_7551_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7424_7551_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD257 memory_reg_7424_7551_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7424_7551_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7424_7551_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD321 memory_reg_7424_7551_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7424_7551_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7424_7551_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD385 memory_reg_7424_7551_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7424_7551_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7424_7551_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD449 memory_reg_7424_7551_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7424_7551_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7424_7551_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD513 memory_reg_7424_7551_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7424_7551_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7424_7551_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7424_7551_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD66 memory_reg_7552_7679_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7552_7679_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7552_7679_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7552_7679_0_0_i_1
       (.I0(memory_reg_3456_3583_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD130 memory_reg_7552_7679_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7552_7679_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7552_7679_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD194 memory_reg_7552_7679_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7552_7679_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7552_7679_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD258 memory_reg_7552_7679_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7552_7679_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7552_7679_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD322 memory_reg_7552_7679_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7552_7679_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7552_7679_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD386 memory_reg_7552_7679_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7552_7679_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7552_7679_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD450 memory_reg_7552_7679_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7552_7679_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7552_7679_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD514 memory_reg_7552_7679_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7552_7679_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7552_7679_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7552_7679_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD67 memory_reg_7680_7807_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7680_7807_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7680_7807_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7680_7807_0_0_i_1
       (.I0(memory_reg_3584_3711_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD131 memory_reg_7680_7807_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7680_7807_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7680_7807_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD195 memory_reg_7680_7807_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7680_7807_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7680_7807_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD259 memory_reg_7680_7807_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7680_7807_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7680_7807_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD323 memory_reg_7680_7807_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7680_7807_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7680_7807_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD387 memory_reg_7680_7807_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7680_7807_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7680_7807_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD451 memory_reg_7680_7807_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7680_7807_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7680_7807_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD515 memory_reg_7680_7807_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7680_7807_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7680_7807_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7680_7807_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD13 memory_reg_768_895_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_768_895_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_768_895_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_768_895_0_0_i_1
       (.I0(memory_reg_768_895_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_768_895_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    memory_reg_768_895_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(write),
        .I3(a_in[7]),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_768_895_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD77 memory_reg_768_895_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_768_895_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_768_895_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD141 memory_reg_768_895_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_768_895_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_768_895_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD205 memory_reg_768_895_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_768_895_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_768_895_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD269 memory_reg_768_895_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_768_895_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_768_895_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD333 memory_reg_768_895_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_768_895_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_768_895_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD397 memory_reg_768_895_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_768_895_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_768_895_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD461 memory_reg_768_895_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_768_895_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_768_895_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD68 memory_reg_7808_7935_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7808_7935_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7808_7935_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7808_7935_0_0_i_1
       (.I0(memory_reg_3712_3839_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD132 memory_reg_7808_7935_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7808_7935_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7808_7935_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD196 memory_reg_7808_7935_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7808_7935_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7808_7935_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD260 memory_reg_7808_7935_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7808_7935_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7808_7935_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD324 memory_reg_7808_7935_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7808_7935_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7808_7935_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD388 memory_reg_7808_7935_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7808_7935_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7808_7935_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD452 memory_reg_7808_7935_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7808_7935_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7808_7935_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD516 memory_reg_7808_7935_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7808_7935_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7808_7935_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7808_7935_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD69 memory_reg_7936_8063_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_7936_8063_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_7936_8063_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_7936_8063_0_0_i_1
       (.I0(memory_reg_3840_3967_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD133 memory_reg_7936_8063_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_7936_8063_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_7936_8063_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD197 memory_reg_7936_8063_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_7936_8063_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_7936_8063_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD261 memory_reg_7936_8063_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_7936_8063_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_7936_8063_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD325 memory_reg_7936_8063_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_7936_8063_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_7936_8063_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD389 memory_reg_7936_8063_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_7936_8063_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_7936_8063_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD453 memory_reg_7936_8063_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_7936_8063_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_7936_8063_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD517 memory_reg_7936_8063_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_7936_8063_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_7936_8063_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_7936_8063_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD70 memory_reg_8064_8191_0_0
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [0]),
        .DPO(memory_reg_8064_8191_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_8064_8191_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    memory_reg_8064_8191_0_0_i_1
       (.I0(memory_reg_3968_4095_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD134 memory_reg_8064_8191_1_1
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__1_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [1]),
        .DPO(memory_reg_8064_8191_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__1_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_8064_8191_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD198 memory_reg_8064_8191_2_2
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__3_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [2]),
        .DPO(memory_reg_8064_8191_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__3_n_0 ,\a_out_reg[0]_rep__6_n_0 }),
        .SPO(memory_reg_8064_8191_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD262 memory_reg_8064_8191_3_3
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__5_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [3]),
        .DPO(memory_reg_8064_8191_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__5_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_8064_8191_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD326 memory_reg_8064_8191_4_4
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__7_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [4]),
        .DPO(memory_reg_8064_8191_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__7_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_8064_8191_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD390 memory_reg_8064_8191_5_5
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__9_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [5]),
        .DPO(memory_reg_8064_8191_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__9_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_8064_8191_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD454 memory_reg_8064_8191_6_6
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__11_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [6]),
        .DPO(memory_reg_8064_8191_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__11_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_8064_8191_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD518 memory_reg_8064_8191_7_7
       (.A({\a_in[6]_repN ,\a_in[5]_repN ,\a_in[4]_repN ,\a_in_reg[3]_rep__13_n_0 ,\a_in[2]_repN ,\a_in[1]_repN ,\a_in[0]_repN }),
        .D(\data_reg[7] [7]),
        .DPO(memory_reg_8064_8191_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__13_n_0 ,\a_out_reg_n_0_[0] }),
        .SPO(memory_reg_8064_8191_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_8064_8191_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD14 memory_reg_896_1023_0_0
       (.A({a_in[6:4],\a_in_reg[3]_rep__0_n_0 ,a_in[2:0]}),
        .D(\input [0]),
        .DPO(memory_reg_896_1023_0_0_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__0_n_0 ,\a_out_reg[0]_rep__10_n_0 }),
        .SPO(memory_reg_896_1023_0_0_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    memory_reg_896_1023_0_0_i_1
       (.I0(memory_reg_896_1023_0_0_i_2_n_0),
        .I1(a_in[12]),
        .O(memory_reg_896_1023_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    memory_reg_896_1023_0_0_i_2
       (.I0(a_in[10]),
        .I1(a_in[8]),
        .I2(a_in[7]),
        .I3(write),
        .I4(a_in[9]),
        .I5(a_in[11]),
        .O(memory_reg_896_1023_0_0_i_2_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD78 memory_reg_896_1023_1_1
       (.A({a_in[6:4],\a_in_reg[3]_rep__2_n_0 ,a_in[2:0]}),
        .D(\input [1]),
        .DPO(memory_reg_896_1023_1_1_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__2_n_0 ,\a_out_reg[0]_rep__9_n_0 }),
        .SPO(memory_reg_896_1023_1_1_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD142 memory_reg_896_1023_2_2
       (.A({a_in[6:4],\a_in_reg[3]_rep__4_n_0 ,a_in[2:0]}),
        .D(\input [2]),
        .DPO(memory_reg_896_1023_2_2_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__4_n_0 ,\a_out_reg[0]_rep__7_n_0 }),
        .SPO(memory_reg_896_1023_2_2_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD206 memory_reg_896_1023_3_3
       (.A({a_in[6:4],\a_in_reg[3]_rep__6_n_0 ,a_in[2:0]}),
        .D(\input [3]),
        .DPO(memory_reg_896_1023_3_3_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__6_n_0 ,\a_out_reg[0]_rep__5_n_0 }),
        .SPO(memory_reg_896_1023_3_3_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD270 memory_reg_896_1023_4_4
       (.A({a_in[6:4],\a_in_reg[3]_rep__8_n_0 ,a_in[2:0]}),
        .D(\input [4]),
        .DPO(memory_reg_896_1023_4_4_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__8_n_0 ,\a_out_reg[0]_rep__4_n_0 }),
        .SPO(memory_reg_896_1023_4_4_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD334 memory_reg_896_1023_5_5
       (.A({a_in[6:4],\a_in_reg[3]_rep__10_n_0 ,a_in[2:0]}),
        .D(\input [5]),
        .DPO(memory_reg_896_1023_5_5_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__10_n_0 ,\a_out_reg[0]_rep__2_n_0 }),
        .SPO(memory_reg_896_1023_5_5_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD398 memory_reg_896_1023_6_6
       (.A({a_in[6:4],\a_in_reg[3]_rep__12_n_0 ,a_in[2:0]}),
        .D(\input [6]),
        .DPO(memory_reg_896_1023_6_6_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__12_n_0 ,\a_out_reg[0]_rep__1_n_0 }),
        .SPO(memory_reg_896_1023_6_6_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD462 memory_reg_896_1023_7_7
       (.A({a_in[6:4],\a_in_reg[3]_rep__14_n_0 ,a_in[2:0]}),
        .D(\input [7]),
        .DPO(memory_reg_896_1023_7_7_n_0),
        .DPRA({\a_out_reg_n_0_[6] ,\a_out_reg_n_0_[5] ,\a_out_reg_n_0_[4] ,\a_out_reg_n_0_[3] ,\a_out_reg_n_0_[2] ,\a_out_reg[1]_rep__14_n_0 ,\a_out_reg[0]_rep_n_0 }),
        .SPO(memory_reg_896_1023_7_7_n_1),
        .WCLK(clk),
        .WE(memory_reg_896_1023_0_0_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[0]_i_1 
       (.I0(\data_reg[7] [0]),
        .I1(write),
        .I2(p_0_out[0]),
        .I3(empty),
        .I4(p_1_out[0]),
        .O(p_0_out1_out[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_2 
       (.I0(\output_reg[0]_i_4_n_0 ),
        .I1(\output_reg[0]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[0]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[0]_i_7_n_0 ),
        .O(p_0_out[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_28 
       (.I0(memory_reg_6528_6655_0_0_n_1),
        .I1(memory_reg_6400_6527_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_0_0_n_1),
        .O(\output[0]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_29 
       (.I0(memory_reg_7040_7167_0_0_n_1),
        .I1(memory_reg_6912_7039_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_0_0_n_1),
        .O(\output[0]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_3 
       (.I0(\output_reg[0]_i_8_n_0 ),
        .I1(\output_reg[0]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[0]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[0]_i_11_n_0 ),
        .O(p_1_out[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_30 
       (.I0(memory_reg_7552_7679_0_0_n_1),
        .I1(memory_reg_7424_7551_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_0_0_n_1),
        .O(\output[0]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_31 
       (.I0(memory_reg_8064_8191_0_0_n_1),
        .I1(memory_reg_7936_8063_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_0_0_n_1),
        .O(\output[0]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_32 
       (.I0(memory_reg_4480_4607_0_0_n_1),
        .I1(memory_reg_4352_4479_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_0_0_n_1),
        .O(\output[0]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_33 
       (.I0(memory_reg_4992_5119_0_0_n_1),
        .I1(memory_reg_4864_4991_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_0_0_n_1),
        .O(\output[0]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_34 
       (.I0(memory_reg_5504_5631_0_0_n_1),
        .I1(memory_reg_5376_5503_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_0_0_n_1),
        .O(\output[0]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_35 
       (.I0(memory_reg_6016_6143_0_0_n_1),
        .I1(memory_reg_5888_6015_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_0_0_n_1),
        .O(\output[0]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_36 
       (.I0(memory_reg_2432_2559_0_0_n_1),
        .I1(memory_reg_2304_2431_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_0_0_n_1),
        .O(\output[0]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_37 
       (.I0(memory_reg_2944_3071_0_0_n_1),
        .I1(memory_reg_2816_2943_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_0_0_n_1),
        .O(\output[0]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_38 
       (.I0(memory_reg_3456_3583_0_0_n_1),
        .I1(memory_reg_3328_3455_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_0_0_n_1),
        .O(\output[0]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_39 
       (.I0(memory_reg_3968_4095_0_0_n_1),
        .I1(memory_reg_3840_3967_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_0_0_n_1),
        .O(\output[0]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_40 
       (.I0(memory_reg_384_511_0_0_n_1),
        .I1(memory_reg_256_383_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_0_0_n_1),
        .O(\output[0]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_41 
       (.I0(memory_reg_896_1023_0_0_n_1),
        .I1(memory_reg_768_895_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_0_0_n_1),
        .O(\output[0]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_42 
       (.I0(memory_reg_1408_1535_0_0_n_1),
        .I1(memory_reg_1280_1407_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_0_0_n_1),
        .O(\output[0]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_43 
       (.I0(memory_reg_1920_2047_0_0_n_1),
        .I1(memory_reg_1792_1919_0_0_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_0_0_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_0_0_n_1),
        .O(\output[0]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_44 
       (.I0(memory_reg_6528_6655_0_0_n_0),
        .I1(memory_reg_6400_6527_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_0_0_n_0),
        .O(\output[0]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_45 
       (.I0(memory_reg_7040_7167_0_0_n_0),
        .I1(memory_reg_6912_7039_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_0_0_n_0),
        .O(\output[0]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_46 
       (.I0(memory_reg_7552_7679_0_0_n_0),
        .I1(memory_reg_7424_7551_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_0_0_n_0),
        .O(\output[0]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_47 
       (.I0(memory_reg_8064_8191_0_0_n_0),
        .I1(memory_reg_7936_8063_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_0_0_n_0),
        .O(\output[0]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_48 
       (.I0(memory_reg_4480_4607_0_0_n_0),
        .I1(memory_reg_4352_4479_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_0_0_n_0),
        .O(\output[0]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_49 
       (.I0(memory_reg_4992_5119_0_0_n_0),
        .I1(memory_reg_4864_4991_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_0_0_n_0),
        .O(\output[0]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_50 
       (.I0(memory_reg_5504_5631_0_0_n_0),
        .I1(memory_reg_5376_5503_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_0_0_n_0),
        .O(\output[0]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_51 
       (.I0(memory_reg_6016_6143_0_0_n_0),
        .I1(memory_reg_5888_6015_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_0_0_n_0),
        .O(\output[0]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_52 
       (.I0(memory_reg_2432_2559_0_0_n_0),
        .I1(memory_reg_2304_2431_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_0_0_n_0),
        .O(\output[0]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_53 
       (.I0(memory_reg_2944_3071_0_0_n_0),
        .I1(memory_reg_2816_2943_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_0_0_n_0),
        .O(\output[0]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_54 
       (.I0(memory_reg_3456_3583_0_0_n_0),
        .I1(memory_reg_3328_3455_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_0_0_n_0),
        .O(\output[0]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_55 
       (.I0(memory_reg_3968_4095_0_0_n_0),
        .I1(memory_reg_3840_3967_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_0_0_n_0),
        .O(\output[0]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_56 
       (.I0(memory_reg_384_511_0_0_n_0),
        .I1(memory_reg_256_383_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_0_0_n_0),
        .O(\output[0]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_57 
       (.I0(memory_reg_896_1023_0_0_n_0),
        .I1(memory_reg_768_895_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_0_0_n_0),
        .O(\output[0]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_58 
       (.I0(memory_reg_1408_1535_0_0_n_0),
        .I1(memory_reg_1280_1407_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_0_0_n_0),
        .O(\output[0]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[0]_i_59 
       (.I0(memory_reg_1920_2047_0_0_n_0),
        .I1(memory_reg_1792_1919_0_0_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_0_0_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_0_0_n_0),
        .O(\output[0]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[1]_i_1 
       (.I0(\data_reg[7] [1]),
        .I1(write),
        .I2(p_0_out[1]),
        .I3(empty),
        .I4(p_1_out[1]),
        .O(p_0_out1_out[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_2 
       (.I0(\output_reg[1]_i_4_n_0 ),
        .I1(\output_reg[1]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[1]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[1]_i_7_n_0 ),
        .O(p_0_out[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_28 
       (.I0(memory_reg_6528_6655_1_1_n_1),
        .I1(memory_reg_6400_6527_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_1_1_n_1),
        .O(\output[1]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_29 
       (.I0(memory_reg_7040_7167_1_1_n_1),
        .I1(memory_reg_6912_7039_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_1_1_n_1),
        .O(\output[1]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_3 
       (.I0(\output_reg[1]_i_8_n_0 ),
        .I1(\output_reg[1]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[1]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[1]_i_11_n_0 ),
        .O(p_1_out[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_30 
       (.I0(memory_reg_7552_7679_1_1_n_1),
        .I1(memory_reg_7424_7551_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_1_1_n_1),
        .O(\output[1]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_31 
       (.I0(memory_reg_8064_8191_1_1_n_1),
        .I1(memory_reg_7936_8063_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_1_1_n_1),
        .O(\output[1]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_32 
       (.I0(memory_reg_4480_4607_1_1_n_1),
        .I1(memory_reg_4352_4479_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_1_1_n_1),
        .O(\output[1]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_33 
       (.I0(memory_reg_4992_5119_1_1_n_1),
        .I1(memory_reg_4864_4991_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_1_1_n_1),
        .O(\output[1]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_34 
       (.I0(memory_reg_5504_5631_1_1_n_1),
        .I1(memory_reg_5376_5503_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_1_1_n_1),
        .O(\output[1]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_35 
       (.I0(memory_reg_6016_6143_1_1_n_1),
        .I1(memory_reg_5888_6015_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_1_1_n_1),
        .O(\output[1]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_36 
       (.I0(memory_reg_2432_2559_1_1_n_1),
        .I1(memory_reg_2304_2431_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_1_1_n_1),
        .O(\output[1]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_37 
       (.I0(memory_reg_2944_3071_1_1_n_1),
        .I1(memory_reg_2816_2943_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_1_1_n_1),
        .O(\output[1]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_38 
       (.I0(memory_reg_3456_3583_1_1_n_1),
        .I1(memory_reg_3328_3455_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_1_1_n_1),
        .O(\output[1]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_39 
       (.I0(memory_reg_3968_4095_1_1_n_1),
        .I1(memory_reg_3840_3967_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_1_1_n_1),
        .O(\output[1]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_40 
       (.I0(memory_reg_384_511_1_1_n_1),
        .I1(memory_reg_256_383_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_1_1_n_1),
        .O(\output[1]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_41 
       (.I0(memory_reg_896_1023_1_1_n_1),
        .I1(memory_reg_768_895_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_1_1_n_1),
        .O(\output[1]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_42 
       (.I0(memory_reg_1408_1535_1_1_n_1),
        .I1(memory_reg_1280_1407_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_1_1_n_1),
        .O(\output[1]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_43 
       (.I0(memory_reg_1920_2047_1_1_n_1),
        .I1(memory_reg_1792_1919_1_1_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_1_1_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_1_1_n_1),
        .O(\output[1]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_44 
       (.I0(memory_reg_6528_6655_1_1_n_0),
        .I1(memory_reg_6400_6527_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_1_1_n_0),
        .O(\output[1]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_45 
       (.I0(memory_reg_7040_7167_1_1_n_0),
        .I1(memory_reg_6912_7039_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_1_1_n_0),
        .O(\output[1]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_46 
       (.I0(memory_reg_7552_7679_1_1_n_0),
        .I1(memory_reg_7424_7551_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_1_1_n_0),
        .O(\output[1]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_47 
       (.I0(memory_reg_8064_8191_1_1_n_0),
        .I1(memory_reg_7936_8063_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_1_1_n_0),
        .O(\output[1]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_48 
       (.I0(memory_reg_4480_4607_1_1_n_0),
        .I1(memory_reg_4352_4479_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_1_1_n_0),
        .O(\output[1]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_49 
       (.I0(memory_reg_4992_5119_1_1_n_0),
        .I1(memory_reg_4864_4991_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_1_1_n_0),
        .O(\output[1]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_50 
       (.I0(memory_reg_5504_5631_1_1_n_0),
        .I1(memory_reg_5376_5503_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_1_1_n_0),
        .O(\output[1]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_51 
       (.I0(memory_reg_6016_6143_1_1_n_0),
        .I1(memory_reg_5888_6015_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_1_1_n_0),
        .O(\output[1]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_52 
       (.I0(memory_reg_2432_2559_1_1_n_0),
        .I1(memory_reg_2304_2431_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_1_1_n_0),
        .O(\output[1]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_53 
       (.I0(memory_reg_2944_3071_1_1_n_0),
        .I1(memory_reg_2816_2943_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_1_1_n_0),
        .O(\output[1]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_54 
       (.I0(memory_reg_3456_3583_1_1_n_0),
        .I1(memory_reg_3328_3455_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_1_1_n_0),
        .O(\output[1]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_55 
       (.I0(memory_reg_3968_4095_1_1_n_0),
        .I1(memory_reg_3840_3967_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_1_1_n_0),
        .O(\output[1]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_56 
       (.I0(memory_reg_384_511_1_1_n_0),
        .I1(memory_reg_256_383_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_1_1_n_0),
        .O(\output[1]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_57 
       (.I0(memory_reg_896_1023_1_1_n_0),
        .I1(memory_reg_768_895_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_1_1_n_0),
        .O(\output[1]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_58 
       (.I0(memory_reg_1408_1535_1_1_n_0),
        .I1(memory_reg_1280_1407_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_1_1_n_0),
        .O(\output[1]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[1]_i_59 
       (.I0(memory_reg_1920_2047_1_1_n_0),
        .I1(memory_reg_1792_1919_1_1_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_1_1_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_1_1_n_0),
        .O(\output[1]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[2]_i_1 
       (.I0(\data_reg[7] [2]),
        .I1(write),
        .I2(p_0_out[2]),
        .I3(empty),
        .I4(p_1_out[2]),
        .O(p_0_out1_out[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_2 
       (.I0(\output_reg[2]_i_4_n_0 ),
        .I1(\output_reg[2]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[2]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[2]_i_7_n_0 ),
        .O(p_0_out[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_28 
       (.I0(memory_reg_6528_6655_2_2_n_1),
        .I1(memory_reg_6400_6527_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_2_2_n_1),
        .O(\output[2]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_29 
       (.I0(memory_reg_7040_7167_2_2_n_1),
        .I1(memory_reg_6912_7039_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_2_2_n_1),
        .O(\output[2]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_3 
       (.I0(\output_reg[2]_i_8_n_0 ),
        .I1(\output_reg[2]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[2]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[2]_i_11_n_0 ),
        .O(p_1_out[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_30 
       (.I0(memory_reg_7552_7679_2_2_n_1),
        .I1(memory_reg_7424_7551_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_2_2_n_1),
        .O(\output[2]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_31 
       (.I0(memory_reg_8064_8191_2_2_n_1),
        .I1(memory_reg_7936_8063_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_2_2_n_1),
        .O(\output[2]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_32 
       (.I0(memory_reg_4480_4607_2_2_n_1),
        .I1(memory_reg_4352_4479_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_2_2_n_1),
        .O(\output[2]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_33 
       (.I0(memory_reg_4992_5119_2_2_n_1),
        .I1(memory_reg_4864_4991_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_2_2_n_1),
        .O(\output[2]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_34 
       (.I0(memory_reg_5504_5631_2_2_n_1),
        .I1(memory_reg_5376_5503_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_2_2_n_1),
        .O(\output[2]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_35 
       (.I0(memory_reg_6016_6143_2_2_n_1),
        .I1(memory_reg_5888_6015_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_2_2_n_1),
        .O(\output[2]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_36 
       (.I0(memory_reg_2432_2559_2_2_n_1),
        .I1(memory_reg_2304_2431_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_2_2_n_1),
        .O(\output[2]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_37 
       (.I0(memory_reg_2944_3071_2_2_n_1),
        .I1(memory_reg_2816_2943_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_2_2_n_1),
        .O(\output[2]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_38 
       (.I0(memory_reg_3456_3583_2_2_n_1),
        .I1(memory_reg_3328_3455_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_2_2_n_1),
        .O(\output[2]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_39 
       (.I0(memory_reg_3968_4095_2_2_n_1),
        .I1(memory_reg_3840_3967_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_2_2_n_1),
        .O(\output[2]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_40 
       (.I0(memory_reg_384_511_2_2_n_1),
        .I1(memory_reg_256_383_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_2_2_n_1),
        .O(\output[2]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_41 
       (.I0(memory_reg_896_1023_2_2_n_1),
        .I1(memory_reg_768_895_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_2_2_n_1),
        .O(\output[2]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_42 
       (.I0(memory_reg_1408_1535_2_2_n_1),
        .I1(memory_reg_1280_1407_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_2_2_n_1),
        .O(\output[2]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_43 
       (.I0(memory_reg_1920_2047_2_2_n_1),
        .I1(memory_reg_1792_1919_2_2_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_2_2_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_2_2_n_1),
        .O(\output[2]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_44 
       (.I0(memory_reg_6528_6655_2_2_n_0),
        .I1(memory_reg_6400_6527_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_2_2_n_0),
        .O(\output[2]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_45 
       (.I0(memory_reg_7040_7167_2_2_n_0),
        .I1(memory_reg_6912_7039_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_2_2_n_0),
        .O(\output[2]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_46 
       (.I0(memory_reg_7552_7679_2_2_n_0),
        .I1(memory_reg_7424_7551_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_2_2_n_0),
        .O(\output[2]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_47 
       (.I0(memory_reg_8064_8191_2_2_n_0),
        .I1(memory_reg_7936_8063_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_2_2_n_0),
        .O(\output[2]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_48 
       (.I0(memory_reg_4480_4607_2_2_n_0),
        .I1(memory_reg_4352_4479_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_2_2_n_0),
        .O(\output[2]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_49 
       (.I0(memory_reg_4992_5119_2_2_n_0),
        .I1(memory_reg_4864_4991_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_2_2_n_0),
        .O(\output[2]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_50 
       (.I0(memory_reg_5504_5631_2_2_n_0),
        .I1(memory_reg_5376_5503_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_2_2_n_0),
        .O(\output[2]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_51 
       (.I0(memory_reg_6016_6143_2_2_n_0),
        .I1(memory_reg_5888_6015_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_2_2_n_0),
        .O(\output[2]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_52 
       (.I0(memory_reg_2432_2559_2_2_n_0),
        .I1(memory_reg_2304_2431_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_2_2_n_0),
        .O(\output[2]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_53 
       (.I0(memory_reg_2944_3071_2_2_n_0),
        .I1(memory_reg_2816_2943_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_2_2_n_0),
        .O(\output[2]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_54 
       (.I0(memory_reg_3456_3583_2_2_n_0),
        .I1(memory_reg_3328_3455_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_2_2_n_0),
        .O(\output[2]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_55 
       (.I0(memory_reg_3968_4095_2_2_n_0),
        .I1(memory_reg_3840_3967_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_2_2_n_0),
        .O(\output[2]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_56 
       (.I0(memory_reg_384_511_2_2_n_0),
        .I1(memory_reg_256_383_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_2_2_n_0),
        .O(\output[2]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_57 
       (.I0(memory_reg_896_1023_2_2_n_0),
        .I1(memory_reg_768_895_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_2_2_n_0),
        .O(\output[2]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_58 
       (.I0(memory_reg_1408_1535_2_2_n_0),
        .I1(memory_reg_1280_1407_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_2_2_n_0),
        .O(\output[2]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[2]_i_59 
       (.I0(memory_reg_1920_2047_2_2_n_0),
        .I1(memory_reg_1792_1919_2_2_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_2_2_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_2_2_n_0),
        .O(\output[2]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[3]_i_1 
       (.I0(\data_reg[7] [3]),
        .I1(write),
        .I2(p_0_out[3]),
        .I3(empty),
        .I4(p_1_out[3]),
        .O(p_0_out1_out[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_2 
       (.I0(\output_reg[3]_i_4_n_0 ),
        .I1(\output_reg[3]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[3]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[3]_i_7_n_0 ),
        .O(p_0_out[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_28 
       (.I0(memory_reg_6528_6655_3_3_n_1),
        .I1(memory_reg_6400_6527_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_3_3_n_1),
        .O(\output[3]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_29 
       (.I0(memory_reg_7040_7167_3_3_n_1),
        .I1(memory_reg_6912_7039_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_3_3_n_1),
        .O(\output[3]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_3 
       (.I0(\output_reg[3]_i_8_n_0 ),
        .I1(\output_reg[3]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[3]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[3]_i_11_n_0 ),
        .O(p_1_out[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_30 
       (.I0(memory_reg_7552_7679_3_3_n_1),
        .I1(memory_reg_7424_7551_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_3_3_n_1),
        .O(\output[3]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_31 
       (.I0(memory_reg_8064_8191_3_3_n_1),
        .I1(memory_reg_7936_8063_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_3_3_n_1),
        .O(\output[3]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_32 
       (.I0(memory_reg_4480_4607_3_3_n_1),
        .I1(memory_reg_4352_4479_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_3_3_n_1),
        .O(\output[3]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_33 
       (.I0(memory_reg_4992_5119_3_3_n_1),
        .I1(memory_reg_4864_4991_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_3_3_n_1),
        .O(\output[3]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_34 
       (.I0(memory_reg_5504_5631_3_3_n_1),
        .I1(memory_reg_5376_5503_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_3_3_n_1),
        .O(\output[3]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_35 
       (.I0(memory_reg_6016_6143_3_3_n_1),
        .I1(memory_reg_5888_6015_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_3_3_n_1),
        .O(\output[3]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_36 
       (.I0(memory_reg_2432_2559_3_3_n_1),
        .I1(memory_reg_2304_2431_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_3_3_n_1),
        .O(\output[3]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_37 
       (.I0(memory_reg_2944_3071_3_3_n_1),
        .I1(memory_reg_2816_2943_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_3_3_n_1),
        .O(\output[3]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_38 
       (.I0(memory_reg_3456_3583_3_3_n_1),
        .I1(memory_reg_3328_3455_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_3_3_n_1),
        .O(\output[3]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_39 
       (.I0(memory_reg_3968_4095_3_3_n_1),
        .I1(memory_reg_3840_3967_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_3_3_n_1),
        .O(\output[3]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_40 
       (.I0(memory_reg_384_511_3_3_n_1),
        .I1(memory_reg_256_383_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_3_3_n_1),
        .O(\output[3]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_41 
       (.I0(memory_reg_896_1023_3_3_n_1),
        .I1(memory_reg_768_895_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_3_3_n_1),
        .O(\output[3]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_42 
       (.I0(memory_reg_1408_1535_3_3_n_1),
        .I1(memory_reg_1280_1407_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_3_3_n_1),
        .O(\output[3]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_43 
       (.I0(memory_reg_1920_2047_3_3_n_1),
        .I1(memory_reg_1792_1919_3_3_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_3_3_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_3_3_n_1),
        .O(\output[3]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_44 
       (.I0(memory_reg_6528_6655_3_3_n_0),
        .I1(memory_reg_6400_6527_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_3_3_n_0),
        .O(\output[3]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_45 
       (.I0(memory_reg_7040_7167_3_3_n_0),
        .I1(memory_reg_6912_7039_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_3_3_n_0),
        .O(\output[3]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_46 
       (.I0(memory_reg_7552_7679_3_3_n_0),
        .I1(memory_reg_7424_7551_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_3_3_n_0),
        .O(\output[3]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_47 
       (.I0(memory_reg_8064_8191_3_3_n_0),
        .I1(memory_reg_7936_8063_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_3_3_n_0),
        .O(\output[3]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_48 
       (.I0(memory_reg_4480_4607_3_3_n_0),
        .I1(memory_reg_4352_4479_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_3_3_n_0),
        .O(\output[3]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_49 
       (.I0(memory_reg_4992_5119_3_3_n_0),
        .I1(memory_reg_4864_4991_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_3_3_n_0),
        .O(\output[3]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_50 
       (.I0(memory_reg_5504_5631_3_3_n_0),
        .I1(memory_reg_5376_5503_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_3_3_n_0),
        .O(\output[3]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_51 
       (.I0(memory_reg_6016_6143_3_3_n_0),
        .I1(memory_reg_5888_6015_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_3_3_n_0),
        .O(\output[3]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_52 
       (.I0(memory_reg_2432_2559_3_3_n_0),
        .I1(memory_reg_2304_2431_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_3_3_n_0),
        .O(\output[3]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_53 
       (.I0(memory_reg_2944_3071_3_3_n_0),
        .I1(memory_reg_2816_2943_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_3_3_n_0),
        .O(\output[3]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_54 
       (.I0(memory_reg_3456_3583_3_3_n_0),
        .I1(memory_reg_3328_3455_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_3_3_n_0),
        .O(\output[3]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_55 
       (.I0(memory_reg_3968_4095_3_3_n_0),
        .I1(memory_reg_3840_3967_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_3_3_n_0),
        .O(\output[3]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_56 
       (.I0(memory_reg_384_511_3_3_n_0),
        .I1(memory_reg_256_383_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_3_3_n_0),
        .O(\output[3]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_57 
       (.I0(memory_reg_896_1023_3_3_n_0),
        .I1(memory_reg_768_895_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_3_3_n_0),
        .O(\output[3]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_58 
       (.I0(memory_reg_1408_1535_3_3_n_0),
        .I1(memory_reg_1280_1407_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_3_3_n_0),
        .O(\output[3]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[3]_i_59 
       (.I0(memory_reg_1920_2047_3_3_n_0),
        .I1(memory_reg_1792_1919_3_3_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_3_3_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_3_3_n_0),
        .O(\output[3]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[4]_i_1 
       (.I0(\data_reg[7] [4]),
        .I1(write),
        .I2(p_0_out[4]),
        .I3(empty),
        .I4(p_1_out[4]),
        .O(p_0_out1_out[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_2 
       (.I0(\output_reg[4]_i_4_n_0 ),
        .I1(\output_reg[4]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[4]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[4]_i_7_n_0 ),
        .O(p_0_out[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_28 
       (.I0(memory_reg_6528_6655_4_4_n_1),
        .I1(memory_reg_6400_6527_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_4_4_n_1),
        .O(\output[4]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_29 
       (.I0(memory_reg_7040_7167_4_4_n_1),
        .I1(memory_reg_6912_7039_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_4_4_n_1),
        .O(\output[4]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_3 
       (.I0(\output_reg[4]_i_8_n_0 ),
        .I1(\output_reg[4]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[4]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[4]_i_11_n_0 ),
        .O(p_1_out[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_30 
       (.I0(memory_reg_7552_7679_4_4_n_1),
        .I1(memory_reg_7424_7551_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_4_4_n_1),
        .O(\output[4]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_31 
       (.I0(memory_reg_8064_8191_4_4_n_1),
        .I1(memory_reg_7936_8063_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_4_4_n_1),
        .O(\output[4]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_32 
       (.I0(memory_reg_4480_4607_4_4_n_1),
        .I1(memory_reg_4352_4479_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_4_4_n_1),
        .O(\output[4]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_33 
       (.I0(memory_reg_4992_5119_4_4_n_1),
        .I1(memory_reg_4864_4991_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_4_4_n_1),
        .O(\output[4]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_34 
       (.I0(memory_reg_5504_5631_4_4_n_1),
        .I1(memory_reg_5376_5503_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_4_4_n_1),
        .O(\output[4]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_35 
       (.I0(memory_reg_6016_6143_4_4_n_1),
        .I1(memory_reg_5888_6015_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_4_4_n_1),
        .O(\output[4]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_36 
       (.I0(memory_reg_2432_2559_4_4_n_1),
        .I1(memory_reg_2304_2431_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_4_4_n_1),
        .O(\output[4]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_37 
       (.I0(memory_reg_2944_3071_4_4_n_1),
        .I1(memory_reg_2816_2943_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_4_4_n_1),
        .O(\output[4]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_38 
       (.I0(memory_reg_3456_3583_4_4_n_1),
        .I1(memory_reg_3328_3455_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_4_4_n_1),
        .O(\output[4]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_39 
       (.I0(memory_reg_3968_4095_4_4_n_1),
        .I1(memory_reg_3840_3967_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_4_4_n_1),
        .O(\output[4]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_40 
       (.I0(memory_reg_384_511_4_4_n_1),
        .I1(memory_reg_256_383_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_4_4_n_1),
        .O(\output[4]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_41 
       (.I0(memory_reg_896_1023_4_4_n_1),
        .I1(memory_reg_768_895_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_4_4_n_1),
        .O(\output[4]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_42 
       (.I0(memory_reg_1408_1535_4_4_n_1),
        .I1(memory_reg_1280_1407_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_4_4_n_1),
        .O(\output[4]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_43 
       (.I0(memory_reg_1920_2047_4_4_n_1),
        .I1(memory_reg_1792_1919_4_4_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_4_4_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_4_4_n_1),
        .O(\output[4]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_44 
       (.I0(memory_reg_6528_6655_4_4_n_0),
        .I1(memory_reg_6400_6527_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_4_4_n_0),
        .O(\output[4]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_45 
       (.I0(memory_reg_7040_7167_4_4_n_0),
        .I1(memory_reg_6912_7039_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_4_4_n_0),
        .O(\output[4]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_46 
       (.I0(memory_reg_7552_7679_4_4_n_0),
        .I1(memory_reg_7424_7551_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_4_4_n_0),
        .O(\output[4]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_47 
       (.I0(memory_reg_8064_8191_4_4_n_0),
        .I1(memory_reg_7936_8063_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_4_4_n_0),
        .O(\output[4]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_48 
       (.I0(memory_reg_4480_4607_4_4_n_0),
        .I1(memory_reg_4352_4479_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_4_4_n_0),
        .O(\output[4]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_49 
       (.I0(memory_reg_4992_5119_4_4_n_0),
        .I1(memory_reg_4864_4991_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_4_4_n_0),
        .O(\output[4]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_50 
       (.I0(memory_reg_5504_5631_4_4_n_0),
        .I1(memory_reg_5376_5503_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_4_4_n_0),
        .O(\output[4]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_51 
       (.I0(memory_reg_6016_6143_4_4_n_0),
        .I1(memory_reg_5888_6015_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_4_4_n_0),
        .O(\output[4]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_52 
       (.I0(memory_reg_2432_2559_4_4_n_0),
        .I1(memory_reg_2304_2431_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_4_4_n_0),
        .O(\output[4]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_53 
       (.I0(memory_reg_2944_3071_4_4_n_0),
        .I1(memory_reg_2816_2943_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_4_4_n_0),
        .O(\output[4]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_54 
       (.I0(memory_reg_3456_3583_4_4_n_0),
        .I1(memory_reg_3328_3455_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_4_4_n_0),
        .O(\output[4]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_55 
       (.I0(memory_reg_3968_4095_4_4_n_0),
        .I1(memory_reg_3840_3967_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_4_4_n_0),
        .O(\output[4]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_56 
       (.I0(memory_reg_384_511_4_4_n_0),
        .I1(memory_reg_256_383_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_4_4_n_0),
        .O(\output[4]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_57 
       (.I0(memory_reg_896_1023_4_4_n_0),
        .I1(memory_reg_768_895_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_4_4_n_0),
        .O(\output[4]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_58 
       (.I0(memory_reg_1408_1535_4_4_n_0),
        .I1(memory_reg_1280_1407_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_4_4_n_0),
        .O(\output[4]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[4]_i_59 
       (.I0(memory_reg_1920_2047_4_4_n_0),
        .I1(memory_reg_1792_1919_4_4_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_4_4_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_4_4_n_0),
        .O(\output[4]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[5]_i_1 
       (.I0(\data_reg[7] [5]),
        .I1(write),
        .I2(p_0_out[5]),
        .I3(empty),
        .I4(p_1_out[5]),
        .O(p_0_out1_out[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_2 
       (.I0(\output_reg[5]_i_4_n_0 ),
        .I1(\output_reg[5]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[5]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[5]_i_7_n_0 ),
        .O(p_0_out[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_28 
       (.I0(memory_reg_6528_6655_5_5_n_1),
        .I1(memory_reg_6400_6527_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_5_5_n_1),
        .O(\output[5]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_29 
       (.I0(memory_reg_7040_7167_5_5_n_1),
        .I1(memory_reg_6912_7039_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_5_5_n_1),
        .O(\output[5]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_3 
       (.I0(\output_reg[5]_i_8_n_0 ),
        .I1(\output_reg[5]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[5]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[5]_i_11_n_0 ),
        .O(p_1_out[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_30 
       (.I0(memory_reg_7552_7679_5_5_n_1),
        .I1(memory_reg_7424_7551_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_5_5_n_1),
        .O(\output[5]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_31 
       (.I0(memory_reg_8064_8191_5_5_n_1),
        .I1(memory_reg_7936_8063_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_5_5_n_1),
        .O(\output[5]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_32 
       (.I0(memory_reg_4480_4607_5_5_n_1),
        .I1(memory_reg_4352_4479_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_5_5_n_1),
        .O(\output[5]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_33 
       (.I0(memory_reg_4992_5119_5_5_n_1),
        .I1(memory_reg_4864_4991_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_5_5_n_1),
        .O(\output[5]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_34 
       (.I0(memory_reg_5504_5631_5_5_n_1),
        .I1(memory_reg_5376_5503_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_5_5_n_1),
        .O(\output[5]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_35 
       (.I0(memory_reg_6016_6143_5_5_n_1),
        .I1(memory_reg_5888_6015_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_5_5_n_1),
        .O(\output[5]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_36 
       (.I0(memory_reg_2432_2559_5_5_n_1),
        .I1(memory_reg_2304_2431_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_5_5_n_1),
        .O(\output[5]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_37 
       (.I0(memory_reg_2944_3071_5_5_n_1),
        .I1(memory_reg_2816_2943_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_5_5_n_1),
        .O(\output[5]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_38 
       (.I0(memory_reg_3456_3583_5_5_n_1),
        .I1(memory_reg_3328_3455_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_5_5_n_1),
        .O(\output[5]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_39 
       (.I0(memory_reg_3968_4095_5_5_n_1),
        .I1(memory_reg_3840_3967_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_5_5_n_1),
        .O(\output[5]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_40 
       (.I0(memory_reg_384_511_5_5_n_1),
        .I1(memory_reg_256_383_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_5_5_n_1),
        .O(\output[5]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_41 
       (.I0(memory_reg_896_1023_5_5_n_1),
        .I1(memory_reg_768_895_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_5_5_n_1),
        .O(\output[5]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_42 
       (.I0(memory_reg_1408_1535_5_5_n_1),
        .I1(memory_reg_1280_1407_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_5_5_n_1),
        .O(\output[5]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_43 
       (.I0(memory_reg_1920_2047_5_5_n_1),
        .I1(memory_reg_1792_1919_5_5_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_5_5_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_5_5_n_1),
        .O(\output[5]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_44 
       (.I0(memory_reg_6528_6655_5_5_n_0),
        .I1(memory_reg_6400_6527_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_5_5_n_0),
        .O(\output[5]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_45 
       (.I0(memory_reg_7040_7167_5_5_n_0),
        .I1(memory_reg_6912_7039_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_5_5_n_0),
        .O(\output[5]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_46 
       (.I0(memory_reg_7552_7679_5_5_n_0),
        .I1(memory_reg_7424_7551_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_5_5_n_0),
        .O(\output[5]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_47 
       (.I0(memory_reg_8064_8191_5_5_n_0),
        .I1(memory_reg_7936_8063_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_5_5_n_0),
        .O(\output[5]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_48 
       (.I0(memory_reg_4480_4607_5_5_n_0),
        .I1(memory_reg_4352_4479_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_5_5_n_0),
        .O(\output[5]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_49 
       (.I0(memory_reg_4992_5119_5_5_n_0),
        .I1(memory_reg_4864_4991_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_5_5_n_0),
        .O(\output[5]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_50 
       (.I0(memory_reg_5504_5631_5_5_n_0),
        .I1(memory_reg_5376_5503_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_5_5_n_0),
        .O(\output[5]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_51 
       (.I0(memory_reg_6016_6143_5_5_n_0),
        .I1(memory_reg_5888_6015_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_5_5_n_0),
        .O(\output[5]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_52 
       (.I0(memory_reg_2432_2559_5_5_n_0),
        .I1(memory_reg_2304_2431_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_5_5_n_0),
        .O(\output[5]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_53 
       (.I0(memory_reg_2944_3071_5_5_n_0),
        .I1(memory_reg_2816_2943_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_5_5_n_0),
        .O(\output[5]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_54 
       (.I0(memory_reg_3456_3583_5_5_n_0),
        .I1(memory_reg_3328_3455_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_5_5_n_0),
        .O(\output[5]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_55 
       (.I0(memory_reg_3968_4095_5_5_n_0),
        .I1(memory_reg_3840_3967_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_5_5_n_0),
        .O(\output[5]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_56 
       (.I0(memory_reg_384_511_5_5_n_0),
        .I1(memory_reg_256_383_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_5_5_n_0),
        .O(\output[5]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_57 
       (.I0(memory_reg_896_1023_5_5_n_0),
        .I1(memory_reg_768_895_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_5_5_n_0),
        .O(\output[5]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_58 
       (.I0(memory_reg_1408_1535_5_5_n_0),
        .I1(memory_reg_1280_1407_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_5_5_n_0),
        .O(\output[5]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[5]_i_59 
       (.I0(memory_reg_1920_2047_5_5_n_0),
        .I1(memory_reg_1792_1919_5_5_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_5_5_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_5_5_n_0),
        .O(\output[5]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[6]_i_1 
       (.I0(\data_reg[7] [6]),
        .I1(write),
        .I2(p_0_out[6]),
        .I3(empty),
        .I4(p_1_out[6]),
        .O(p_0_out1_out[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_2 
       (.I0(\output_reg[6]_i_4_n_0 ),
        .I1(\output_reg[6]_i_5_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[6]_i_6_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[6]_i_7_n_0 ),
        .O(p_0_out[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_28 
       (.I0(memory_reg_6528_6655_6_6_n_1),
        .I1(memory_reg_6400_6527_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_6_6_n_1),
        .O(\output[6]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_29 
       (.I0(memory_reg_7040_7167_6_6_n_1),
        .I1(memory_reg_6912_7039_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_6_6_n_1),
        .O(\output[6]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_3 
       (.I0(\output_reg[6]_i_8_n_0 ),
        .I1(\output_reg[6]_i_9_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[6]_i_10_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[6]_i_11_n_0 ),
        .O(p_1_out[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_30 
       (.I0(memory_reg_7552_7679_6_6_n_1),
        .I1(memory_reg_7424_7551_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_6_6_n_1),
        .O(\output[6]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_31 
       (.I0(memory_reg_8064_8191_6_6_n_1),
        .I1(memory_reg_7936_8063_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_6_6_n_1),
        .O(\output[6]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_32 
       (.I0(memory_reg_4480_4607_6_6_n_1),
        .I1(memory_reg_4352_4479_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_6_6_n_1),
        .O(\output[6]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_33 
       (.I0(memory_reg_4992_5119_6_6_n_1),
        .I1(memory_reg_4864_4991_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_6_6_n_1),
        .O(\output[6]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_34 
       (.I0(memory_reg_5504_5631_6_6_n_1),
        .I1(memory_reg_5376_5503_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_6_6_n_1),
        .O(\output[6]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_35 
       (.I0(memory_reg_6016_6143_6_6_n_1),
        .I1(memory_reg_5888_6015_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_6_6_n_1),
        .O(\output[6]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_36 
       (.I0(memory_reg_2432_2559_6_6_n_1),
        .I1(memory_reg_2304_2431_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_6_6_n_1),
        .O(\output[6]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_37 
       (.I0(memory_reg_2944_3071_6_6_n_1),
        .I1(memory_reg_2816_2943_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_6_6_n_1),
        .O(\output[6]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_38 
       (.I0(memory_reg_3456_3583_6_6_n_1),
        .I1(memory_reg_3328_3455_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_6_6_n_1),
        .O(\output[6]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_39 
       (.I0(memory_reg_3968_4095_6_6_n_1),
        .I1(memory_reg_3840_3967_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_6_6_n_1),
        .O(\output[6]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_40 
       (.I0(memory_reg_384_511_6_6_n_1),
        .I1(memory_reg_256_383_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_6_6_n_1),
        .O(\output[6]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_41 
       (.I0(memory_reg_896_1023_6_6_n_1),
        .I1(memory_reg_768_895_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_6_6_n_1),
        .O(\output[6]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_42 
       (.I0(memory_reg_1408_1535_6_6_n_1),
        .I1(memory_reg_1280_1407_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_6_6_n_1),
        .O(\output[6]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_43 
       (.I0(memory_reg_1920_2047_6_6_n_1),
        .I1(memory_reg_1792_1919_6_6_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_6_6_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_6_6_n_1),
        .O(\output[6]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_44 
       (.I0(memory_reg_6528_6655_6_6_n_0),
        .I1(memory_reg_6400_6527_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_6_6_n_0),
        .O(\output[6]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_45 
       (.I0(memory_reg_7040_7167_6_6_n_0),
        .I1(memory_reg_6912_7039_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_6_6_n_0),
        .O(\output[6]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_46 
       (.I0(memory_reg_7552_7679_6_6_n_0),
        .I1(memory_reg_7424_7551_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_6_6_n_0),
        .O(\output[6]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_47 
       (.I0(memory_reg_8064_8191_6_6_n_0),
        .I1(memory_reg_7936_8063_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_6_6_n_0),
        .O(\output[6]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_48 
       (.I0(memory_reg_4480_4607_6_6_n_0),
        .I1(memory_reg_4352_4479_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_6_6_n_0),
        .O(\output[6]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_49 
       (.I0(memory_reg_4992_5119_6_6_n_0),
        .I1(memory_reg_4864_4991_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_6_6_n_0),
        .O(\output[6]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_50 
       (.I0(memory_reg_5504_5631_6_6_n_0),
        .I1(memory_reg_5376_5503_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_6_6_n_0),
        .O(\output[6]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_51 
       (.I0(memory_reg_6016_6143_6_6_n_0),
        .I1(memory_reg_5888_6015_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_6_6_n_0),
        .O(\output[6]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_52 
       (.I0(memory_reg_2432_2559_6_6_n_0),
        .I1(memory_reg_2304_2431_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_6_6_n_0),
        .O(\output[6]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_53 
       (.I0(memory_reg_2944_3071_6_6_n_0),
        .I1(memory_reg_2816_2943_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_6_6_n_0),
        .O(\output[6]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_54 
       (.I0(memory_reg_3456_3583_6_6_n_0),
        .I1(memory_reg_3328_3455_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_6_6_n_0),
        .O(\output[6]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_55 
       (.I0(memory_reg_3968_4095_6_6_n_0),
        .I1(memory_reg_3840_3967_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_6_6_n_0),
        .O(\output[6]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_56 
       (.I0(memory_reg_384_511_6_6_n_0),
        .I1(memory_reg_256_383_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_6_6_n_0),
        .O(\output[6]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_57 
       (.I0(memory_reg_896_1023_6_6_n_0),
        .I1(memory_reg_768_895_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_6_6_n_0),
        .O(\output[6]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_58 
       (.I0(memory_reg_1408_1535_6_6_n_0),
        .I1(memory_reg_1280_1407_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_6_6_n_0),
        .O(\output[6]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[6]_i_59 
       (.I0(memory_reg_1920_2047_6_6_n_0),
        .I1(memory_reg_1792_1919_6_6_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_6_6_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_6_6_n_0),
        .O(\output[6]_i_59_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \output[7]_i_1 
       (.I0(out1_stb),
        .I1(input_rs232_rx_ack),
        .I2(empty),
        .O(read));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \output[7]_i_2 
       (.I0(\data_reg[7] [7]),
        .I1(write),
        .I2(p_0_out[7]),
        .I3(empty),
        .I4(p_1_out[7]),
        .O(p_0_out1_out[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_29 
       (.I0(memory_reg_6528_6655_7_7_n_1),
        .I1(memory_reg_6400_6527_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6272_6399_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6144_6271_7_7_n_1),
        .O(\output[7]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_3 
       (.I0(\output_reg[7]_i_5_n_0 ),
        .I1(\output_reg[7]_i_6_n_0 ),
        .I2(a_in[12]),
        .I3(\output_reg[7]_i_7_n_0 ),
        .I4(a_in[11]),
        .I5(\output_reg[7]_i_8_n_0 ),
        .O(p_0_out[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_30 
       (.I0(memory_reg_7040_7167_7_7_n_1),
        .I1(memory_reg_6912_7039_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_6784_6911_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_6656_6783_7_7_n_1),
        .O(\output[7]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_31 
       (.I0(memory_reg_7552_7679_7_7_n_1),
        .I1(memory_reg_7424_7551_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7296_7423_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7168_7295_7_7_n_1),
        .O(\output[7]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_32 
       (.I0(memory_reg_8064_8191_7_7_n_1),
        .I1(memory_reg_7936_8063_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_7808_7935_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_7680_7807_7_7_n_1),
        .O(\output[7]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_33 
       (.I0(memory_reg_4480_4607_7_7_n_1),
        .I1(memory_reg_4352_4479_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4224_4351_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4096_4223_7_7_n_1),
        .O(\output[7]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_34 
       (.I0(memory_reg_4992_5119_7_7_n_1),
        .I1(memory_reg_4864_4991_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_4736_4863_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_4608_4735_7_7_n_1),
        .O(\output[7]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_35 
       (.I0(memory_reg_5504_5631_7_7_n_1),
        .I1(memory_reg_5376_5503_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5248_5375_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5120_5247_7_7_n_1),
        .O(\output[7]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_36 
       (.I0(memory_reg_6016_6143_7_7_n_1),
        .I1(memory_reg_5888_6015_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_5760_5887_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_5632_5759_7_7_n_1),
        .O(\output[7]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_37 
       (.I0(memory_reg_2432_2559_7_7_n_1),
        .I1(memory_reg_2304_2431_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2176_2303_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2048_2175_7_7_n_1),
        .O(\output[7]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_38 
       (.I0(memory_reg_2944_3071_7_7_n_1),
        .I1(memory_reg_2816_2943_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_2688_2815_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_2560_2687_7_7_n_1),
        .O(\output[7]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_39 
       (.I0(memory_reg_3456_3583_7_7_n_1),
        .I1(memory_reg_3328_3455_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3200_3327_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3072_3199_7_7_n_1),
        .O(\output[7]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_4 
       (.I0(\output_reg[7]_i_9_n_0 ),
        .I1(\output_reg[7]_i_10_n_0 ),
        .I2(\a_out_reg_n_0_[12] ),
        .I3(\output_reg[7]_i_11_n_0 ),
        .I4(\a_out_reg_n_0_[11] ),
        .I5(\output_reg[7]_i_12_n_0 ),
        .O(p_1_out[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_40 
       (.I0(memory_reg_3968_4095_7_7_n_1),
        .I1(memory_reg_3840_3967_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_3712_3839_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_3584_3711_7_7_n_1),
        .O(\output[7]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_41 
       (.I0(memory_reg_384_511_7_7_n_1),
        .I1(memory_reg_256_383_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_128_255_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_0_127_7_7_n_1),
        .O(\output[7]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_42 
       (.I0(memory_reg_896_1023_7_7_n_1),
        .I1(memory_reg_768_895_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_640_767_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_512_639_7_7_n_1),
        .O(\output[7]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_43 
       (.I0(memory_reg_1408_1535_7_7_n_1),
        .I1(memory_reg_1280_1407_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1152_1279_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1024_1151_7_7_n_1),
        .O(\output[7]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_44 
       (.I0(memory_reg_1920_2047_7_7_n_1),
        .I1(memory_reg_1792_1919_7_7_n_1),
        .I2(a_in[8]),
        .I3(memory_reg_1664_1791_7_7_n_1),
        .I4(a_in[7]),
        .I5(memory_reg_1536_1663_7_7_n_1),
        .O(\output[7]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_45 
       (.I0(memory_reg_6528_6655_7_7_n_0),
        .I1(memory_reg_6400_6527_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6272_6399_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6144_6271_7_7_n_0),
        .O(\output[7]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_46 
       (.I0(memory_reg_7040_7167_7_7_n_0),
        .I1(memory_reg_6912_7039_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_6784_6911_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_6656_6783_7_7_n_0),
        .O(\output[7]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_47 
       (.I0(memory_reg_7552_7679_7_7_n_0),
        .I1(memory_reg_7424_7551_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7296_7423_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7168_7295_7_7_n_0),
        .O(\output[7]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_48 
       (.I0(memory_reg_8064_8191_7_7_n_0),
        .I1(memory_reg_7936_8063_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_7808_7935_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_7680_7807_7_7_n_0),
        .O(\output[7]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_49 
       (.I0(memory_reg_4480_4607_7_7_n_0),
        .I1(memory_reg_4352_4479_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4224_4351_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4096_4223_7_7_n_0),
        .O(\output[7]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_50 
       (.I0(memory_reg_4992_5119_7_7_n_0),
        .I1(memory_reg_4864_4991_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_4736_4863_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_4608_4735_7_7_n_0),
        .O(\output[7]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_51 
       (.I0(memory_reg_5504_5631_7_7_n_0),
        .I1(memory_reg_5376_5503_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5248_5375_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5120_5247_7_7_n_0),
        .O(\output[7]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_52 
       (.I0(memory_reg_6016_6143_7_7_n_0),
        .I1(memory_reg_5888_6015_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_5760_5887_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_5632_5759_7_7_n_0),
        .O(\output[7]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_53 
       (.I0(memory_reg_2432_2559_7_7_n_0),
        .I1(memory_reg_2304_2431_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2176_2303_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2048_2175_7_7_n_0),
        .O(\output[7]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_54 
       (.I0(memory_reg_2944_3071_7_7_n_0),
        .I1(memory_reg_2816_2943_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_2688_2815_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_2560_2687_7_7_n_0),
        .O(\output[7]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_55 
       (.I0(memory_reg_3456_3583_7_7_n_0),
        .I1(memory_reg_3328_3455_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3200_3327_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3072_3199_7_7_n_0),
        .O(\output[7]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_56 
       (.I0(memory_reg_3968_4095_7_7_n_0),
        .I1(memory_reg_3840_3967_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_3712_3839_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_3584_3711_7_7_n_0),
        .O(\output[7]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_57 
       (.I0(memory_reg_384_511_7_7_n_0),
        .I1(memory_reg_256_383_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_128_255_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_0_127_7_7_n_0),
        .O(\output[7]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_58 
       (.I0(memory_reg_896_1023_7_7_n_0),
        .I1(memory_reg_768_895_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_640_767_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_512_639_7_7_n_0),
        .O(\output[7]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_59 
       (.I0(memory_reg_1408_1535_7_7_n_0),
        .I1(memory_reg_1280_1407_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1152_1279_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1024_1151_7_7_n_0),
        .O(\output[7]_i_59_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \output[7]_i_60 
       (.I0(memory_reg_1920_2047_7_7_n_0),
        .I1(memory_reg_1792_1919_7_7_n_0),
        .I2(\a_out_reg_n_0_[8] ),
        .I3(memory_reg_1664_1791_7_7_n_0),
        .I4(\a_out_reg_n_0_[7] ),
        .I5(memory_reg_1536_1663_7_7_n_0),
        .O(\output[7]_i_60_n_0 ));
  FDRE \output_reg[0] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[0]),
        .Q(\output [0]),
        .R(1'b0));
  MUXF8 \output_reg[0]_i_10 
       (.I0(\output_reg[0]_i_24_n_0 ),
        .I1(\output_reg[0]_i_25_n_0 ),
        .O(\output_reg[0]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[0]_i_11 
       (.I0(\output_reg[0]_i_26_n_0 ),
        .I1(\output_reg[0]_i_27_n_0 ),
        .O(\output_reg[0]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[0]_i_12 
       (.I0(\output[0]_i_28_n_0 ),
        .I1(\output[0]_i_29_n_0 ),
        .O(\output_reg[0]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_13 
       (.I0(\output[0]_i_30_n_0 ),
        .I1(\output[0]_i_31_n_0 ),
        .O(\output_reg[0]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_14 
       (.I0(\output[0]_i_32_n_0 ),
        .I1(\output[0]_i_33_n_0 ),
        .O(\output_reg[0]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_15 
       (.I0(\output[0]_i_34_n_0 ),
        .I1(\output[0]_i_35_n_0 ),
        .O(\output_reg[0]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_16 
       (.I0(\output[0]_i_36_n_0 ),
        .I1(\output[0]_i_37_n_0 ),
        .O(\output_reg[0]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_17 
       (.I0(\output[0]_i_38_n_0 ),
        .I1(\output[0]_i_39_n_0 ),
        .O(\output_reg[0]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_18 
       (.I0(\output[0]_i_40_n_0 ),
        .I1(\output[0]_i_41_n_0 ),
        .O(\output_reg[0]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_19 
       (.I0(\output[0]_i_42_n_0 ),
        .I1(\output[0]_i_43_n_0 ),
        .O(\output_reg[0]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[0]_i_20 
       (.I0(\output[0]_i_44_n_0 ),
        .I1(\output[0]_i_45_n_0 ),
        .O(\output_reg[0]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_21 
       (.I0(\output[0]_i_46_n_0 ),
        .I1(\output[0]_i_47_n_0 ),
        .O(\output_reg[0]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_22 
       (.I0(\output[0]_i_48_n_0 ),
        .I1(\output[0]_i_49_n_0 ),
        .O(\output_reg[0]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_23 
       (.I0(\output[0]_i_50_n_0 ),
        .I1(\output[0]_i_51_n_0 ),
        .O(\output_reg[0]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_24 
       (.I0(\output[0]_i_52_n_0 ),
        .I1(\output[0]_i_53_n_0 ),
        .O(\output_reg[0]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_25 
       (.I0(\output[0]_i_54_n_0 ),
        .I1(\output[0]_i_55_n_0 ),
        .O(\output_reg[0]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_26 
       (.I0(\output[0]_i_56_n_0 ),
        .I1(\output[0]_i_57_n_0 ),
        .O(\output_reg[0]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[0]_i_27 
       (.I0(\output[0]_i_58_n_0 ),
        .I1(\output[0]_i_59_n_0 ),
        .O(\output_reg[0]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[0]_i_4 
       (.I0(\output_reg[0]_i_12_n_0 ),
        .I1(\output_reg[0]_i_13_n_0 ),
        .O(\output_reg[0]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[0]_i_5 
       (.I0(\output_reg[0]_i_14_n_0 ),
        .I1(\output_reg[0]_i_15_n_0 ),
        .O(\output_reg[0]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[0]_i_6 
       (.I0(\output_reg[0]_i_16_n_0 ),
        .I1(\output_reg[0]_i_17_n_0 ),
        .O(\output_reg[0]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[0]_i_7 
       (.I0(\output_reg[0]_i_18_n_0 ),
        .I1(\output_reg[0]_i_19_n_0 ),
        .O(\output_reg[0]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[0]_i_8 
       (.I0(\output_reg[0]_i_20_n_0 ),
        .I1(\output_reg[0]_i_21_n_0 ),
        .O(\output_reg[0]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[0]_i_9 
       (.I0(\output_reg[0]_i_22_n_0 ),
        .I1(\output_reg[0]_i_23_n_0 ),
        .O(\output_reg[0]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[1] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[1]),
        .Q(\output [1]),
        .R(1'b0));
  MUXF8 \output_reg[1]_i_10 
       (.I0(\output_reg[1]_i_24_n_0 ),
        .I1(\output_reg[1]_i_25_n_0 ),
        .O(\output_reg[1]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[1]_i_11 
       (.I0(\output_reg[1]_i_26_n_0 ),
        .I1(\output_reg[1]_i_27_n_0 ),
        .O(\output_reg[1]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[1]_i_12 
       (.I0(\output[1]_i_28_n_0 ),
        .I1(\output[1]_i_29_n_0 ),
        .O(\output_reg[1]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_13 
       (.I0(\output[1]_i_30_n_0 ),
        .I1(\output[1]_i_31_n_0 ),
        .O(\output_reg[1]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_14 
       (.I0(\output[1]_i_32_n_0 ),
        .I1(\output[1]_i_33_n_0 ),
        .O(\output_reg[1]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_15 
       (.I0(\output[1]_i_34_n_0 ),
        .I1(\output[1]_i_35_n_0 ),
        .O(\output_reg[1]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_16 
       (.I0(\output[1]_i_36_n_0 ),
        .I1(\output[1]_i_37_n_0 ),
        .O(\output_reg[1]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_17 
       (.I0(\output[1]_i_38_n_0 ),
        .I1(\output[1]_i_39_n_0 ),
        .O(\output_reg[1]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_18 
       (.I0(\output[1]_i_40_n_0 ),
        .I1(\output[1]_i_41_n_0 ),
        .O(\output_reg[1]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_19 
       (.I0(\output[1]_i_42_n_0 ),
        .I1(\output[1]_i_43_n_0 ),
        .O(\output_reg[1]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[1]_i_20 
       (.I0(\output[1]_i_44_n_0 ),
        .I1(\output[1]_i_45_n_0 ),
        .O(\output_reg[1]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_21 
       (.I0(\output[1]_i_46_n_0 ),
        .I1(\output[1]_i_47_n_0 ),
        .O(\output_reg[1]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_22 
       (.I0(\output[1]_i_48_n_0 ),
        .I1(\output[1]_i_49_n_0 ),
        .O(\output_reg[1]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_23 
       (.I0(\output[1]_i_50_n_0 ),
        .I1(\output[1]_i_51_n_0 ),
        .O(\output_reg[1]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_24 
       (.I0(\output[1]_i_52_n_0 ),
        .I1(\output[1]_i_53_n_0 ),
        .O(\output_reg[1]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_25 
       (.I0(\output[1]_i_54_n_0 ),
        .I1(\output[1]_i_55_n_0 ),
        .O(\output_reg[1]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_26 
       (.I0(\output[1]_i_56_n_0 ),
        .I1(\output[1]_i_57_n_0 ),
        .O(\output_reg[1]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[1]_i_27 
       (.I0(\output[1]_i_58_n_0 ),
        .I1(\output[1]_i_59_n_0 ),
        .O(\output_reg[1]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[1]_i_4 
       (.I0(\output_reg[1]_i_12_n_0 ),
        .I1(\output_reg[1]_i_13_n_0 ),
        .O(\output_reg[1]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[1]_i_5 
       (.I0(\output_reg[1]_i_14_n_0 ),
        .I1(\output_reg[1]_i_15_n_0 ),
        .O(\output_reg[1]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[1]_i_6 
       (.I0(\output_reg[1]_i_16_n_0 ),
        .I1(\output_reg[1]_i_17_n_0 ),
        .O(\output_reg[1]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[1]_i_7 
       (.I0(\output_reg[1]_i_18_n_0 ),
        .I1(\output_reg[1]_i_19_n_0 ),
        .O(\output_reg[1]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[1]_i_8 
       (.I0(\output_reg[1]_i_20_n_0 ),
        .I1(\output_reg[1]_i_21_n_0 ),
        .O(\output_reg[1]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[1]_i_9 
       (.I0(\output_reg[1]_i_22_n_0 ),
        .I1(\output_reg[1]_i_23_n_0 ),
        .O(\output_reg[1]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[2] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[2]),
        .Q(\output [2]),
        .R(1'b0));
  MUXF8 \output_reg[2]_i_10 
       (.I0(\output_reg[2]_i_24_n_0 ),
        .I1(\output_reg[2]_i_25_n_0 ),
        .O(\output_reg[2]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[2]_i_11 
       (.I0(\output_reg[2]_i_26_n_0 ),
        .I1(\output_reg[2]_i_27_n_0 ),
        .O(\output_reg[2]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[2]_i_12 
       (.I0(\output[2]_i_28_n_0 ),
        .I1(\output[2]_i_29_n_0 ),
        .O(\output_reg[2]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_13 
       (.I0(\output[2]_i_30_n_0 ),
        .I1(\output[2]_i_31_n_0 ),
        .O(\output_reg[2]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_14 
       (.I0(\output[2]_i_32_n_0 ),
        .I1(\output[2]_i_33_n_0 ),
        .O(\output_reg[2]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_15 
       (.I0(\output[2]_i_34_n_0 ),
        .I1(\output[2]_i_35_n_0 ),
        .O(\output_reg[2]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_16 
       (.I0(\output[2]_i_36_n_0 ),
        .I1(\output[2]_i_37_n_0 ),
        .O(\output_reg[2]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_17 
       (.I0(\output[2]_i_38_n_0 ),
        .I1(\output[2]_i_39_n_0 ),
        .O(\output_reg[2]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_18 
       (.I0(\output[2]_i_40_n_0 ),
        .I1(\output[2]_i_41_n_0 ),
        .O(\output_reg[2]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_19 
       (.I0(\output[2]_i_42_n_0 ),
        .I1(\output[2]_i_43_n_0 ),
        .O(\output_reg[2]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[2]_i_20 
       (.I0(\output[2]_i_44_n_0 ),
        .I1(\output[2]_i_45_n_0 ),
        .O(\output_reg[2]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_21 
       (.I0(\output[2]_i_46_n_0 ),
        .I1(\output[2]_i_47_n_0 ),
        .O(\output_reg[2]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_22 
       (.I0(\output[2]_i_48_n_0 ),
        .I1(\output[2]_i_49_n_0 ),
        .O(\output_reg[2]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_23 
       (.I0(\output[2]_i_50_n_0 ),
        .I1(\output[2]_i_51_n_0 ),
        .O(\output_reg[2]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_24 
       (.I0(\output[2]_i_52_n_0 ),
        .I1(\output[2]_i_53_n_0 ),
        .O(\output_reg[2]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_25 
       (.I0(\output[2]_i_54_n_0 ),
        .I1(\output[2]_i_55_n_0 ),
        .O(\output_reg[2]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_26 
       (.I0(\output[2]_i_56_n_0 ),
        .I1(\output[2]_i_57_n_0 ),
        .O(\output_reg[2]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[2]_i_27 
       (.I0(\output[2]_i_58_n_0 ),
        .I1(\output[2]_i_59_n_0 ),
        .O(\output_reg[2]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[2]_i_4 
       (.I0(\output_reg[2]_i_12_n_0 ),
        .I1(\output_reg[2]_i_13_n_0 ),
        .O(\output_reg[2]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[2]_i_5 
       (.I0(\output_reg[2]_i_14_n_0 ),
        .I1(\output_reg[2]_i_15_n_0 ),
        .O(\output_reg[2]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[2]_i_6 
       (.I0(\output_reg[2]_i_16_n_0 ),
        .I1(\output_reg[2]_i_17_n_0 ),
        .O(\output_reg[2]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[2]_i_7 
       (.I0(\output_reg[2]_i_18_n_0 ),
        .I1(\output_reg[2]_i_19_n_0 ),
        .O(\output_reg[2]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[2]_i_8 
       (.I0(\output_reg[2]_i_20_n_0 ),
        .I1(\output_reg[2]_i_21_n_0 ),
        .O(\output_reg[2]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[2]_i_9 
       (.I0(\output_reg[2]_i_22_n_0 ),
        .I1(\output_reg[2]_i_23_n_0 ),
        .O(\output_reg[2]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[3] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[3]),
        .Q(\output [3]),
        .R(1'b0));
  MUXF8 \output_reg[3]_i_10 
       (.I0(\output_reg[3]_i_24_n_0 ),
        .I1(\output_reg[3]_i_25_n_0 ),
        .O(\output_reg[3]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[3]_i_11 
       (.I0(\output_reg[3]_i_26_n_0 ),
        .I1(\output_reg[3]_i_27_n_0 ),
        .O(\output_reg[3]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[3]_i_12 
       (.I0(\output[3]_i_28_n_0 ),
        .I1(\output[3]_i_29_n_0 ),
        .O(\output_reg[3]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_13 
       (.I0(\output[3]_i_30_n_0 ),
        .I1(\output[3]_i_31_n_0 ),
        .O(\output_reg[3]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_14 
       (.I0(\output[3]_i_32_n_0 ),
        .I1(\output[3]_i_33_n_0 ),
        .O(\output_reg[3]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_15 
       (.I0(\output[3]_i_34_n_0 ),
        .I1(\output[3]_i_35_n_0 ),
        .O(\output_reg[3]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_16 
       (.I0(\output[3]_i_36_n_0 ),
        .I1(\output[3]_i_37_n_0 ),
        .O(\output_reg[3]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_17 
       (.I0(\output[3]_i_38_n_0 ),
        .I1(\output[3]_i_39_n_0 ),
        .O(\output_reg[3]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_18 
       (.I0(\output[3]_i_40_n_0 ),
        .I1(\output[3]_i_41_n_0 ),
        .O(\output_reg[3]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_19 
       (.I0(\output[3]_i_42_n_0 ),
        .I1(\output[3]_i_43_n_0 ),
        .O(\output_reg[3]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[3]_i_20 
       (.I0(\output[3]_i_44_n_0 ),
        .I1(\output[3]_i_45_n_0 ),
        .O(\output_reg[3]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_21 
       (.I0(\output[3]_i_46_n_0 ),
        .I1(\output[3]_i_47_n_0 ),
        .O(\output_reg[3]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_22 
       (.I0(\output[3]_i_48_n_0 ),
        .I1(\output[3]_i_49_n_0 ),
        .O(\output_reg[3]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_23 
       (.I0(\output[3]_i_50_n_0 ),
        .I1(\output[3]_i_51_n_0 ),
        .O(\output_reg[3]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_24 
       (.I0(\output[3]_i_52_n_0 ),
        .I1(\output[3]_i_53_n_0 ),
        .O(\output_reg[3]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_25 
       (.I0(\output[3]_i_54_n_0 ),
        .I1(\output[3]_i_55_n_0 ),
        .O(\output_reg[3]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_26 
       (.I0(\output[3]_i_56_n_0 ),
        .I1(\output[3]_i_57_n_0 ),
        .O(\output_reg[3]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[3]_i_27 
       (.I0(\output[3]_i_58_n_0 ),
        .I1(\output[3]_i_59_n_0 ),
        .O(\output_reg[3]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[3]_i_4 
       (.I0(\output_reg[3]_i_12_n_0 ),
        .I1(\output_reg[3]_i_13_n_0 ),
        .O(\output_reg[3]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[3]_i_5 
       (.I0(\output_reg[3]_i_14_n_0 ),
        .I1(\output_reg[3]_i_15_n_0 ),
        .O(\output_reg[3]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[3]_i_6 
       (.I0(\output_reg[3]_i_16_n_0 ),
        .I1(\output_reg[3]_i_17_n_0 ),
        .O(\output_reg[3]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[3]_i_7 
       (.I0(\output_reg[3]_i_18_n_0 ),
        .I1(\output_reg[3]_i_19_n_0 ),
        .O(\output_reg[3]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[3]_i_8 
       (.I0(\output_reg[3]_i_20_n_0 ),
        .I1(\output_reg[3]_i_21_n_0 ),
        .O(\output_reg[3]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[3]_i_9 
       (.I0(\output_reg[3]_i_22_n_0 ),
        .I1(\output_reg[3]_i_23_n_0 ),
        .O(\output_reg[3]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[4] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[4]),
        .Q(\output [4]),
        .R(1'b0));
  MUXF8 \output_reg[4]_i_10 
       (.I0(\output_reg[4]_i_24_n_0 ),
        .I1(\output_reg[4]_i_25_n_0 ),
        .O(\output_reg[4]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[4]_i_11 
       (.I0(\output_reg[4]_i_26_n_0 ),
        .I1(\output_reg[4]_i_27_n_0 ),
        .O(\output_reg[4]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[4]_i_12 
       (.I0(\output[4]_i_28_n_0 ),
        .I1(\output[4]_i_29_n_0 ),
        .O(\output_reg[4]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_13 
       (.I0(\output[4]_i_30_n_0 ),
        .I1(\output[4]_i_31_n_0 ),
        .O(\output_reg[4]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_14 
       (.I0(\output[4]_i_32_n_0 ),
        .I1(\output[4]_i_33_n_0 ),
        .O(\output_reg[4]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_15 
       (.I0(\output[4]_i_34_n_0 ),
        .I1(\output[4]_i_35_n_0 ),
        .O(\output_reg[4]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_16 
       (.I0(\output[4]_i_36_n_0 ),
        .I1(\output[4]_i_37_n_0 ),
        .O(\output_reg[4]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_17 
       (.I0(\output[4]_i_38_n_0 ),
        .I1(\output[4]_i_39_n_0 ),
        .O(\output_reg[4]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_18 
       (.I0(\output[4]_i_40_n_0 ),
        .I1(\output[4]_i_41_n_0 ),
        .O(\output_reg[4]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_19 
       (.I0(\output[4]_i_42_n_0 ),
        .I1(\output[4]_i_43_n_0 ),
        .O(\output_reg[4]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[4]_i_20 
       (.I0(\output[4]_i_44_n_0 ),
        .I1(\output[4]_i_45_n_0 ),
        .O(\output_reg[4]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_21 
       (.I0(\output[4]_i_46_n_0 ),
        .I1(\output[4]_i_47_n_0 ),
        .O(\output_reg[4]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_22 
       (.I0(\output[4]_i_48_n_0 ),
        .I1(\output[4]_i_49_n_0 ),
        .O(\output_reg[4]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_23 
       (.I0(\output[4]_i_50_n_0 ),
        .I1(\output[4]_i_51_n_0 ),
        .O(\output_reg[4]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_24 
       (.I0(\output[4]_i_52_n_0 ),
        .I1(\output[4]_i_53_n_0 ),
        .O(\output_reg[4]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_25 
       (.I0(\output[4]_i_54_n_0 ),
        .I1(\output[4]_i_55_n_0 ),
        .O(\output_reg[4]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_26 
       (.I0(\output[4]_i_56_n_0 ),
        .I1(\output[4]_i_57_n_0 ),
        .O(\output_reg[4]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[4]_i_27 
       (.I0(\output[4]_i_58_n_0 ),
        .I1(\output[4]_i_59_n_0 ),
        .O(\output_reg[4]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[4]_i_4 
       (.I0(\output_reg[4]_i_12_n_0 ),
        .I1(\output_reg[4]_i_13_n_0 ),
        .O(\output_reg[4]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[4]_i_5 
       (.I0(\output_reg[4]_i_14_n_0 ),
        .I1(\output_reg[4]_i_15_n_0 ),
        .O(\output_reg[4]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[4]_i_6 
       (.I0(\output_reg[4]_i_16_n_0 ),
        .I1(\output_reg[4]_i_17_n_0 ),
        .O(\output_reg[4]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[4]_i_7 
       (.I0(\output_reg[4]_i_18_n_0 ),
        .I1(\output_reg[4]_i_19_n_0 ),
        .O(\output_reg[4]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[4]_i_8 
       (.I0(\output_reg[4]_i_20_n_0 ),
        .I1(\output_reg[4]_i_21_n_0 ),
        .O(\output_reg[4]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[4]_i_9 
       (.I0(\output_reg[4]_i_22_n_0 ),
        .I1(\output_reg[4]_i_23_n_0 ),
        .O(\output_reg[4]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[5] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[5]),
        .Q(\output [5]),
        .R(1'b0));
  MUXF8 \output_reg[5]_i_10 
       (.I0(\output_reg[5]_i_24_n_0 ),
        .I1(\output_reg[5]_i_25_n_0 ),
        .O(\output_reg[5]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[5]_i_11 
       (.I0(\output_reg[5]_i_26_n_0 ),
        .I1(\output_reg[5]_i_27_n_0 ),
        .O(\output_reg[5]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[5]_i_12 
       (.I0(\output[5]_i_28_n_0 ),
        .I1(\output[5]_i_29_n_0 ),
        .O(\output_reg[5]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_13 
       (.I0(\output[5]_i_30_n_0 ),
        .I1(\output[5]_i_31_n_0 ),
        .O(\output_reg[5]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_14 
       (.I0(\output[5]_i_32_n_0 ),
        .I1(\output[5]_i_33_n_0 ),
        .O(\output_reg[5]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_15 
       (.I0(\output[5]_i_34_n_0 ),
        .I1(\output[5]_i_35_n_0 ),
        .O(\output_reg[5]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_16 
       (.I0(\output[5]_i_36_n_0 ),
        .I1(\output[5]_i_37_n_0 ),
        .O(\output_reg[5]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_17 
       (.I0(\output[5]_i_38_n_0 ),
        .I1(\output[5]_i_39_n_0 ),
        .O(\output_reg[5]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_18 
       (.I0(\output[5]_i_40_n_0 ),
        .I1(\output[5]_i_41_n_0 ),
        .O(\output_reg[5]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_19 
       (.I0(\output[5]_i_42_n_0 ),
        .I1(\output[5]_i_43_n_0 ),
        .O(\output_reg[5]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[5]_i_20 
       (.I0(\output[5]_i_44_n_0 ),
        .I1(\output[5]_i_45_n_0 ),
        .O(\output_reg[5]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_21 
       (.I0(\output[5]_i_46_n_0 ),
        .I1(\output[5]_i_47_n_0 ),
        .O(\output_reg[5]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_22 
       (.I0(\output[5]_i_48_n_0 ),
        .I1(\output[5]_i_49_n_0 ),
        .O(\output_reg[5]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_23 
       (.I0(\output[5]_i_50_n_0 ),
        .I1(\output[5]_i_51_n_0 ),
        .O(\output_reg[5]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_24 
       (.I0(\output[5]_i_52_n_0 ),
        .I1(\output[5]_i_53_n_0 ),
        .O(\output_reg[5]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_25 
       (.I0(\output[5]_i_54_n_0 ),
        .I1(\output[5]_i_55_n_0 ),
        .O(\output_reg[5]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_26 
       (.I0(\output[5]_i_56_n_0 ),
        .I1(\output[5]_i_57_n_0 ),
        .O(\output_reg[5]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[5]_i_27 
       (.I0(\output[5]_i_58_n_0 ),
        .I1(\output[5]_i_59_n_0 ),
        .O(\output_reg[5]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[5]_i_4 
       (.I0(\output_reg[5]_i_12_n_0 ),
        .I1(\output_reg[5]_i_13_n_0 ),
        .O(\output_reg[5]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[5]_i_5 
       (.I0(\output_reg[5]_i_14_n_0 ),
        .I1(\output_reg[5]_i_15_n_0 ),
        .O(\output_reg[5]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[5]_i_6 
       (.I0(\output_reg[5]_i_16_n_0 ),
        .I1(\output_reg[5]_i_17_n_0 ),
        .O(\output_reg[5]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[5]_i_7 
       (.I0(\output_reg[5]_i_18_n_0 ),
        .I1(\output_reg[5]_i_19_n_0 ),
        .O(\output_reg[5]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[5]_i_8 
       (.I0(\output_reg[5]_i_20_n_0 ),
        .I1(\output_reg[5]_i_21_n_0 ),
        .O(\output_reg[5]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[5]_i_9 
       (.I0(\output_reg[5]_i_22_n_0 ),
        .I1(\output_reg[5]_i_23_n_0 ),
        .O(\output_reg[5]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[6] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[6]),
        .Q(\output [6]),
        .R(1'b0));
  MUXF8 \output_reg[6]_i_10 
       (.I0(\output_reg[6]_i_24_n_0 ),
        .I1(\output_reg[6]_i_25_n_0 ),
        .O(\output_reg[6]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[6]_i_11 
       (.I0(\output_reg[6]_i_26_n_0 ),
        .I1(\output_reg[6]_i_27_n_0 ),
        .O(\output_reg[6]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[6]_i_12 
       (.I0(\output[6]_i_28_n_0 ),
        .I1(\output[6]_i_29_n_0 ),
        .O(\output_reg[6]_i_12_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_13 
       (.I0(\output[6]_i_30_n_0 ),
        .I1(\output[6]_i_31_n_0 ),
        .O(\output_reg[6]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_14 
       (.I0(\output[6]_i_32_n_0 ),
        .I1(\output[6]_i_33_n_0 ),
        .O(\output_reg[6]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_15 
       (.I0(\output[6]_i_34_n_0 ),
        .I1(\output[6]_i_35_n_0 ),
        .O(\output_reg[6]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_16 
       (.I0(\output[6]_i_36_n_0 ),
        .I1(\output[6]_i_37_n_0 ),
        .O(\output_reg[6]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_17 
       (.I0(\output[6]_i_38_n_0 ),
        .I1(\output[6]_i_39_n_0 ),
        .O(\output_reg[6]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_18 
       (.I0(\output[6]_i_40_n_0 ),
        .I1(\output[6]_i_41_n_0 ),
        .O(\output_reg[6]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_19 
       (.I0(\output[6]_i_42_n_0 ),
        .I1(\output[6]_i_43_n_0 ),
        .O(\output_reg[6]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[6]_i_20 
       (.I0(\output[6]_i_44_n_0 ),
        .I1(\output[6]_i_45_n_0 ),
        .O(\output_reg[6]_i_20_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_21 
       (.I0(\output[6]_i_46_n_0 ),
        .I1(\output[6]_i_47_n_0 ),
        .O(\output_reg[6]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_22 
       (.I0(\output[6]_i_48_n_0 ),
        .I1(\output[6]_i_49_n_0 ),
        .O(\output_reg[6]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_23 
       (.I0(\output[6]_i_50_n_0 ),
        .I1(\output[6]_i_51_n_0 ),
        .O(\output_reg[6]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_24 
       (.I0(\output[6]_i_52_n_0 ),
        .I1(\output[6]_i_53_n_0 ),
        .O(\output_reg[6]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_25 
       (.I0(\output[6]_i_54_n_0 ),
        .I1(\output[6]_i_55_n_0 ),
        .O(\output_reg[6]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_26 
       (.I0(\output[6]_i_56_n_0 ),
        .I1(\output[6]_i_57_n_0 ),
        .O(\output_reg[6]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[6]_i_27 
       (.I0(\output[6]_i_58_n_0 ),
        .I1(\output[6]_i_59_n_0 ),
        .O(\output_reg[6]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[6]_i_4 
       (.I0(\output_reg[6]_i_12_n_0 ),
        .I1(\output_reg[6]_i_13_n_0 ),
        .O(\output_reg[6]_i_4_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[6]_i_5 
       (.I0(\output_reg[6]_i_14_n_0 ),
        .I1(\output_reg[6]_i_15_n_0 ),
        .O(\output_reg[6]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[6]_i_6 
       (.I0(\output_reg[6]_i_16_n_0 ),
        .I1(\output_reg[6]_i_17_n_0 ),
        .O(\output_reg[6]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[6]_i_7 
       (.I0(\output_reg[6]_i_18_n_0 ),
        .I1(\output_reg[6]_i_19_n_0 ),
        .O(\output_reg[6]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[6]_i_8 
       (.I0(\output_reg[6]_i_20_n_0 ),
        .I1(\output_reg[6]_i_21_n_0 ),
        .O(\output_reg[6]_i_8_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[6]_i_9 
       (.I0(\output_reg[6]_i_22_n_0 ),
        .I1(\output_reg[6]_i_23_n_0 ),
        .O(\output_reg[6]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  FDRE \output_reg[7] 
       (.C(clk),
        .CE(read),
        .D(p_0_out1_out[7]),
        .Q(\output [7]),
        .R(1'b0));
  MUXF8 \output_reg[7]_i_10 
       (.I0(\output_reg[7]_i_23_n_0 ),
        .I1(\output_reg[7]_i_24_n_0 ),
        .O(\output_reg[7]_i_10_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[7]_i_11 
       (.I0(\output_reg[7]_i_25_n_0 ),
        .I1(\output_reg[7]_i_26_n_0 ),
        .O(\output_reg[7]_i_11_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF8 \output_reg[7]_i_12 
       (.I0(\output_reg[7]_i_27_n_0 ),
        .I1(\output_reg[7]_i_28_n_0 ),
        .O(\output_reg[7]_i_12_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  MUXF7 \output_reg[7]_i_13 
       (.I0(\output[7]_i_29_n_0 ),
        .I1(\output[7]_i_30_n_0 ),
        .O(\output_reg[7]_i_13_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_14 
       (.I0(\output[7]_i_31_n_0 ),
        .I1(\output[7]_i_32_n_0 ),
        .O(\output_reg[7]_i_14_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_15 
       (.I0(\output[7]_i_33_n_0 ),
        .I1(\output[7]_i_34_n_0 ),
        .O(\output_reg[7]_i_15_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_16 
       (.I0(\output[7]_i_35_n_0 ),
        .I1(\output[7]_i_36_n_0 ),
        .O(\output_reg[7]_i_16_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_17 
       (.I0(\output[7]_i_37_n_0 ),
        .I1(\output[7]_i_38_n_0 ),
        .O(\output_reg[7]_i_17_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_18 
       (.I0(\output[7]_i_39_n_0 ),
        .I1(\output[7]_i_40_n_0 ),
        .O(\output_reg[7]_i_18_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_19 
       (.I0(\output[7]_i_41_n_0 ),
        .I1(\output[7]_i_42_n_0 ),
        .O(\output_reg[7]_i_19_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_20 
       (.I0(\output[7]_i_43_n_0 ),
        .I1(\output[7]_i_44_n_0 ),
        .O(\output_reg[7]_i_20_n_0 ),
        .S(a_in[9]));
  MUXF7 \output_reg[7]_i_21 
       (.I0(\output[7]_i_45_n_0 ),
        .I1(\output[7]_i_46_n_0 ),
        .O(\output_reg[7]_i_21_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_22 
       (.I0(\output[7]_i_47_n_0 ),
        .I1(\output[7]_i_48_n_0 ),
        .O(\output_reg[7]_i_22_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_23 
       (.I0(\output[7]_i_49_n_0 ),
        .I1(\output[7]_i_50_n_0 ),
        .O(\output_reg[7]_i_23_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_24 
       (.I0(\output[7]_i_51_n_0 ),
        .I1(\output[7]_i_52_n_0 ),
        .O(\output_reg[7]_i_24_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_25 
       (.I0(\output[7]_i_53_n_0 ),
        .I1(\output[7]_i_54_n_0 ),
        .O(\output_reg[7]_i_25_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_26 
       (.I0(\output[7]_i_55_n_0 ),
        .I1(\output[7]_i_56_n_0 ),
        .O(\output_reg[7]_i_26_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_27 
       (.I0(\output[7]_i_57_n_0 ),
        .I1(\output[7]_i_58_n_0 ),
        .O(\output_reg[7]_i_27_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF7 \output_reg[7]_i_28 
       (.I0(\output[7]_i_59_n_0 ),
        .I1(\output[7]_i_60_n_0 ),
        .O(\output_reg[7]_i_28_n_0 ),
        .S(\a_out_reg_n_0_[9] ));
  MUXF8 \output_reg[7]_i_5 
       (.I0(\output_reg[7]_i_13_n_0 ),
        .I1(\output_reg[7]_i_14_n_0 ),
        .O(\output_reg[7]_i_5_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[7]_i_6 
       (.I0(\output_reg[7]_i_15_n_0 ),
        .I1(\output_reg[7]_i_16_n_0 ),
        .O(\output_reg[7]_i_6_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[7]_i_7 
       (.I0(\output_reg[7]_i_17_n_0 ),
        .I1(\output_reg[7]_i_18_n_0 ),
        .O(\output_reg[7]_i_7_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[7]_i_8 
       (.I0(\output_reg[7]_i_19_n_0 ),
        .I1(\output_reg[7]_i_20_n_0 ),
        .O(\output_reg[7]_i_8_n_0 ),
        .S(a_in[10]));
  MUXF8 \output_reg[7]_i_9 
       (.I0(\output_reg[7]_i_21_n_0 ),
        .I1(\output_reg[7]_i_22_n_0 ),
        .O(\output_reg[7]_i_9_n_0 ),
        .S(\a_out_reg_n_0_[10] ));
  CARRY4 read1_carry
       (.CI(1'b0),
        .CO({read1_carry_n_0,NLW_read1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_read1_carry_O_UNCONNECTED[3:0]),
        .S({read1_carry_i_1_n_0,read1_carry_i_2_n_0,read1_carry_i_3_n_0,read1_carry_i_4_n_0}));
  CARRY4 read1_carry__0
       (.CI(read1_carry_n_0),
        .CO({NLW_read1_carry__0_CO_UNCONNECTED[3:1],empty}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_read1_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,read1_carry__0_i_1_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    read1_carry__0_i_1
       (.I0(a_in[12]),
        .I1(\a_out_reg_n_0_[12] ),
        .O(read1_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    read1_carry_i_1
       (.I0(a_in[11]),
        .I1(\a_out_reg_n_0_[11] ),
        .I2(a_in[10]),
        .I3(\a_out_reg_n_0_[10] ),
        .I4(\a_out_reg_n_0_[9] ),
        .I5(a_in[9]),
        .O(read1_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    read1_carry_i_2
       (.I0(a_in[8]),
        .I1(\a_out_reg_n_0_[8] ),
        .I2(a_in[7]),
        .I3(\a_out_reg_n_0_[7] ),
        .I4(\a_out_reg_n_0_[6] ),
        .I5(\a_in[6]_repN ),
        .O(read1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    read1_carry_i_3
       (.I0(\a_in[5]_repN ),
        .I1(\a_out_reg_n_0_[5] ),
        .I2(\a_in[4]_repN ),
        .I3(\a_out_reg_n_0_[4] ),
        .I4(\a_out_reg_n_0_[3] ),
        .I5(a_in[3]),
        .O(read1_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    read1_carry_i_4
       (.I0(\a_in[2]_repN ),
        .I1(\a_out_reg_n_0_[2] ),
        .I2(\a_in[1]_repN ),
        .I3(\a_out_reg_n_0_[1] ),
        .I4(\a_out_reg[0]_rep__10_n_0 ),
        .I5(\a_in[0]_repN ),
        .O(read1_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h5D)) 
    s_output_stb_i_1
       (.I0(empty),
        .I1(out1_stb),
        .I2(input_rs232_rx_ack),
        .O(s_output_stb_i_1_n_0));
  FDRE s_output_stb_reg
       (.C(clk),
        .CE(1'b1),
        .D(s_output_stb_i_1_n_0),
        .Q(out1_stb),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h105B1A5B105B105B)) 
    \state[0]_i_1__0 
       (.I0(\state[0]_i_2__0_n_0 ),
        .I1(rx_d2),
        .I2(\state_reg[0]_0 ),
        .I3(\state_reg[1]_0 ),
        .I4(full1_carry__0_n_3),
        .I5(\a_in[12]_i_3_n_0 ),
        .O(\state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \state[0]_i_2__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(data),
        .I5(\state[1]_i_2_n_0 ),
        .O(\state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0FBFBFBF4F4F0F0)) 
    \state[1]_i_1__0 
       (.I0(\bit_count_reg[2] ),
        .I1(data),
        .I2(\state[1]_i_2_n_0 ),
        .I3(rx_d2),
        .I4(\state_reg[0]_0 ),
        .I5(\state_reg[1]_0 ),
        .O(\state_reg[1] ));
  LUT4 #(
    .INIT(16'h0008)) 
    \state[1]_i_2 
       (.I0(\a_in[12]_i_3_n_0 ),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[0]_0 ),
        .I3(full1_carry__0_n_3),
        .O(\state[1]_i_2_n_0 ));
endmodule

module interpolate
   (output_tx_am_ack,
    A,
    Q,
    i_out_0_reg,
    i_out_5_reg_i_23,
    i_out_4_reg,
    i_out_6_reg,
    p_0_in,
    O142,
    O143,
    O144,
    i_out_1_reg_i_22,
    i_out_3_reg_i_23,
    i_out_5_reg_i_22,
    i_out_7_reg_i_23,
    clk,
    \s_output_am_out_reg[23] ,
    S,
    \s_output_am_out_reg[23]_0 );
  output output_tx_am_ack;
  output [22:0]A;
  output [7:0]Q;
  output [21:0]i_out_0_reg;
  output [0:0]i_out_5_reg_i_23;
  output [21:0]i_out_4_reg;
  output [22:0]i_out_6_reg;
  output [20:0]p_0_in;
  output [21:0]O142;
  output [20:0]O143;
  output [21:0]O144;
  output i_out_1_reg_i_22;
  output i_out_3_reg_i_23;
  output i_out_5_reg_i_22;
  output i_out_7_reg_i_23;
  input clk;
  input [7:0]\s_output_am_out_reg[23] ;
  input [3:0]S;
  input [3:0]\s_output_am_out_reg[23]_0 ;

  wire [22:0]A;
  wire [21:0]O142;
  wire [20:0]O143;
  wire [21:0]O144;
  wire [7:0]Q;
  wire [3:0]S;
  wire \accum[10]_i_2_n_0 ;
  wire \accum[10]_i_3_n_0 ;
  wire \accum[10]_i_4_n_0 ;
  wire \accum[10]_i_5_n_0 ;
  wire \accum[14]_i_2_n_0 ;
  wire \accum[14]_i_3_n_0 ;
  wire \accum[14]_i_4_n_0 ;
  wire \accum[14]_i_5_n_0 ;
  wire \accum[18]_i_2_n_0 ;
  wire \accum[18]_i_3_n_0 ;
  wire \accum[18]_i_4_n_0 ;
  wire \accum[18]_i_5_n_0 ;
  wire \accum[22]_i_2__0_n_0 ;
  wire \accum[22]_i_3_n_0 ;
  wire \accum[2]_i_2_n_0 ;
  wire \accum[2]_i_3_n_0 ;
  wire \accum[2]_i_4_n_0 ;
  wire \accum[6]_i_2_n_0 ;
  wire \accum[6]_i_3_n_0 ;
  wire \accum[6]_i_4_n_0 ;
  wire \accum[6]_i_5_n_0 ;
  wire [23:2]accum_reg;
  wire \accum_reg[10]_i_1_n_0 ;
  wire \accum_reg[10]_i_1_n_4 ;
  wire \accum_reg[10]_i_1_n_5 ;
  wire \accum_reg[10]_i_1_n_6 ;
  wire \accum_reg[10]_i_1_n_7 ;
  wire \accum_reg[14]_i_1_n_0 ;
  wire \accum_reg[14]_i_1_n_4 ;
  wire \accum_reg[14]_i_1_n_5 ;
  wire \accum_reg[14]_i_1_n_6 ;
  wire \accum_reg[14]_i_1_n_7 ;
  wire \accum_reg[18]_i_1_n_0 ;
  wire \accum_reg[18]_i_1_n_4 ;
  wire \accum_reg[18]_i_1_n_5 ;
  wire \accum_reg[18]_i_1_n_6 ;
  wire \accum_reg[18]_i_1_n_7 ;
  wire \accum_reg[22]_i_1_n_6 ;
  wire \accum_reg[22]_i_1_n_7 ;
  wire \accum_reg[2]_i_1_n_0 ;
  wire \accum_reg[2]_i_1_n_4 ;
  wire \accum_reg[2]_i_1_n_5 ;
  wire \accum_reg[2]_i_1_n_6 ;
  wire \accum_reg[2]_i_1_n_7 ;
  wire \accum_reg[6]_i_1_n_0 ;
  wire \accum_reg[6]_i_1_n_4 ;
  wire \accum_reg[6]_i_1_n_5 ;
  wire \accum_reg[6]_i_1_n_6 ;
  wire \accum_reg[6]_i_1_n_7 ;
  wire clk;
  wire [12:0]count;
  wire count0_carry__0_i_1_n_0;
  wire count0_carry__0_i_2_n_0;
  wire count0_carry__0_i_3_n_0;
  wire count0_carry__0_i_4_n_0;
  wire count0_carry__0_n_0;
  wire count0_carry__1_i_1_n_0;
  wire count0_carry__1_i_2_n_0;
  wire count0_carry__1_i_3_n_0;
  wire count0_carry__1_i_4_n_0;
  wire count0_carry_i_1_n_0;
  wire count0_carry_i_2_n_0;
  wire count0_carry_i_3_n_0;
  wire count0_carry_i_4_n_0;
  wire count0_carry_n_0;
  wire \count[0]_i_1_n_0 ;
  wire \count[12]_i_2_n_0 ;
  wire \count[12]_i_3_n_0 ;
  wire [12:1]data0;
  wire [20:0]delta;
  wire [20:0]delta0;
  wire delta0_carry__0_n_0;
  wire delta0_carry_n_0;
  wire [23:0]delta_d1;
  wire [23:0]delta_d2;
  wire [23:2]delta_d3;
  wire [21:0]i_out_0_reg;
  wire i_out_1_reg_i_22;
  wire i_out_3_reg_i_23;
  wire [21:0]i_out_4_reg;
  wire i_out_5_reg_i_22;
  wire [0:0]i_out_5_reg_i_23;
  wire [22:0]i_out_6_reg;
  wire i_out_7_reg_i_23;
  wire last_input;
  wire output_tx_am_ack;
  wire [20:0]p_0_in;
  wire [7:0]\s_output_am_out_reg[23] ;
  wire [3:0]\s_output_am_out_reg[23]_0 ;
  wire tree_0010_carry__0_i_1_n_0;
  wire tree_0010_carry__0_i_2_n_0;
  wire tree_0010_carry__0_i_3_n_0;
  wire tree_0010_carry__0_i_4_n_0;
  wire tree_0010_carry__0_n_0;
  wire tree_0010_carry__1_i_1_n_0;
  wire tree_0010_carry__1_i_2_n_0;
  wire tree_0010_carry__1_i_3_n_0;
  wire tree_0010_carry__1_i_4_n_0;
  wire tree_0010_carry__1_n_0;
  wire tree_0010_carry__2_i_1_n_0;
  wire tree_0010_carry__2_i_2_n_0;
  wire tree_0010_carry__2_i_3_n_0;
  wire tree_0010_carry__2_i_4_n_0;
  wire tree_0010_carry__2_n_0;
  wire tree_0010_carry__3_i_1_n_0;
  wire tree_0010_carry__3_i_2_n_0;
  wire tree_0010_carry__3_i_3_n_0;
  wire tree_0010_carry__3_i_4_n_0;
  wire tree_0010_carry__3_n_0;
  wire tree_0010_carry__4_i_1_n_0;
  wire tree_0010_carry__4_i_2_n_0;
  wire tree_0010_carry_i_1_n_0;
  wire tree_0010_carry_i_2_n_0;
  wire tree_0010_carry_i_3_n_0;
  wire tree_0010_carry_i_4_n_0;
  wire tree_0010_carry_n_0;
  wire tree_010_carry__0_i_1_n_0;
  wire tree_010_carry__0_i_2_n_0;
  wire tree_010_carry__0_i_3_n_0;
  wire tree_010_carry__0_i_4_n_0;
  wire tree_010_carry__0_n_0;
  wire tree_010_carry__0_n_4;
  wire tree_010_carry__0_n_5;
  wire tree_010_carry__0_n_6;
  wire tree_010_carry__0_n_7;
  wire tree_010_carry__1_i_1_n_0;
  wire tree_010_carry__1_i_2_n_0;
  wire tree_010_carry__1_i_3_n_0;
  wire tree_010_carry__1_i_4_n_0;
  wire tree_010_carry__1_n_0;
  wire tree_010_carry__1_n_4;
  wire tree_010_carry__1_n_5;
  wire tree_010_carry__1_n_6;
  wire tree_010_carry__1_n_7;
  wire tree_010_carry__2_i_1_n_0;
  wire tree_010_carry__2_i_2_n_0;
  wire tree_010_carry__2_i_3_n_0;
  wire tree_010_carry__2_i_4_n_0;
  wire tree_010_carry__2_n_0;
  wire tree_010_carry__2_n_4;
  wire tree_010_carry__2_n_5;
  wire tree_010_carry__2_n_6;
  wire tree_010_carry__2_n_7;
  wire tree_010_carry__3_i_1_n_0;
  wire tree_010_carry__3_i_2_n_0;
  wire tree_010_carry__3_i_3_n_0;
  wire tree_010_carry__3_i_4_n_0;
  wire tree_010_carry__3_n_0;
  wire tree_010_carry__3_n_4;
  wire tree_010_carry__3_n_5;
  wire tree_010_carry__3_n_6;
  wire tree_010_carry__3_n_7;
  wire tree_010_carry__4_i_1_n_0;
  wire tree_010_carry__4_i_2_n_0;
  wire tree_010_carry__4_i_3_n_0;
  wire tree_010_carry__4_n_5;
  wire tree_010_carry__4_n_6;
  wire tree_010_carry__4_n_7;
  wire tree_010_carry_i_1_n_0;
  wire tree_010_carry_i_2_n_0;
  wire tree_010_carry_i_3_n_0;
  wire tree_010_carry_n_0;
  wire tree_010_carry_n_4;
  wire tree_010_carry_n_5;
  wire tree_010_carry_n_6;
  wire tree_010_carry_n_7;
  wire tree_0110_carry__0_i_1_n_0;
  wire tree_0110_carry__0_i_2_n_0;
  wire tree_0110_carry__0_i_3_n_0;
  wire tree_0110_carry__0_i_4_n_0;
  wire tree_0110_carry__0_n_0;
  wire tree_0110_carry__1_i_1_n_0;
  wire tree_0110_carry__1_i_2_n_0;
  wire tree_0110_carry__1_i_3_n_0;
  wire tree_0110_carry__1_i_4_n_0;
  wire tree_0110_carry__1_n_0;
  wire tree_0110_carry__2_i_1_n_0;
  wire tree_0110_carry__2_i_2_n_0;
  wire tree_0110_carry__2_i_3_n_0;
  wire tree_0110_carry__2_i_4_n_0;
  wire tree_0110_carry__2_n_0;
  wire tree_0110_carry__3_i_1_n_0;
  wire tree_0110_carry__3_i_2_n_0;
  wire tree_0110_carry__3_i_3_n_0;
  wire tree_0110_carry__3_i_4_n_0;
  wire tree_0110_carry__3_n_0;
  wire tree_0110_carry__4_i_1_n_0;
  wire tree_0110_carry__4_i_2_n_0;
  wire tree_0110_carry__4_i_3_n_0;
  wire tree_0110_carry_i_1_n_0;
  wire tree_0110_carry_i_2_n_0;
  wire tree_0110_carry_i_3_n_0;
  wire tree_0110_carry_i_4_n_0;
  wire tree_0110_carry_n_0;
  wire \tree_0_reg_n_0_[10] ;
  wire \tree_0_reg_n_0_[11] ;
  wire \tree_0_reg_n_0_[12] ;
  wire \tree_0_reg_n_0_[13] ;
  wire \tree_0_reg_n_0_[14] ;
  wire \tree_0_reg_n_0_[15] ;
  wire \tree_0_reg_n_0_[16] ;
  wire \tree_0_reg_n_0_[17] ;
  wire \tree_0_reg_n_0_[18] ;
  wire \tree_0_reg_n_0_[19] ;
  wire \tree_0_reg_n_0_[20] ;
  wire \tree_0_reg_n_0_[21] ;
  wire \tree_0_reg_n_0_[22] ;
  wire \tree_0_reg_n_0_[23] ;
  wire \tree_0_reg_n_0_[2] ;
  wire \tree_0_reg_n_0_[3] ;
  wire \tree_0_reg_n_0_[4] ;
  wire \tree_0_reg_n_0_[5] ;
  wire \tree_0_reg_n_0_[6] ;
  wire \tree_0_reg_n_0_[7] ;
  wire \tree_0_reg_n_0_[8] ;
  wire \tree_0_reg_n_0_[9] ;
  wire tree_1010_carry__0_i_1_n_0;
  wire tree_1010_carry__0_i_2_n_0;
  wire tree_1010_carry__0_i_3_n_0;
  wire tree_1010_carry__0_i_4_n_0;
  wire tree_1010_carry__0_n_0;
  wire tree_1010_carry__1_i_1_n_0;
  wire tree_1010_carry__1_i_2_n_0;
  wire tree_1010_carry__1_i_3_n_0;
  wire tree_1010_carry__1_i_4_n_0;
  wire tree_1010_carry__1_n_0;
  wire tree_1010_carry__2_i_1_n_0;
  wire tree_1010_carry__2_i_2_n_0;
  wire tree_1010_carry__2_i_3_n_0;
  wire tree_1010_carry__2_i_4_n_0;
  wire tree_1010_carry__2_n_0;
  wire tree_1010_carry__3_i_1_n_0;
  wire tree_1010_carry__3_i_2_n_0;
  wire tree_1010_carry__3_i_3_n_0;
  wire tree_1010_carry__3_i_4_n_0;
  wire tree_1010_carry__3_n_0;
  wire tree_1010_carry__4_i_1_n_0;
  wire tree_1010_carry__4_i_2_n_0;
  wire tree_1010_carry_i_1_n_0;
  wire tree_1010_carry_i_2_n_0;
  wire tree_1010_carry_i_3_n_0;
  wire tree_1010_carry_i_4_n_0;
  wire tree_1010_carry_n_0;
  wire tree_10_carry__0_i_1_n_0;
  wire tree_10_carry__0_i_2_n_0;
  wire tree_10_carry__0_i_3_n_0;
  wire tree_10_carry__0_i_4_n_0;
  wire tree_10_carry__0_n_0;
  wire tree_10_carry__0_n_4;
  wire tree_10_carry__0_n_5;
  wire tree_10_carry__0_n_6;
  wire tree_10_carry__0_n_7;
  wire tree_10_carry__1_i_1_n_0;
  wire tree_10_carry__1_i_2_n_0;
  wire tree_10_carry__1_i_3_n_0;
  wire tree_10_carry__1_i_4_n_0;
  wire tree_10_carry__1_n_0;
  wire tree_10_carry__1_n_4;
  wire tree_10_carry__1_n_5;
  wire tree_10_carry__1_n_6;
  wire tree_10_carry__1_n_7;
  wire tree_10_carry__2_i_1_n_0;
  wire tree_10_carry__2_i_2_n_0;
  wire tree_10_carry__2_i_3_n_0;
  wire tree_10_carry__2_i_4_n_0;
  wire tree_10_carry__2_n_0;
  wire tree_10_carry__2_n_4;
  wire tree_10_carry__2_n_5;
  wire tree_10_carry__2_n_6;
  wire tree_10_carry__2_n_7;
  wire tree_10_carry__3_i_1_n_0;
  wire tree_10_carry__3_i_2_n_0;
  wire tree_10_carry__3_i_3_n_0;
  wire tree_10_carry__3_i_4_n_0;
  wire tree_10_carry__3_n_0;
  wire tree_10_carry__3_n_4;
  wire tree_10_carry__3_n_5;
  wire tree_10_carry__3_n_6;
  wire tree_10_carry__3_n_7;
  wire tree_10_carry__4_i_1__0_n_0;
  wire tree_10_carry__4_i_2_n_0;
  wire tree_10_carry__4_i_3_n_0;
  wire tree_10_carry__4_n_5;
  wire tree_10_carry__4_n_6;
  wire tree_10_carry__4_n_7;
  wire tree_10_carry_i_1_n_0;
  wire tree_10_carry_i_2_n_0;
  wire tree_10_carry_i_3_n_0;
  wire tree_10_carry_n_0;
  wire tree_10_carry_n_4;
  wire tree_10_carry_n_5;
  wire tree_10_carry_n_6;
  wire tree_110_carry__0_i_1_n_0;
  wire tree_110_carry__0_i_2_n_0;
  wire tree_110_carry__0_i_3_n_0;
  wire tree_110_carry__0_i_4_n_0;
  wire tree_110_carry__0_n_0;
  wire tree_110_carry__0_n_4;
  wire tree_110_carry__0_n_5;
  wire tree_110_carry__0_n_6;
  wire tree_110_carry__0_n_7;
  wire tree_110_carry__1_i_1_n_0;
  wire tree_110_carry__1_i_2_n_0;
  wire tree_110_carry__1_i_3_n_0;
  wire tree_110_carry__1_i_4_n_0;
  wire tree_110_carry__1_n_0;
  wire tree_110_carry__1_n_4;
  wire tree_110_carry__1_n_5;
  wire tree_110_carry__1_n_6;
  wire tree_110_carry__1_n_7;
  wire tree_110_carry__2_i_1_n_0;
  wire tree_110_carry__2_i_2_n_0;
  wire tree_110_carry__2_i_3_n_0;
  wire tree_110_carry__2_i_4_n_0;
  wire tree_110_carry__2_n_0;
  wire tree_110_carry__2_n_4;
  wire tree_110_carry__2_n_5;
  wire tree_110_carry__2_n_6;
  wire tree_110_carry__2_n_7;
  wire tree_110_carry__3_i_1_n_0;
  wire tree_110_carry__3_i_2_n_0;
  wire tree_110_carry__3_i_3_n_0;
  wire tree_110_carry__3_i_4_n_0;
  wire tree_110_carry__3_n_0;
  wire tree_110_carry__3_n_4;
  wire tree_110_carry__3_n_5;
  wire tree_110_carry__3_n_6;
  wire tree_110_carry__3_n_7;
  wire tree_110_carry__4_i_1_n_0;
  wire tree_110_carry__4_i_2_n_0;
  wire tree_110_carry__4_i_3_n_0;
  wire tree_110_carry__4_n_5;
  wire tree_110_carry__4_n_6;
  wire tree_110_carry__4_n_7;
  wire tree_110_carry_i_1_n_0;
  wire tree_110_carry_i_2_n_0;
  wire tree_110_carry_i_3_n_0;
  wire tree_110_carry_n_0;
  wire tree_110_carry_n_4;
  wire tree_110_carry_n_5;
  wire tree_110_carry_n_6;
  wire tree_1110_carry__0_i_1_n_0;
  wire tree_1110_carry__0_i_2_n_0;
  wire tree_1110_carry__0_i_3_n_0;
  wire tree_1110_carry__0_i_4_n_0;
  wire tree_1110_carry__0_n_0;
  wire tree_1110_carry__1_i_1_n_0;
  wire tree_1110_carry__1_i_2_n_0;
  wire tree_1110_carry__1_i_3_n_0;
  wire tree_1110_carry__1_i_4_n_0;
  wire tree_1110_carry__1_n_0;
  wire tree_1110_carry__2_i_1_n_0;
  wire tree_1110_carry__2_i_2_n_0;
  wire tree_1110_carry__2_i_3_n_0;
  wire tree_1110_carry__2_i_4_n_0;
  wire tree_1110_carry__2_n_0;
  wire tree_1110_carry__3_i_1_n_0;
  wire tree_1110_carry__3_i_2_n_0;
  wire tree_1110_carry__3_i_3_n_0;
  wire tree_1110_carry__3_i_4_n_0;
  wire tree_1110_carry__3_n_0;
  wire tree_1110_carry__4_i_1_n_0;
  wire tree_1110_carry__4_i_2_n_0;
  wire tree_1110_carry__4_i_3_n_0;
  wire tree_1110_carry_i_1_n_0;
  wire tree_1110_carry_i_2_n_0;
  wire tree_1110_carry_i_3_n_0;
  wire tree_1110_carry_i_4_n_0;
  wire tree_1110_carry_n_0;
  wire \tree_1_reg_n_0_[10] ;
  wire \tree_1_reg_n_0_[11] ;
  wire \tree_1_reg_n_0_[12] ;
  wire \tree_1_reg_n_0_[13] ;
  wire \tree_1_reg_n_0_[14] ;
  wire \tree_1_reg_n_0_[15] ;
  wire \tree_1_reg_n_0_[16] ;
  wire \tree_1_reg_n_0_[17] ;
  wire \tree_1_reg_n_0_[18] ;
  wire \tree_1_reg_n_0_[19] ;
  wire \tree_1_reg_n_0_[20] ;
  wire \tree_1_reg_n_0_[21] ;
  wire \tree_1_reg_n_0_[22] ;
  wire \tree_1_reg_n_0_[23] ;
  wire \tree_1_reg_n_0_[2] ;
  wire \tree_1_reg_n_0_[3] ;
  wire \tree_1_reg_n_0_[4] ;
  wire \tree_1_reg_n_0_[5] ;
  wire \tree_1_reg_n_0_[6] ;
  wire \tree_1_reg_n_0_[7] ;
  wire \tree_1_reg_n_0_[8] ;
  wire \tree_1_reg_n_0_[9] ;
  wire [2:0]\NLW_accum_reg[10]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[14]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[18]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_accum_reg[22]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_accum_reg[22]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[2]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[6]_i_1_CO_UNCONNECTED ;
  wire [2:0]NLW_count0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_count0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_delta0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_delta0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_delta0_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_delta0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_0010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__4_CO_UNCONNECTED;
  wire [3:2]NLW_tree_0010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_010_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_0110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_0110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_1010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__4_CO_UNCONNECTED;
  wire [3:2]NLW_tree_1010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_10_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_10_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_10_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_1110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_1110_carry__4_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_2 
       (.I0(delta[20]),
        .I1(accum_reg[13]),
        .O(\accum[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_3 
       (.I0(delta[20]),
        .I1(accum_reg[12]),
        .O(\accum[10]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_4 
       (.I0(delta[20]),
        .I1(accum_reg[11]),
        .O(\accum[10]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_5 
       (.I0(delta[7]),
        .I1(accum_reg[10]),
        .O(\accum[10]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_2 
       (.I0(delta[20]),
        .I1(accum_reg[17]),
        .O(\accum[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_3 
       (.I0(delta[20]),
        .I1(accum_reg[16]),
        .O(\accum[14]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_4 
       (.I0(delta[20]),
        .I1(accum_reg[15]),
        .O(\accum[14]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_5 
       (.I0(delta[20]),
        .I1(accum_reg[14]),
        .O(\accum[14]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_2 
       (.I0(delta[20]),
        .I1(accum_reg[21]),
        .O(\accum[18]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_3 
       (.I0(delta[20]),
        .I1(accum_reg[20]),
        .O(\accum[18]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_4 
       (.I0(delta[20]),
        .I1(accum_reg[19]),
        .O(\accum[18]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_5 
       (.I0(delta[20]),
        .I1(accum_reg[18]),
        .O(\accum[18]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_2__0 
       (.I0(delta[20]),
        .I1(accum_reg[23]),
        .O(\accum[22]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_3 
       (.I0(delta[20]),
        .I1(accum_reg[22]),
        .O(\accum[22]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_2 
       (.I0(delta[2]),
        .I1(accum_reg[5]),
        .O(\accum[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_3 
       (.I0(delta[1]),
        .I1(accum_reg[4]),
        .O(\accum[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_4 
       (.I0(delta[0]),
        .I1(accum_reg[3]),
        .O(\accum[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_2 
       (.I0(delta[6]),
        .I1(accum_reg[9]),
        .O(\accum[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_3 
       (.I0(delta[5]),
        .I1(accum_reg[8]),
        .O(\accum[6]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_4 
       (.I0(delta[4]),
        .I1(accum_reg[7]),
        .O(\accum[6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_5 
       (.I0(delta[3]),
        .I1(accum_reg[6]),
        .O(\accum[6]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1_n_7 ),
        .Q(accum_reg[10]),
        .R(1'b0));
  CARRY4 \accum_reg[10]_i_1 
       (.CI(\accum_reg[6]_i_1_n_0 ),
        .CO({\accum_reg[10]_i_1_n_0 ,\NLW_accum_reg[10]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({delta[20],delta[20],delta[20],delta[7]}),
        .O({\accum_reg[10]_i_1_n_4 ,\accum_reg[10]_i_1_n_5 ,\accum_reg[10]_i_1_n_6 ,\accum_reg[10]_i_1_n_7 }),
        .S({\accum[10]_i_2_n_0 ,\accum[10]_i_3_n_0 ,\accum[10]_i_4_n_0 ,\accum[10]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1_n_6 ),
        .Q(accum_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1_n_5 ),
        .Q(accum_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1_n_4 ),
        .Q(accum_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1_n_7 ),
        .Q(accum_reg[14]),
        .R(1'b0));
  CARRY4 \accum_reg[14]_i_1 
       (.CI(\accum_reg[10]_i_1_n_0 ),
        .CO({\accum_reg[14]_i_1_n_0 ,\NLW_accum_reg[14]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({delta[20],delta[20],delta[20],delta[20]}),
        .O({\accum_reg[14]_i_1_n_4 ,\accum_reg[14]_i_1_n_5 ,\accum_reg[14]_i_1_n_6 ,\accum_reg[14]_i_1_n_7 }),
        .S({\accum[14]_i_2_n_0 ,\accum[14]_i_3_n_0 ,\accum[14]_i_4_n_0 ,\accum[14]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1_n_6 ),
        .Q(accum_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1_n_5 ),
        .Q(accum_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1_n_4 ),
        .Q(accum_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1_n_7 ),
        .Q(accum_reg[18]),
        .R(1'b0));
  CARRY4 \accum_reg[18]_i_1 
       (.CI(\accum_reg[14]_i_1_n_0 ),
        .CO({\accum_reg[18]_i_1_n_0 ,\NLW_accum_reg[18]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({delta[20],delta[20],delta[20],delta[20]}),
        .O({\accum_reg[18]_i_1_n_4 ,\accum_reg[18]_i_1_n_5 ,\accum_reg[18]_i_1_n_6 ,\accum_reg[18]_i_1_n_7 }),
        .S({\accum[18]_i_2_n_0 ,\accum[18]_i_3_n_0 ,\accum[18]_i_4_n_0 ,\accum[18]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1_n_6 ),
        .Q(accum_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1_n_5 ),
        .Q(accum_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1_n_4 ),
        .Q(accum_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1_n_7 ),
        .Q(accum_reg[22]),
        .R(1'b0));
  CARRY4 \accum_reg[22]_i_1 
       (.CI(\accum_reg[18]_i_1_n_0 ),
        .CO(\NLW_accum_reg[22]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,delta[20]}),
        .O({\NLW_accum_reg[22]_i_1_O_UNCONNECTED [3:2],\accum_reg[22]_i_1_n_6 ,\accum_reg[22]_i_1_n_7 }),
        .S({1'b0,1'b0,\accum[22]_i_2__0_n_0 ,\accum[22]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1_n_6 ),
        .Q(accum_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1_n_7 ),
        .Q(accum_reg[2]),
        .R(1'b0));
  CARRY4 \accum_reg[2]_i_1 
       (.CI(1'b0),
        .CO({\accum_reg[2]_i_1_n_0 ,\NLW_accum_reg[2]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({delta[2:0],1'b0}),
        .O({\accum_reg[2]_i_1_n_4 ,\accum_reg[2]_i_1_n_5 ,\accum_reg[2]_i_1_n_6 ,\accum_reg[2]_i_1_n_7 }),
        .S({\accum[2]_i_2_n_0 ,\accum[2]_i_3_n_0 ,\accum[2]_i_4_n_0 ,accum_reg[2]}));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1_n_6 ),
        .Q(accum_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1_n_5 ),
        .Q(accum_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1_n_4 ),
        .Q(accum_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1_n_7 ),
        .Q(accum_reg[6]),
        .R(1'b0));
  CARRY4 \accum_reg[6]_i_1 
       (.CI(\accum_reg[2]_i_1_n_0 ),
        .CO({\accum_reg[6]_i_1_n_0 ,\NLW_accum_reg[6]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(delta[6:3]),
        .O({\accum_reg[6]_i_1_n_4 ,\accum_reg[6]_i_1_n_5 ,\accum_reg[6]_i_1_n_6 ,\accum_reg[6]_i_1_n_7 }),
        .S({\accum[6]_i_2_n_0 ,\accum[6]_i_3_n_0 ,\accum[6]_i_4_n_0 ,\accum[6]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1_n_6 ),
        .Q(accum_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1_n_5 ),
        .Q(accum_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1_n_4 ),
        .Q(accum_reg[9]),
        .R(1'b0));
  CARRY4 count0_carry
       (.CI(1'b0),
        .CO({count0_carry_n_0,NLW_count0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(count[0]),
        .DI(count[4:1]),
        .O(data0[4:1]),
        .S({count0_carry_i_1_n_0,count0_carry_i_2_n_0,count0_carry_i_3_n_0,count0_carry_i_4_n_0}));
  CARRY4 count0_carry__0
       (.CI(count0_carry_n_0),
        .CO({count0_carry__0_n_0,NLW_count0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(count[8:5]),
        .O(data0[8:5]),
        .S({count0_carry__0_i_1_n_0,count0_carry__0_i_2_n_0,count0_carry__0_i_3_n_0,count0_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_1
       (.I0(count[8]),
        .O(count0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_2
       (.I0(count[7]),
        .O(count0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_3
       (.I0(count[6]),
        .O(count0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_4
       (.I0(count[5]),
        .O(count0_carry__0_i_4_n_0));
  CARRY4 count0_carry__1
       (.CI(count0_carry__0_n_0),
        .CO(NLW_count0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,count[11:9]}),
        .O(data0[12:9]),
        .S({count0_carry__1_i_1_n_0,count0_carry__1_i_2_n_0,count0_carry__1_i_3_n_0,count0_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_1
       (.I0(count[12]),
        .O(count0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_2
       (.I0(count[11]),
        .O(count0_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_3
       (.I0(count[10]),
        .O(count0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_4
       (.I0(count[9]),
        .O(count0_carry__1_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_1
       (.I0(count[4]),
        .O(count0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_2
       (.I0(count[3]),
        .O(count0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_3
       (.I0(count[2]),
        .O(count0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_4
       (.I0(count[1]),
        .O(count0_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1 
       (.I0(count[0]),
        .O(\count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \count[12]_i_1 
       (.I0(\count[12]_i_2_n_0 ),
        .I1(count[2]),
        .I2(count[1]),
        .I3(count[0]),
        .I4(\count[12]_i_3_n_0 ),
        .O(last_input));
  LUT4 #(
    .INIT(16'h0001)) 
    \count[12]_i_2 
       (.I0(count[6]),
        .I1(count[5]),
        .I2(count[4]),
        .I3(count[3]),
        .O(\count[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \count[12]_i_3 
       (.I0(count[7]),
        .I1(count[8]),
        .I2(count[9]),
        .I3(count[10]),
        .I4(count[12]),
        .I5(count[11]),
        .O(\count[12]_i_3_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\count[0]_i_1_n_0 ),
        .Q(count[0]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[10]),
        .Q(count[10]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[11]),
        .Q(count[11]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[12]),
        .Q(count[12]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[1]),
        .Q(count[1]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[2]),
        .Q(count[2]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[3]),
        .Q(count[3]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[4]),
        .Q(count[4]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[5]),
        .Q(count[5]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[6]),
        .Q(count[6]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[7]),
        .Q(count[7]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[8]),
        .Q(count[8]),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(data0[9]),
        .Q(count[9]),
        .S(last_input));
  CARRY4 delta0_carry
       (.CI(1'b0),
        .CO({delta0_carry_n_0,NLW_delta0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI(\s_output_am_out_reg[23] [3:0]),
        .O(delta0[3:0]),
        .S(S));
  CARRY4 delta0_carry__0
       (.CI(delta0_carry_n_0),
        .CO({delta0_carry__0_n_0,NLW_delta0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({Q[7],\s_output_am_out_reg[23] [6:4]}),
        .O(delta0[7:4]),
        .S(\s_output_am_out_reg[23]_0 ));
  CARRY4 delta0_carry__1
       (.CI(delta0_carry__0_n_0),
        .CO(NLW_delta0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_delta0_carry__1_O_UNCONNECTED[3:1],delta0[20]}),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[0]),
        .Q(delta_d1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[1]),
        .Q(delta_d1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[20]),
        .Q(delta_d1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[2]),
        .Q(delta_d1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[3]),
        .Q(delta_d1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[4]),
        .Q(delta_d1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[5]),
        .Q(delta_d1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[6]),
        .Q(delta_d1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(delta[7]),
        .Q(delta_d1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[0]),
        .Q(delta_d2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[1]),
        .Q(delta_d2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[23]),
        .Q(delta_d2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[2]),
        .Q(delta_d2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[3]),
        .Q(delta_d2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[4]),
        .Q(delta_d2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[5]),
        .Q(delta_d2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[6]),
        .Q(delta_d2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d1[7]),
        .Q(delta_d2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[0]),
        .Q(A[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[1]),
        .Q(i_out_5_reg_i_23),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[23]),
        .Q(delta_d3[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[2]),
        .Q(delta_d3[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[3]),
        .Q(delta_d3[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[4]),
        .Q(delta_d3[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[5]),
        .Q(delta_d3[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[6]),
        .Q(delta_d3[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(delta_d2[7]),
        .Q(delta_d3[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[0] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[0]),
        .Q(delta[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[1] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[1]),
        .Q(delta[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[20] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[20]),
        .Q(delta[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[2] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[2]),
        .Q(delta[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[3] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[3]),
        .Q(delta[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[4] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[4]),
        .Q(delta[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[5] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[5]),
        .Q(delta[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[6] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[6]),
        .Q(delta[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[7] 
       (.C(clk),
        .CE(last_input),
        .D(delta0[7]),
        .Q(delta[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h6)) 
    i_out_1_reg_i_25
       (.I0(i_out_0_reg[0]),
        .I1(delta_d3[2]),
        .O(i_out_1_reg_i_22));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h6)) 
    i_out_3_reg_i_25
       (.I0(A[0]),
        .I1(i_out_5_reg_i_23),
        .O(i_out_3_reg_i_23));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h6)) 
    i_out_5_reg_i_25
       (.I0(i_out_4_reg[0]),
        .I1(delta_d3[2]),
        .O(i_out_5_reg_i_22));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h6)) 
    i_out_7_reg_i_25
       (.I0(i_out_6_reg[0]),
        .I1(i_out_5_reg_i_23),
        .O(i_out_7_reg_i_23));
  FDSE input_ack_reg
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(output_tx_am_ack),
        .S(last_input));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[0] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[1] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[2] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[3] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[4] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[5] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[6] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[7] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[23] [7]),
        .Q(Q[7]),
        .R(1'b0));
  CARRY4 tree_0010_carry
       (.CI(1'b0),
        .CO({tree_0010_carry_n_0,NLW_tree_0010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_0_reg[3:0]),
        .O({p_0_in[2:0],NLW_tree_0010_carry_O_UNCONNECTED[0]}),
        .S({tree_0010_carry_i_1_n_0,tree_0010_carry_i_2_n_0,tree_0010_carry_i_3_n_0,tree_0010_carry_i_4_n_0}));
  CARRY4 tree_0010_carry__0
       (.CI(tree_0010_carry_n_0),
        .CO({tree_0010_carry__0_n_0,NLW_tree_0010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_0_reg[7:4]),
        .O(p_0_in[6:3]),
        .S({tree_0010_carry__0_i_1_n_0,tree_0010_carry__0_i_2_n_0,tree_0010_carry__0_i_3_n_0,tree_0010_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_1
       (.I0(i_out_0_reg[7]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_2
       (.I0(i_out_0_reg[6]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_3
       (.I0(i_out_0_reg[5]),
        .I1(delta_d3[7]),
        .O(tree_0010_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_4
       (.I0(i_out_0_reg[4]),
        .I1(delta_d3[6]),
        .O(tree_0010_carry__0_i_4_n_0));
  CARRY4 tree_0010_carry__1
       (.CI(tree_0010_carry__0_n_0),
        .CO({tree_0010_carry__1_n_0,NLW_tree_0010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_0_reg[11:8]),
        .O(p_0_in[10:7]),
        .S({tree_0010_carry__1_i_1_n_0,tree_0010_carry__1_i_2_n_0,tree_0010_carry__1_i_3_n_0,tree_0010_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_1
       (.I0(i_out_0_reg[11]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_2
       (.I0(i_out_0_reg[10]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_3
       (.I0(i_out_0_reg[9]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_4
       (.I0(i_out_0_reg[8]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__1_i_4_n_0));
  CARRY4 tree_0010_carry__2
       (.CI(tree_0010_carry__1_n_0),
        .CO({tree_0010_carry__2_n_0,NLW_tree_0010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_0_reg[15:12]),
        .O(p_0_in[14:11]),
        .S({tree_0010_carry__2_i_1_n_0,tree_0010_carry__2_i_2_n_0,tree_0010_carry__2_i_3_n_0,tree_0010_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_1
       (.I0(i_out_0_reg[15]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_2
       (.I0(i_out_0_reg[14]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_3
       (.I0(i_out_0_reg[13]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_4
       (.I0(i_out_0_reg[12]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__2_i_4_n_0));
  CARRY4 tree_0010_carry__3
       (.CI(tree_0010_carry__2_n_0),
        .CO({tree_0010_carry__3_n_0,NLW_tree_0010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_0_reg[19:16]),
        .O(p_0_in[18:15]),
        .S({tree_0010_carry__3_i_1_n_0,tree_0010_carry__3_i_2_n_0,tree_0010_carry__3_i_3_n_0,tree_0010_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_1
       (.I0(i_out_0_reg[19]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_2
       (.I0(i_out_0_reg[18]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_3
       (.I0(i_out_0_reg[17]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_4
       (.I0(i_out_0_reg[16]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__3_i_4_n_0));
  CARRY4 tree_0010_carry__4
       (.CI(tree_0010_carry__3_n_0),
        .CO(NLW_tree_0010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,i_out_0_reg[20]}),
        .O({NLW_tree_0010_carry__4_O_UNCONNECTED[3:2],p_0_in[20:19]}),
        .S({1'b0,1'b0,tree_0010_carry__4_i_1_n_0,tree_0010_carry__4_i_2_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_1
       (.I0(i_out_0_reg[21]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_2
       (.I0(i_out_0_reg[20]),
        .I1(delta_d3[23]),
        .O(tree_0010_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_1
       (.I0(i_out_0_reg[3]),
        .I1(delta_d3[5]),
        .O(tree_0010_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_2
       (.I0(i_out_0_reg[2]),
        .I1(delta_d3[4]),
        .O(tree_0010_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_3
       (.I0(i_out_0_reg[1]),
        .I1(delta_d3[3]),
        .O(tree_0010_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_4
       (.I0(i_out_0_reg[0]),
        .I1(delta_d3[2]),
        .O(tree_0010_carry_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[10] ),
        .Q(i_out_0_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[11] ),
        .Q(i_out_0_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[12] ),
        .Q(i_out_0_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[13] ),
        .Q(i_out_0_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[14] ),
        .Q(i_out_0_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[15] ),
        .Q(i_out_0_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[16] ),
        .Q(i_out_0_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[17] ),
        .Q(i_out_0_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[18] ),
        .Q(i_out_0_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[19] ),
        .Q(i_out_0_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[20] ),
        .Q(i_out_0_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[21] ),
        .Q(i_out_0_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[22] ),
        .Q(i_out_0_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[23] ),
        .Q(i_out_0_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[2] ),
        .Q(i_out_0_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[3] ),
        .Q(i_out_0_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[4] ),
        .Q(i_out_0_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[5] ),
        .Q(i_out_0_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[6] ),
        .Q(i_out_0_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[7] ),
        .Q(i_out_0_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[8] ),
        .Q(i_out_0_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[9] ),
        .Q(i_out_0_reg[7]),
        .R(1'b0));
  CARRY4 tree_010_carry
       (.CI(1'b0),
        .CO({tree_010_carry_n_0,NLW_tree_010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[4] ,\tree_0_reg_n_0_[3] ,\tree_0_reg_n_0_[2] ,1'b0}),
        .O({tree_010_carry_n_4,tree_010_carry_n_5,tree_010_carry_n_6,tree_010_carry_n_7}),
        .S({tree_010_carry_i_1_n_0,tree_010_carry_i_2_n_0,tree_010_carry_i_3_n_0,delta_d2[0]}));
  CARRY4 tree_010_carry__0
       (.CI(tree_010_carry_n_0),
        .CO({tree_010_carry__0_n_0,NLW_tree_010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[8] ,\tree_0_reg_n_0_[7] ,\tree_0_reg_n_0_[6] ,\tree_0_reg_n_0_[5] }),
        .O({tree_010_carry__0_n_4,tree_010_carry__0_n_5,tree_010_carry__0_n_6,tree_010_carry__0_n_7}),
        .S({tree_010_carry__0_i_1_n_0,tree_010_carry__0_i_2_n_0,tree_010_carry__0_i_3_n_0,tree_010_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_1
       (.I0(\tree_0_reg_n_0_[8] ),
        .I1(delta_d2[7]),
        .O(tree_010_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_2
       (.I0(\tree_0_reg_n_0_[7] ),
        .I1(delta_d2[6]),
        .O(tree_010_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_3
       (.I0(\tree_0_reg_n_0_[6] ),
        .I1(delta_d2[5]),
        .O(tree_010_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_4
       (.I0(\tree_0_reg_n_0_[5] ),
        .I1(delta_d2[4]),
        .O(tree_010_carry__0_i_4_n_0));
  CARRY4 tree_010_carry__1
       (.CI(tree_010_carry__0_n_0),
        .CO({tree_010_carry__1_n_0,NLW_tree_010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[12] ,\tree_0_reg_n_0_[11] ,\tree_0_reg_n_0_[10] ,\tree_0_reg_n_0_[9] }),
        .O({tree_010_carry__1_n_4,tree_010_carry__1_n_5,tree_010_carry__1_n_6,tree_010_carry__1_n_7}),
        .S({tree_010_carry__1_i_1_n_0,tree_010_carry__1_i_2_n_0,tree_010_carry__1_i_3_n_0,tree_010_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_1
       (.I0(\tree_0_reg_n_0_[12] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_2
       (.I0(\tree_0_reg_n_0_[11] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_3
       (.I0(\tree_0_reg_n_0_[10] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_4
       (.I0(\tree_0_reg_n_0_[9] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__1_i_4_n_0));
  CARRY4 tree_010_carry__2
       (.CI(tree_010_carry__1_n_0),
        .CO({tree_010_carry__2_n_0,NLW_tree_010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[16] ,\tree_0_reg_n_0_[15] ,\tree_0_reg_n_0_[14] ,\tree_0_reg_n_0_[13] }),
        .O({tree_010_carry__2_n_4,tree_010_carry__2_n_5,tree_010_carry__2_n_6,tree_010_carry__2_n_7}),
        .S({tree_010_carry__2_i_1_n_0,tree_010_carry__2_i_2_n_0,tree_010_carry__2_i_3_n_0,tree_010_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_1
       (.I0(\tree_0_reg_n_0_[16] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_2
       (.I0(\tree_0_reg_n_0_[15] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_3
       (.I0(\tree_0_reg_n_0_[14] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_4
       (.I0(\tree_0_reg_n_0_[13] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__2_i_4_n_0));
  CARRY4 tree_010_carry__3
       (.CI(tree_010_carry__2_n_0),
        .CO({tree_010_carry__3_n_0,NLW_tree_010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[20] ,\tree_0_reg_n_0_[19] ,\tree_0_reg_n_0_[18] ,\tree_0_reg_n_0_[17] }),
        .O({tree_010_carry__3_n_4,tree_010_carry__3_n_5,tree_010_carry__3_n_6,tree_010_carry__3_n_7}),
        .S({tree_010_carry__3_i_1_n_0,tree_010_carry__3_i_2_n_0,tree_010_carry__3_i_3_n_0,tree_010_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_1
       (.I0(\tree_0_reg_n_0_[20] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_2
       (.I0(\tree_0_reg_n_0_[19] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_3
       (.I0(\tree_0_reg_n_0_[18] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_4
       (.I0(\tree_0_reg_n_0_[17] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__3_i_4_n_0));
  CARRY4 tree_010_carry__4
       (.CI(tree_010_carry__3_n_0),
        .CO(NLW_tree_010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\tree_0_reg_n_0_[22] ,\tree_0_reg_n_0_[21] }),
        .O({NLW_tree_010_carry__4_O_UNCONNECTED[3],tree_010_carry__4_n_5,tree_010_carry__4_n_6,tree_010_carry__4_n_7}),
        .S({1'b0,tree_010_carry__4_i_1_n_0,tree_010_carry__4_i_2_n_0,tree_010_carry__4_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_1
       (.I0(\tree_0_reg_n_0_[23] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_2
       (.I0(\tree_0_reg_n_0_[22] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_3
       (.I0(\tree_0_reg_n_0_[21] ),
        .I1(delta_d2[23]),
        .O(tree_010_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_1
       (.I0(\tree_0_reg_n_0_[4] ),
        .I1(delta_d2[3]),
        .O(tree_010_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_2
       (.I0(\tree_0_reg_n_0_[3] ),
        .I1(delta_d2[2]),
        .O(tree_010_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_3
       (.I0(\tree_0_reg_n_0_[2] ),
        .I1(delta_d2[1]),
        .O(tree_010_carry_i_3_n_0));
  CARRY4 tree_0110_carry
       (.CI(1'b0),
        .CO({tree_0110_carry_n_0,NLW_tree_0110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[3:0]),
        .O({O142[2:0],NLW_tree_0110_carry_O_UNCONNECTED[0]}),
        .S({tree_0110_carry_i_1_n_0,tree_0110_carry_i_2_n_0,tree_0110_carry_i_3_n_0,tree_0110_carry_i_4_n_0}));
  CARRY4 tree_0110_carry__0
       (.CI(tree_0110_carry_n_0),
        .CO({tree_0110_carry__0_n_0,NLW_tree_0110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[7:4]),
        .O(O142[6:3]),
        .S({tree_0110_carry__0_i_1_n_0,tree_0110_carry__0_i_2_n_0,tree_0110_carry__0_i_3_n_0,tree_0110_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_1
       (.I0(A[7]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_2
       (.I0(A[6]),
        .I1(delta_d3[7]),
        .O(tree_0110_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_3
       (.I0(A[5]),
        .I1(delta_d3[6]),
        .O(tree_0110_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_4
       (.I0(A[4]),
        .I1(delta_d3[5]),
        .O(tree_0110_carry__0_i_4_n_0));
  CARRY4 tree_0110_carry__1
       (.CI(tree_0110_carry__0_n_0),
        .CO({tree_0110_carry__1_n_0,NLW_tree_0110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[11:8]),
        .O(O142[10:7]),
        .S({tree_0110_carry__1_i_1_n_0,tree_0110_carry__1_i_2_n_0,tree_0110_carry__1_i_3_n_0,tree_0110_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_1
       (.I0(A[11]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_2
       (.I0(A[10]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_3
       (.I0(A[9]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_4
       (.I0(A[8]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__1_i_4_n_0));
  CARRY4 tree_0110_carry__2
       (.CI(tree_0110_carry__1_n_0),
        .CO({tree_0110_carry__2_n_0,NLW_tree_0110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[15:12]),
        .O(O142[14:11]),
        .S({tree_0110_carry__2_i_1_n_0,tree_0110_carry__2_i_2_n_0,tree_0110_carry__2_i_3_n_0,tree_0110_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_1
       (.I0(A[15]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_2
       (.I0(A[14]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_3
       (.I0(A[13]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_4
       (.I0(A[12]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__2_i_4_n_0));
  CARRY4 tree_0110_carry__3
       (.CI(tree_0110_carry__2_n_0),
        .CO({tree_0110_carry__3_n_0,NLW_tree_0110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[19:16]),
        .O(O142[18:15]),
        .S({tree_0110_carry__3_i_1_n_0,tree_0110_carry__3_i_2_n_0,tree_0110_carry__3_i_3_n_0,tree_0110_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_1
       (.I0(A[19]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_2
       (.I0(A[18]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_3
       (.I0(A[17]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_4
       (.I0(A[16]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__3_i_4_n_0));
  CARRY4 tree_0110_carry__4
       (.CI(tree_0110_carry__3_n_0),
        .CO(NLW_tree_0110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,A[21:20]}),
        .O({NLW_tree_0110_carry__4_O_UNCONNECTED[3],O142[21:19]}),
        .S({1'b0,tree_0110_carry__4_i_1_n_0,tree_0110_carry__4_i_2_n_0,tree_0110_carry__4_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_1
       (.I0(A[22]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_2
       (.I0(A[21]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_3
       (.I0(A[20]),
        .I1(delta_d3[23]),
        .O(tree_0110_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_1
       (.I0(A[3]),
        .I1(delta_d3[4]),
        .O(tree_0110_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_2
       (.I0(A[2]),
        .I1(delta_d3[3]),
        .O(tree_0110_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_3
       (.I0(A[1]),
        .I1(delta_d3[2]),
        .O(tree_0110_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_4
       (.I0(A[0]),
        .I1(i_out_5_reg_i_23),
        .O(tree_0110_carry_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_6),
        .Q(A[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_5),
        .Q(A[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_4),
        .Q(A[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_7),
        .Q(A[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_6),
        .Q(A[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_5),
        .Q(A[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_4),
        .Q(A[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_7),
        .Q(A[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_6),
        .Q(A[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_5),
        .Q(A[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_4),
        .Q(A[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_7),
        .Q(A[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_6),
        .Q(A[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_5),
        .Q(A[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_6),
        .Q(A[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_5),
        .Q(A[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_4),
        .Q(A[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_7),
        .Q(A[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_6),
        .Q(A[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_5),
        .Q(A[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_4),
        .Q(A[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_7),
        .Q(A[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[10]),
        .Q(\tree_0_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[11]),
        .Q(\tree_0_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[12]),
        .Q(\tree_0_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[13]),
        .Q(\tree_0_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[14]),
        .Q(\tree_0_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[15]),
        .Q(\tree_0_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[16]),
        .Q(\tree_0_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[17]),
        .Q(\tree_0_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[18]),
        .Q(\tree_0_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[19]),
        .Q(\tree_0_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[20]),
        .Q(\tree_0_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[21]),
        .Q(\tree_0_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[22]),
        .Q(\tree_0_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[23]),
        .Q(\tree_0_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[2]),
        .Q(\tree_0_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[3]),
        .Q(\tree_0_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[4]),
        .Q(\tree_0_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[5]),
        .Q(\tree_0_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[6]),
        .Q(\tree_0_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[7]),
        .Q(\tree_0_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[8]),
        .Q(\tree_0_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[9]),
        .Q(\tree_0_reg_n_0_[9] ),
        .R(1'b0));
  CARRY4 tree_1010_carry
       (.CI(1'b0),
        .CO({tree_1010_carry_n_0,NLW_tree_1010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_4_reg[3:0]),
        .O({O143[2:0],NLW_tree_1010_carry_O_UNCONNECTED[0]}),
        .S({tree_1010_carry_i_1_n_0,tree_1010_carry_i_2_n_0,tree_1010_carry_i_3_n_0,tree_1010_carry_i_4_n_0}));
  CARRY4 tree_1010_carry__0
       (.CI(tree_1010_carry_n_0),
        .CO({tree_1010_carry__0_n_0,NLW_tree_1010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_4_reg[7:4]),
        .O(O143[6:3]),
        .S({tree_1010_carry__0_i_1_n_0,tree_1010_carry__0_i_2_n_0,tree_1010_carry__0_i_3_n_0,tree_1010_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_1
       (.I0(i_out_4_reg[7]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_2
       (.I0(i_out_4_reg[6]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_3
       (.I0(i_out_4_reg[5]),
        .I1(delta_d3[7]),
        .O(tree_1010_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_4
       (.I0(i_out_4_reg[4]),
        .I1(delta_d3[6]),
        .O(tree_1010_carry__0_i_4_n_0));
  CARRY4 tree_1010_carry__1
       (.CI(tree_1010_carry__0_n_0),
        .CO({tree_1010_carry__1_n_0,NLW_tree_1010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_4_reg[11:8]),
        .O(O143[10:7]),
        .S({tree_1010_carry__1_i_1_n_0,tree_1010_carry__1_i_2_n_0,tree_1010_carry__1_i_3_n_0,tree_1010_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_1
       (.I0(i_out_4_reg[11]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_2
       (.I0(i_out_4_reg[10]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_3
       (.I0(i_out_4_reg[9]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_4
       (.I0(i_out_4_reg[8]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__1_i_4_n_0));
  CARRY4 tree_1010_carry__2
       (.CI(tree_1010_carry__1_n_0),
        .CO({tree_1010_carry__2_n_0,NLW_tree_1010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_4_reg[15:12]),
        .O(O143[14:11]),
        .S({tree_1010_carry__2_i_1_n_0,tree_1010_carry__2_i_2_n_0,tree_1010_carry__2_i_3_n_0,tree_1010_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_1
       (.I0(i_out_4_reg[15]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_2
       (.I0(i_out_4_reg[14]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_3
       (.I0(i_out_4_reg[13]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_4
       (.I0(i_out_4_reg[12]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__2_i_4_n_0));
  CARRY4 tree_1010_carry__3
       (.CI(tree_1010_carry__2_n_0),
        .CO({tree_1010_carry__3_n_0,NLW_tree_1010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_4_reg[19:16]),
        .O(O143[18:15]),
        .S({tree_1010_carry__3_i_1_n_0,tree_1010_carry__3_i_2_n_0,tree_1010_carry__3_i_3_n_0,tree_1010_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_1
       (.I0(i_out_4_reg[19]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_2
       (.I0(i_out_4_reg[18]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_3
       (.I0(i_out_4_reg[17]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_4
       (.I0(i_out_4_reg[16]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__3_i_4_n_0));
  CARRY4 tree_1010_carry__4
       (.CI(tree_1010_carry__3_n_0),
        .CO(NLW_tree_1010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,i_out_4_reg[20]}),
        .O({NLW_tree_1010_carry__4_O_UNCONNECTED[3:2],O143[20:19]}),
        .S({1'b0,1'b0,tree_1010_carry__4_i_1_n_0,tree_1010_carry__4_i_2_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_1
       (.I0(i_out_4_reg[21]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_2
       (.I0(i_out_4_reg[20]),
        .I1(delta_d3[23]),
        .O(tree_1010_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_1
       (.I0(i_out_4_reg[3]),
        .I1(delta_d3[5]),
        .O(tree_1010_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_2
       (.I0(i_out_4_reg[2]),
        .I1(delta_d3[4]),
        .O(tree_1010_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_3
       (.I0(i_out_4_reg[1]),
        .I1(delta_d3[3]),
        .O(tree_1010_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_4
       (.I0(i_out_4_reg[0]),
        .I1(delta_d3[2]),
        .O(tree_1010_carry_i_4_n_0));
  CARRY4 tree_10_carry
       (.CI(1'b0),
        .CO({tree_10_carry_n_0,NLW_tree_10_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({accum_reg[4:2],1'b0}),
        .O({tree_10_carry_n_4,tree_10_carry_n_5,tree_10_carry_n_6,NLW_tree_10_carry_O_UNCONNECTED[0]}),
        .S({tree_10_carry_i_1_n_0,tree_10_carry_i_2_n_0,tree_10_carry_i_3_n_0,1'b0}));
  CARRY4 tree_10_carry__0
       (.CI(tree_10_carry_n_0),
        .CO({tree_10_carry__0_n_0,NLW_tree_10_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[8:5]),
        .O({tree_10_carry__0_n_4,tree_10_carry__0_n_5,tree_10_carry__0_n_6,tree_10_carry__0_n_7}),
        .S({tree_10_carry__0_i_1_n_0,tree_10_carry__0_i_2_n_0,tree_10_carry__0_i_3_n_0,tree_10_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_1
       (.I0(accum_reg[8]),
        .I1(delta_d1[6]),
        .O(tree_10_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_2
       (.I0(accum_reg[7]),
        .I1(delta_d1[5]),
        .O(tree_10_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_3
       (.I0(accum_reg[6]),
        .I1(delta_d1[4]),
        .O(tree_10_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_4
       (.I0(accum_reg[5]),
        .I1(delta_d1[3]),
        .O(tree_10_carry__0_i_4_n_0));
  CARRY4 tree_10_carry__1
       (.CI(tree_10_carry__0_n_0),
        .CO({tree_10_carry__1_n_0,NLW_tree_10_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[12:9]),
        .O({tree_10_carry__1_n_4,tree_10_carry__1_n_5,tree_10_carry__1_n_6,tree_10_carry__1_n_7}),
        .S({tree_10_carry__1_i_1_n_0,tree_10_carry__1_i_2_n_0,tree_10_carry__1_i_3_n_0,tree_10_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_1
       (.I0(accum_reg[12]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_2
       (.I0(accum_reg[11]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_3
       (.I0(accum_reg[10]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_4
       (.I0(accum_reg[9]),
        .I1(delta_d1[7]),
        .O(tree_10_carry__1_i_4_n_0));
  CARRY4 tree_10_carry__2
       (.CI(tree_10_carry__1_n_0),
        .CO({tree_10_carry__2_n_0,NLW_tree_10_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[16:13]),
        .O({tree_10_carry__2_n_4,tree_10_carry__2_n_5,tree_10_carry__2_n_6,tree_10_carry__2_n_7}),
        .S({tree_10_carry__2_i_1_n_0,tree_10_carry__2_i_2_n_0,tree_10_carry__2_i_3_n_0,tree_10_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_1
       (.I0(accum_reg[16]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_2
       (.I0(accum_reg[15]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_3
       (.I0(accum_reg[14]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_4
       (.I0(accum_reg[13]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__2_i_4_n_0));
  CARRY4 tree_10_carry__3
       (.CI(tree_10_carry__2_n_0),
        .CO({tree_10_carry__3_n_0,NLW_tree_10_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[20:17]),
        .O({tree_10_carry__3_n_4,tree_10_carry__3_n_5,tree_10_carry__3_n_6,tree_10_carry__3_n_7}),
        .S({tree_10_carry__3_i_1_n_0,tree_10_carry__3_i_2_n_0,tree_10_carry__3_i_3_n_0,tree_10_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_1
       (.I0(accum_reg[20]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_2
       (.I0(accum_reg[19]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_3
       (.I0(accum_reg[18]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_4
       (.I0(accum_reg[17]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__3_i_4_n_0));
  CARRY4 tree_10_carry__4
       (.CI(tree_10_carry__3_n_0),
        .CO(NLW_tree_10_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,accum_reg[22:21]}),
        .O({NLW_tree_10_carry__4_O_UNCONNECTED[3],tree_10_carry__4_n_5,tree_10_carry__4_n_6,tree_10_carry__4_n_7}),
        .S({1'b0,tree_10_carry__4_i_1__0_n_0,tree_10_carry__4_i_2_n_0,tree_10_carry__4_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_1__0
       (.I0(accum_reg[23]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_2
       (.I0(accum_reg[22]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_3
       (.I0(accum_reg[21]),
        .I1(delta_d1[23]),
        .O(tree_10_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_1
       (.I0(accum_reg[4]),
        .I1(delta_d1[2]),
        .O(tree_10_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_2
       (.I0(accum_reg[3]),
        .I1(delta_d1[1]),
        .O(tree_10_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_3
       (.I0(accum_reg[2]),
        .I1(delta_d1[0]),
        .O(tree_10_carry_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[10] ),
        .Q(i_out_4_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[11] ),
        .Q(i_out_4_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[12] ),
        .Q(i_out_4_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[13] ),
        .Q(i_out_4_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[14] ),
        .Q(i_out_4_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[15] ),
        .Q(i_out_4_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[16] ),
        .Q(i_out_4_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[17] ),
        .Q(i_out_4_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[18] ),
        .Q(i_out_4_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[19] ),
        .Q(i_out_4_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[20] ),
        .Q(i_out_4_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[21] ),
        .Q(i_out_4_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[22] ),
        .Q(i_out_4_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[23] ),
        .Q(i_out_4_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[2] ),
        .Q(i_out_4_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[3] ),
        .Q(i_out_4_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[4] ),
        .Q(i_out_4_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[5] ),
        .Q(i_out_4_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[6] ),
        .Q(i_out_4_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[7] ),
        .Q(i_out_4_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[8] ),
        .Q(i_out_4_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[9] ),
        .Q(i_out_4_reg[7]),
        .R(1'b0));
  CARRY4 tree_110_carry
       (.CI(1'b0),
        .CO({tree_110_carry_n_0,NLW_tree_110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[4] ,\tree_1_reg_n_0_[3] ,\tree_1_reg_n_0_[2] ,1'b0}),
        .O({tree_110_carry_n_4,tree_110_carry_n_5,tree_110_carry_n_6,NLW_tree_110_carry_O_UNCONNECTED[0]}),
        .S({tree_110_carry_i_1_n_0,tree_110_carry_i_2_n_0,tree_110_carry_i_3_n_0,delta_d2[0]}));
  CARRY4 tree_110_carry__0
       (.CI(tree_110_carry_n_0),
        .CO({tree_110_carry__0_n_0,NLW_tree_110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[8] ,\tree_1_reg_n_0_[7] ,\tree_1_reg_n_0_[6] ,\tree_1_reg_n_0_[5] }),
        .O({tree_110_carry__0_n_4,tree_110_carry__0_n_5,tree_110_carry__0_n_6,tree_110_carry__0_n_7}),
        .S({tree_110_carry__0_i_1_n_0,tree_110_carry__0_i_2_n_0,tree_110_carry__0_i_3_n_0,tree_110_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_1
       (.I0(\tree_1_reg_n_0_[8] ),
        .I1(delta_d2[7]),
        .O(tree_110_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_2
       (.I0(\tree_1_reg_n_0_[7] ),
        .I1(delta_d2[6]),
        .O(tree_110_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_3
       (.I0(\tree_1_reg_n_0_[6] ),
        .I1(delta_d2[5]),
        .O(tree_110_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_4
       (.I0(\tree_1_reg_n_0_[5] ),
        .I1(delta_d2[4]),
        .O(tree_110_carry__0_i_4_n_0));
  CARRY4 tree_110_carry__1
       (.CI(tree_110_carry__0_n_0),
        .CO({tree_110_carry__1_n_0,NLW_tree_110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[12] ,\tree_1_reg_n_0_[11] ,\tree_1_reg_n_0_[10] ,\tree_1_reg_n_0_[9] }),
        .O({tree_110_carry__1_n_4,tree_110_carry__1_n_5,tree_110_carry__1_n_6,tree_110_carry__1_n_7}),
        .S({tree_110_carry__1_i_1_n_0,tree_110_carry__1_i_2_n_0,tree_110_carry__1_i_3_n_0,tree_110_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_1
       (.I0(\tree_1_reg_n_0_[12] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_2
       (.I0(\tree_1_reg_n_0_[11] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_3
       (.I0(\tree_1_reg_n_0_[10] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_4
       (.I0(\tree_1_reg_n_0_[9] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__1_i_4_n_0));
  CARRY4 tree_110_carry__2
       (.CI(tree_110_carry__1_n_0),
        .CO({tree_110_carry__2_n_0,NLW_tree_110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[16] ,\tree_1_reg_n_0_[15] ,\tree_1_reg_n_0_[14] ,\tree_1_reg_n_0_[13] }),
        .O({tree_110_carry__2_n_4,tree_110_carry__2_n_5,tree_110_carry__2_n_6,tree_110_carry__2_n_7}),
        .S({tree_110_carry__2_i_1_n_0,tree_110_carry__2_i_2_n_0,tree_110_carry__2_i_3_n_0,tree_110_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_1
       (.I0(\tree_1_reg_n_0_[16] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_2
       (.I0(\tree_1_reg_n_0_[15] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_3
       (.I0(\tree_1_reg_n_0_[14] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_4
       (.I0(\tree_1_reg_n_0_[13] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__2_i_4_n_0));
  CARRY4 tree_110_carry__3
       (.CI(tree_110_carry__2_n_0),
        .CO({tree_110_carry__3_n_0,NLW_tree_110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[20] ,\tree_1_reg_n_0_[19] ,\tree_1_reg_n_0_[18] ,\tree_1_reg_n_0_[17] }),
        .O({tree_110_carry__3_n_4,tree_110_carry__3_n_5,tree_110_carry__3_n_6,tree_110_carry__3_n_7}),
        .S({tree_110_carry__3_i_1_n_0,tree_110_carry__3_i_2_n_0,tree_110_carry__3_i_3_n_0,tree_110_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_1
       (.I0(\tree_1_reg_n_0_[20] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_2
       (.I0(\tree_1_reg_n_0_[19] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_3
       (.I0(\tree_1_reg_n_0_[18] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_4
       (.I0(\tree_1_reg_n_0_[17] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__3_i_4_n_0));
  CARRY4 tree_110_carry__4
       (.CI(tree_110_carry__3_n_0),
        .CO(NLW_tree_110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\tree_1_reg_n_0_[22] ,\tree_1_reg_n_0_[21] }),
        .O({NLW_tree_110_carry__4_O_UNCONNECTED[3],tree_110_carry__4_n_5,tree_110_carry__4_n_6,tree_110_carry__4_n_7}),
        .S({1'b0,tree_110_carry__4_i_1_n_0,tree_110_carry__4_i_2_n_0,tree_110_carry__4_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_1
       (.I0(\tree_1_reg_n_0_[23] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_2
       (.I0(\tree_1_reg_n_0_[22] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_3
       (.I0(\tree_1_reg_n_0_[21] ),
        .I1(delta_d2[23]),
        .O(tree_110_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_1
       (.I0(\tree_1_reg_n_0_[4] ),
        .I1(delta_d2[3]),
        .O(tree_110_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_2
       (.I0(\tree_1_reg_n_0_[3] ),
        .I1(delta_d2[2]),
        .O(tree_110_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_3
       (.I0(\tree_1_reg_n_0_[2] ),
        .I1(delta_d2[1]),
        .O(tree_110_carry_i_3_n_0));
  CARRY4 tree_1110_carry
       (.CI(1'b0),
        .CO({tree_1110_carry_n_0,NLW_tree_1110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_6_reg[3:0]),
        .O({O144[2:0],NLW_tree_1110_carry_O_UNCONNECTED[0]}),
        .S({tree_1110_carry_i_1_n_0,tree_1110_carry_i_2_n_0,tree_1110_carry_i_3_n_0,tree_1110_carry_i_4_n_0}));
  CARRY4 tree_1110_carry__0
       (.CI(tree_1110_carry_n_0),
        .CO({tree_1110_carry__0_n_0,NLW_tree_1110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_6_reg[7:4]),
        .O(O144[6:3]),
        .S({tree_1110_carry__0_i_1_n_0,tree_1110_carry__0_i_2_n_0,tree_1110_carry__0_i_3_n_0,tree_1110_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_1
       (.I0(i_out_6_reg[7]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_2
       (.I0(i_out_6_reg[6]),
        .I1(delta_d3[7]),
        .O(tree_1110_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_3
       (.I0(i_out_6_reg[5]),
        .I1(delta_d3[6]),
        .O(tree_1110_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_4
       (.I0(i_out_6_reg[4]),
        .I1(delta_d3[5]),
        .O(tree_1110_carry__0_i_4_n_0));
  CARRY4 tree_1110_carry__1
       (.CI(tree_1110_carry__0_n_0),
        .CO({tree_1110_carry__1_n_0,NLW_tree_1110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_6_reg[11:8]),
        .O(O144[10:7]),
        .S({tree_1110_carry__1_i_1_n_0,tree_1110_carry__1_i_2_n_0,tree_1110_carry__1_i_3_n_0,tree_1110_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_1
       (.I0(i_out_6_reg[11]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_2
       (.I0(i_out_6_reg[10]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_3
       (.I0(i_out_6_reg[9]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_4
       (.I0(i_out_6_reg[8]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__1_i_4_n_0));
  CARRY4 tree_1110_carry__2
       (.CI(tree_1110_carry__1_n_0),
        .CO({tree_1110_carry__2_n_0,NLW_tree_1110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_6_reg[15:12]),
        .O(O144[14:11]),
        .S({tree_1110_carry__2_i_1_n_0,tree_1110_carry__2_i_2_n_0,tree_1110_carry__2_i_3_n_0,tree_1110_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_1
       (.I0(i_out_6_reg[15]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_2
       (.I0(i_out_6_reg[14]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_3
       (.I0(i_out_6_reg[13]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_4
       (.I0(i_out_6_reg[12]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__2_i_4_n_0));
  CARRY4 tree_1110_carry__3
       (.CI(tree_1110_carry__2_n_0),
        .CO({tree_1110_carry__3_n_0,NLW_tree_1110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(i_out_6_reg[19:16]),
        .O(O144[18:15]),
        .S({tree_1110_carry__3_i_1_n_0,tree_1110_carry__3_i_2_n_0,tree_1110_carry__3_i_3_n_0,tree_1110_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_1
       (.I0(i_out_6_reg[19]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_2
       (.I0(i_out_6_reg[18]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_3
       (.I0(i_out_6_reg[17]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_4
       (.I0(i_out_6_reg[16]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__3_i_4_n_0));
  CARRY4 tree_1110_carry__4
       (.CI(tree_1110_carry__3_n_0),
        .CO(NLW_tree_1110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,i_out_6_reg[21:20]}),
        .O({NLW_tree_1110_carry__4_O_UNCONNECTED[3],O144[21:19]}),
        .S({1'b0,tree_1110_carry__4_i_1_n_0,tree_1110_carry__4_i_2_n_0,tree_1110_carry__4_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_1
       (.I0(i_out_6_reg[22]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_2
       (.I0(i_out_6_reg[21]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_3
       (.I0(i_out_6_reg[20]),
        .I1(delta_d3[23]),
        .O(tree_1110_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_1
       (.I0(i_out_6_reg[3]),
        .I1(delta_d3[4]),
        .O(tree_1110_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_2
       (.I0(i_out_6_reg[2]),
        .I1(delta_d3[3]),
        .O(tree_1110_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_3
       (.I0(i_out_6_reg[1]),
        .I1(delta_d3[2]),
        .O(tree_1110_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_4
       (.I0(i_out_6_reg[0]),
        .I1(i_out_5_reg_i_23),
        .O(tree_1110_carry_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_6),
        .Q(i_out_6_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_5),
        .Q(i_out_6_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_4),
        .Q(i_out_6_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_7),
        .Q(i_out_6_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_6),
        .Q(i_out_6_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_5),
        .Q(i_out_6_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_4),
        .Q(i_out_6_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_7),
        .Q(i_out_6_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_6),
        .Q(i_out_6_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_5),
        .Q(i_out_6_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_7),
        .Q(i_out_6_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_4),
        .Q(i_out_6_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_7),
        .Q(i_out_6_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_6),
        .Q(i_out_6_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_5),
        .Q(i_out_6_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_6),
        .Q(i_out_6_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_5),
        .Q(i_out_6_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_4),
        .Q(i_out_6_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_7),
        .Q(i_out_6_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_6),
        .Q(i_out_6_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_5),
        .Q(i_out_6_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_4),
        .Q(i_out_6_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_7),
        .Q(i_out_6_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_6),
        .Q(\tree_1_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_5),
        .Q(\tree_1_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_4),
        .Q(\tree_1_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_7),
        .Q(\tree_1_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_6),
        .Q(\tree_1_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_5),
        .Q(\tree_1_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_4),
        .Q(\tree_1_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_7),
        .Q(\tree_1_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_6),
        .Q(\tree_1_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_5),
        .Q(\tree_1_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_4),
        .Q(\tree_1_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_7),
        .Q(\tree_1_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_6),
        .Q(\tree_1_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_5),
        .Q(\tree_1_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_6),
        .Q(\tree_1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_5),
        .Q(\tree_1_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_4),
        .Q(\tree_1_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_7),
        .Q(\tree_1_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_6),
        .Q(\tree_1_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_5),
        .Q(\tree_1_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_4),
        .Q(\tree_1_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_7),
        .Q(\tree_1_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "interpolate" *) 
module interpolate_2
   (A,
    \delta_reg[7]_0 ,
    Q,
    out_50_i_23,
    out_40,
    out_60,
    out_10_i_1,
    O148,
    O149,
    O150,
    out_10_i_22,
    out_30_i_23,
    out_50_i_22,
    out_70_i_23,
    clk,
    \s_output_am_out_reg[7] ,
    \s_output_am_out_reg[3] ,
    \s_output_am_out_reg[7]_0 );
  output [22:0]A;
  output [7:0]\delta_reg[7]_0 ;
  output [21:0]Q;
  output [0:0]out_50_i_23;
  output [21:0]out_40;
  output [22:0]out_60;
  output [20:0]out_10_i_1;
  output [21:0]O148;
  output [20:0]O149;
  output [21:0]O150;
  output out_10_i_22;
  output out_30_i_23;
  output out_50_i_22;
  output out_70_i_23;
  input clk;
  input [7:0]\s_output_am_out_reg[7] ;
  input [3:0]\s_output_am_out_reg[3] ;
  input [3:0]\s_output_am_out_reg[7]_0 ;

  wire [22:0]A;
  wire [21:0]O148;
  wire [20:0]O149;
  wire [21:0]O150;
  wire [21:0]Q;
  wire \accum[10]_i_2__1_n_0 ;
  wire \accum[10]_i_3__1_n_0 ;
  wire \accum[10]_i_4__1_n_0 ;
  wire \accum[10]_i_5__1_n_0 ;
  wire \accum[14]_i_2__1_n_0 ;
  wire \accum[14]_i_3__1_n_0 ;
  wire \accum[14]_i_4__1_n_0 ;
  wire \accum[14]_i_5__1_n_0 ;
  wire \accum[18]_i_2__1_n_0 ;
  wire \accum[18]_i_3__1_n_0 ;
  wire \accum[18]_i_4__1_n_0 ;
  wire \accum[18]_i_5__1_n_0 ;
  wire \accum[22]_i_2__1_n_0 ;
  wire \accum[22]_i_3__1_n_0 ;
  wire \accum[2]_i_2__1_n_0 ;
  wire \accum[2]_i_3__1_n_0 ;
  wire \accum[2]_i_4__1_n_0 ;
  wire \accum[6]_i_2__1_n_0 ;
  wire \accum[6]_i_3__1_n_0 ;
  wire \accum[6]_i_4__1_n_0 ;
  wire \accum[6]_i_5__1_n_0 ;
  wire [23:2]accum_reg;
  wire \accum_reg[10]_i_1__1_n_0 ;
  wire \accum_reg[10]_i_1__1_n_4 ;
  wire \accum_reg[10]_i_1__1_n_5 ;
  wire \accum_reg[10]_i_1__1_n_6 ;
  wire \accum_reg[10]_i_1__1_n_7 ;
  wire \accum_reg[14]_i_1__1_n_0 ;
  wire \accum_reg[14]_i_1__1_n_4 ;
  wire \accum_reg[14]_i_1__1_n_5 ;
  wire \accum_reg[14]_i_1__1_n_6 ;
  wire \accum_reg[14]_i_1__1_n_7 ;
  wire \accum_reg[18]_i_1__1_n_0 ;
  wire \accum_reg[18]_i_1__1_n_4 ;
  wire \accum_reg[18]_i_1__1_n_5 ;
  wire \accum_reg[18]_i_1__1_n_6 ;
  wire \accum_reg[18]_i_1__1_n_7 ;
  wire \accum_reg[22]_i_1__1_n_6 ;
  wire \accum_reg[22]_i_1__1_n_7 ;
  wire \accum_reg[2]_i_1__1_n_0 ;
  wire \accum_reg[2]_i_1__1_n_4 ;
  wire \accum_reg[2]_i_1__1_n_5 ;
  wire \accum_reg[2]_i_1__1_n_6 ;
  wire \accum_reg[2]_i_1__1_n_7 ;
  wire \accum_reg[6]_i_1__1_n_0 ;
  wire \accum_reg[6]_i_1__1_n_4 ;
  wire \accum_reg[6]_i_1__1_n_5 ;
  wire \accum_reg[6]_i_1__1_n_6 ;
  wire \accum_reg[6]_i_1__1_n_7 ;
  wire clk;
  wire count0_carry__0_i_1__0_n_0;
  wire count0_carry__0_i_2__0_n_0;
  wire count0_carry__0_i_3__0_n_0;
  wire count0_carry__0_i_4__0_n_0;
  wire count0_carry__0_n_0;
  wire count0_carry__0_n_4;
  wire count0_carry__0_n_5;
  wire count0_carry__0_n_6;
  wire count0_carry__0_n_7;
  wire count0_carry__1_i_1__0_n_0;
  wire count0_carry__1_i_2__0_n_0;
  wire count0_carry__1_i_3__0_n_0;
  wire count0_carry__1_i_4__0_n_0;
  wire count0_carry__1_n_4;
  wire count0_carry__1_n_5;
  wire count0_carry__1_n_6;
  wire count0_carry__1_n_7;
  wire count0_carry_i_1__0_n_0;
  wire count0_carry_i_2__0_n_0;
  wire count0_carry_i_3__0_n_0;
  wire count0_carry_i_4__0_n_0;
  wire count0_carry_n_0;
  wire count0_carry_n_4;
  wire count0_carry_n_5;
  wire count0_carry_n_6;
  wire count0_carry_n_7;
  wire \count[0]_i_1__0_n_0 ;
  wire \count[12]_i_2__0_n_0 ;
  wire \count[12]_i_3__0_n_0 ;
  wire \count_reg_n_0_[0] ;
  wire \count_reg_n_0_[10] ;
  wire \count_reg_n_0_[11] ;
  wire \count_reg_n_0_[12] ;
  wire \count_reg_n_0_[1] ;
  wire \count_reg_n_0_[2] ;
  wire \count_reg_n_0_[3] ;
  wire \count_reg_n_0_[4] ;
  wire \count_reg_n_0_[5] ;
  wire \count_reg_n_0_[6] ;
  wire \count_reg_n_0_[7] ;
  wire \count_reg_n_0_[8] ;
  wire \count_reg_n_0_[9] ;
  wire delta0_carry__0_n_0;
  wire delta0_carry__0_n_4;
  wire delta0_carry__0_n_5;
  wire delta0_carry__0_n_6;
  wire delta0_carry__0_n_7;
  wire delta0_carry__1_n_7;
  wire delta0_carry_n_0;
  wire delta0_carry_n_4;
  wire delta0_carry_n_5;
  wire delta0_carry_n_6;
  wire delta0_carry_n_7;
  wire \delta_d1_reg_n_0_[0] ;
  wire \delta_d1_reg_n_0_[1] ;
  wire \delta_d1_reg_n_0_[23] ;
  wire \delta_d1_reg_n_0_[2] ;
  wire \delta_d1_reg_n_0_[3] ;
  wire \delta_d1_reg_n_0_[4] ;
  wire \delta_d1_reg_n_0_[5] ;
  wire \delta_d1_reg_n_0_[6] ;
  wire \delta_d1_reg_n_0_[7] ;
  wire \delta_d2_reg_n_0_[0] ;
  wire \delta_d2_reg_n_0_[1] ;
  wire \delta_d2_reg_n_0_[23] ;
  wire \delta_d2_reg_n_0_[2] ;
  wire \delta_d2_reg_n_0_[3] ;
  wire \delta_d2_reg_n_0_[4] ;
  wire \delta_d2_reg_n_0_[5] ;
  wire \delta_d2_reg_n_0_[6] ;
  wire \delta_d2_reg_n_0_[7] ;
  wire \delta_d3_reg_n_0_[23] ;
  wire \delta_d3_reg_n_0_[2] ;
  wire \delta_d3_reg_n_0_[3] ;
  wire \delta_d3_reg_n_0_[4] ;
  wire \delta_d3_reg_n_0_[5] ;
  wire \delta_d3_reg_n_0_[6] ;
  wire \delta_d3_reg_n_0_[7] ;
  wire [7:0]\delta_reg[7]_0 ;
  wire \delta_reg_n_0_[0] ;
  wire \delta_reg_n_0_[1] ;
  wire \delta_reg_n_0_[20] ;
  wire \delta_reg_n_0_[2] ;
  wire \delta_reg_n_0_[3] ;
  wire \delta_reg_n_0_[4] ;
  wire \delta_reg_n_0_[5] ;
  wire \delta_reg_n_0_[6] ;
  wire \delta_reg_n_0_[7] ;
  wire last_input;
  wire [20:0]out_10_i_1;
  wire out_10_i_22;
  wire out_30_i_23;
  wire [21:0]out_40;
  wire out_50_i_22;
  wire [0:0]out_50_i_23;
  wire [22:0]out_60;
  wire out_70_i_23;
  wire [3:0]\s_output_am_out_reg[3] ;
  wire [7:0]\s_output_am_out_reg[7] ;
  wire [3:0]\s_output_am_out_reg[7]_0 ;
  wire tree_0010_carry__0_i_1__1_n_0;
  wire tree_0010_carry__0_i_2__1_n_0;
  wire tree_0010_carry__0_i_3__1_n_0;
  wire tree_0010_carry__0_i_4__1_n_0;
  wire tree_0010_carry__0_n_0;
  wire tree_0010_carry__1_i_1__1_n_0;
  wire tree_0010_carry__1_i_2__1_n_0;
  wire tree_0010_carry__1_i_3__1_n_0;
  wire tree_0010_carry__1_i_4__1_n_0;
  wire tree_0010_carry__1_n_0;
  wire tree_0010_carry__2_i_1__1_n_0;
  wire tree_0010_carry__2_i_2__1_n_0;
  wire tree_0010_carry__2_i_3__1_n_0;
  wire tree_0010_carry__2_i_4__1_n_0;
  wire tree_0010_carry__2_n_0;
  wire tree_0010_carry__3_i_1__1_n_0;
  wire tree_0010_carry__3_i_2__1_n_0;
  wire tree_0010_carry__3_i_3__1_n_0;
  wire tree_0010_carry__3_i_4__1_n_0;
  wire tree_0010_carry__3_n_0;
  wire tree_0010_carry__4_i_1__1_n_0;
  wire tree_0010_carry__4_i_2__1_n_0;
  wire tree_0010_carry_i_1__1_n_0;
  wire tree_0010_carry_i_2__1_n_0;
  wire tree_0010_carry_i_3__1_n_0;
  wire tree_0010_carry_i_4__1_n_0;
  wire tree_0010_carry_n_0;
  wire tree_010_carry__0_i_1__1_n_0;
  wire tree_010_carry__0_i_2__1_n_0;
  wire tree_010_carry__0_i_3__1_n_0;
  wire tree_010_carry__0_i_4__1_n_0;
  wire tree_010_carry__0_n_0;
  wire tree_010_carry__0_n_4;
  wire tree_010_carry__0_n_5;
  wire tree_010_carry__0_n_6;
  wire tree_010_carry__0_n_7;
  wire tree_010_carry__1_i_1__1_n_0;
  wire tree_010_carry__1_i_2__1_n_0;
  wire tree_010_carry__1_i_3__1_n_0;
  wire tree_010_carry__1_i_4__1_n_0;
  wire tree_010_carry__1_n_0;
  wire tree_010_carry__1_n_4;
  wire tree_010_carry__1_n_5;
  wire tree_010_carry__1_n_6;
  wire tree_010_carry__1_n_7;
  wire tree_010_carry__2_i_1__1_n_0;
  wire tree_010_carry__2_i_2__1_n_0;
  wire tree_010_carry__2_i_3__1_n_0;
  wire tree_010_carry__2_i_4__1_n_0;
  wire tree_010_carry__2_n_0;
  wire tree_010_carry__2_n_4;
  wire tree_010_carry__2_n_5;
  wire tree_010_carry__2_n_6;
  wire tree_010_carry__2_n_7;
  wire tree_010_carry__3_i_1__1_n_0;
  wire tree_010_carry__3_i_2__1_n_0;
  wire tree_010_carry__3_i_3__1_n_0;
  wire tree_010_carry__3_i_4__1_n_0;
  wire tree_010_carry__3_n_0;
  wire tree_010_carry__3_n_4;
  wire tree_010_carry__3_n_5;
  wire tree_010_carry__3_n_6;
  wire tree_010_carry__3_n_7;
  wire tree_010_carry__4_i_1__1_n_0;
  wire tree_010_carry__4_i_2__1_n_0;
  wire tree_010_carry__4_i_3__1_n_0;
  wire tree_010_carry__4_n_5;
  wire tree_010_carry__4_n_6;
  wire tree_010_carry__4_n_7;
  wire tree_010_carry_i_1__1_n_0;
  wire tree_010_carry_i_2__1_n_0;
  wire tree_010_carry_i_3__1_n_0;
  wire tree_010_carry_n_0;
  wire tree_010_carry_n_4;
  wire tree_010_carry_n_5;
  wire tree_010_carry_n_6;
  wire tree_010_carry_n_7;
  wire tree_0110_carry__0_i_1__1_n_0;
  wire tree_0110_carry__0_i_2__1_n_0;
  wire tree_0110_carry__0_i_3__1_n_0;
  wire tree_0110_carry__0_i_4__1_n_0;
  wire tree_0110_carry__0_n_0;
  wire tree_0110_carry__1_i_1__1_n_0;
  wire tree_0110_carry__1_i_2__1_n_0;
  wire tree_0110_carry__1_i_3__1_n_0;
  wire tree_0110_carry__1_i_4__1_n_0;
  wire tree_0110_carry__1_n_0;
  wire tree_0110_carry__2_i_1__1_n_0;
  wire tree_0110_carry__2_i_2__1_n_0;
  wire tree_0110_carry__2_i_3__1_n_0;
  wire tree_0110_carry__2_i_4__1_n_0;
  wire tree_0110_carry__2_n_0;
  wire tree_0110_carry__3_i_1__1_n_0;
  wire tree_0110_carry__3_i_2__1_n_0;
  wire tree_0110_carry__3_i_3__1_n_0;
  wire tree_0110_carry__3_i_4__1_n_0;
  wire tree_0110_carry__3_n_0;
  wire tree_0110_carry__4_i_1__1_n_0;
  wire tree_0110_carry__4_i_2__1_n_0;
  wire tree_0110_carry__4_i_3__1_n_0;
  wire tree_0110_carry_i_1__1_n_0;
  wire tree_0110_carry_i_2__1_n_0;
  wire tree_0110_carry_i_3__1_n_0;
  wire tree_0110_carry_i_4__1_n_0;
  wire tree_0110_carry_n_0;
  wire \tree_0_reg_n_0_[10] ;
  wire \tree_0_reg_n_0_[11] ;
  wire \tree_0_reg_n_0_[12] ;
  wire \tree_0_reg_n_0_[13] ;
  wire \tree_0_reg_n_0_[14] ;
  wire \tree_0_reg_n_0_[15] ;
  wire \tree_0_reg_n_0_[16] ;
  wire \tree_0_reg_n_0_[17] ;
  wire \tree_0_reg_n_0_[18] ;
  wire \tree_0_reg_n_0_[19] ;
  wire \tree_0_reg_n_0_[20] ;
  wire \tree_0_reg_n_0_[21] ;
  wire \tree_0_reg_n_0_[22] ;
  wire \tree_0_reg_n_0_[23] ;
  wire \tree_0_reg_n_0_[2] ;
  wire \tree_0_reg_n_0_[3] ;
  wire \tree_0_reg_n_0_[4] ;
  wire \tree_0_reg_n_0_[5] ;
  wire \tree_0_reg_n_0_[6] ;
  wire \tree_0_reg_n_0_[7] ;
  wire \tree_0_reg_n_0_[8] ;
  wire \tree_0_reg_n_0_[9] ;
  wire tree_1010_carry__0_i_1__1_n_0;
  wire tree_1010_carry__0_i_2__1_n_0;
  wire tree_1010_carry__0_i_3__1_n_0;
  wire tree_1010_carry__0_i_4__1_n_0;
  wire tree_1010_carry__0_n_0;
  wire tree_1010_carry__1_i_1__1_n_0;
  wire tree_1010_carry__1_i_2__1_n_0;
  wire tree_1010_carry__1_i_3__1_n_0;
  wire tree_1010_carry__1_i_4__1_n_0;
  wire tree_1010_carry__1_n_0;
  wire tree_1010_carry__2_i_1__1_n_0;
  wire tree_1010_carry__2_i_2__1_n_0;
  wire tree_1010_carry__2_i_3__1_n_0;
  wire tree_1010_carry__2_i_4__1_n_0;
  wire tree_1010_carry__2_n_0;
  wire tree_1010_carry__3_i_1__1_n_0;
  wire tree_1010_carry__3_i_2__1_n_0;
  wire tree_1010_carry__3_i_3__1_n_0;
  wire tree_1010_carry__3_i_4__1_n_0;
  wire tree_1010_carry__3_n_0;
  wire tree_1010_carry__4_i_1__1_n_0;
  wire tree_1010_carry__4_i_2__1_n_0;
  wire tree_1010_carry_i_1__1_n_0;
  wire tree_1010_carry_i_2__1_n_0;
  wire tree_1010_carry_i_3__1_n_0;
  wire tree_1010_carry_i_4__1_n_0;
  wire tree_1010_carry_n_0;
  wire tree_10_carry__0_i_1__1_n_0;
  wire tree_10_carry__0_i_2__1_n_0;
  wire tree_10_carry__0_i_3__1_n_0;
  wire tree_10_carry__0_i_4__1_n_0;
  wire tree_10_carry__0_n_0;
  wire tree_10_carry__0_n_4;
  wire tree_10_carry__0_n_5;
  wire tree_10_carry__0_n_6;
  wire tree_10_carry__0_n_7;
  wire tree_10_carry__1_i_1__1_n_0;
  wire tree_10_carry__1_i_2__1_n_0;
  wire tree_10_carry__1_i_3__1_n_0;
  wire tree_10_carry__1_i_4__1_n_0;
  wire tree_10_carry__1_n_0;
  wire tree_10_carry__1_n_4;
  wire tree_10_carry__1_n_5;
  wire tree_10_carry__1_n_6;
  wire tree_10_carry__1_n_7;
  wire tree_10_carry__2_i_1__1_n_0;
  wire tree_10_carry__2_i_2__1_n_0;
  wire tree_10_carry__2_i_3__1_n_0;
  wire tree_10_carry__2_i_4__1_n_0;
  wire tree_10_carry__2_n_0;
  wire tree_10_carry__2_n_4;
  wire tree_10_carry__2_n_5;
  wire tree_10_carry__2_n_6;
  wire tree_10_carry__2_n_7;
  wire tree_10_carry__3_i_1__1_n_0;
  wire tree_10_carry__3_i_2__1_n_0;
  wire tree_10_carry__3_i_3__1_n_0;
  wire tree_10_carry__3_i_4__1_n_0;
  wire tree_10_carry__3_n_0;
  wire tree_10_carry__3_n_4;
  wire tree_10_carry__3_n_5;
  wire tree_10_carry__3_n_6;
  wire tree_10_carry__3_n_7;
  wire tree_10_carry__4_i_1__1_n_0;
  wire tree_10_carry__4_i_2__1_n_0;
  wire tree_10_carry__4_i_3__1_n_0;
  wire tree_10_carry__4_n_5;
  wire tree_10_carry__4_n_6;
  wire tree_10_carry__4_n_7;
  wire tree_10_carry_i_1__1_n_0;
  wire tree_10_carry_i_2__1_n_0;
  wire tree_10_carry_i_3__1_n_0;
  wire tree_10_carry_n_0;
  wire tree_10_carry_n_4;
  wire tree_10_carry_n_5;
  wire tree_10_carry_n_6;
  wire tree_110_carry__0_i_1__1_n_0;
  wire tree_110_carry__0_i_2__1_n_0;
  wire tree_110_carry__0_i_3__1_n_0;
  wire tree_110_carry__0_i_4__1_n_0;
  wire tree_110_carry__0_n_0;
  wire tree_110_carry__0_n_4;
  wire tree_110_carry__0_n_5;
  wire tree_110_carry__0_n_6;
  wire tree_110_carry__0_n_7;
  wire tree_110_carry__1_i_1__1_n_0;
  wire tree_110_carry__1_i_2__1_n_0;
  wire tree_110_carry__1_i_3__1_n_0;
  wire tree_110_carry__1_i_4__1_n_0;
  wire tree_110_carry__1_n_0;
  wire tree_110_carry__1_n_4;
  wire tree_110_carry__1_n_5;
  wire tree_110_carry__1_n_6;
  wire tree_110_carry__1_n_7;
  wire tree_110_carry__2_i_1__1_n_0;
  wire tree_110_carry__2_i_2__1_n_0;
  wire tree_110_carry__2_i_3__1_n_0;
  wire tree_110_carry__2_i_4__1_n_0;
  wire tree_110_carry__2_n_0;
  wire tree_110_carry__2_n_4;
  wire tree_110_carry__2_n_5;
  wire tree_110_carry__2_n_6;
  wire tree_110_carry__2_n_7;
  wire tree_110_carry__3_i_1__1_n_0;
  wire tree_110_carry__3_i_2__1_n_0;
  wire tree_110_carry__3_i_3__1_n_0;
  wire tree_110_carry__3_i_4__1_n_0;
  wire tree_110_carry__3_n_0;
  wire tree_110_carry__3_n_4;
  wire tree_110_carry__3_n_5;
  wire tree_110_carry__3_n_6;
  wire tree_110_carry__3_n_7;
  wire tree_110_carry__4_i_1__1_n_0;
  wire tree_110_carry__4_i_2__1_n_0;
  wire tree_110_carry__4_i_3__1_n_0;
  wire tree_110_carry__4_n_5;
  wire tree_110_carry__4_n_6;
  wire tree_110_carry__4_n_7;
  wire tree_110_carry_i_1__1_n_0;
  wire tree_110_carry_i_2__1_n_0;
  wire tree_110_carry_i_3__1_n_0;
  wire tree_110_carry_n_0;
  wire tree_110_carry_n_4;
  wire tree_110_carry_n_5;
  wire tree_110_carry_n_6;
  wire tree_1110_carry__0_i_1__1_n_0;
  wire tree_1110_carry__0_i_2__1_n_0;
  wire tree_1110_carry__0_i_3__1_n_0;
  wire tree_1110_carry__0_i_4__1_n_0;
  wire tree_1110_carry__0_n_0;
  wire tree_1110_carry__1_i_1__1_n_0;
  wire tree_1110_carry__1_i_2__1_n_0;
  wire tree_1110_carry__1_i_3__1_n_0;
  wire tree_1110_carry__1_i_4__1_n_0;
  wire tree_1110_carry__1_n_0;
  wire tree_1110_carry__2_i_1__1_n_0;
  wire tree_1110_carry__2_i_2__1_n_0;
  wire tree_1110_carry__2_i_3__1_n_0;
  wire tree_1110_carry__2_i_4__1_n_0;
  wire tree_1110_carry__2_n_0;
  wire tree_1110_carry__3_i_1__1_n_0;
  wire tree_1110_carry__3_i_2__1_n_0;
  wire tree_1110_carry__3_i_3__1_n_0;
  wire tree_1110_carry__3_i_4__1_n_0;
  wire tree_1110_carry__3_n_0;
  wire tree_1110_carry__4_i_1__1_n_0;
  wire tree_1110_carry__4_i_2__1_n_0;
  wire tree_1110_carry__4_i_3__1_n_0;
  wire tree_1110_carry_i_1__1_n_0;
  wire tree_1110_carry_i_2__1_n_0;
  wire tree_1110_carry_i_3__1_n_0;
  wire tree_1110_carry_i_4__1_n_0;
  wire tree_1110_carry_n_0;
  wire \tree_1_reg_n_0_[10] ;
  wire \tree_1_reg_n_0_[11] ;
  wire \tree_1_reg_n_0_[12] ;
  wire \tree_1_reg_n_0_[13] ;
  wire \tree_1_reg_n_0_[14] ;
  wire \tree_1_reg_n_0_[15] ;
  wire \tree_1_reg_n_0_[16] ;
  wire \tree_1_reg_n_0_[17] ;
  wire \tree_1_reg_n_0_[18] ;
  wire \tree_1_reg_n_0_[19] ;
  wire \tree_1_reg_n_0_[20] ;
  wire \tree_1_reg_n_0_[21] ;
  wire \tree_1_reg_n_0_[22] ;
  wire \tree_1_reg_n_0_[23] ;
  wire \tree_1_reg_n_0_[2] ;
  wire \tree_1_reg_n_0_[3] ;
  wire \tree_1_reg_n_0_[4] ;
  wire \tree_1_reg_n_0_[5] ;
  wire \tree_1_reg_n_0_[6] ;
  wire \tree_1_reg_n_0_[7] ;
  wire \tree_1_reg_n_0_[8] ;
  wire \tree_1_reg_n_0_[9] ;
  wire [2:0]\NLW_accum_reg[10]_i_1__1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[14]_i_1__1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[18]_i_1__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_accum_reg[22]_i_1__1_CO_UNCONNECTED ;
  wire [3:2]\NLW_accum_reg[22]_i_1__1_O_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[2]_i_1__1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[6]_i_1__1_CO_UNCONNECTED ;
  wire [2:0]NLW_count0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_count0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_count0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_delta0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_delta0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_delta0_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_delta0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_0010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__4_CO_UNCONNECTED;
  wire [3:2]NLW_tree_0010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_010_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_0110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_0110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_1010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__4_CO_UNCONNECTED;
  wire [3:2]NLW_tree_1010_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_10_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_10_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_10_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_1110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_tree_1110_carry__4_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_2__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[13]),
        .O(\accum[10]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_3__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[12]),
        .O(\accum[10]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_4__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[11]),
        .O(\accum[10]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_5__1 
       (.I0(\delta_reg_n_0_[7] ),
        .I1(accum_reg[10]),
        .O(\accum[10]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_2__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[17]),
        .O(\accum[14]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_3__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[16]),
        .O(\accum[14]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_4__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[15]),
        .O(\accum[14]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_5__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[14]),
        .O(\accum[14]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_2__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[21]),
        .O(\accum[18]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_3__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[20]),
        .O(\accum[18]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_4__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[19]),
        .O(\accum[18]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_5__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[18]),
        .O(\accum[18]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_2__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[23]),
        .O(\accum[22]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_3__1 
       (.I0(\delta_reg_n_0_[20] ),
        .I1(accum_reg[22]),
        .O(\accum[22]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_2__1 
       (.I0(\delta_reg_n_0_[2] ),
        .I1(accum_reg[5]),
        .O(\accum[2]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_3__1 
       (.I0(\delta_reg_n_0_[1] ),
        .I1(accum_reg[4]),
        .O(\accum[2]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_4__1 
       (.I0(\delta_reg_n_0_[0] ),
        .I1(accum_reg[3]),
        .O(\accum[2]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_2__1 
       (.I0(\delta_reg_n_0_[6] ),
        .I1(accum_reg[9]),
        .O(\accum[6]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_3__1 
       (.I0(\delta_reg_n_0_[5] ),
        .I1(accum_reg[8]),
        .O(\accum[6]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_4__1 
       (.I0(\delta_reg_n_0_[4] ),
        .I1(accum_reg[7]),
        .O(\accum[6]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_5__1 
       (.I0(\delta_reg_n_0_[3] ),
        .I1(accum_reg[6]),
        .O(\accum[6]_i_5__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__1_n_7 ),
        .Q(accum_reg[10]),
        .R(1'b0));
  CARRY4 \accum_reg[10]_i_1__1 
       (.CI(\accum_reg[6]_i_1__1_n_0 ),
        .CO({\accum_reg[10]_i_1__1_n_0 ,\NLW_accum_reg[10]_i_1__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[7] }),
        .O({\accum_reg[10]_i_1__1_n_4 ,\accum_reg[10]_i_1__1_n_5 ,\accum_reg[10]_i_1__1_n_6 ,\accum_reg[10]_i_1__1_n_7 }),
        .S({\accum[10]_i_2__1_n_0 ,\accum[10]_i_3__1_n_0 ,\accum[10]_i_4__1_n_0 ,\accum[10]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__1_n_6 ),
        .Q(accum_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__1_n_5 ),
        .Q(accum_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__1_n_4 ),
        .Q(accum_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__1_n_7 ),
        .Q(accum_reg[14]),
        .R(1'b0));
  CARRY4 \accum_reg[14]_i_1__1 
       (.CI(\accum_reg[10]_i_1__1_n_0 ),
        .CO({\accum_reg[14]_i_1__1_n_0 ,\NLW_accum_reg[14]_i_1__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] }),
        .O({\accum_reg[14]_i_1__1_n_4 ,\accum_reg[14]_i_1__1_n_5 ,\accum_reg[14]_i_1__1_n_6 ,\accum_reg[14]_i_1__1_n_7 }),
        .S({\accum[14]_i_2__1_n_0 ,\accum[14]_i_3__1_n_0 ,\accum[14]_i_4__1_n_0 ,\accum[14]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__1_n_6 ),
        .Q(accum_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__1_n_5 ),
        .Q(accum_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__1_n_4 ),
        .Q(accum_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__1_n_7 ),
        .Q(accum_reg[18]),
        .R(1'b0));
  CARRY4 \accum_reg[18]_i_1__1 
       (.CI(\accum_reg[14]_i_1__1_n_0 ),
        .CO({\accum_reg[18]_i_1__1_n_0 ,\NLW_accum_reg[18]_i_1__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] ,\delta_reg_n_0_[20] }),
        .O({\accum_reg[18]_i_1__1_n_4 ,\accum_reg[18]_i_1__1_n_5 ,\accum_reg[18]_i_1__1_n_6 ,\accum_reg[18]_i_1__1_n_7 }),
        .S({\accum[18]_i_2__1_n_0 ,\accum[18]_i_3__1_n_0 ,\accum[18]_i_4__1_n_0 ,\accum[18]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__1_n_6 ),
        .Q(accum_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__1_n_5 ),
        .Q(accum_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__1_n_4 ),
        .Q(accum_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__1_n_7 ),
        .Q(accum_reg[22]),
        .R(1'b0));
  CARRY4 \accum_reg[22]_i_1__1 
       (.CI(\accum_reg[18]_i_1__1_n_0 ),
        .CO(\NLW_accum_reg[22]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\delta_reg_n_0_[20] }),
        .O({\NLW_accum_reg[22]_i_1__1_O_UNCONNECTED [3:2],\accum_reg[22]_i_1__1_n_6 ,\accum_reg[22]_i_1__1_n_7 }),
        .S({1'b0,1'b0,\accum[22]_i_2__1_n_0 ,\accum[22]_i_3__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__1_n_6 ),
        .Q(accum_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__1_n_7 ),
        .Q(accum_reg[2]),
        .R(1'b0));
  CARRY4 \accum_reg[2]_i_1__1 
       (.CI(1'b0),
        .CO({\accum_reg[2]_i_1__1_n_0 ,\NLW_accum_reg[2]_i_1__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg_n_0_[2] ,\delta_reg_n_0_[1] ,\delta_reg_n_0_[0] ,1'b0}),
        .O({\accum_reg[2]_i_1__1_n_4 ,\accum_reg[2]_i_1__1_n_5 ,\accum_reg[2]_i_1__1_n_6 ,\accum_reg[2]_i_1__1_n_7 }),
        .S({\accum[2]_i_2__1_n_0 ,\accum[2]_i_3__1_n_0 ,\accum[2]_i_4__1_n_0 ,accum_reg[2]}));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__1_n_6 ),
        .Q(accum_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__1_n_5 ),
        .Q(accum_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__1_n_4 ),
        .Q(accum_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__1_n_7 ),
        .Q(accum_reg[6]),
        .R(1'b0));
  CARRY4 \accum_reg[6]_i_1__1 
       (.CI(\accum_reg[2]_i_1__1_n_0 ),
        .CO({\accum_reg[6]_i_1__1_n_0 ,\NLW_accum_reg[6]_i_1__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg_n_0_[6] ,\delta_reg_n_0_[5] ,\delta_reg_n_0_[4] ,\delta_reg_n_0_[3] }),
        .O({\accum_reg[6]_i_1__1_n_4 ,\accum_reg[6]_i_1__1_n_5 ,\accum_reg[6]_i_1__1_n_6 ,\accum_reg[6]_i_1__1_n_7 }),
        .S({\accum[6]_i_2__1_n_0 ,\accum[6]_i_3__1_n_0 ,\accum[6]_i_4__1_n_0 ,\accum[6]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__1_n_6 ),
        .Q(accum_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__1_n_5 ),
        .Q(accum_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__1_n_4 ),
        .Q(accum_reg[9]),
        .R(1'b0));
  CARRY4 count0_carry
       (.CI(1'b0),
        .CO({count0_carry_n_0,NLW_count0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\count_reg_n_0_[0] ),
        .DI({\count_reg_n_0_[4] ,\count_reg_n_0_[3] ,\count_reg_n_0_[2] ,\count_reg_n_0_[1] }),
        .O({count0_carry_n_4,count0_carry_n_5,count0_carry_n_6,count0_carry_n_7}),
        .S({count0_carry_i_1__0_n_0,count0_carry_i_2__0_n_0,count0_carry_i_3__0_n_0,count0_carry_i_4__0_n_0}));
  CARRY4 count0_carry__0
       (.CI(count0_carry_n_0),
        .CO({count0_carry__0_n_0,NLW_count0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\count_reg_n_0_[8] ,\count_reg_n_0_[7] ,\count_reg_n_0_[6] ,\count_reg_n_0_[5] }),
        .O({count0_carry__0_n_4,count0_carry__0_n_5,count0_carry__0_n_6,count0_carry__0_n_7}),
        .S({count0_carry__0_i_1__0_n_0,count0_carry__0_i_2__0_n_0,count0_carry__0_i_3__0_n_0,count0_carry__0_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_1__0
       (.I0(\count_reg_n_0_[8] ),
        .O(count0_carry__0_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_2__0
       (.I0(\count_reg_n_0_[7] ),
        .O(count0_carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_3__0
       (.I0(\count_reg_n_0_[6] ),
        .O(count0_carry__0_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__0_i_4__0
       (.I0(\count_reg_n_0_[5] ),
        .O(count0_carry__0_i_4__0_n_0));
  CARRY4 count0_carry__1
       (.CI(count0_carry__0_n_0),
        .CO(NLW_count0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\count_reg_n_0_[11] ,\count_reg_n_0_[10] ,\count_reg_n_0_[9] }),
        .O({count0_carry__1_n_4,count0_carry__1_n_5,count0_carry__1_n_6,count0_carry__1_n_7}),
        .S({count0_carry__1_i_1__0_n_0,count0_carry__1_i_2__0_n_0,count0_carry__1_i_3__0_n_0,count0_carry__1_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_1__0
       (.I0(\count_reg_n_0_[12] ),
        .O(count0_carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_2__0
       (.I0(\count_reg_n_0_[11] ),
        .O(count0_carry__1_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_3__0
       (.I0(\count_reg_n_0_[10] ),
        .O(count0_carry__1_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry__1_i_4__0
       (.I0(\count_reg_n_0_[9] ),
        .O(count0_carry__1_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_1__0
       (.I0(\count_reg_n_0_[4] ),
        .O(count0_carry_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_2__0
       (.I0(\count_reg_n_0_[3] ),
        .O(count0_carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_3__0
       (.I0(\count_reg_n_0_[2] ),
        .O(count0_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    count0_carry_i_4__0
       (.I0(\count_reg_n_0_[1] ),
        .O(count0_carry_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1__0 
       (.I0(\count_reg_n_0_[0] ),
        .O(\count[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \count[12]_i_1__0 
       (.I0(\count[12]_i_2__0_n_0 ),
        .I1(\count_reg_n_0_[2] ),
        .I2(\count_reg_n_0_[1] ),
        .I3(\count_reg_n_0_[0] ),
        .I4(\count[12]_i_3__0_n_0 ),
        .O(last_input));
  LUT4 #(
    .INIT(16'h0001)) 
    \count[12]_i_2__0 
       (.I0(\count_reg_n_0_[6] ),
        .I1(\count_reg_n_0_[5] ),
        .I2(\count_reg_n_0_[4] ),
        .I3(\count_reg_n_0_[3] ),
        .O(\count[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \count[12]_i_3__0 
       (.I0(\count_reg_n_0_[7] ),
        .I1(\count_reg_n_0_[8] ),
        .I2(\count_reg_n_0_[9] ),
        .I3(\count_reg_n_0_[10] ),
        .I4(\count_reg_n_0_[12] ),
        .I5(\count_reg_n_0_[11] ),
        .O(\count[12]_i_3__0_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\count[0]_i_1__0_n_0 ),
        .Q(\count_reg_n_0_[0] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__1_n_6),
        .Q(\count_reg_n_0_[10] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__1_n_5),
        .Q(\count_reg_n_0_[11] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__1_n_4),
        .Q(\count_reg_n_0_[12] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry_n_7),
        .Q(\count_reg_n_0_[1] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry_n_6),
        .Q(\count_reg_n_0_[2] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry_n_5),
        .Q(\count_reg_n_0_[3] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry_n_4),
        .Q(\count_reg_n_0_[4] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__0_n_7),
        .Q(\count_reg_n_0_[5] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__0_n_6),
        .Q(\count_reg_n_0_[6] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__0_n_5),
        .Q(\count_reg_n_0_[7] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__0_n_4),
        .Q(\count_reg_n_0_[8] ),
        .S(last_input));
  FDSE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(count0_carry__1_n_7),
        .Q(\count_reg_n_0_[9] ),
        .S(last_input));
  CARRY4 delta0_carry
       (.CI(1'b0),
        .CO({delta0_carry_n_0,NLW_delta0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI(\s_output_am_out_reg[7] [3:0]),
        .O({delta0_carry_n_4,delta0_carry_n_5,delta0_carry_n_6,delta0_carry_n_7}),
        .S(\s_output_am_out_reg[3] ));
  CARRY4 delta0_carry__0
       (.CI(delta0_carry_n_0),
        .CO({delta0_carry__0_n_0,NLW_delta0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\delta_reg[7]_0 [7],\s_output_am_out_reg[7] [6:4]}),
        .O({delta0_carry__0_n_4,delta0_carry__0_n_5,delta0_carry__0_n_6,delta0_carry__0_n_7}),
        .S(\s_output_am_out_reg[7]_0 ));
  CARRY4 delta0_carry__1
       (.CI(delta0_carry__0_n_0),
        .CO(NLW_delta0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_delta0_carry__1_O_UNCONNECTED[3:1],delta0_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[0] ),
        .Q(\delta_d1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[1] ),
        .Q(\delta_d1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[20] ),
        .Q(\delta_d1_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[2] ),
        .Q(\delta_d1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[3] ),
        .Q(\delta_d1_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[4] ),
        .Q(\delta_d1_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[5] ),
        .Q(\delta_d1_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[6] ),
        .Q(\delta_d1_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_reg_n_0_[7] ),
        .Q(\delta_d1_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[0] ),
        .Q(\delta_d2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[1] ),
        .Q(\delta_d2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[23] ),
        .Q(\delta_d2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[2] ),
        .Q(\delta_d2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[3] ),
        .Q(\delta_d2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[4] ),
        .Q(\delta_d2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[5] ),
        .Q(\delta_d2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[6] ),
        .Q(\delta_d2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d1_reg_n_0_[7] ),
        .Q(\delta_d2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[0] ),
        .Q(A[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[1] ),
        .Q(out_50_i_23),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[23] ),
        .Q(\delta_d3_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[2] ),
        .Q(\delta_d3_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[3] ),
        .Q(\delta_d3_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[4] ),
        .Q(\delta_d3_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[5] ),
        .Q(\delta_d3_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[6] ),
        .Q(\delta_d3_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_d3_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\delta_d2_reg_n_0_[7] ),
        .Q(\delta_d3_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[0] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry_n_7),
        .Q(\delta_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[1] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry_n_6),
        .Q(\delta_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[20] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry__1_n_7),
        .Q(\delta_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[2] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry_n_5),
        .Q(\delta_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[3] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry_n_4),
        .Q(\delta_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[4] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry__0_n_7),
        .Q(\delta_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[5] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry__0_n_6),
        .Q(\delta_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[6] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry__0_n_5),
        .Q(\delta_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \delta_reg[7] 
       (.C(clk),
        .CE(last_input),
        .D(delta0_carry__0_n_4),
        .Q(\delta_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[0] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [0]),
        .Q(\delta_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[1] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [1]),
        .Q(\delta_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[2] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [2]),
        .Q(\delta_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[3] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [3]),
        .Q(\delta_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[4] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [4]),
        .Q(\delta_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[5] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [5]),
        .Q(\delta_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[6] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [6]),
        .Q(\delta_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_input_reg[7] 
       (.C(clk),
        .CE(last_input),
        .D(\s_output_am_out_reg[7] [7]),
        .Q(\delta_reg[7]_0 [7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    out_10_i_25
       (.I0(Q[0]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(out_10_i_22));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    out_30_i_25
       (.I0(A[0]),
        .I1(out_50_i_23),
        .O(out_30_i_23));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    out_50_i_25
       (.I0(out_40[0]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(out_50_i_22));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    out_70_i_25
       (.I0(out_60[0]),
        .I1(out_50_i_23),
        .O(out_70_i_23));
  CARRY4 tree_0010_carry
       (.CI(1'b0),
        .CO({tree_0010_carry_n_0,NLW_tree_0010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[3:0]),
        .O({out_10_i_1[2:0],NLW_tree_0010_carry_O_UNCONNECTED[0]}),
        .S({tree_0010_carry_i_1__1_n_0,tree_0010_carry_i_2__1_n_0,tree_0010_carry_i_3__1_n_0,tree_0010_carry_i_4__1_n_0}));
  CARRY4 tree_0010_carry__0
       (.CI(tree_0010_carry_n_0),
        .CO({tree_0010_carry__0_n_0,NLW_tree_0010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(out_10_i_1[6:3]),
        .S({tree_0010_carry__0_i_1__1_n_0,tree_0010_carry__0_i_2__1_n_0,tree_0010_carry__0_i_3__1_n_0,tree_0010_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_1__1
       (.I0(Q[7]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_2__1
       (.I0(Q[6]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_3__1
       (.I0(Q[5]),
        .I1(\delta_d3_reg_n_0_[7] ),
        .O(tree_0010_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_4__1
       (.I0(Q[4]),
        .I1(\delta_d3_reg_n_0_[6] ),
        .O(tree_0010_carry__0_i_4__1_n_0));
  CARRY4 tree_0010_carry__1
       (.CI(tree_0010_carry__0_n_0),
        .CO({tree_0010_carry__1_n_0,NLW_tree_0010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O(out_10_i_1[10:7]),
        .S({tree_0010_carry__1_i_1__1_n_0,tree_0010_carry__1_i_2__1_n_0,tree_0010_carry__1_i_3__1_n_0,tree_0010_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_1__1
       (.I0(Q[11]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_2__1
       (.I0(Q[10]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_3__1
       (.I0(Q[9]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_4__1
       (.I0(Q[8]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__1_i_4__1_n_0));
  CARRY4 tree_0010_carry__2
       (.CI(tree_0010_carry__1_n_0),
        .CO({tree_0010_carry__2_n_0,NLW_tree_0010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O(out_10_i_1[14:11]),
        .S({tree_0010_carry__2_i_1__1_n_0,tree_0010_carry__2_i_2__1_n_0,tree_0010_carry__2_i_3__1_n_0,tree_0010_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_1__1
       (.I0(Q[15]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_2__1
       (.I0(Q[14]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_3__1
       (.I0(Q[13]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_4__1
       (.I0(Q[12]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__2_i_4__1_n_0));
  CARRY4 tree_0010_carry__3
       (.CI(tree_0010_carry__2_n_0),
        .CO({tree_0010_carry__3_n_0,NLW_tree_0010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[19:16]),
        .O(out_10_i_1[18:15]),
        .S({tree_0010_carry__3_i_1__1_n_0,tree_0010_carry__3_i_2__1_n_0,tree_0010_carry__3_i_3__1_n_0,tree_0010_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_1__1
       (.I0(Q[19]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_2__1
       (.I0(Q[18]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_3__1
       (.I0(Q[17]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_4__1
       (.I0(Q[16]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__3_i_4__1_n_0));
  CARRY4 tree_0010_carry__4
       (.CI(tree_0010_carry__3_n_0),
        .CO(NLW_tree_0010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[20]}),
        .O({NLW_tree_0010_carry__4_O_UNCONNECTED[3:2],out_10_i_1[20:19]}),
        .S({1'b0,1'b0,tree_0010_carry__4_i_1__1_n_0,tree_0010_carry__4_i_2__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_1__1
       (.I0(Q[21]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_2__1
       (.I0(Q[20]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0010_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_1__1
       (.I0(Q[3]),
        .I1(\delta_d3_reg_n_0_[5] ),
        .O(tree_0010_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_2__1
       (.I0(Q[2]),
        .I1(\delta_d3_reg_n_0_[4] ),
        .O(tree_0010_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_3__1
       (.I0(Q[1]),
        .I1(\delta_d3_reg_n_0_[3] ),
        .O(tree_0010_carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_4__1
       (.I0(Q[0]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(tree_0010_carry_i_4__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[10] ),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[11] ),
        .Q(Q[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[12] ),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[13] ),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[14] ),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[15] ),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[16] ),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[17] ),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[18] ),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[19] ),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[20] ),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[21] ),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[22] ),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[23] ),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[2] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[3] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[4] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[5] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[6] ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[7] ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[8] ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_0_reg_n_0_[9] ),
        .Q(Q[7]),
        .R(1'b0));
  CARRY4 tree_010_carry
       (.CI(1'b0),
        .CO({tree_010_carry_n_0,NLW_tree_010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[4] ,\tree_0_reg_n_0_[3] ,\tree_0_reg_n_0_[2] ,1'b0}),
        .O({tree_010_carry_n_4,tree_010_carry_n_5,tree_010_carry_n_6,tree_010_carry_n_7}),
        .S({tree_010_carry_i_1__1_n_0,tree_010_carry_i_2__1_n_0,tree_010_carry_i_3__1_n_0,\delta_d2_reg_n_0_[0] }));
  CARRY4 tree_010_carry__0
       (.CI(tree_010_carry_n_0),
        .CO({tree_010_carry__0_n_0,NLW_tree_010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[8] ,\tree_0_reg_n_0_[7] ,\tree_0_reg_n_0_[6] ,\tree_0_reg_n_0_[5] }),
        .O({tree_010_carry__0_n_4,tree_010_carry__0_n_5,tree_010_carry__0_n_6,tree_010_carry__0_n_7}),
        .S({tree_010_carry__0_i_1__1_n_0,tree_010_carry__0_i_2__1_n_0,tree_010_carry__0_i_3__1_n_0,tree_010_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_1__1
       (.I0(\tree_0_reg_n_0_[8] ),
        .I1(\delta_d2_reg_n_0_[7] ),
        .O(tree_010_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_2__1
       (.I0(\tree_0_reg_n_0_[7] ),
        .I1(\delta_d2_reg_n_0_[6] ),
        .O(tree_010_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_3__1
       (.I0(\tree_0_reg_n_0_[6] ),
        .I1(\delta_d2_reg_n_0_[5] ),
        .O(tree_010_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_4__1
       (.I0(\tree_0_reg_n_0_[5] ),
        .I1(\delta_d2_reg_n_0_[4] ),
        .O(tree_010_carry__0_i_4__1_n_0));
  CARRY4 tree_010_carry__1
       (.CI(tree_010_carry__0_n_0),
        .CO({tree_010_carry__1_n_0,NLW_tree_010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[12] ,\tree_0_reg_n_0_[11] ,\tree_0_reg_n_0_[10] ,\tree_0_reg_n_0_[9] }),
        .O({tree_010_carry__1_n_4,tree_010_carry__1_n_5,tree_010_carry__1_n_6,tree_010_carry__1_n_7}),
        .S({tree_010_carry__1_i_1__1_n_0,tree_010_carry__1_i_2__1_n_0,tree_010_carry__1_i_3__1_n_0,tree_010_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_1__1
       (.I0(\tree_0_reg_n_0_[12] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_2__1
       (.I0(\tree_0_reg_n_0_[11] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_3__1
       (.I0(\tree_0_reg_n_0_[10] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_4__1
       (.I0(\tree_0_reg_n_0_[9] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__1_i_4__1_n_0));
  CARRY4 tree_010_carry__2
       (.CI(tree_010_carry__1_n_0),
        .CO({tree_010_carry__2_n_0,NLW_tree_010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[16] ,\tree_0_reg_n_0_[15] ,\tree_0_reg_n_0_[14] ,\tree_0_reg_n_0_[13] }),
        .O({tree_010_carry__2_n_4,tree_010_carry__2_n_5,tree_010_carry__2_n_6,tree_010_carry__2_n_7}),
        .S({tree_010_carry__2_i_1__1_n_0,tree_010_carry__2_i_2__1_n_0,tree_010_carry__2_i_3__1_n_0,tree_010_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_1__1
       (.I0(\tree_0_reg_n_0_[16] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_2__1
       (.I0(\tree_0_reg_n_0_[15] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_3__1
       (.I0(\tree_0_reg_n_0_[14] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_4__1
       (.I0(\tree_0_reg_n_0_[13] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__2_i_4__1_n_0));
  CARRY4 tree_010_carry__3
       (.CI(tree_010_carry__2_n_0),
        .CO({tree_010_carry__3_n_0,NLW_tree_010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_0_reg_n_0_[20] ,\tree_0_reg_n_0_[19] ,\tree_0_reg_n_0_[18] ,\tree_0_reg_n_0_[17] }),
        .O({tree_010_carry__3_n_4,tree_010_carry__3_n_5,tree_010_carry__3_n_6,tree_010_carry__3_n_7}),
        .S({tree_010_carry__3_i_1__1_n_0,tree_010_carry__3_i_2__1_n_0,tree_010_carry__3_i_3__1_n_0,tree_010_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_1__1
       (.I0(\tree_0_reg_n_0_[20] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_2__1
       (.I0(\tree_0_reg_n_0_[19] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_3__1
       (.I0(\tree_0_reg_n_0_[18] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_4__1
       (.I0(\tree_0_reg_n_0_[17] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__3_i_4__1_n_0));
  CARRY4 tree_010_carry__4
       (.CI(tree_010_carry__3_n_0),
        .CO(NLW_tree_010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\tree_0_reg_n_0_[22] ,\tree_0_reg_n_0_[21] }),
        .O({NLW_tree_010_carry__4_O_UNCONNECTED[3],tree_010_carry__4_n_5,tree_010_carry__4_n_6,tree_010_carry__4_n_7}),
        .S({1'b0,tree_010_carry__4_i_1__1_n_0,tree_010_carry__4_i_2__1_n_0,tree_010_carry__4_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_1__1
       (.I0(\tree_0_reg_n_0_[23] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_2__1
       (.I0(\tree_0_reg_n_0_[22] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_3__1
       (.I0(\tree_0_reg_n_0_[21] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_010_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_1__1
       (.I0(\tree_0_reg_n_0_[4] ),
        .I1(\delta_d2_reg_n_0_[3] ),
        .O(tree_010_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_2__1
       (.I0(\tree_0_reg_n_0_[3] ),
        .I1(\delta_d2_reg_n_0_[2] ),
        .O(tree_010_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_3__1
       (.I0(\tree_0_reg_n_0_[2] ),
        .I1(\delta_d2_reg_n_0_[1] ),
        .O(tree_010_carry_i_3__1_n_0));
  CARRY4 tree_0110_carry
       (.CI(1'b0),
        .CO({tree_0110_carry_n_0,NLW_tree_0110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[3:0]),
        .O({O148[2:0],NLW_tree_0110_carry_O_UNCONNECTED[0]}),
        .S({tree_0110_carry_i_1__1_n_0,tree_0110_carry_i_2__1_n_0,tree_0110_carry_i_3__1_n_0,tree_0110_carry_i_4__1_n_0}));
  CARRY4 tree_0110_carry__0
       (.CI(tree_0110_carry_n_0),
        .CO({tree_0110_carry__0_n_0,NLW_tree_0110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[7:4]),
        .O(O148[6:3]),
        .S({tree_0110_carry__0_i_1__1_n_0,tree_0110_carry__0_i_2__1_n_0,tree_0110_carry__0_i_3__1_n_0,tree_0110_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_1__1
       (.I0(A[7]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_2__1
       (.I0(A[6]),
        .I1(\delta_d3_reg_n_0_[7] ),
        .O(tree_0110_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_3__1
       (.I0(A[5]),
        .I1(\delta_d3_reg_n_0_[6] ),
        .O(tree_0110_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_4__1
       (.I0(A[4]),
        .I1(\delta_d3_reg_n_0_[5] ),
        .O(tree_0110_carry__0_i_4__1_n_0));
  CARRY4 tree_0110_carry__1
       (.CI(tree_0110_carry__0_n_0),
        .CO({tree_0110_carry__1_n_0,NLW_tree_0110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[11:8]),
        .O(O148[10:7]),
        .S({tree_0110_carry__1_i_1__1_n_0,tree_0110_carry__1_i_2__1_n_0,tree_0110_carry__1_i_3__1_n_0,tree_0110_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_1__1
       (.I0(A[11]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_2__1
       (.I0(A[10]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_3__1
       (.I0(A[9]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_4__1
       (.I0(A[8]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__1_i_4__1_n_0));
  CARRY4 tree_0110_carry__2
       (.CI(tree_0110_carry__1_n_0),
        .CO({tree_0110_carry__2_n_0,NLW_tree_0110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[15:12]),
        .O(O148[14:11]),
        .S({tree_0110_carry__2_i_1__1_n_0,tree_0110_carry__2_i_2__1_n_0,tree_0110_carry__2_i_3__1_n_0,tree_0110_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_1__1
       (.I0(A[15]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_2__1
       (.I0(A[14]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_3__1
       (.I0(A[13]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_4__1
       (.I0(A[12]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__2_i_4__1_n_0));
  CARRY4 tree_0110_carry__3
       (.CI(tree_0110_carry__2_n_0),
        .CO({tree_0110_carry__3_n_0,NLW_tree_0110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(A[19:16]),
        .O(O148[18:15]),
        .S({tree_0110_carry__3_i_1__1_n_0,tree_0110_carry__3_i_2__1_n_0,tree_0110_carry__3_i_3__1_n_0,tree_0110_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_1__1
       (.I0(A[19]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_2__1
       (.I0(A[18]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_3__1
       (.I0(A[17]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_4__1
       (.I0(A[16]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__3_i_4__1_n_0));
  CARRY4 tree_0110_carry__4
       (.CI(tree_0110_carry__3_n_0),
        .CO(NLW_tree_0110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,A[21:20]}),
        .O({NLW_tree_0110_carry__4_O_UNCONNECTED[3],O148[21:19]}),
        .S({1'b0,tree_0110_carry__4_i_1__1_n_0,tree_0110_carry__4_i_2__1_n_0,tree_0110_carry__4_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_1__1
       (.I0(A[22]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_2__1
       (.I0(A[21]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_3__1
       (.I0(A[20]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_0110_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_1__1
       (.I0(A[3]),
        .I1(\delta_d3_reg_n_0_[4] ),
        .O(tree_0110_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_2__1
       (.I0(A[2]),
        .I1(\delta_d3_reg_n_0_[3] ),
        .O(tree_0110_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_3__1
       (.I0(A[1]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(tree_0110_carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_4__1
       (.I0(A[0]),
        .I1(out_50_i_23),
        .O(tree_0110_carry_i_4__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_6),
        .Q(A[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_5),
        .Q(A[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_4),
        .Q(A[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_7),
        .Q(A[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_6),
        .Q(A[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_5),
        .Q(A[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__2_n_4),
        .Q(A[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_7),
        .Q(A[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_6),
        .Q(A[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_5),
        .Q(A[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__3_n_4),
        .Q(A[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_7),
        .Q(A[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_6),
        .Q(A[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__4_n_5),
        .Q(A[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_6),
        .Q(A[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_5),
        .Q(A[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_4),
        .Q(A[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_7),
        .Q(A[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_6),
        .Q(A[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_5),
        .Q(A[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__0_n_4),
        .Q(A[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry__1_n_7),
        .Q(A[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[10]),
        .Q(\tree_0_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[11]),
        .Q(\tree_0_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[12]),
        .Q(\tree_0_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[13]),
        .Q(\tree_0_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[14]),
        .Q(\tree_0_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[15]),
        .Q(\tree_0_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[16]),
        .Q(\tree_0_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[17]),
        .Q(\tree_0_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[18]),
        .Q(\tree_0_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[19]),
        .Q(\tree_0_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[20]),
        .Q(\tree_0_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[21]),
        .Q(\tree_0_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[22]),
        .Q(\tree_0_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[23]),
        .Q(\tree_0_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[2]),
        .Q(\tree_0_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[3]),
        .Q(\tree_0_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[4]),
        .Q(\tree_0_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[5]),
        .Q(\tree_0_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[6]),
        .Q(\tree_0_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[7]),
        .Q(\tree_0_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[8]),
        .Q(\tree_0_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[9]),
        .Q(\tree_0_reg_n_0_[9] ),
        .R(1'b0));
  CARRY4 tree_1010_carry
       (.CI(1'b0),
        .CO({tree_1010_carry_n_0,NLW_tree_1010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_40[3:0]),
        .O({O149[2:0],NLW_tree_1010_carry_O_UNCONNECTED[0]}),
        .S({tree_1010_carry_i_1__1_n_0,tree_1010_carry_i_2__1_n_0,tree_1010_carry_i_3__1_n_0,tree_1010_carry_i_4__1_n_0}));
  CARRY4 tree_1010_carry__0
       (.CI(tree_1010_carry_n_0),
        .CO({tree_1010_carry__0_n_0,NLW_tree_1010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_40[7:4]),
        .O(O149[6:3]),
        .S({tree_1010_carry__0_i_1__1_n_0,tree_1010_carry__0_i_2__1_n_0,tree_1010_carry__0_i_3__1_n_0,tree_1010_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_1__1
       (.I0(out_40[7]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_2__1
       (.I0(out_40[6]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_3__1
       (.I0(out_40[5]),
        .I1(\delta_d3_reg_n_0_[7] ),
        .O(tree_1010_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_4__1
       (.I0(out_40[4]),
        .I1(\delta_d3_reg_n_0_[6] ),
        .O(tree_1010_carry__0_i_4__1_n_0));
  CARRY4 tree_1010_carry__1
       (.CI(tree_1010_carry__0_n_0),
        .CO({tree_1010_carry__1_n_0,NLW_tree_1010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_40[11:8]),
        .O(O149[10:7]),
        .S({tree_1010_carry__1_i_1__1_n_0,tree_1010_carry__1_i_2__1_n_0,tree_1010_carry__1_i_3__1_n_0,tree_1010_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_1__1
       (.I0(out_40[11]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_2__1
       (.I0(out_40[10]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_3__1
       (.I0(out_40[9]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_4__1
       (.I0(out_40[8]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__1_i_4__1_n_0));
  CARRY4 tree_1010_carry__2
       (.CI(tree_1010_carry__1_n_0),
        .CO({tree_1010_carry__2_n_0,NLW_tree_1010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_40[15:12]),
        .O(O149[14:11]),
        .S({tree_1010_carry__2_i_1__1_n_0,tree_1010_carry__2_i_2__1_n_0,tree_1010_carry__2_i_3__1_n_0,tree_1010_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_1__1
       (.I0(out_40[15]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_2__1
       (.I0(out_40[14]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_3__1
       (.I0(out_40[13]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_4__1
       (.I0(out_40[12]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__2_i_4__1_n_0));
  CARRY4 tree_1010_carry__3
       (.CI(tree_1010_carry__2_n_0),
        .CO({tree_1010_carry__3_n_0,NLW_tree_1010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_40[19:16]),
        .O(O149[18:15]),
        .S({tree_1010_carry__3_i_1__1_n_0,tree_1010_carry__3_i_2__1_n_0,tree_1010_carry__3_i_3__1_n_0,tree_1010_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_1__1
       (.I0(out_40[19]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_2__1
       (.I0(out_40[18]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_3__1
       (.I0(out_40[17]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_4__1
       (.I0(out_40[16]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__3_i_4__1_n_0));
  CARRY4 tree_1010_carry__4
       (.CI(tree_1010_carry__3_n_0),
        .CO(NLW_tree_1010_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,out_40[20]}),
        .O({NLW_tree_1010_carry__4_O_UNCONNECTED[3:2],O149[20:19]}),
        .S({1'b0,1'b0,tree_1010_carry__4_i_1__1_n_0,tree_1010_carry__4_i_2__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_1__1
       (.I0(out_40[21]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_2__1
       (.I0(out_40[20]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1010_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_1__1
       (.I0(out_40[3]),
        .I1(\delta_d3_reg_n_0_[5] ),
        .O(tree_1010_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_2__1
       (.I0(out_40[2]),
        .I1(\delta_d3_reg_n_0_[4] ),
        .O(tree_1010_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_3__1
       (.I0(out_40[1]),
        .I1(\delta_d3_reg_n_0_[3] ),
        .O(tree_1010_carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_4__1
       (.I0(out_40[0]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(tree_1010_carry_i_4__1_n_0));
  CARRY4 tree_10_carry
       (.CI(1'b0),
        .CO({tree_10_carry_n_0,NLW_tree_10_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({accum_reg[4:2],1'b0}),
        .O({tree_10_carry_n_4,tree_10_carry_n_5,tree_10_carry_n_6,NLW_tree_10_carry_O_UNCONNECTED[0]}),
        .S({tree_10_carry_i_1__1_n_0,tree_10_carry_i_2__1_n_0,tree_10_carry_i_3__1_n_0,1'b0}));
  CARRY4 tree_10_carry__0
       (.CI(tree_10_carry_n_0),
        .CO({tree_10_carry__0_n_0,NLW_tree_10_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[8:5]),
        .O({tree_10_carry__0_n_4,tree_10_carry__0_n_5,tree_10_carry__0_n_6,tree_10_carry__0_n_7}),
        .S({tree_10_carry__0_i_1__1_n_0,tree_10_carry__0_i_2__1_n_0,tree_10_carry__0_i_3__1_n_0,tree_10_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_1__1
       (.I0(accum_reg[8]),
        .I1(\delta_d1_reg_n_0_[6] ),
        .O(tree_10_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_2__1
       (.I0(accum_reg[7]),
        .I1(\delta_d1_reg_n_0_[5] ),
        .O(tree_10_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_3__1
       (.I0(accum_reg[6]),
        .I1(\delta_d1_reg_n_0_[4] ),
        .O(tree_10_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_4__1
       (.I0(accum_reg[5]),
        .I1(\delta_d1_reg_n_0_[3] ),
        .O(tree_10_carry__0_i_4__1_n_0));
  CARRY4 tree_10_carry__1
       (.CI(tree_10_carry__0_n_0),
        .CO({tree_10_carry__1_n_0,NLW_tree_10_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[12:9]),
        .O({tree_10_carry__1_n_4,tree_10_carry__1_n_5,tree_10_carry__1_n_6,tree_10_carry__1_n_7}),
        .S({tree_10_carry__1_i_1__1_n_0,tree_10_carry__1_i_2__1_n_0,tree_10_carry__1_i_3__1_n_0,tree_10_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_1__1
       (.I0(accum_reg[12]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_2__1
       (.I0(accum_reg[11]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_3__1
       (.I0(accum_reg[10]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_4__1
       (.I0(accum_reg[9]),
        .I1(\delta_d1_reg_n_0_[7] ),
        .O(tree_10_carry__1_i_4__1_n_0));
  CARRY4 tree_10_carry__2
       (.CI(tree_10_carry__1_n_0),
        .CO({tree_10_carry__2_n_0,NLW_tree_10_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[16:13]),
        .O({tree_10_carry__2_n_4,tree_10_carry__2_n_5,tree_10_carry__2_n_6,tree_10_carry__2_n_7}),
        .S({tree_10_carry__2_i_1__1_n_0,tree_10_carry__2_i_2__1_n_0,tree_10_carry__2_i_3__1_n_0,tree_10_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_1__1
       (.I0(accum_reg[16]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_2__1
       (.I0(accum_reg[15]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_3__1
       (.I0(accum_reg[14]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_4__1
       (.I0(accum_reg[13]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__2_i_4__1_n_0));
  CARRY4 tree_10_carry__3
       (.CI(tree_10_carry__2_n_0),
        .CO({tree_10_carry__3_n_0,NLW_tree_10_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[20:17]),
        .O({tree_10_carry__3_n_4,tree_10_carry__3_n_5,tree_10_carry__3_n_6,tree_10_carry__3_n_7}),
        .S({tree_10_carry__3_i_1__1_n_0,tree_10_carry__3_i_2__1_n_0,tree_10_carry__3_i_3__1_n_0,tree_10_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_1__1
       (.I0(accum_reg[20]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_2__1
       (.I0(accum_reg[19]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_3__1
       (.I0(accum_reg[18]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_4__1
       (.I0(accum_reg[17]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__3_i_4__1_n_0));
  CARRY4 tree_10_carry__4
       (.CI(tree_10_carry__3_n_0),
        .CO(NLW_tree_10_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,accum_reg[22:21]}),
        .O({NLW_tree_10_carry__4_O_UNCONNECTED[3],tree_10_carry__4_n_5,tree_10_carry__4_n_6,tree_10_carry__4_n_7}),
        .S({1'b0,tree_10_carry__4_i_1__1_n_0,tree_10_carry__4_i_2__1_n_0,tree_10_carry__4_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_1__1
       (.I0(accum_reg[23]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_2__1
       (.I0(accum_reg[22]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_3__1
       (.I0(accum_reg[21]),
        .I1(\delta_d1_reg_n_0_[23] ),
        .O(tree_10_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_1__1
       (.I0(accum_reg[4]),
        .I1(\delta_d1_reg_n_0_[2] ),
        .O(tree_10_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_2__1
       (.I0(accum_reg[3]),
        .I1(\delta_d1_reg_n_0_[1] ),
        .O(tree_10_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_3__1
       (.I0(accum_reg[2]),
        .I1(\delta_d1_reg_n_0_[0] ),
        .O(tree_10_carry_i_3__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[10] ),
        .Q(out_40[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[11] ),
        .Q(out_40[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[12] ),
        .Q(out_40[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[13] ),
        .Q(out_40[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[14] ),
        .Q(out_40[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[15] ),
        .Q(out_40[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[16] ),
        .Q(out_40[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[17] ),
        .Q(out_40[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[18] ),
        .Q(out_40[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[19] ),
        .Q(out_40[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[20] ),
        .Q(out_40[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[21] ),
        .Q(out_40[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[22] ),
        .Q(out_40[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[23] ),
        .Q(out_40[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[2] ),
        .Q(out_40[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[3] ),
        .Q(out_40[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[4] ),
        .Q(out_40[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[5] ),
        .Q(out_40[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[6] ),
        .Q(out_40[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[7] ),
        .Q(out_40[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[8] ),
        .Q(out_40[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\tree_1_reg_n_0_[9] ),
        .Q(out_40[7]),
        .R(1'b0));
  CARRY4 tree_110_carry
       (.CI(1'b0),
        .CO({tree_110_carry_n_0,NLW_tree_110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[4] ,\tree_1_reg_n_0_[3] ,\tree_1_reg_n_0_[2] ,1'b0}),
        .O({tree_110_carry_n_4,tree_110_carry_n_5,tree_110_carry_n_6,NLW_tree_110_carry_O_UNCONNECTED[0]}),
        .S({tree_110_carry_i_1__1_n_0,tree_110_carry_i_2__1_n_0,tree_110_carry_i_3__1_n_0,\delta_d2_reg_n_0_[0] }));
  CARRY4 tree_110_carry__0
       (.CI(tree_110_carry_n_0),
        .CO({tree_110_carry__0_n_0,NLW_tree_110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[8] ,\tree_1_reg_n_0_[7] ,\tree_1_reg_n_0_[6] ,\tree_1_reg_n_0_[5] }),
        .O({tree_110_carry__0_n_4,tree_110_carry__0_n_5,tree_110_carry__0_n_6,tree_110_carry__0_n_7}),
        .S({tree_110_carry__0_i_1__1_n_0,tree_110_carry__0_i_2__1_n_0,tree_110_carry__0_i_3__1_n_0,tree_110_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_1__1
       (.I0(\tree_1_reg_n_0_[8] ),
        .I1(\delta_d2_reg_n_0_[7] ),
        .O(tree_110_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_2__1
       (.I0(\tree_1_reg_n_0_[7] ),
        .I1(\delta_d2_reg_n_0_[6] ),
        .O(tree_110_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_3__1
       (.I0(\tree_1_reg_n_0_[6] ),
        .I1(\delta_d2_reg_n_0_[5] ),
        .O(tree_110_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_4__1
       (.I0(\tree_1_reg_n_0_[5] ),
        .I1(\delta_d2_reg_n_0_[4] ),
        .O(tree_110_carry__0_i_4__1_n_0));
  CARRY4 tree_110_carry__1
       (.CI(tree_110_carry__0_n_0),
        .CO({tree_110_carry__1_n_0,NLW_tree_110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[12] ,\tree_1_reg_n_0_[11] ,\tree_1_reg_n_0_[10] ,\tree_1_reg_n_0_[9] }),
        .O({tree_110_carry__1_n_4,tree_110_carry__1_n_5,tree_110_carry__1_n_6,tree_110_carry__1_n_7}),
        .S({tree_110_carry__1_i_1__1_n_0,tree_110_carry__1_i_2__1_n_0,tree_110_carry__1_i_3__1_n_0,tree_110_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_1__1
       (.I0(\tree_1_reg_n_0_[12] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_2__1
       (.I0(\tree_1_reg_n_0_[11] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_3__1
       (.I0(\tree_1_reg_n_0_[10] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_4__1
       (.I0(\tree_1_reg_n_0_[9] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__1_i_4__1_n_0));
  CARRY4 tree_110_carry__2
       (.CI(tree_110_carry__1_n_0),
        .CO({tree_110_carry__2_n_0,NLW_tree_110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[16] ,\tree_1_reg_n_0_[15] ,\tree_1_reg_n_0_[14] ,\tree_1_reg_n_0_[13] }),
        .O({tree_110_carry__2_n_4,tree_110_carry__2_n_5,tree_110_carry__2_n_6,tree_110_carry__2_n_7}),
        .S({tree_110_carry__2_i_1__1_n_0,tree_110_carry__2_i_2__1_n_0,tree_110_carry__2_i_3__1_n_0,tree_110_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_1__1
       (.I0(\tree_1_reg_n_0_[16] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_2__1
       (.I0(\tree_1_reg_n_0_[15] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_3__1
       (.I0(\tree_1_reg_n_0_[14] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_4__1
       (.I0(\tree_1_reg_n_0_[13] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__2_i_4__1_n_0));
  CARRY4 tree_110_carry__3
       (.CI(tree_110_carry__2_n_0),
        .CO({tree_110_carry__3_n_0,NLW_tree_110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\tree_1_reg_n_0_[20] ,\tree_1_reg_n_0_[19] ,\tree_1_reg_n_0_[18] ,\tree_1_reg_n_0_[17] }),
        .O({tree_110_carry__3_n_4,tree_110_carry__3_n_5,tree_110_carry__3_n_6,tree_110_carry__3_n_7}),
        .S({tree_110_carry__3_i_1__1_n_0,tree_110_carry__3_i_2__1_n_0,tree_110_carry__3_i_3__1_n_0,tree_110_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_1__1
       (.I0(\tree_1_reg_n_0_[20] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_2__1
       (.I0(\tree_1_reg_n_0_[19] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_3__1
       (.I0(\tree_1_reg_n_0_[18] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_4__1
       (.I0(\tree_1_reg_n_0_[17] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__3_i_4__1_n_0));
  CARRY4 tree_110_carry__4
       (.CI(tree_110_carry__3_n_0),
        .CO(NLW_tree_110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\tree_1_reg_n_0_[22] ,\tree_1_reg_n_0_[21] }),
        .O({NLW_tree_110_carry__4_O_UNCONNECTED[3],tree_110_carry__4_n_5,tree_110_carry__4_n_6,tree_110_carry__4_n_7}),
        .S({1'b0,tree_110_carry__4_i_1__1_n_0,tree_110_carry__4_i_2__1_n_0,tree_110_carry__4_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_1__1
       (.I0(\tree_1_reg_n_0_[23] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_2__1
       (.I0(\tree_1_reg_n_0_[22] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_3__1
       (.I0(\tree_1_reg_n_0_[21] ),
        .I1(\delta_d2_reg_n_0_[23] ),
        .O(tree_110_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_1__1
       (.I0(\tree_1_reg_n_0_[4] ),
        .I1(\delta_d2_reg_n_0_[3] ),
        .O(tree_110_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_2__1
       (.I0(\tree_1_reg_n_0_[3] ),
        .I1(\delta_d2_reg_n_0_[2] ),
        .O(tree_110_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_3__1
       (.I0(\tree_1_reg_n_0_[2] ),
        .I1(\delta_d2_reg_n_0_[1] ),
        .O(tree_110_carry_i_3__1_n_0));
  CARRY4 tree_1110_carry
       (.CI(1'b0),
        .CO({tree_1110_carry_n_0,NLW_tree_1110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_60[3:0]),
        .O({O150[2:0],NLW_tree_1110_carry_O_UNCONNECTED[0]}),
        .S({tree_1110_carry_i_1__1_n_0,tree_1110_carry_i_2__1_n_0,tree_1110_carry_i_3__1_n_0,tree_1110_carry_i_4__1_n_0}));
  CARRY4 tree_1110_carry__0
       (.CI(tree_1110_carry_n_0),
        .CO({tree_1110_carry__0_n_0,NLW_tree_1110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_60[7:4]),
        .O(O150[6:3]),
        .S({tree_1110_carry__0_i_1__1_n_0,tree_1110_carry__0_i_2__1_n_0,tree_1110_carry__0_i_3__1_n_0,tree_1110_carry__0_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_1__1
       (.I0(out_60[7]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_2__1
       (.I0(out_60[6]),
        .I1(\delta_d3_reg_n_0_[7] ),
        .O(tree_1110_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_3__1
       (.I0(out_60[5]),
        .I1(\delta_d3_reg_n_0_[6] ),
        .O(tree_1110_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_4__1
       (.I0(out_60[4]),
        .I1(\delta_d3_reg_n_0_[5] ),
        .O(tree_1110_carry__0_i_4__1_n_0));
  CARRY4 tree_1110_carry__1
       (.CI(tree_1110_carry__0_n_0),
        .CO({tree_1110_carry__1_n_0,NLW_tree_1110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_60[11:8]),
        .O(O150[10:7]),
        .S({tree_1110_carry__1_i_1__1_n_0,tree_1110_carry__1_i_2__1_n_0,tree_1110_carry__1_i_3__1_n_0,tree_1110_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_1__1
       (.I0(out_60[11]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_2__1
       (.I0(out_60[10]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_3__1
       (.I0(out_60[9]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_4__1
       (.I0(out_60[8]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__1_i_4__1_n_0));
  CARRY4 tree_1110_carry__2
       (.CI(tree_1110_carry__1_n_0),
        .CO({tree_1110_carry__2_n_0,NLW_tree_1110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_60[15:12]),
        .O(O150[14:11]),
        .S({tree_1110_carry__2_i_1__1_n_0,tree_1110_carry__2_i_2__1_n_0,tree_1110_carry__2_i_3__1_n_0,tree_1110_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_1__1
       (.I0(out_60[15]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_2__1
       (.I0(out_60[14]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_3__1
       (.I0(out_60[13]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__2_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_4__1
       (.I0(out_60[12]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__2_i_4__1_n_0));
  CARRY4 tree_1110_carry__3
       (.CI(tree_1110_carry__2_n_0),
        .CO({tree_1110_carry__3_n_0,NLW_tree_1110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(out_60[19:16]),
        .O(O150[18:15]),
        .S({tree_1110_carry__3_i_1__1_n_0,tree_1110_carry__3_i_2__1_n_0,tree_1110_carry__3_i_3__1_n_0,tree_1110_carry__3_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_1__1
       (.I0(out_60[19]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_2__1
       (.I0(out_60[18]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_3__1
       (.I0(out_60[17]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_4__1
       (.I0(out_60[16]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__3_i_4__1_n_0));
  CARRY4 tree_1110_carry__4
       (.CI(tree_1110_carry__3_n_0),
        .CO(NLW_tree_1110_carry__4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,out_60[21:20]}),
        .O({NLW_tree_1110_carry__4_O_UNCONNECTED[3],O150[21:19]}),
        .S({1'b0,tree_1110_carry__4_i_1__1_n_0,tree_1110_carry__4_i_2__1_n_0,tree_1110_carry__4_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_1__1
       (.I0(out_60[22]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_2__1
       (.I0(out_60[21]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_3__1
       (.I0(out_60[20]),
        .I1(\delta_d3_reg_n_0_[23] ),
        .O(tree_1110_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_1__1
       (.I0(out_60[3]),
        .I1(\delta_d3_reg_n_0_[4] ),
        .O(tree_1110_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_2__1
       (.I0(out_60[2]),
        .I1(\delta_d3_reg_n_0_[3] ),
        .O(tree_1110_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_3__1
       (.I0(out_60[1]),
        .I1(\delta_d3_reg_n_0_[2] ),
        .O(tree_1110_carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_4__1
       (.I0(out_60[0]),
        .I1(out_50_i_23),
        .O(tree_1110_carry_i_4__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_6),
        .Q(out_60[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_5),
        .Q(out_60[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_4),
        .Q(out_60[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_7),
        .Q(out_60[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_6),
        .Q(out_60[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_5),
        .Q(out_60[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__2_n_4),
        .Q(out_60[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_7),
        .Q(out_60[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_6),
        .Q(out_60[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_5),
        .Q(out_60[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010_carry_n_7),
        .Q(out_60[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__3_n_4),
        .Q(out_60[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_7),
        .Q(out_60[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_6),
        .Q(out_60[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__4_n_5),
        .Q(out_60[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_6),
        .Q(out_60[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_5),
        .Q(out_60[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry_n_4),
        .Q(out_60[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_7),
        .Q(out_60[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_6),
        .Q(out_60[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_5),
        .Q(out_60[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__0_n_4),
        .Q(out_60[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110_carry__1_n_7),
        .Q(out_60[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_6),
        .Q(\tree_1_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_5),
        .Q(\tree_1_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_4),
        .Q(\tree_1_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_7),
        .Q(\tree_1_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_6),
        .Q(\tree_1_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_5),
        .Q(\tree_1_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__2_n_4),
        .Q(\tree_1_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_7),
        .Q(\tree_1_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_6),
        .Q(\tree_1_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_5),
        .Q(\tree_1_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__3_n_4),
        .Q(\tree_1_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_7),
        .Q(\tree_1_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_6),
        .Q(\tree_1_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__4_n_5),
        .Q(\tree_1_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_6),
        .Q(\tree_1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_5),
        .Q(\tree_1_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry_n_4),
        .Q(\tree_1_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_7),
        .Q(\tree_1_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_6),
        .Q(\tree_1_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_5),
        .Q(\tree_1_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__0_n_4),
        .Q(\tree_1_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10_carry__1_n_7),
        .Q(\tree_1_reg_n_0_[9] ),
        .R(1'b0));
endmodule

module main_0
   (control,
    data_in_stb,
    E,
    amplitude_stb,
    control_stb,
    output_rs232_tx_stb,
    dithering_reg,
    s_test_2_reg,
    \delta_reg[7] ,
    output_am_out,
    S,
    \delta_reg[7]_0 ,
    \delta_reg[3] ,
    input_rs232_rx_ack,
    output_audio_out,
    \s_output_audio_out_reg[0]_0 ,
    \s_output_audio_out_reg[0]_1 ,
    output_freq_out,
    \s_output_freq_out_reg[0]_0 ,
    \s_output_am_out_reg[0]_0 ,
    output_rs232_tx,
    \s_output_rs232_tx_reg[0]_0 ,
    \s_output_ctl_out_reg[0]_0 ,
    clk,
    \write_value_reg[0]_0 ,
    internal_rst_reg,
    S_DATA_IN_ACK_reg,
    \s_output_freq_out_stb_reg[0]_0 ,
    input_ack_reg,
    \s_output_ctl_out_stb_reg[0]_0 ,
    S_IN1_ACK_reg,
    dithering,
    test_2_OBUF,
    Q,
    \last_input_reg[7] ,
    out1_stb,
    output_tx_am_ack,
    output_audio_ack,
    output_rs232_tx_ack,
    \output ,
    pwropt);
  output [0:0]control;
  output data_in_stb;
  output [0:0]E;
  output amplitude_stb;
  output control_stb;
  output output_rs232_tx_stb;
  output dithering_reg;
  output s_test_2_reg;
  output [3:0]\delta_reg[7] ;
  output [15:0]output_am_out;
  output [3:0]S;
  output [3:0]\delta_reg[7]_0 ;
  output [3:0]\delta_reg[3] ;
  output input_rs232_rx_ack;
  output [9:0]output_audio_out;
  output [0:0]\s_output_audio_out_reg[0]_0 ;
  output [0:0]\s_output_audio_out_reg[0]_1 ;
  output [31:0]output_freq_out;
  output [0:0]\s_output_freq_out_reg[0]_0 ;
  output [0:0]\s_output_am_out_reg[0]_0 ;
  output [7:0]output_rs232_tx;
  output [0:0]\s_output_rs232_tx_reg[0]_0 ;
  output \s_output_ctl_out_reg[0]_0 ;
  input clk;
  input \write_value_reg[0]_0 ;
  input internal_rst_reg;
  input S_DATA_IN_ACK_reg;
  input \s_output_freq_out_stb_reg[0]_0 ;
  input input_ack_reg;
  input \s_output_ctl_out_stb_reg[0]_0 ;
  input S_IN1_ACK_reg;
  input dithering;
  input test_2_OBUF;
  input [7:0]Q;
  input [7:0]\last_input_reg[7] ;
  input out1_stb;
  input output_tx_am_ack;
  input output_audio_ack;
  input output_rs232_tx_ack;
  input [7:0]\output ;
  input pwropt;

  wire [13:0]A;
  wire [31:16]C;
  wire [0:0]E;
  wire [7:0]Q;
  wire [3:0]S;
  wire S_DATA_IN_ACK_reg;
  wire S_IN1_ACK_reg;
  wire [31:0]a_lo;
  wire \a_lo[0]_i_1_n_0 ;
  wire \a_lo[10]_i_1_n_0 ;
  wire \a_lo[11]_i_1_n_0 ;
  wire \a_lo[12]_i_1_n_0 ;
  wire \a_lo[13]_i_1_n_0 ;
  wire \a_lo[14]_i_1_n_0 ;
  wire \a_lo[15]_i_1_n_0 ;
  wire \a_lo[16]_i_2_n_0 ;
  wire \a_lo[1]_i_1_n_0 ;
  wire \a_lo[2]_i_1_n_0 ;
  wire \a_lo[31]_i_1_n_0 ;
  wire \a_lo[31]_i_3_n_0 ;
  wire \a_lo[3]_i_1_n_0 ;
  wire \a_lo[4]_i_1_n_0 ;
  wire \a_lo[5]_i_1_n_0 ;
  wire \a_lo[6]_i_1_n_0 ;
  wire \a_lo[7]_i_1_n_0 ;
  wire \a_lo[8]_i_1_n_0 ;
  wire \a_lo[9]_i_1_n_0 ;
  wire [3:0]address_a;
  wire [3:0]address_a_2;
  wire [3:0]address_z;
  wire [3:0]address_z_2;
  wire [3:0]address_z_3;
  wire \address_z_3[3]_i_1_n_0 ;
  wire amplitude_stb;
  wire clk;
  wire [0:0]control;
  wire control_stb;
  wire [31:0]data11;
  wire data13;
  wire [16:1]data2;
  wire data3;
  wire data5;
  wire [31:0]data6;
  wire data_in_stb;
  wire [3:0]\delta_reg[3] ;
  wire [3:0]\delta_reg[7] ;
  wire [3:0]\delta_reg[7]_0 ;
  wire dithering;
  wire dithering_reg;
  wire [31:1]dividend0;
  wire \dividend[0]_i_1_n_0 ;
  wire \dividend[10]_i_1_n_0 ;
  wire \dividend[11]_i_1_n_0 ;
  wire \dividend[12]_i_1_n_0 ;
  wire \dividend[13]_i_1_n_0 ;
  wire \dividend[14]_i_1_n_0 ;
  wire \dividend[15]_i_1_n_0 ;
  wire \dividend[16]_i_1_n_0 ;
  wire \dividend[17]_i_1_n_0 ;
  wire \dividend[18]_i_1_n_0 ;
  wire \dividend[19]_i_1_n_0 ;
  wire \dividend[1]_i_1_n_0 ;
  wire \dividend[20]_i_1_n_0 ;
  wire \dividend[21]_i_1_n_0 ;
  wire \dividend[22]_i_1_n_0 ;
  wire \dividend[23]_i_1_n_0 ;
  wire \dividend[24]_i_1_n_0 ;
  wire \dividend[25]_i_1_n_0 ;
  wire \dividend[25]_i_2_n_0 ;
  wire \dividend[25]_i_3_n_0 ;
  wire \dividend[25]_i_4_n_0 ;
  wire \dividend[26]_i_1_n_0 ;
  wire \dividend[27]_i_1_n_0 ;
  wire \dividend[28]_i_1_n_0 ;
  wire \dividend[29]_i_1_n_0 ;
  wire \dividend[2]_i_1_n_0 ;
  wire \dividend[30]_i_1_n_0 ;
  wire \dividend[30]_i_2_n_0 ;
  wire \dividend[31]_i_1_n_0 ;
  wire \dividend[31]_i_2_n_0 ;
  wire \dividend[31]_i_3_n_0 ;
  wire \dividend[3]_i_1_n_0 ;
  wire \dividend[4]_i_1_n_0 ;
  wire \dividend[5]_i_1_n_0 ;
  wire \dividend[6]_i_1_n_0 ;
  wire \dividend[7]_i_1_n_0 ;
  wire \dividend[8]_i_1_n_0 ;
  wire \dividend[9]_i_1_n_0 ;
  wire [31:0]divisor;
  wire \divisor[31]_i_1_n_0 ;
  wire g0_b0_n_0;
  wire input_ack_reg;
  wire input_rs232_rx_ack;
  wire internal_rst_reg;
  wire [7:0]\last_input_reg[7] ;
  wire [15:0]literal_2;
  wire \literal_2[15]_i_1_n_0 ;
  wire [31:0]load_data;
  wire memory_reg_1_ENARDEN_cooolgate_en_sig_1;
  wire memory_reg_2_ENARDEN_cooolgate_en_sig_2;
  wire memory_reg_3_ENARDEN_cooolgate_en_sig_3;
  wire memory_reg_4_ENARDEN_cooolgate_en_sig_4;
  wire memory_reg_5_ENARDEN_cooolgate_en_sig_5;
  wire memory_reg_6_ENARDEN_cooolgate_en_sig_6;
  wire memory_reg_7_ENARDEN_cooolgate_en_sig_7;
  wire [4:0]opcode;
  wire [4:0]opcode_2;
  wire operand_a1;
  wire operand_b1;
  wire out0;
  wire out1_stb;
  wire [7:0]\output ;
  wire [15:0]output_am_out;
  wire output_audio_ack;
  wire [9:0]output_audio_out;
  wire [31:0]output_freq_out;
  wire [7:0]output_rs232_tx;
  wire output_rs232_tx_ack;
  wire output_rs232_tx_stb;
  wire output_tx_am_ack;
  wire [15:0]p_0_in;
  wire [31:0]p_0_in1_in;
  wire p_0_in__0;
  wire [15:0]p_1_in;
  wire [31:0]p_1_in__0;
  wire product_c_reg_i_1_n_0;
  wire product_c_reg_i_2_n_0;
  wire product_c_reg_i_3_n_0;
  wire product_c_reg_n_104;
  wire product_c_reg_n_105;
  wire \program_counter[0]_i_2_n_0 ;
  wire \program_counter[10]_i_2_n_0 ;
  wire \program_counter[11]_i_2_n_0 ;
  wire \program_counter[12]_i_2_n_0 ;
  wire \program_counter[13]_i_2_n_0 ;
  wire \program_counter[14]_i_2_n_0 ;
  wire \program_counter[15]_i_12_n_0 ;
  wire \program_counter[15]_i_13_n_0 ;
  wire \program_counter[15]_i_14_n_0 ;
  wire \program_counter[15]_i_15_n_0 ;
  wire \program_counter[15]_i_16_n_0 ;
  wire \program_counter[15]_i_17_n_0 ;
  wire \program_counter[15]_i_18_n_0 ;
  wire \program_counter[15]_i_19_n_0 ;
  wire \program_counter[15]_i_1_n_0 ;
  wire \program_counter[15]_i_20_n_0 ;
  wire \program_counter[15]_i_3_n_0 ;
  wire \program_counter[15]_i_4_n_0 ;
  wire \program_counter[15]_i_5_n_0 ;
  wire \program_counter[15]_i_7_n_0 ;
  wire \program_counter[15]_i_8_n_0 ;
  wire \program_counter[1]_i_2_n_0 ;
  wire \program_counter[2]_i_2_n_0 ;
  wire \program_counter[3]_i_2_n_0 ;
  wire \program_counter[4]_i_2_n_0 ;
  wire \program_counter[5]_i_2_n_0 ;
  wire \program_counter[6]_i_2_n_0 ;
  wire \program_counter[7]_i_2_n_0 ;
  wire \program_counter[8]_i_2_n_0 ;
  wire \program_counter[9]_i_2_n_0 ;
  wire [15:0]program_counter_1;
  wire [15:0]program_counter_2;
  wire \program_counter_reg[12]_i_3_n_0 ;
  wire \program_counter_reg[12]_i_3_n_4 ;
  wire \program_counter_reg[12]_i_3_n_5 ;
  wire \program_counter_reg[12]_i_3_n_6 ;
  wire \program_counter_reg[12]_i_3_n_7 ;
  wire \program_counter_reg[15]_i_6_n_5 ;
  wire \program_counter_reg[15]_i_6_n_6 ;
  wire \program_counter_reg[15]_i_6_n_7 ;
  wire \program_counter_reg[4]_i_3_n_0 ;
  wire \program_counter_reg[4]_i_3_n_4 ;
  wire \program_counter_reg[4]_i_3_n_5 ;
  wire \program_counter_reg[4]_i_3_n_6 ;
  wire \program_counter_reg[4]_i_3_n_7 ;
  wire \program_counter_reg[8]_i_3_n_0 ;
  wire \program_counter_reg[8]_i_3_n_4 ;
  wire \program_counter_reg[8]_i_3_n_5 ;
  wire \program_counter_reg[8]_i_3_n_6 ;
  wire \program_counter_reg[8]_i_3_n_7 ;
  wire \program_counter_reg_n_0_[0] ;
  wire \program_counter_reg_n_0_[10] ;
  wire \program_counter_reg_n_0_[11] ;
  wire \program_counter_reg_n_0_[12] ;
  wire \program_counter_reg_n_0_[13] ;
  wire \program_counter_reg_n_0_[14] ;
  wire \program_counter_reg_n_0_[15] ;
  wire \program_counter_reg_n_0_[1] ;
  wire \program_counter_reg_n_0_[2] ;
  wire \program_counter_reg_n_0_[3] ;
  wire \program_counter_reg_n_0_[4] ;
  wire \program_counter_reg_n_0_[5] ;
  wire \program_counter_reg_n_0_[6] ;
  wire \program_counter_reg_n_0_[7] ;
  wire \program_counter_reg_n_0_[8] ;
  wire \program_counter_reg_n_0_[9] ;
  wire program_counter_reg_rep_0_i_10_n_0;
  wire program_counter_reg_rep_0_i_11_n_0;
  wire program_counter_reg_rep_0_i_12_n_0;
  wire program_counter_reg_rep_0_i_13_n_0;
  wire program_counter_reg_rep_0_i_14_n_0;
  wire program_counter_reg_rep_0_i_15_n_0;
  wire program_counter_reg_rep_0_i_16_n_0;
  wire program_counter_reg_rep_0_i_17_n_0;
  wire program_counter_reg_rep_0_i_18_n_0;
  wire program_counter_reg_rep_0_i_19_n_0;
  wire program_counter_reg_rep_0_i_1_n_0;
  wire program_counter_reg_rep_0_i_20_n_0;
  wire program_counter_reg_rep_0_i_21_n_0;
  wire program_counter_reg_rep_0_i_22_n_0;
  wire program_counter_reg_rep_0_i_23_n_0;
  wire program_counter_reg_rep_0_i_24_n_0;
  wire program_counter_reg_rep_0_i_25_n_0;
  wire program_counter_reg_rep_0_i_26_n_0;
  wire program_counter_reg_rep_0_i_27_n_0;
  wire program_counter_reg_rep_0_i_28_n_0;
  wire program_counter_reg_rep_0_i_29_n_0;
  wire program_counter_reg_rep_0_i_2_n_0;
  wire program_counter_reg_rep_0_i_30_n_0;
  wire program_counter_reg_rep_0_i_31_n_0;
  wire program_counter_reg_rep_0_i_32_n_0;
  wire program_counter_reg_rep_0_i_33_n_0;
  wire program_counter_reg_rep_0_i_34_n_0;
  wire program_counter_reg_rep_0_i_3_n_0;
  wire program_counter_reg_rep_0_i_4_n_0;
  wire program_counter_reg_rep_0_i_5_n_0;
  wire program_counter_reg_rep_0_i_6_n_0;
  wire program_counter_reg_rep_0_i_7_n_0;
  wire program_counter_reg_rep_0_i_8_n_0;
  wire program_counter_reg_rep_0_i_9_n_0;
  wire program_counter_reg_rep_0_n_37;
  wire program_counter_reg_rep_0_n_38;
  wire program_counter_reg_rep_0_n_39;
  wire program_counter_reg_rep_0_n_40;
  wire program_counter_reg_rep_0_n_41;
  wire program_counter_reg_rep_0_n_42;
  wire program_counter_reg_rep_0_n_43;
  wire program_counter_reg_rep_0_n_44;
  wire program_counter_reg_rep_0_n_45;
  wire program_counter_reg_rep_0_n_46;
  wire program_counter_reg_rep_0_n_47;
  wire program_counter_reg_rep_0_n_48;
  wire program_counter_reg_rep_0_n_49;
  wire program_counter_reg_rep_0_n_50;
  wire program_counter_reg_rep_0_n_51;
  wire program_counter_reg_rep_0_n_52;
  wire pwropt;
  wire [31:1]quotient;
  wire \quotient_reg[0]_i_1_n_3 ;
  wire \quotient_reg_n_0_[31] ;
  wire [31:0]read_input;
  wire \read_input[31]_i_1_n_0 ;
  wire \read_input[31]_i_2_n_0 ;
  wire \read_input[31]_i_3_n_0 ;
  wire [31:0]register_a;
  wire [31:0]register_b;
  wire \remainder[0]_i_1_n_0 ;
  wire \remainder[10]_i_1_n_0 ;
  wire \remainder[11]_i_1_n_0 ;
  wire \remainder[11]_i_3_n_0 ;
  wire \remainder[11]_i_4_n_0 ;
  wire \remainder[11]_i_5_n_0 ;
  wire \remainder[11]_i_6_n_0 ;
  wire \remainder[12]_i_1_n_0 ;
  wire \remainder[13]_i_1_n_0 ;
  wire \remainder[14]_i_1_n_0 ;
  wire \remainder[15]_i_1_n_0 ;
  wire \remainder[15]_i_3_n_0 ;
  wire \remainder[15]_i_4_n_0 ;
  wire \remainder[15]_i_5_n_0 ;
  wire \remainder[15]_i_6_n_0 ;
  wire \remainder[16]_i_1_n_0 ;
  wire \remainder[17]_i_1_n_0 ;
  wire \remainder[18]_i_1_n_0 ;
  wire \remainder[19]_i_1_n_0 ;
  wire \remainder[19]_i_3_n_0 ;
  wire \remainder[19]_i_4_n_0 ;
  wire \remainder[19]_i_5_n_0 ;
  wire \remainder[19]_i_6_n_0 ;
  wire \remainder[1]_i_1_n_0 ;
  wire \remainder[20]_i_1_n_0 ;
  wire \remainder[21]_i_1_n_0 ;
  wire \remainder[22]_i_1_n_0 ;
  wire \remainder[23]_i_1_n_0 ;
  wire \remainder[23]_i_3_n_0 ;
  wire \remainder[23]_i_4_n_0 ;
  wire \remainder[23]_i_5_n_0 ;
  wire \remainder[23]_i_6_n_0 ;
  wire \remainder[24]_i_1_n_0 ;
  wire \remainder[25]_i_1_n_0 ;
  wire \remainder[26]_i_1_n_0 ;
  wire \remainder[27]_i_1_n_0 ;
  wire \remainder[27]_i_3_n_0 ;
  wire \remainder[27]_i_4_n_0 ;
  wire \remainder[27]_i_5_n_0 ;
  wire \remainder[27]_i_6_n_0 ;
  wire \remainder[28]_i_1_n_0 ;
  wire \remainder[29]_i_1_n_0 ;
  wire \remainder[2]_i_1_n_0 ;
  wire \remainder[30]_i_1_n_0 ;
  wire \remainder[31]_i_1_n_0 ;
  wire \remainder[31]_i_3_n_0 ;
  wire \remainder[31]_i_4_n_0 ;
  wire \remainder[31]_i_5_n_0 ;
  wire \remainder[31]_i_6_n_0 ;
  wire \remainder[3]_i_1_n_0 ;
  wire \remainder[3]_i_3_n_0 ;
  wire \remainder[3]_i_4_n_0 ;
  wire \remainder[3]_i_5_n_0 ;
  wire \remainder[3]_i_6_n_0 ;
  wire \remainder[4]_i_1_n_0 ;
  wire \remainder[5]_i_1_n_0 ;
  wire \remainder[6]_i_1_n_0 ;
  wire \remainder[7]_i_1_n_0 ;
  wire \remainder[7]_i_3_n_0 ;
  wire \remainder[7]_i_4_n_0 ;
  wire \remainder[7]_i_5_n_0 ;
  wire \remainder[7]_i_6_n_0 ;
  wire \remainder[8]_i_1_n_0 ;
  wire \remainder[9]_i_1_n_0 ;
  wire \remainder_reg[11]_i_2_n_0 ;
  wire \remainder_reg[11]_i_2_n_4 ;
  wire \remainder_reg[11]_i_2_n_5 ;
  wire \remainder_reg[11]_i_2_n_6 ;
  wire \remainder_reg[11]_i_2_n_7 ;
  wire \remainder_reg[15]_i_2_n_0 ;
  wire \remainder_reg[15]_i_2_n_4 ;
  wire \remainder_reg[15]_i_2_n_5 ;
  wire \remainder_reg[15]_i_2_n_6 ;
  wire \remainder_reg[15]_i_2_n_7 ;
  wire \remainder_reg[19]_i_2_n_0 ;
  wire \remainder_reg[19]_i_2_n_4 ;
  wire \remainder_reg[19]_i_2_n_5 ;
  wire \remainder_reg[19]_i_2_n_6 ;
  wire \remainder_reg[19]_i_2_n_7 ;
  wire \remainder_reg[23]_i_2_n_0 ;
  wire \remainder_reg[23]_i_2_n_4 ;
  wire \remainder_reg[23]_i_2_n_5 ;
  wire \remainder_reg[23]_i_2_n_6 ;
  wire \remainder_reg[23]_i_2_n_7 ;
  wire \remainder_reg[27]_i_2_n_0 ;
  wire \remainder_reg[27]_i_2_n_4 ;
  wire \remainder_reg[27]_i_2_n_5 ;
  wire \remainder_reg[27]_i_2_n_6 ;
  wire \remainder_reg[27]_i_2_n_7 ;
  wire \remainder_reg[31]_i_2_n_0 ;
  wire \remainder_reg[31]_i_2_n_4 ;
  wire \remainder_reg[31]_i_2_n_5 ;
  wire \remainder_reg[31]_i_2_n_6 ;
  wire \remainder_reg[31]_i_2_n_7 ;
  wire \remainder_reg[3]_i_2_n_0 ;
  wire \remainder_reg[3]_i_2_n_4 ;
  wire \remainder_reg[3]_i_2_n_5 ;
  wire \remainder_reg[3]_i_2_n_6 ;
  wire \remainder_reg[3]_i_2_n_7 ;
  wire \remainder_reg[7]_i_2_n_0 ;
  wire \remainder_reg[7]_i_2_n_4 ;
  wire \remainder_reg[7]_i_2_n_5 ;
  wire \remainder_reg[7]_i_2_n_6 ;
  wire \remainder_reg[7]_i_2_n_7 ;
  wire \remainder_reg_n_0_[31] ;
  wire [31:0]result;
  wire result0_n_100;
  wire result0_n_101;
  wire result0_n_102;
  wire result0_n_103;
  wire result0_n_104;
  wire result0_n_105;
  wire result0_n_74;
  wire result0_n_75;
  wire result0_n_76;
  wire result0_n_77;
  wire result0_n_78;
  wire result0_n_79;
  wire result0_n_80;
  wire result0_n_81;
  wire result0_n_82;
  wire result0_n_83;
  wire result0_n_84;
  wire result0_n_85;
  wire result0_n_86;
  wire result0_n_87;
  wire result0_n_88;
  wire result0_n_89;
  wire result0_n_90;
  wire result0_n_91;
  wire result0_n_92;
  wire result0_n_93;
  wire result0_n_94;
  wire result0_n_95;
  wire result0_n_96;
  wire result0_n_97;
  wire result0_n_98;
  wire result0_n_99;
  wire \result[0]_i_100_n_0 ;
  wire \result[0]_i_101_n_0 ;
  wire \result[0]_i_102_n_0 ;
  wire \result[0]_i_103_n_0 ;
  wire \result[0]_i_104_n_0 ;
  wire \result[0]_i_105_n_0 ;
  wire \result[0]_i_12_n_0 ;
  wire \result[0]_i_14_n_0 ;
  wire \result[0]_i_15_n_0 ;
  wire \result[0]_i_16_n_0 ;
  wire \result[0]_i_17_n_0 ;
  wire \result[0]_i_19_n_0 ;
  wire \result[0]_i_1_n_0 ;
  wire \result[0]_i_20_n_0 ;
  wire \result[0]_i_21_n_0 ;
  wire \result[0]_i_22_n_0 ;
  wire \result[0]_i_23_n_0 ;
  wire \result[0]_i_24_n_0 ;
  wire \result[0]_i_25_n_0 ;
  wire \result[0]_i_26_n_0 ;
  wire \result[0]_i_27_n_0 ;
  wire \result[0]_i_28_n_0 ;
  wire \result[0]_i_29_n_0 ;
  wire \result[0]_i_2_n_0 ;
  wire \result[0]_i_30_n_0 ;
  wire \result[0]_i_31_n_0 ;
  wire \result[0]_i_33_n_0 ;
  wire \result[0]_i_34_n_0 ;
  wire \result[0]_i_35_n_0 ;
  wire \result[0]_i_36_n_0 ;
  wire \result[0]_i_37_n_0 ;
  wire \result[0]_i_39_n_0 ;
  wire \result[0]_i_3_n_0 ;
  wire \result[0]_i_41_n_0 ;
  wire \result[0]_i_42_n_0 ;
  wire \result[0]_i_43_n_0 ;
  wire \result[0]_i_44_n_0 ;
  wire \result[0]_i_45_n_0 ;
  wire \result[0]_i_46_n_0 ;
  wire \result[0]_i_47_n_0 ;
  wire \result[0]_i_48_n_0 ;
  wire \result[0]_i_4_n_0 ;
  wire \result[0]_i_50_n_0 ;
  wire \result[0]_i_51_n_0 ;
  wire \result[0]_i_52_n_0 ;
  wire \result[0]_i_53_n_0 ;
  wire \result[0]_i_54_n_0 ;
  wire \result[0]_i_55_n_0 ;
  wire \result[0]_i_56_n_0 ;
  wire \result[0]_i_58_n_0 ;
  wire \result[0]_i_59_n_0 ;
  wire \result[0]_i_5_n_0 ;
  wire \result[0]_i_60_n_0 ;
  wire \result[0]_i_61_n_0 ;
  wire \result[0]_i_62_n_0 ;
  wire \result[0]_i_64_n_0 ;
  wire \result[0]_i_65_n_0 ;
  wire \result[0]_i_66_n_0 ;
  wire \result[0]_i_67_n_0 ;
  wire \result[0]_i_68_n_0 ;
  wire \result[0]_i_69_n_0 ;
  wire \result[0]_i_6_n_0 ;
  wire \result[0]_i_70_n_0 ;
  wire \result[0]_i_71_n_0 ;
  wire \result[0]_i_72_n_0 ;
  wire \result[0]_i_73_n_0 ;
  wire \result[0]_i_74_n_0 ;
  wire \result[0]_i_75_n_0 ;
  wire \result[0]_i_76_n_0 ;
  wire \result[0]_i_77_n_0 ;
  wire \result[0]_i_78_n_0 ;
  wire \result[0]_i_79_n_0 ;
  wire \result[0]_i_7_n_0 ;
  wire \result[0]_i_80_n_0 ;
  wire \result[0]_i_82_n_0 ;
  wire \result[0]_i_83_n_0 ;
  wire \result[0]_i_84_n_0 ;
  wire \result[0]_i_85_n_0 ;
  wire \result[0]_i_86_n_0 ;
  wire \result[0]_i_87_n_0 ;
  wire \result[0]_i_88_n_0 ;
  wire \result[0]_i_89_n_0 ;
  wire \result[0]_i_8_n_0 ;
  wire \result[0]_i_90_n_0 ;
  wire \result[0]_i_91_n_0 ;
  wire \result[0]_i_92_n_0 ;
  wire \result[0]_i_93_n_0 ;
  wire \result[0]_i_94_n_0 ;
  wire \result[0]_i_95_n_0 ;
  wire \result[0]_i_96_n_0 ;
  wire \result[0]_i_98_n_0 ;
  wire \result[0]_i_99_n_0 ;
  wire \result[0]_i_9_n_0 ;
  wire \result[10]_i_10_n_0 ;
  wire \result[10]_i_11_n_0 ;
  wire \result[10]_i_12_n_0 ;
  wire \result[10]_i_13_n_0 ;
  wire \result[10]_i_14_n_0 ;
  wire \result[10]_i_15_n_0 ;
  wire \result[10]_i_1_n_0 ;
  wire \result[10]_i_2_n_0 ;
  wire \result[10]_i_3_n_0 ;
  wire \result[10]_i_4_n_0 ;
  wire \result[10]_i_5_n_0 ;
  wire \result[10]_i_6_n_0 ;
  wire \result[10]_i_7_n_0 ;
  wire \result[10]_i_8_n_0 ;
  wire \result[10]_i_9_n_0 ;
  wire \result[11]_i_10_n_0 ;
  wire \result[11]_i_11_n_0 ;
  wire \result[11]_i_12_n_0 ;
  wire \result[11]_i_13_n_0 ;
  wire \result[11]_i_14_n_0 ;
  wire \result[11]_i_17_n_0 ;
  wire \result[11]_i_18_n_0 ;
  wire \result[11]_i_19_n_0 ;
  wire \result[11]_i_1_n_0 ;
  wire \result[11]_i_20_n_0 ;
  wire \result[11]_i_21_n_0 ;
  wire \result[11]_i_22_n_0 ;
  wire \result[11]_i_23_n_0 ;
  wire \result[11]_i_24_n_0 ;
  wire \result[11]_i_25_n_0 ;
  wire \result[11]_i_26_n_0 ;
  wire \result[11]_i_2_n_0 ;
  wire \result[11]_i_3_n_0 ;
  wire \result[11]_i_4_n_0 ;
  wire \result[11]_i_5_n_0 ;
  wire \result[11]_i_6_n_0 ;
  wire \result[11]_i_7_n_0 ;
  wire \result[11]_i_8_n_0 ;
  wire \result[11]_i_9_n_0 ;
  wire \result[12]_i_10_n_0 ;
  wire \result[12]_i_11_n_0 ;
  wire \result[12]_i_12_n_0 ;
  wire \result[12]_i_13_n_0 ;
  wire \result[12]_i_18_n_0 ;
  wire \result[12]_i_19_n_0 ;
  wire \result[12]_i_1_n_0 ;
  wire \result[12]_i_21_n_0 ;
  wire \result[12]_i_22_n_0 ;
  wire \result[12]_i_23_n_0 ;
  wire \result[12]_i_24_n_0 ;
  wire \result[12]_i_25_n_0 ;
  wire \result[12]_i_26_n_0 ;
  wire \result[12]_i_27_n_0 ;
  wire \result[12]_i_2_n_0 ;
  wire \result[12]_i_3_n_0 ;
  wire \result[12]_i_4_n_0 ;
  wire \result[12]_i_5_n_0 ;
  wire \result[12]_i_6_n_0 ;
  wire \result[12]_i_7_n_0 ;
  wire \result[12]_i_9_n_0 ;
  wire \result[13]_i_10_n_0 ;
  wire \result[13]_i_11_n_0 ;
  wire \result[13]_i_12_n_0 ;
  wire \result[13]_i_13_n_0 ;
  wire \result[13]_i_14_n_0 ;
  wire \result[13]_i_16_n_0 ;
  wire \result[13]_i_17_n_0 ;
  wire \result[13]_i_18_n_0 ;
  wire \result[13]_i_19_n_0 ;
  wire \result[13]_i_1_n_0 ;
  wire \result[13]_i_20_n_0 ;
  wire \result[13]_i_21_n_0 ;
  wire \result[13]_i_22_n_0 ;
  wire \result[13]_i_23_n_0 ;
  wire \result[13]_i_24_n_0 ;
  wire \result[13]_i_25_n_0 ;
  wire \result[13]_i_26_n_0 ;
  wire \result[13]_i_27_n_0 ;
  wire \result[13]_i_28_n_0 ;
  wire \result[13]_i_29_n_0 ;
  wire \result[13]_i_2_n_0 ;
  wire \result[13]_i_30_n_0 ;
  wire \result[13]_i_3_n_0 ;
  wire \result[13]_i_4_n_0 ;
  wire \result[13]_i_5_n_0 ;
  wire \result[13]_i_6_n_0 ;
  wire \result[13]_i_7_n_0 ;
  wire \result[13]_i_8_n_0 ;
  wire \result[14]_i_10_n_0 ;
  wire \result[14]_i_11_n_0 ;
  wire \result[14]_i_12_n_0 ;
  wire \result[14]_i_13_n_0 ;
  wire \result[14]_i_14_n_0 ;
  wire \result[14]_i_15_n_0 ;
  wire \result[14]_i_16_n_0 ;
  wire \result[14]_i_17_n_0 ;
  wire \result[14]_i_18_n_0 ;
  wire \result[14]_i_19_n_0 ;
  wire \result[14]_i_1_n_0 ;
  wire \result[14]_i_20_n_0 ;
  wire \result[14]_i_24_n_0 ;
  wire \result[14]_i_25_n_0 ;
  wire \result[14]_i_26_n_0 ;
  wire \result[14]_i_27_n_0 ;
  wire \result[14]_i_28_n_0 ;
  wire \result[14]_i_2_n_0 ;
  wire \result[14]_i_3_n_0 ;
  wire \result[14]_i_4_n_0 ;
  wire \result[14]_i_5_n_0 ;
  wire \result[14]_i_6_n_0 ;
  wire \result[14]_i_7_n_0 ;
  wire \result[14]_i_8_n_0 ;
  wire \result[15]_i_10_n_0 ;
  wire \result[15]_i_11_n_0 ;
  wire \result[15]_i_12_n_0 ;
  wire \result[15]_i_13_n_0 ;
  wire \result[15]_i_15_n_0 ;
  wire \result[15]_i_16_n_0 ;
  wire \result[15]_i_17_n_0 ;
  wire \result[15]_i_18_n_0 ;
  wire \result[15]_i_1_n_0 ;
  wire \result[15]_i_2_n_0 ;
  wire \result[15]_i_3_n_0 ;
  wire \result[15]_i_4_n_0 ;
  wire \result[15]_i_5_n_0 ;
  wire \result[15]_i_6_n_0 ;
  wire \result[15]_i_7_n_0 ;
  wire \result[15]_i_8_n_0 ;
  wire \result[15]_i_9_n_0 ;
  wire \result[16]_i_10_n_0 ;
  wire \result[16]_i_11_n_0 ;
  wire \result[16]_i_12_n_0 ;
  wire \result[16]_i_13_n_0 ;
  wire \result[16]_i_14_n_0 ;
  wire \result[16]_i_15_n_0 ;
  wire \result[16]_i_16_n_0 ;
  wire \result[16]_i_17_n_0 ;
  wire \result[16]_i_18_n_0 ;
  wire \result[16]_i_19_n_0 ;
  wire \result[16]_i_1_n_0 ;
  wire \result[16]_i_20_n_0 ;
  wire \result[16]_i_21_n_0 ;
  wire \result[16]_i_22_n_0 ;
  wire \result[16]_i_23_n_0 ;
  wire \result[16]_i_2_n_0 ;
  wire \result[16]_i_3_n_0 ;
  wire \result[16]_i_4_n_0 ;
  wire \result[16]_i_5_n_0 ;
  wire \result[16]_i_6_n_0 ;
  wire \result[16]_i_7_n_0 ;
  wire \result[16]_i_8_n_0 ;
  wire \result[16]_i_9_n_0 ;
  wire \result[17]_i_10_n_0 ;
  wire \result[17]_i_11_n_0 ;
  wire \result[17]_i_12_n_0 ;
  wire \result[17]_i_13_n_0 ;
  wire \result[17]_i_14_n_0 ;
  wire \result[17]_i_15_n_0 ;
  wire \result[17]_i_16_n_0 ;
  wire \result[17]_i_17_n_0 ;
  wire \result[17]_i_1_n_0 ;
  wire \result[17]_i_2_n_0 ;
  wire \result[17]_i_3_n_0 ;
  wire \result[17]_i_4_n_0 ;
  wire \result[17]_i_5_n_0 ;
  wire \result[17]_i_6_n_0 ;
  wire \result[17]_i_7_n_0 ;
  wire \result[17]_i_8_n_0 ;
  wire \result[17]_i_9_n_0 ;
  wire \result[18]_i_11_n_0 ;
  wire \result[18]_i_12_n_0 ;
  wire \result[18]_i_13_n_0 ;
  wire \result[18]_i_14_n_0 ;
  wire \result[18]_i_15_n_0 ;
  wire \result[18]_i_16_n_0 ;
  wire \result[18]_i_17_n_0 ;
  wire \result[18]_i_18_n_0 ;
  wire \result[18]_i_19_n_0 ;
  wire \result[18]_i_1_n_0 ;
  wire \result[18]_i_20_n_0 ;
  wire \result[18]_i_22_n_0 ;
  wire \result[18]_i_23_n_0 ;
  wire \result[18]_i_2_n_0 ;
  wire \result[18]_i_3_n_0 ;
  wire \result[18]_i_4_n_0 ;
  wire \result[18]_i_5_n_0 ;
  wire \result[18]_i_6_n_0 ;
  wire \result[18]_i_7_n_0 ;
  wire \result[18]_i_8_n_0 ;
  wire \result[18]_i_9_n_0 ;
  wire \result[19]_i_10_n_0 ;
  wire \result[19]_i_11_n_0 ;
  wire \result[19]_i_12_n_0 ;
  wire \result[19]_i_13_n_0 ;
  wire \result[19]_i_14_n_0 ;
  wire \result[19]_i_15_n_0 ;
  wire \result[19]_i_16_n_0 ;
  wire \result[19]_i_17_n_0 ;
  wire \result[19]_i_18_n_0 ;
  wire \result[19]_i_19_n_0 ;
  wire \result[19]_i_1_n_0 ;
  wire \result[19]_i_22_n_0 ;
  wire \result[19]_i_23_n_0 ;
  wire \result[19]_i_24_n_0 ;
  wire \result[19]_i_25_n_0 ;
  wire \result[19]_i_26_n_0 ;
  wire \result[19]_i_27_n_0 ;
  wire \result[19]_i_28_n_0 ;
  wire \result[19]_i_29_n_0 ;
  wire \result[19]_i_2_n_0 ;
  wire \result[19]_i_30_n_0 ;
  wire \result[19]_i_31_n_0 ;
  wire \result[19]_i_32_n_0 ;
  wire \result[19]_i_33_n_0 ;
  wire \result[19]_i_34_n_0 ;
  wire \result[19]_i_35_n_0 ;
  wire \result[19]_i_36_n_0 ;
  wire \result[19]_i_37_n_0 ;
  wire \result[19]_i_38_n_0 ;
  wire \result[19]_i_3_n_0 ;
  wire \result[19]_i_4_n_0 ;
  wire \result[19]_i_5_n_0 ;
  wire \result[19]_i_6_n_0 ;
  wire \result[19]_i_8_n_0 ;
  wire \result[19]_i_9_n_0 ;
  wire \result[1]_i_10_n_0 ;
  wire \result[1]_i_11_n_0 ;
  wire \result[1]_i_12_n_0 ;
  wire \result[1]_i_13_n_0 ;
  wire \result[1]_i_14_n_0 ;
  wire \result[1]_i_15_n_0 ;
  wire \result[1]_i_16_n_0 ;
  wire \result[1]_i_17_n_0 ;
  wire \result[1]_i_18_n_0 ;
  wire \result[1]_i_1_n_0 ;
  wire \result[1]_i_2_n_0 ;
  wire \result[1]_i_3_n_0 ;
  wire \result[1]_i_4_n_0 ;
  wire \result[1]_i_5_n_0 ;
  wire \result[1]_i_6_n_0 ;
  wire \result[1]_i_7_n_0 ;
  wire \result[1]_i_8_n_0 ;
  wire \result[1]_i_9_n_0 ;
  wire \result[20]_i_10_n_0 ;
  wire \result[20]_i_11_n_0 ;
  wire \result[20]_i_12_n_0 ;
  wire \result[20]_i_13_n_0 ;
  wire \result[20]_i_14_n_0 ;
  wire \result[20]_i_1_n_0 ;
  wire \result[20]_i_2_n_0 ;
  wire \result[20]_i_3_n_0 ;
  wire \result[20]_i_4_n_0 ;
  wire \result[20]_i_5_n_0 ;
  wire \result[20]_i_6_n_0 ;
  wire \result[20]_i_7_n_0 ;
  wire \result[20]_i_8_n_0 ;
  wire \result[20]_i_9_n_0 ;
  wire \result[21]_i_10_n_0 ;
  wire \result[21]_i_11_n_0 ;
  wire \result[21]_i_12_n_0 ;
  wire \result[21]_i_13_n_0 ;
  wire \result[21]_i_14_n_0 ;
  wire \result[21]_i_15_n_0 ;
  wire \result[21]_i_16_n_0 ;
  wire \result[21]_i_1_n_0 ;
  wire \result[21]_i_2_n_0 ;
  wire \result[21]_i_3_n_0 ;
  wire \result[21]_i_4_n_0 ;
  wire \result[21]_i_5_n_0 ;
  wire \result[21]_i_6_n_0 ;
  wire \result[21]_i_7_n_0 ;
  wire \result[21]_i_8_n_0 ;
  wire \result[21]_i_9_n_0 ;
  wire \result[22]_i_10_n_0 ;
  wire \result[22]_i_11_n_0 ;
  wire \result[22]_i_12_n_0 ;
  wire \result[22]_i_13_n_0 ;
  wire \result[22]_i_14_n_0 ;
  wire \result[22]_i_15_n_0 ;
  wire \result[22]_i_16_n_0 ;
  wire \result[22]_i_18_n_0 ;
  wire \result[22]_i_19_n_0 ;
  wire \result[22]_i_1_n_0 ;
  wire \result[22]_i_20_n_0 ;
  wire \result[22]_i_21_n_0 ;
  wire \result[22]_i_22_n_0 ;
  wire \result[22]_i_23_n_0 ;
  wire \result[22]_i_24_n_0 ;
  wire \result[22]_i_25_n_0 ;
  wire \result[22]_i_26_n_0 ;
  wire \result[22]_i_27_n_0 ;
  wire \result[22]_i_28_n_0 ;
  wire \result[22]_i_29_n_0 ;
  wire \result[22]_i_2_n_0 ;
  wire \result[22]_i_3_n_0 ;
  wire \result[22]_i_4_n_0 ;
  wire \result[22]_i_5_n_0 ;
  wire \result[22]_i_6_n_0 ;
  wire \result[22]_i_7_n_0 ;
  wire \result[22]_i_8_n_0 ;
  wire \result[22]_i_9_n_0 ;
  wire \result[23]_i_10_n_0 ;
  wire \result[23]_i_11_n_0 ;
  wire \result[23]_i_12_n_0 ;
  wire \result[23]_i_13_n_0 ;
  wire \result[23]_i_14_n_0 ;
  wire \result[23]_i_15_n_0 ;
  wire \result[23]_i_16_n_0 ;
  wire \result[23]_i_17_n_0 ;
  wire \result[23]_i_1_n_0 ;
  wire \result[23]_i_2_n_0 ;
  wire \result[23]_i_3_n_0 ;
  wire \result[23]_i_4_n_0 ;
  wire \result[23]_i_5_n_0 ;
  wire \result[23]_i_7_n_0 ;
  wire \result[23]_i_8_n_0 ;
  wire \result[23]_i_9_n_0 ;
  wire \result[24]_i_10_n_0 ;
  wire \result[24]_i_11_n_0 ;
  wire \result[24]_i_12_n_0 ;
  wire \result[24]_i_13_n_0 ;
  wire \result[24]_i_14_n_0 ;
  wire \result[24]_i_15_n_0 ;
  wire \result[24]_i_16_n_0 ;
  wire \result[24]_i_17_n_0 ;
  wire \result[24]_i_18_n_0 ;
  wire \result[24]_i_19_n_0 ;
  wire \result[24]_i_1_n_0 ;
  wire \result[24]_i_20_n_0 ;
  wire \result[24]_i_21_n_0 ;
  wire \result[24]_i_2_n_0 ;
  wire \result[24]_i_3_n_0 ;
  wire \result[24]_i_4_n_0 ;
  wire \result[24]_i_6_n_0 ;
  wire \result[24]_i_7_n_0 ;
  wire \result[24]_i_8_n_0 ;
  wire \result[25]_i_10_n_0 ;
  wire \result[25]_i_11_n_0 ;
  wire \result[25]_i_12_n_0 ;
  wire \result[25]_i_13_n_0 ;
  wire \result[25]_i_14_n_0 ;
  wire \result[25]_i_1_n_0 ;
  wire \result[25]_i_2_n_0 ;
  wire \result[25]_i_3_n_0 ;
  wire \result[25]_i_4_n_0 ;
  wire \result[25]_i_5_n_0 ;
  wire \result[25]_i_6_n_0 ;
  wire \result[25]_i_7_n_0 ;
  wire \result[25]_i_8_n_0 ;
  wire \result[25]_i_9_n_0 ;
  wire \result[26]_i_10_n_0 ;
  wire \result[26]_i_11_n_0 ;
  wire \result[26]_i_12_n_0 ;
  wire \result[26]_i_13_n_0 ;
  wire \result[26]_i_14_n_0 ;
  wire \result[26]_i_1_n_0 ;
  wire \result[26]_i_2_n_0 ;
  wire \result[26]_i_3_n_0 ;
  wire \result[26]_i_4_n_0 ;
  wire \result[26]_i_5_n_0 ;
  wire \result[26]_i_6_n_0 ;
  wire \result[26]_i_7_n_0 ;
  wire \result[26]_i_8_n_0 ;
  wire \result[26]_i_9_n_0 ;
  wire \result[27]_i_10_n_0 ;
  wire \result[27]_i_11_n_0 ;
  wire \result[27]_i_12_n_0 ;
  wire \result[27]_i_13_n_0 ;
  wire \result[27]_i_14_n_0 ;
  wire \result[27]_i_15_n_0 ;
  wire \result[27]_i_16_n_0 ;
  wire \result[27]_i_17_n_0 ;
  wire \result[27]_i_18_n_0 ;
  wire \result[27]_i_1_n_0 ;
  wire \result[27]_i_20_n_0 ;
  wire \result[27]_i_21_n_0 ;
  wire \result[27]_i_22_n_0 ;
  wire \result[27]_i_23_n_0 ;
  wire \result[27]_i_24_n_0 ;
  wire \result[27]_i_25_n_0 ;
  wire \result[27]_i_26_n_0 ;
  wire \result[27]_i_27_n_0 ;
  wire \result[27]_i_28_n_0 ;
  wire \result[27]_i_29_n_0 ;
  wire \result[27]_i_2_n_0 ;
  wire \result[27]_i_31_n_0 ;
  wire \result[27]_i_32_n_0 ;
  wire \result[27]_i_33_n_0 ;
  wire \result[27]_i_34_n_0 ;
  wire \result[27]_i_35_n_0 ;
  wire \result[27]_i_36_n_0 ;
  wire \result[27]_i_37_n_0 ;
  wire \result[27]_i_38_n_0 ;
  wire \result[27]_i_39_n_0 ;
  wire \result[27]_i_3_n_0 ;
  wire \result[27]_i_40_n_0 ;
  wire \result[27]_i_41_n_0 ;
  wire \result[27]_i_42_n_0 ;
  wire \result[27]_i_43_n_0 ;
  wire \result[27]_i_44_n_0 ;
  wire \result[27]_i_45_n_0 ;
  wire \result[27]_i_46_n_0 ;
  wire \result[27]_i_4_n_0 ;
  wire \result[27]_i_5_n_0 ;
  wire \result[27]_i_7_n_0 ;
  wire \result[27]_i_8_n_0 ;
  wire \result[27]_i_9_n_0 ;
  wire \result[28]_i_10_n_0 ;
  wire \result[28]_i_11_n_0 ;
  wire \result[28]_i_12_n_0 ;
  wire \result[28]_i_13_n_0 ;
  wire \result[28]_i_1_n_0 ;
  wire \result[28]_i_2_n_0 ;
  wire \result[28]_i_3_n_0 ;
  wire \result[28]_i_4_n_0 ;
  wire \result[28]_i_5_n_0 ;
  wire \result[28]_i_6_n_0 ;
  wire \result[28]_i_7_n_0 ;
  wire \result[28]_i_8_n_0 ;
  wire \result[28]_i_9_n_0 ;
  wire \result[29]_i_10_n_0 ;
  wire \result[29]_i_1_n_0 ;
  wire \result[29]_i_2_n_0 ;
  wire \result[29]_i_3_n_0 ;
  wire \result[29]_i_4_n_0 ;
  wire \result[29]_i_5_n_0 ;
  wire \result[29]_i_6_n_0 ;
  wire \result[29]_i_7_n_0 ;
  wire \result[29]_i_8_n_0 ;
  wire \result[29]_i_9_n_0 ;
  wire \result[2]_i_10_n_0 ;
  wire \result[2]_i_11_n_0 ;
  wire \result[2]_i_12_n_0 ;
  wire \result[2]_i_13_n_0 ;
  wire \result[2]_i_14_n_0 ;
  wire \result[2]_i_15_n_0 ;
  wire \result[2]_i_16_n_0 ;
  wire \result[2]_i_1_n_0 ;
  wire \result[2]_i_2_n_0 ;
  wire \result[2]_i_3_n_0 ;
  wire \result[2]_i_4_n_0 ;
  wire \result[2]_i_5_n_0 ;
  wire \result[2]_i_6_n_0 ;
  wire \result[2]_i_7_n_0 ;
  wire \result[2]_i_8_n_0 ;
  wire \result[2]_i_9_n_0 ;
  wire \result[30]_i_11_n_0 ;
  wire \result[30]_i_12_n_0 ;
  wire \result[30]_i_13_n_0 ;
  wire \result[30]_i_14_n_0 ;
  wire \result[30]_i_15_n_0 ;
  wire \result[30]_i_16_n_0 ;
  wire \result[30]_i_17_n_0 ;
  wire \result[30]_i_18_n_0 ;
  wire \result[30]_i_19_n_0 ;
  wire \result[30]_i_1_n_0 ;
  wire \result[30]_i_20_n_0 ;
  wire \result[30]_i_21_n_0 ;
  wire \result[30]_i_22_n_0 ;
  wire \result[30]_i_23_n_0 ;
  wire \result[30]_i_24_n_0 ;
  wire \result[30]_i_25_n_0 ;
  wire \result[30]_i_26_n_0 ;
  wire \result[30]_i_27_n_0 ;
  wire \result[30]_i_28_n_0 ;
  wire \result[30]_i_29_n_0 ;
  wire \result[30]_i_2_n_0 ;
  wire \result[30]_i_30_n_0 ;
  wire \result[30]_i_32_n_0 ;
  wire \result[30]_i_33_n_0 ;
  wire \result[30]_i_34_n_0 ;
  wire \result[30]_i_36_n_0 ;
  wire \result[30]_i_37_n_0 ;
  wire \result[30]_i_38_n_0 ;
  wire \result[30]_i_3_n_0 ;
  wire \result[30]_i_40_n_0 ;
  wire \result[30]_i_41_n_0 ;
  wire \result[30]_i_42_n_0 ;
  wire \result[30]_i_43_n_0 ;
  wire \result[30]_i_44_n_0 ;
  wire \result[30]_i_45_n_0 ;
  wire \result[30]_i_46_n_0 ;
  wire \result[30]_i_47_n_0 ;
  wire \result[30]_i_48_n_0 ;
  wire \result[30]_i_49_n_0 ;
  wire \result[30]_i_4_n_0 ;
  wire \result[30]_i_50_n_0 ;
  wire \result[30]_i_51_n_0 ;
  wire \result[30]_i_52_n_0 ;
  wire \result[30]_i_53_n_0 ;
  wire \result[30]_i_54_n_0 ;
  wire \result[30]_i_55_n_0 ;
  wire \result[30]_i_56_n_0 ;
  wire \result[30]_i_57_n_0 ;
  wire \result[30]_i_58_n_0 ;
  wire \result[30]_i_59_n_0 ;
  wire \result[30]_i_5_n_0 ;
  wire \result[30]_i_60_n_0 ;
  wire \result[30]_i_61_n_0 ;
  wire \result[30]_i_7_n_0 ;
  wire \result[30]_i_8_n_0 ;
  wire \result[30]_i_9_n_0 ;
  wire \result[31]_i_10_n_0 ;
  wire \result[31]_i_11_n_0 ;
  wire \result[31]_i_12_n_0 ;
  wire \result[31]_i_13_n_0 ;
  wire \result[31]_i_14_n_0 ;
  wire \result[31]_i_15_n_0 ;
  wire \result[31]_i_16_n_0 ;
  wire \result[31]_i_1_n_0 ;
  wire \result[31]_i_3_n_0 ;
  wire \result[31]_i_4_n_0 ;
  wire \result[31]_i_5_n_0 ;
  wire \result[31]_i_6_n_0 ;
  wire \result[31]_i_8_n_0 ;
  wire \result[3]_i_10_n_0 ;
  wire \result[3]_i_11_n_0 ;
  wire \result[3]_i_12_n_0 ;
  wire \result[3]_i_14_n_0 ;
  wire \result[3]_i_15_n_0 ;
  wire \result[3]_i_16_n_0 ;
  wire \result[3]_i_17_n_0 ;
  wire \result[3]_i_18_n_0 ;
  wire \result[3]_i_19_n_0 ;
  wire \result[3]_i_1_n_0 ;
  wire \result[3]_i_20_n_0 ;
  wire \result[3]_i_21_n_0 ;
  wire \result[3]_i_2_n_0 ;
  wire \result[3]_i_3_n_0 ;
  wire \result[3]_i_4_n_0 ;
  wire \result[3]_i_5_n_0 ;
  wire \result[3]_i_6_n_0 ;
  wire \result[3]_i_7_n_0 ;
  wire \result[3]_i_8_n_0 ;
  wire \result[3]_i_9_n_0 ;
  wire \result[4]_i_10_n_0 ;
  wire \result[4]_i_11_n_0 ;
  wire \result[4]_i_12_n_0 ;
  wire \result[4]_i_13_n_0 ;
  wire \result[4]_i_14_n_0 ;
  wire \result[4]_i_16_n_0 ;
  wire \result[4]_i_17_n_0 ;
  wire \result[4]_i_18_n_0 ;
  wire \result[4]_i_19_n_0 ;
  wire \result[4]_i_1_n_0 ;
  wire \result[4]_i_20_n_0 ;
  wire \result[4]_i_21_n_0 ;
  wire \result[4]_i_22_n_0 ;
  wire \result[4]_i_2_n_0 ;
  wire \result[4]_i_3_n_0 ;
  wire \result[4]_i_4_n_0 ;
  wire \result[4]_i_5_n_0 ;
  wire \result[4]_i_6_n_0 ;
  wire \result[4]_i_7_n_0 ;
  wire \result[4]_i_8_n_0 ;
  wire \result[4]_i_9_n_0 ;
  wire \result[5]_i_10_n_0 ;
  wire \result[5]_i_11_n_0 ;
  wire \result[5]_i_12_n_0 ;
  wire \result[5]_i_13_n_0 ;
  wire \result[5]_i_14_n_0 ;
  wire \result[5]_i_15_n_0 ;
  wire \result[5]_i_16_n_0 ;
  wire \result[5]_i_1_n_0 ;
  wire \result[5]_i_2_n_0 ;
  wire \result[5]_i_3_n_0 ;
  wire \result[5]_i_4_n_0 ;
  wire \result[5]_i_5_n_0 ;
  wire \result[5]_i_6_n_0 ;
  wire \result[5]_i_7_n_0 ;
  wire \result[5]_i_8_n_0 ;
  wire \result[5]_i_9_n_0 ;
  wire \result[6]_i_10_n_0 ;
  wire \result[6]_i_11_n_0 ;
  wire \result[6]_i_12_n_0 ;
  wire \result[6]_i_13_n_0 ;
  wire \result[6]_i_14_n_0 ;
  wire \result[6]_i_15_n_0 ;
  wire \result[6]_i_16_n_0 ;
  wire \result[6]_i_18_n_0 ;
  wire \result[6]_i_19_n_0 ;
  wire \result[6]_i_1_n_0 ;
  wire \result[6]_i_21_n_0 ;
  wire \result[6]_i_22_n_0 ;
  wire \result[6]_i_23_n_0 ;
  wire \result[6]_i_24_n_0 ;
  wire \result[6]_i_25_n_0 ;
  wire \result[6]_i_26_n_0 ;
  wire \result[6]_i_27_n_0 ;
  wire \result[6]_i_28_n_0 ;
  wire \result[6]_i_29_n_0 ;
  wire \result[6]_i_2_n_0 ;
  wire \result[6]_i_30_n_0 ;
  wire \result[6]_i_3_n_0 ;
  wire \result[6]_i_4_n_0 ;
  wire \result[6]_i_5_n_0 ;
  wire \result[6]_i_6_n_0 ;
  wire \result[6]_i_7_n_0 ;
  wire \result[6]_i_8_n_0 ;
  wire \result[6]_i_9_n_0 ;
  wire \result[7]_i_10_n_0 ;
  wire \result[7]_i_11_n_0 ;
  wire \result[7]_i_12_n_0 ;
  wire \result[7]_i_14_n_0 ;
  wire \result[7]_i_15_n_0 ;
  wire \result[7]_i_16_n_0 ;
  wire \result[7]_i_17_n_0 ;
  wire \result[7]_i_18_n_0 ;
  wire \result[7]_i_19_n_0 ;
  wire \result[7]_i_1_n_0 ;
  wire \result[7]_i_20_n_0 ;
  wire \result[7]_i_2_n_0 ;
  wire \result[7]_i_3_n_0 ;
  wire \result[7]_i_4_n_0 ;
  wire \result[7]_i_5_n_0 ;
  wire \result[7]_i_6_n_0 ;
  wire \result[7]_i_7_n_0 ;
  wire \result[7]_i_8_n_0 ;
  wire \result[7]_i_9_n_0 ;
  wire \result[8]_i_15_n_0 ;
  wire \result[8]_i_16_n_0 ;
  wire \result[8]_i_17_n_0 ;
  wire \result[8]_i_18_n_0 ;
  wire \result[8]_i_1_n_0 ;
  wire \result[8]_i_23_n_0 ;
  wire \result[8]_i_24_n_0 ;
  wire \result[8]_i_2_n_0 ;
  wire \result[8]_i_3_n_0 ;
  wire \result[8]_i_4_n_0 ;
  wire \result[8]_i_5_n_0 ;
  wire \result[8]_i_7_n_0 ;
  wire \result[8]_i_8_n_0 ;
  wire \result[8]_i_9_n_0 ;
  wire \result[9]_i_10_n_0 ;
  wire \result[9]_i_11_n_0 ;
  wire \result[9]_i_12_n_0 ;
  wire \result[9]_i_13_n_0 ;
  wire \result[9]_i_14_n_0 ;
  wire \result[9]_i_1_n_0 ;
  wire \result[9]_i_2_n_0 ;
  wire \result[9]_i_3_n_0 ;
  wire \result[9]_i_4_n_0 ;
  wire \result[9]_i_5_n_0 ;
  wire \result[9]_i_6_n_0 ;
  wire \result[9]_i_7_n_0 ;
  wire \result[9]_i_8_n_0 ;
  wire \result[9]_i_9_n_0 ;
  wire \result_reg[0]_i_11_n_0 ;
  wire \result_reg[0]_i_11_n_4 ;
  wire \result_reg[0]_i_11_n_5 ;
  wire \result_reg[0]_i_11_n_6 ;
  wire \result_reg[0]_i_11_n_7 ;
  wire \result_reg[0]_i_18_n_0 ;
  wire \result_reg[0]_i_32_n_0 ;
  wire \result_reg[0]_i_40_n_0 ;
  wire \result_reg[0]_i_49_n_0 ;
  wire \result_reg[0]_i_57_n_0 ;
  wire \result_reg[0]_i_63_n_0 ;
  wire \result_reg[0]_i_81_n_0 ;
  wire \result_reg[0]_i_97_n_0 ;
  wire \result_reg[11]_i_15_n_0 ;
  wire \result_reg[11]_i_16_n_0 ;
  wire \result_reg[12]_i_20_n_0 ;
  wire \result_reg[12]_i_8_n_0 ;
  wire \result_reg[13]_i_15_n_0 ;
  wire \result_reg[13]_i_15_n_4 ;
  wire \result_reg[13]_i_15_n_5 ;
  wire \result_reg[13]_i_15_n_6 ;
  wire \result_reg[13]_i_15_n_7 ;
  wire \result_reg[13]_i_9_n_0 ;
  wire \result_reg[13]_i_9_n_4 ;
  wire \result_reg[13]_i_9_n_5 ;
  wire \result_reg[13]_i_9_n_6 ;
  wire \result_reg[13]_i_9_n_7 ;
  wire \result_reg[15]_i_14_n_0 ;
  wire \result_reg[18]_i_10_n_0 ;
  wire \result_reg[18]_i_10_n_4 ;
  wire \result_reg[18]_i_10_n_5 ;
  wire \result_reg[18]_i_10_n_6 ;
  wire \result_reg[18]_i_10_n_7 ;
  wire \result_reg[19]_i_20_n_0 ;
  wire \result_reg[19]_i_21_n_0 ;
  wire \result_reg[19]_i_7_n_0 ;
  wire \result_reg[19]_i_7_n_4 ;
  wire \result_reg[19]_i_7_n_5 ;
  wire \result_reg[19]_i_7_n_6 ;
  wire \result_reg[19]_i_7_n_7 ;
  wire \result_reg[22]_i_17_n_0 ;
  wire \result_reg[23]_i_6_n_0 ;
  wire \result_reg[23]_i_6_n_4 ;
  wire \result_reg[23]_i_6_n_5 ;
  wire \result_reg[23]_i_6_n_6 ;
  wire \result_reg[23]_i_6_n_7 ;
  wire \result_reg[24]_i_5_n_0 ;
  wire \result_reg[24]_i_5_n_4 ;
  wire \result_reg[24]_i_5_n_5 ;
  wire \result_reg[24]_i_5_n_6 ;
  wire \result_reg[24]_i_5_n_7 ;
  wire \result_reg[24]_i_9_n_0 ;
  wire \result_reg[24]_i_9_n_4 ;
  wire \result_reg[24]_i_9_n_5 ;
  wire \result_reg[24]_i_9_n_6 ;
  wire \result_reg[24]_i_9_n_7 ;
  wire \result_reg[27]_i_19_n_0 ;
  wire \result_reg[27]_i_30_n_0 ;
  wire \result_reg[27]_i_6_n_0 ;
  wire \result_reg[27]_i_6_n_4 ;
  wire \result_reg[27]_i_6_n_5 ;
  wire \result_reg[27]_i_6_n_6 ;
  wire \result_reg[27]_i_6_n_7 ;
  wire \result_reg[30]_i_10_n_4 ;
  wire \result_reg[30]_i_10_n_5 ;
  wire \result_reg[30]_i_10_n_6 ;
  wire \result_reg[30]_i_10_n_7 ;
  wire \result_reg[30]_i_39_n_0 ;
  wire \result_reg[30]_i_6_n_0 ;
  wire \result_reg[30]_i_6_n_4 ;
  wire \result_reg[30]_i_6_n_5 ;
  wire \result_reg[30]_i_6_n_6 ;
  wire \result_reg[30]_i_6_n_7 ;
  wire \result_reg[31]_i_2_n_0 ;
  wire \result_reg[31]_i_7_n_7 ;
  wire \result_reg[31]_i_9_n_0 ;
  wire \result_reg[3]_i_13_n_0 ;
  wire \result_reg[4]_i_15_n_0 ;
  wire \result_reg[6]_i_17_n_0 ;
  wire \result_reg[6]_i_20_n_0 ;
  wire \result_reg[7]_i_13_n_0 ;
  wire \result_reg[7]_i_13_n_4 ;
  wire \result_reg[7]_i_13_n_5 ;
  wire \result_reg[7]_i_13_n_6 ;
  wire \result_reg[7]_i_13_n_7 ;
  wire \result_reg[8]_i_10_n_0 ;
  wire \result_reg[8]_i_6_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_10_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_11_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_1_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_2_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_3_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_4_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_5_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_6_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_7_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_8_n_0 ;
  wire \s_input_rs232_rx_ack[0]_i_9_n_0 ;
  wire \s_output_am_out[23]_i_2_n_0 ;
  wire [0:0]\s_output_am_out_reg[0]_0 ;
  wire \s_output_audio_out[9]_i_2_n_0 ;
  wire \s_output_audio_out[9]_i_3_n_0 ;
  wire \s_output_audio_out[9]_i_4_n_0 ;
  wire \s_output_audio_out[9]_i_5_n_0 ;
  wire \s_output_audio_out[9]_i_6_n_0 ;
  wire \s_output_audio_out[9]_i_7_n_0 ;
  wire \s_output_audio_out[9]_i_8_n_0 ;
  wire \s_output_audio_out[9]_i_9_n_0 ;
  wire [0:0]\s_output_audio_out_reg[0]_0 ;
  wire [0:0]\s_output_audio_out_reg[0]_1 ;
  wire \s_output_ctl_out_reg[0]_0 ;
  wire \s_output_ctl_out_stb_reg[0]_0 ;
  wire \s_output_freq_out[31]_i_2_n_0 ;
  wire [0:0]\s_output_freq_out_reg[0]_0 ;
  wire \s_output_freq_out_stb_reg[0]_0 ;
  wire [0:0]\s_output_rs232_tx_reg[0]_0 ;
  wire s_test_2_reg;
  wire [15:0]sel;
  wire [3:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[3]_i_10_n_0 ;
  wire \state[3]_i_11_n_0 ;
  wire \state[3]_i_12_n_0 ;
  wire \state[3]_i_13_n_0 ;
  wire \state[3]_i_14_n_0 ;
  wire \state[3]_i_15_n_0 ;
  wire \state[3]_i_16_n_0 ;
  wire \state[3]_i_17_n_0 ;
  wire \state[3]_i_18_n_0 ;
  wire \state[3]_i_19_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_20_n_0 ;
  wire \state[3]_i_21_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state[3]_i_5_n_0 ;
  wire \state[3]_i_6_n_0 ;
  wire \state[3]_i_7_n_0 ;
  wire \state[3]_i_8_n_0 ;
  wire \state[3]_i_9_n_0 ;
  wire test_2_OBUF;
  wire [31:0]timer;
  wire [31:1]timer0;
  wire \timer[12]_i_3_n_0 ;
  wire \timer[12]_i_4_n_0 ;
  wire \timer[12]_i_5_n_0 ;
  wire \timer[12]_i_6_n_0 ;
  wire \timer[16]_i_3_n_0 ;
  wire \timer[16]_i_4_n_0 ;
  wire \timer[16]_i_5_n_0 ;
  wire \timer[16]_i_6_n_0 ;
  wire \timer[20]_i_3_n_0 ;
  wire \timer[20]_i_4_n_0 ;
  wire \timer[20]_i_5_n_0 ;
  wire \timer[20]_i_6_n_0 ;
  wire \timer[24]_i_3_n_0 ;
  wire \timer[24]_i_4_n_0 ;
  wire \timer[24]_i_5_n_0 ;
  wire \timer[24]_i_6_n_0 ;
  wire \timer[28]_i_3_n_0 ;
  wire \timer[28]_i_4_n_0 ;
  wire \timer[28]_i_5_n_0 ;
  wire \timer[28]_i_6_n_0 ;
  wire \timer[31]_i_1_n_0 ;
  wire \timer[31]_i_3_n_0 ;
  wire \timer[31]_i_5_n_0 ;
  wire \timer[31]_i_6_n_0 ;
  wire \timer[31]_i_7_n_0 ;
  wire \timer[31]_i_8_n_0 ;
  wire \timer[4]_i_3_n_0 ;
  wire \timer[4]_i_4_n_0 ;
  wire \timer[4]_i_5_n_0 ;
  wire \timer[4]_i_6_n_0 ;
  wire \timer[8]_i_3_n_0 ;
  wire \timer[8]_i_4_n_0 ;
  wire \timer[8]_i_5_n_0 ;
  wire \timer[8]_i_6_n_0 ;
  wire \timer_clock[0]_i_5_n_0 ;
  wire [31:0]timer_clock_reg;
  wire \timer_clock_reg[0]_i_1_n_0 ;
  wire \timer_clock_reg[0]_i_1_n_4 ;
  wire \timer_clock_reg[0]_i_1_n_5 ;
  wire \timer_clock_reg[0]_i_1_n_6 ;
  wire \timer_clock_reg[0]_i_1_n_7 ;
  wire \timer_clock_reg[12]_i_1_n_0 ;
  wire \timer_clock_reg[12]_i_1_n_4 ;
  wire \timer_clock_reg[12]_i_1_n_5 ;
  wire \timer_clock_reg[12]_i_1_n_6 ;
  wire \timer_clock_reg[12]_i_1_n_7 ;
  wire \timer_clock_reg[16]_i_1_n_0 ;
  wire \timer_clock_reg[16]_i_1_n_4 ;
  wire \timer_clock_reg[16]_i_1_n_5 ;
  wire \timer_clock_reg[16]_i_1_n_6 ;
  wire \timer_clock_reg[16]_i_1_n_7 ;
  wire \timer_clock_reg[20]_i_1_n_0 ;
  wire \timer_clock_reg[20]_i_1_n_4 ;
  wire \timer_clock_reg[20]_i_1_n_5 ;
  wire \timer_clock_reg[20]_i_1_n_6 ;
  wire \timer_clock_reg[20]_i_1_n_7 ;
  wire \timer_clock_reg[24]_i_1_n_0 ;
  wire \timer_clock_reg[24]_i_1_n_4 ;
  wire \timer_clock_reg[24]_i_1_n_5 ;
  wire \timer_clock_reg[24]_i_1_n_6 ;
  wire \timer_clock_reg[24]_i_1_n_7 ;
  wire \timer_clock_reg[28]_i_1_n_4 ;
  wire \timer_clock_reg[28]_i_1_n_5 ;
  wire \timer_clock_reg[28]_i_1_n_6 ;
  wire \timer_clock_reg[28]_i_1_n_7 ;
  wire \timer_clock_reg[4]_i_1_n_0 ;
  wire \timer_clock_reg[4]_i_1_n_4 ;
  wire \timer_clock_reg[4]_i_1_n_5 ;
  wire \timer_clock_reg[4]_i_1_n_6 ;
  wire \timer_clock_reg[4]_i_1_n_7 ;
  wire \timer_clock_reg[8]_i_1_n_0 ;
  wire \timer_clock_reg[8]_i_1_n_4 ;
  wire \timer_clock_reg[8]_i_1_n_5 ;
  wire \timer_clock_reg[8]_i_1_n_6 ;
  wire \timer_clock_reg[8]_i_1_n_7 ;
  wire \timer_reg[12]_i_2_n_0 ;
  wire \timer_reg[16]_i_2_n_0 ;
  wire \timer_reg[20]_i_2_n_0 ;
  wire \timer_reg[24]_i_2_n_0 ;
  wire \timer_reg[28]_i_2_n_0 ;
  wire \timer_reg[4]_i_2_n_0 ;
  wire \timer_reg[8]_i_2_n_0 ;
  wire write_enable_reg_n_0;
  wire [31:0]write_output;
  wire [31:1]write_value;
  wire \write_value[0]_i_1_n_0 ;
  wire \write_value[10]_i_1_n_0 ;
  wire \write_value[11]_i_1_n_0 ;
  wire \write_value[12]_i_1_n_0 ;
  wire \write_value[13]_i_1_n_0 ;
  wire \write_value[14]_i_1_n_0 ;
  wire \write_value[15]_i_1_n_0 ;
  wire \write_value[1]_i_1_n_0 ;
  wire \write_value[2]_i_1_n_0 ;
  wire \write_value[31]_i_2_n_0 ;
  wire \write_value[3]_i_1_n_0 ;
  wire \write_value[4]_i_1_n_0 ;
  wire \write_value[5]_i_1_n_0 ;
  wire \write_value[6]_i_1_n_0 ;
  wire \write_value[7]_i_1_n_0 ;
  wire \write_value[8]_i_1_n_0 ;
  wire \write_value[9]_i_1_n_0 ;
  wire \write_value_reg[0]_0 ;
  wire NLW_memory_reg_0_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_0_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_0_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_0_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_0_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_0_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_0_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_0_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_0_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_0_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_0_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_0_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_1_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_1_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_1_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_1_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_1_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_1_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_1_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_1_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_1_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_1_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_1_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_1_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_2_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_2_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_2_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_2_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_2_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_2_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_2_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_2_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_2_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_2_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_2_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_2_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_3_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_3_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_3_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_3_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_3_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_3_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_3_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_3_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_3_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_3_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_3_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_3_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_4_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_4_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_4_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_4_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_4_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_4_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_4_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_4_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_4_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_4_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_4_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_4_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_5_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_5_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_5_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_5_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_5_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_5_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_5_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_5_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_5_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_5_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_5_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_5_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_6_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_6_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_6_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_6_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_6_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_6_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_6_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_6_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_6_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_6_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_6_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_6_RDADDRECC_UNCONNECTED;
  wire NLW_memory_reg_7_CASCADEOUTA_UNCONNECTED;
  wire NLW_memory_reg_7_CASCADEOUTB_UNCONNECTED;
  wire NLW_memory_reg_7_DBITERR_UNCONNECTED;
  wire NLW_memory_reg_7_INJECTDBITERR_UNCONNECTED;
  wire NLW_memory_reg_7_INJECTSBITERR_UNCONNECTED;
  wire NLW_memory_reg_7_SBITERR_UNCONNECTED;
  wire [31:4]NLW_memory_reg_7_DOADO_UNCONNECTED;
  wire [31:0]NLW_memory_reg_7_DOBDO_UNCONNECTED;
  wire [3:0]NLW_memory_reg_7_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_memory_reg_7_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_memory_reg_7_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_memory_reg_7_RDADDRECC_UNCONNECTED;
  wire NLW_product_b_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_product_b_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_product_b_reg_OVERFLOW_UNCONNECTED;
  wire NLW_product_b_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_product_b_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_product_b_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_product_b_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_product_b_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_product_b_reg_CARRYOUT_UNCONNECTED;
  wire [47:16]NLW_product_b_reg_P_UNCONNECTED;
  wire [47:0]NLW_product_b_reg_PCOUT_UNCONNECTED;
  wire NLW_product_c_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_product_c_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_product_c_reg_OVERFLOW_UNCONNECTED;
  wire NLW_product_c_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_product_c_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_product_c_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_product_c_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_product_c_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_product_c_reg_CARRYOUT_UNCONNECTED;
  wire [47:16]NLW_product_c_reg_P_UNCONNECTED;
  wire [47:0]NLW_product_c_reg_PCOUT_UNCONNECTED;
  wire [2:0]\NLW_program_counter_reg[12]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_program_counter_reg[15]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_program_counter_reg[15]_i_6_O_UNCONNECTED ;
  wire [2:0]\NLW_program_counter_reg[4]_i_3_CO_UNCONNECTED ;
  wire [2:0]\NLW_program_counter_reg[8]_i_3_CO_UNCONNECTED ;
  wire NLW_program_counter_reg_rep_0_CASCADEOUTA_UNCONNECTED;
  wire NLW_program_counter_reg_rep_0_CASCADEOUTB_UNCONNECTED;
  wire NLW_program_counter_reg_rep_0_DBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_0_INJECTDBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_0_INJECTSBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_0_SBITERR_UNCONNECTED;
  wire [31:16]NLW_program_counter_reg_rep_0_DOADO_UNCONNECTED;
  wire [31:0]NLW_program_counter_reg_rep_0_DOBDO_UNCONNECTED;
  wire [3:2]NLW_program_counter_reg_rep_0_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_program_counter_reg_rep_0_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_program_counter_reg_rep_0_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_program_counter_reg_rep_0_RDADDRECC_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_CASCADEOUTA_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_CASCADEOUTB_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_DBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_INJECTDBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_INJECTSBITERR_UNCONNECTED;
  wire NLW_program_counter_reg_rep_1_SBITERR_UNCONNECTED;
  wire [31:11]NLW_program_counter_reg_rep_1_DOADO_UNCONNECTED;
  wire [31:0]NLW_program_counter_reg_rep_1_DOBDO_UNCONNECTED;
  wire [3:0]NLW_program_counter_reg_rep_1_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_program_counter_reg_rep_1_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_program_counter_reg_rep_1_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_program_counter_reg_rep_1_RDADDRECC_UNCONNECTED;
  wire [3:1]\NLW_quotient_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_quotient_reg[0]_i_1_O_UNCONNECTED ;
  wire [1:0]NLW_registers_reg_r1_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r1_0_15_6_11_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_registers_reg_r2_0_15_6_11_DOD_UNCONNECTED;
  wire [2:0]\NLW_remainder_reg[11]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[15]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[19]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[23]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[27]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[31]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[3]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_remainder_reg[7]_i_2_CO_UNCONNECTED ;
  wire NLW_result0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_result0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_result0_OVERFLOW_UNCONNECTED;
  wire NLW_result0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_result0_PATTERNDETECT_UNCONNECTED;
  wire NLW_result0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_result0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_result0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_result0_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_result0_P_UNCONNECTED;
  wire [47:0]NLW_result0_PCOUT_UNCONNECTED;
  wire [2:0]\NLW_result_reg[0]_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_10_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_11_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_13_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_13_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_18_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_18_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_32_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_32_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_38_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_38_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_40_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_40_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_49_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_49_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_57_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_57_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_63_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_63_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_81_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_81_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[0]_i_97_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[0]_i_97_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[11]_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[11]_i_16_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[12]_i_20_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[12]_i_8_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[13]_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[13]_i_9_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[14]_i_9_CO_UNCONNECTED ;
  wire [3:3]\NLW_result_reg[14]_i_9_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[15]_i_14_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[18]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[19]_i_20_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[19]_i_21_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[19]_i_7_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[22]_i_17_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[23]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[24]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[24]_i_9_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[27]_i_19_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[27]_i_30_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[27]_i_6_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[30]_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[30]_i_31_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[30]_i_35_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[30]_i_39_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[30]_i_6_CO_UNCONNECTED ;
  wire [3:0]\NLW_result_reg[31]_i_7_CO_UNCONNECTED ;
  wire [3:1]\NLW_result_reg[31]_i_7_O_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[3]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[4]_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[6]_i_17_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[6]_i_20_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[7]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[8]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_result_reg[8]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[0]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[12]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[16]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[20]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_timer_clock_reg[28]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_clock_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[12]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[16]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[20]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[24]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[28]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_timer_reg[31]_i_4_CO_UNCONNECTED ;
  wire [3:3]\NLW_timer_reg[31]_i_4_O_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_timer_reg[8]_i_2_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[0]_i_1 
       (.I0(result[0]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[0]),
        .O(\a_lo[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[10]_i_1 
       (.I0(result[10]),
        .I1(operand_a1),
        .I2(register_a[10]),
        .O(\a_lo[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[11]_i_1 
       (.I0(result[11]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[11]),
        .O(\a_lo[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[12]_i_1 
       (.I0(result[12]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[12]),
        .O(\a_lo[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[13]_i_1 
       (.I0(result[13]),
        .I1(operand_a1),
        .I2(register_a[13]),
        .O(\a_lo[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[14]_i_1 
       (.I0(result[14]),
        .I1(operand_a1),
        .I2(register_a[14]),
        .O(\a_lo[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[15]_i_1 
       (.I0(result[15]),
        .I1(operand_a1),
        .I2(register_a[15]),
        .O(\a_lo[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[16]_i_1 
       (.I0(result[16]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[16]),
        .O(p_1_in[0]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \a_lo[16]_i_2 
       (.I0(address_a_2[0]),
        .I1(address_z_3[0]),
        .I2(address_z_3[1]),
        .I3(address_a_2[1]),
        .I4(address_z_3[2]),
        .I5(address_a_2[2]),
        .O(\a_lo[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[17]_i_1 
       (.I0(result[17]),
        .I1(operand_a1),
        .I2(register_a[17]),
        .O(p_1_in[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[18]_i_1 
       (.I0(result[18]),
        .I1(operand_a1),
        .I2(register_a[18]),
        .O(p_1_in[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[19]_i_1 
       (.I0(result[19]),
        .I1(operand_a1),
        .I2(register_a[19]),
        .O(p_1_in[3]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[1]_i_1 
       (.I0(result[1]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[1]),
        .O(\a_lo[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[20]_i_1 
       (.I0(result[20]),
        .I1(operand_a1),
        .I2(register_a[20]),
        .O(p_1_in[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[21]_i_1 
       (.I0(result[21]),
        .I1(operand_a1),
        .I2(register_a[21]),
        .O(p_1_in[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[22]_i_1 
       (.I0(result[22]),
        .I1(operand_a1),
        .I2(register_a[22]),
        .O(p_1_in[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[23]_i_1 
       (.I0(result[23]),
        .I1(operand_a1),
        .I2(register_a[23]),
        .O(p_1_in[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[24]_i_1 
       (.I0(result[24]),
        .I1(operand_a1),
        .I2(register_a[24]),
        .O(p_1_in[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[25]_i_1 
       (.I0(result[25]),
        .I1(operand_a1),
        .I2(register_a[25]),
        .O(p_1_in[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[26]_i_1 
       (.I0(result[26]),
        .I1(operand_a1),
        .I2(register_a[26]),
        .O(p_1_in[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[27]_i_1 
       (.I0(result[27]),
        .I1(operand_a1),
        .I2(register_a[27]),
        .O(p_1_in[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[28]_i_1 
       (.I0(result[28]),
        .I1(operand_a1),
        .I2(register_a[28]),
        .O(p_1_in[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[29]_i_1 
       (.I0(result[29]),
        .I1(operand_a1),
        .I2(register_a[29]),
        .O(p_1_in[13]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[2]_i_1 
       (.I0(result[2]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[2]),
        .O(\a_lo[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[30]_i_1 
       (.I0(result[30]),
        .I1(operand_a1),
        .I2(register_a[30]),
        .O(p_1_in[14]));
  LUT5 #(
    .INIT(32'h00080000)) 
    \a_lo[31]_i_1 
       (.I0(\a_lo[31]_i_3_n_0 ),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(opcode_2[1]),
        .O(\a_lo[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[31]_i_2 
       (.I0(result[31]),
        .I1(operand_a1),
        .I2(register_a[31]),
        .O(p_1_in[15]));
  LUT5 #(
    .INIT(32'h10000000)) 
    \a_lo[31]_i_3 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(opcode_2[4]),
        .O(\a_lo[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h2002)) 
    \a_lo[31]_i_4 
       (.I0(write_enable_reg_n_0),
        .I1(\a_lo[16]_i_2_n_0 ),
        .I2(address_z_3[3]),
        .I3(address_a_2[3]),
        .O(operand_a1));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[3]_i_1 
       (.I0(result[3]),
        .I1(operand_a1),
        .I2(register_a[3]),
        .O(\a_lo[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[4]_i_1 
       (.I0(result[4]),
        .I1(operand_a1),
        .I2(register_a[4]),
        .O(\a_lo[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[5]_i_1 
       (.I0(result[5]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[5]),
        .O(\a_lo[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[6]_i_1 
       (.I0(result[6]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[6]),
        .O(\a_lo[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[7]_i_1 
       (.I0(result[7]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[7]),
        .O(\a_lo[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \a_lo[8]_i_1 
       (.I0(result[8]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[8]),
        .O(\a_lo[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \a_lo[9]_i_1 
       (.I0(result[9]),
        .I1(operand_a1),
        .I2(register_a[9]),
        .O(\a_lo[9]_i_1_n_0 ));
  FDRE \a_lo_reg[0] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[0]_i_1_n_0 ),
        .Q(a_lo[0]),
        .R(1'b0));
  FDRE \a_lo_reg[10] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[10]_i_1_n_0 ),
        .Q(a_lo[10]),
        .R(1'b0));
  FDRE \a_lo_reg[11] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[11]_i_1_n_0 ),
        .Q(a_lo[11]),
        .R(1'b0));
  FDRE \a_lo_reg[12] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[12]_i_1_n_0 ),
        .Q(a_lo[12]),
        .R(1'b0));
  FDRE \a_lo_reg[13] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[13]_i_1_n_0 ),
        .Q(a_lo[13]),
        .R(1'b0));
  FDRE \a_lo_reg[14] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[14]_i_1_n_0 ),
        .Q(a_lo[14]),
        .R(1'b0));
  FDRE \a_lo_reg[15] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[15]_i_1_n_0 ),
        .Q(a_lo[15]),
        .R(1'b0));
  FDRE \a_lo_reg[16] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(a_lo[16]),
        .R(1'b0));
  FDRE \a_lo_reg[17] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(a_lo[17]),
        .R(1'b0));
  FDRE \a_lo_reg[18] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(a_lo[18]),
        .R(1'b0));
  FDRE \a_lo_reg[19] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(a_lo[19]),
        .R(1'b0));
  FDRE \a_lo_reg[1] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[1]_i_1_n_0 ),
        .Q(a_lo[1]),
        .R(1'b0));
  FDRE \a_lo_reg[20] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(a_lo[20]),
        .R(1'b0));
  FDRE \a_lo_reg[21] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(a_lo[21]),
        .R(1'b0));
  FDRE \a_lo_reg[22] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(a_lo[22]),
        .R(1'b0));
  FDRE \a_lo_reg[23] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(a_lo[23]),
        .R(1'b0));
  FDRE \a_lo_reg[24] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(a_lo[24]),
        .R(1'b0));
  FDRE \a_lo_reg[25] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(a_lo[25]),
        .R(1'b0));
  FDRE \a_lo_reg[26] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(a_lo[26]),
        .R(1'b0));
  FDRE \a_lo_reg[27] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(a_lo[27]),
        .R(1'b0));
  FDRE \a_lo_reg[28] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(a_lo[28]),
        .R(1'b0));
  FDRE \a_lo_reg[29] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(a_lo[29]),
        .R(1'b0));
  FDRE \a_lo_reg[2] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[2]_i_1_n_0 ),
        .Q(a_lo[2]),
        .R(1'b0));
  FDRE \a_lo_reg[30] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(a_lo[30]),
        .R(1'b0));
  FDRE \a_lo_reg[31] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(a_lo[31]),
        .R(1'b0));
  FDRE \a_lo_reg[3] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[3]_i_1_n_0 ),
        .Q(a_lo[3]),
        .R(1'b0));
  FDRE \a_lo_reg[4] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[4]_i_1_n_0 ),
        .Q(a_lo[4]),
        .R(1'b0));
  FDRE \a_lo_reg[5] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[5]_i_1_n_0 ),
        .Q(a_lo[5]),
        .R(1'b0));
  FDRE \a_lo_reg[6] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[6]_i_1_n_0 ),
        .Q(a_lo[6]),
        .R(1'b0));
  FDRE \a_lo_reg[7] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[7]_i_1_n_0 ),
        .Q(a_lo[7]),
        .R(1'b0));
  FDRE \a_lo_reg[8] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[8]_i_1_n_0 ),
        .Q(a_lo[8]),
        .R(1'b0));
  FDRE \a_lo_reg[9] 
       (.C(clk),
        .CE(\a_lo[31]_i_1_n_0 ),
        .D(\a_lo[9]_i_1_n_0 ),
        .Q(a_lo[9]),
        .R(1'b0));
  FDRE \address_a_2_reg[0] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_a[0]),
        .Q(address_a_2[0]),
        .R(1'b0));
  FDRE \address_a_2_reg[1] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_a[1]),
        .Q(address_a_2[1]),
        .R(1'b0));
  FDRE \address_a_2_reg[2] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_a[2]),
        .Q(address_a_2[2]),
        .R(1'b0));
  FDRE \address_a_2_reg[3] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_a[3]),
        .Q(address_a_2[3]),
        .R(1'b0));
  FDRE \address_z_2_reg[0] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_z[0]),
        .Q(address_z_2[0]),
        .R(1'b0));
  FDRE \address_z_2_reg[1] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_z[1]),
        .Q(address_z_2[1]),
        .R(1'b0));
  FDRE \address_z_2_reg[2] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_z[2]),
        .Q(address_z_2[2]),
        .R(1'b0));
  FDRE \address_z_2_reg[3] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(address_z[3]),
        .Q(address_z_2[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h1000)) 
    \address_z_3[3]_i_1 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .O(\address_z_3[3]_i_1_n_0 ));
  FDRE \address_z_3_reg[0] 
       (.C(clk),
        .CE(\address_z_3[3]_i_1_n_0 ),
        .D(address_z_2[0]),
        .Q(address_z_3[0]),
        .R(internal_rst_reg));
  FDRE \address_z_3_reg[1] 
       (.C(clk),
        .CE(\address_z_3[3]_i_1_n_0 ),
        .D(address_z_2[1]),
        .Q(address_z_3[1]),
        .R(internal_rst_reg));
  FDRE \address_z_3_reg[2] 
       (.C(clk),
        .CE(\address_z_3[3]_i_1_n_0 ),
        .D(address_z_2[2]),
        .Q(address_z_3[2]),
        .R(internal_rst_reg));
  FDRE \address_z_3_reg[3] 
       (.C(clk),
        .CE(\address_z_3[3]_i_1_n_0 ),
        .D(address_z_2[3]),
        .Q(address_z_3[3]),
        .R(internal_rst_reg));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_1
       (.I0(output_am_out[15]),
        .I1(Q[7]),
        .O(\delta_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_1__0
       (.I0(output_am_out[7]),
        .I1(\last_input_reg[7] [7]),
        .O(\delta_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_2
       (.I0(output_am_out[14]),
        .I1(Q[6]),
        .O(\delta_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_2__0
       (.I0(output_am_out[6]),
        .I1(\last_input_reg[7] [6]),
        .O(\delta_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_3
       (.I0(output_am_out[13]),
        .I1(Q[5]),
        .O(\delta_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_3__0
       (.I0(output_am_out[5]),
        .I1(\last_input_reg[7] [5]),
        .O(\delta_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_4
       (.I0(output_am_out[12]),
        .I1(Q[4]),
        .O(\delta_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry__0_i_4__0
       (.I0(output_am_out[4]),
        .I1(\last_input_reg[7] [4]),
        .O(\delta_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_1
       (.I0(output_am_out[11]),
        .I1(Q[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_1__0
       (.I0(output_am_out[3]),
        .I1(\last_input_reg[7] [3]),
        .O(\delta_reg[3] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_2
       (.I0(output_am_out[10]),
        .I1(Q[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_2__0
       (.I0(output_am_out[2]),
        .I1(\last_input_reg[7] [2]),
        .O(\delta_reg[3] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_3
       (.I0(output_am_out[9]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_3__0
       (.I0(output_am_out[1]),
        .I1(\last_input_reg[7] [1]),
        .O(\delta_reg[3] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_4
       (.I0(output_am_out[8]),
        .I1(Q[0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    delta0_carry_i_4__0
       (.I0(output_am_out[0]),
        .I1(\last_input_reg[7] [0]),
        .O(\delta_reg[3] [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    dithering_i_1
       (.I0(control),
        .I1(control_stb),
        .I2(dithering),
        .O(dithering_reg));
  LUT4 #(
    .INIT(16'hE200)) 
    \dividend[0]_i_1 
       (.I0(register_a[0]),
        .I1(operand_a1),
        .I2(result[0]),
        .I3(\divisor[31]_i_1_n_0 ),
        .O(\dividend[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[10]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(\a_lo[10]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[10]),
        .O(\dividend[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[11]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(\a_lo[11]_i_1_n_0 ),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[11]),
        .O(\dividend[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[12]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(\a_lo[12]_i_1_n_0 ),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[12]),
        .O(\dividend[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[13]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(\a_lo[13]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[13]),
        .O(\dividend[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[14]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(\a_lo[14]_i_1_n_0 ),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[14]),
        .O(\dividend[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[15]_i_1 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\divisor[31]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[15]),
        .O(\dividend[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[16]_i_1 
       (.I0(result[16]),
        .I1(operand_a1),
        .I2(register_a[16]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[16]),
        .O(\dividend[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[17]_i_1 
       (.I0(result[17]),
        .I1(operand_a1),
        .I2(register_a[17]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[17]),
        .O(\dividend[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[18]_i_1 
       (.I0(result[18]),
        .I1(operand_a1),
        .I2(register_a[18]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[18]),
        .O(\dividend[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[19]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(p_1_in[3]),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[19]),
        .O(\dividend[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A808A80)) 
    \dividend[1]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(result[1]),
        .I2(operand_a1),
        .I3(register_a[1]),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[1]),
        .O(\dividend[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[20]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(p_1_in[4]),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[20]),
        .O(\dividend[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[21]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(p_1_in[5]),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[21]),
        .O(\dividend[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[22]_i_1 
       (.I0(result[22]),
        .I1(operand_a1),
        .I2(register_a[22]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[22]),
        .O(\dividend[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[23]_i_1 
       (.I0(result[23]),
        .I1(operand_a1),
        .I2(register_a[23]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[23]),
        .O(\dividend[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[24]_i_1 
       (.I0(result[24]),
        .I1(operand_a1),
        .I2(register_a[24]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[24]),
        .O(\dividend[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[25]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(p_1_in[9]),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[25]),
        .O(\dividend[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h12FF)) 
    \dividend[25]_i_2 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(opcode_2[0]),
        .I3(opcode_2[3]),
        .O(\dividend[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF9FFFFF)) 
    \dividend[25]_i_3 
       (.I0(opcode_2[0]),
        .I1(opcode_2[2]),
        .I2(opcode_2[3]),
        .I3(opcode_2[1]),
        .I4(\address_z_3[3]_i_1_n_0 ),
        .O(\dividend[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \dividend[25]_i_4 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(opcode_2[3]),
        .I5(opcode_2[4]),
        .O(\dividend[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[26]_i_1 
       (.I0(result[26]),
        .I1(operand_a1),
        .I2(register_a[26]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[26]),
        .O(\dividend[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[27]_i_1 
       (.I0(result[27]),
        .I1(operand_a1),
        .I2(register_a[27]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[27]),
        .O(\dividend[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[28]_i_1 
       (.I0(result[28]),
        .I1(operand_a1),
        .I2(register_a[28]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[28]),
        .O(\dividend[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[29]_i_1 
       (.I0(p_1_in[13]),
        .I1(\divisor[31]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[29]),
        .O(\dividend[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A808A80)) 
    \dividend[2]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(result[2]),
        .I2(operand_a1),
        .I3(register_a[2]),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[2]),
        .O(\dividend[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \dividend[30]_i_1 
       (.I0(result[30]),
        .I1(operand_a1),
        .I2(register_a[30]),
        .I3(\divisor[31]_i_1_n_0 ),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[30]),
        .O(\dividend[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \dividend[30]_i_2 
       (.I0(opcode_2[3]),
        .I1(\dividend[25]_i_2_n_0 ),
        .I2(state[3]),
        .I3(state[2]),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(opcode_2[4]),
        .O(\dividend[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4FCCCCCCCCCCCCCC)) 
    \dividend[31]_i_1 
       (.I0(opcode_2[3]),
        .I1(dividend0[31]),
        .I2(\dividend[31]_i_2_n_0 ),
        .I3(\dividend[31]_i_3_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(opcode_2[4]),
        .O(\dividend[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5451FFFF575DFFFF)) 
    \dividend[31]_i_2 
       (.I0(dividend0[31]),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(opcode_2[3]),
        .I5(p_1_in[15]),
        .O(\dividend[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \dividend[31]_i_3 
       (.I0(state[2]),
        .I1(state[3]),
        .O(\dividend[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[3]_i_1 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(\divisor[31]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[3]),
        .O(\dividend[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[4]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(\a_lo[4]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[4]),
        .O(\dividend[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A808A80)) 
    \dividend[5]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(result[5]),
        .I2(operand_a1),
        .I3(register_a[5]),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[5]),
        .O(\dividend[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF30003000)) 
    \dividend[6]_i_1 
       (.I0(\dividend[25]_i_2_n_0 ),
        .I1(\dividend[25]_i_3_n_0 ),
        .I2(\a_lo[6]_i_1_n_0 ),
        .I3(opcode_2[4]),
        .I4(\dividend[25]_i_4_n_0 ),
        .I5(dividend0[6]),
        .O(\dividend[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A808A80)) 
    \dividend[7]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(result[7]),
        .I2(operand_a1),
        .I3(register_a[7]),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[7]),
        .O(\dividend[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A808A80)) 
    \dividend[8]_i_1 
       (.I0(\divisor[31]_i_1_n_0 ),
        .I1(result[8]),
        .I2(operand_a1),
        .I3(register_a[8]),
        .I4(\dividend[30]_i_2_n_0 ),
        .I5(dividend0[8]),
        .O(\dividend[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \dividend[9]_i_1 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(\divisor[31]_i_1_n_0 ),
        .I2(\dividend[30]_i_2_n_0 ),
        .I3(dividend0[9]),
        .O(\dividend[9]_i_1_n_0 ));
  FDRE \dividend_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[0]_i_1_n_0 ),
        .Q(dividend0[1]),
        .R(1'b0));
  FDRE \dividend_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[10]_i_1_n_0 ),
        .Q(dividend0[11]),
        .R(1'b0));
  FDRE \dividend_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[11]_i_1_n_0 ),
        .Q(dividend0[12]),
        .R(1'b0));
  FDRE \dividend_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[12]_i_1_n_0 ),
        .Q(dividend0[13]),
        .R(1'b0));
  FDRE \dividend_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[13]_i_1_n_0 ),
        .Q(dividend0[14]),
        .R(1'b0));
  FDRE \dividend_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[14]_i_1_n_0 ),
        .Q(dividend0[15]),
        .R(1'b0));
  FDRE \dividend_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[15]_i_1_n_0 ),
        .Q(dividend0[16]),
        .R(1'b0));
  FDRE \dividend_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[16]_i_1_n_0 ),
        .Q(dividend0[17]),
        .R(1'b0));
  FDRE \dividend_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[17]_i_1_n_0 ),
        .Q(dividend0[18]),
        .R(1'b0));
  FDRE \dividend_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[18]_i_1_n_0 ),
        .Q(dividend0[19]),
        .R(1'b0));
  FDRE \dividend_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[19]_i_1_n_0 ),
        .Q(dividend0[20]),
        .R(1'b0));
  FDRE \dividend_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[1]_i_1_n_0 ),
        .Q(dividend0[2]),
        .R(1'b0));
  FDRE \dividend_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[20]_i_1_n_0 ),
        .Q(dividend0[21]),
        .R(1'b0));
  FDRE \dividend_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[21]_i_1_n_0 ),
        .Q(dividend0[22]),
        .R(1'b0));
  FDRE \dividend_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[22]_i_1_n_0 ),
        .Q(dividend0[23]),
        .R(1'b0));
  FDRE \dividend_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[23]_i_1_n_0 ),
        .Q(dividend0[24]),
        .R(1'b0));
  FDRE \dividend_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[24]_i_1_n_0 ),
        .Q(dividend0[25]),
        .R(1'b0));
  FDRE \dividend_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[25]_i_1_n_0 ),
        .Q(dividend0[26]),
        .R(1'b0));
  FDRE \dividend_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[26]_i_1_n_0 ),
        .Q(dividend0[27]),
        .R(1'b0));
  FDRE \dividend_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[27]_i_1_n_0 ),
        .Q(dividend0[28]),
        .R(1'b0));
  FDRE \dividend_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[28]_i_1_n_0 ),
        .Q(dividend0[29]),
        .R(1'b0));
  FDRE \dividend_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[29]_i_1_n_0 ),
        .Q(dividend0[30]),
        .R(1'b0));
  FDRE \dividend_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[2]_i_1_n_0 ),
        .Q(dividend0[3]),
        .R(1'b0));
  FDRE \dividend_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[30]_i_1_n_0 ),
        .Q(dividend0[31]),
        .R(1'b0));
  FDRE \dividend_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[31]_i_1_n_0 ),
        .Q(p_0_in1_in[0]),
        .R(1'b0));
  FDRE \dividend_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[3]_i_1_n_0 ),
        .Q(dividend0[4]),
        .R(1'b0));
  FDRE \dividend_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[4]_i_1_n_0 ),
        .Q(dividend0[5]),
        .R(1'b0));
  FDRE \dividend_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[5]_i_1_n_0 ),
        .Q(dividend0[6]),
        .R(1'b0));
  FDRE \dividend_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[6]_i_1_n_0 ),
        .Q(dividend0[7]),
        .R(1'b0));
  FDRE \dividend_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[7]_i_1_n_0 ),
        .Q(dividend0[8]),
        .R(1'b0));
  FDRE \dividend_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[8]_i_1_n_0 ),
        .Q(dividend0[9]),
        .R(1'b0));
  FDRE \dividend_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\dividend[9]_i_1_n_0 ),
        .Q(dividend0[10]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00002800)) 
    \divisor[31]_i_1 
       (.I0(\a_lo[31]_i_3_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(opcode_2[1]),
        .O(\divisor[31]_i_1_n_0 ));
  FDRE \divisor_reg[0] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[0]_i_1_n_0 ),
        .Q(divisor[0]),
        .R(1'b0));
  FDRE \divisor_reg[10] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[10]_i_1_n_0 ),
        .Q(divisor[10]),
        .R(1'b0));
  FDRE \divisor_reg[11] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[11]_i_1_n_0 ),
        .Q(divisor[11]),
        .R(1'b0));
  FDRE \divisor_reg[12] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[12]_i_1_n_0 ),
        .Q(divisor[12]),
        .R(1'b0));
  FDRE \divisor_reg[13] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[13]_i_1_n_0 ),
        .Q(divisor[13]),
        .R(1'b0));
  FDRE \divisor_reg[14] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[14]_i_1_n_0 ),
        .Q(divisor[14]),
        .R(1'b0));
  FDRE \divisor_reg[15] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[15]_i_1_n_0 ),
        .Q(divisor[15]),
        .R(1'b0));
  FDRE \divisor_reg[16] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[0]),
        .Q(divisor[16]),
        .R(1'b0));
  FDRE \divisor_reg[17] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[1]),
        .Q(divisor[17]),
        .R(1'b0));
  FDRE \divisor_reg[18] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[2]),
        .Q(divisor[18]),
        .R(1'b0));
  FDRE \divisor_reg[19] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[3]),
        .Q(divisor[19]),
        .R(1'b0));
  FDRE \divisor_reg[1] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[1]_i_1_n_0 ),
        .Q(divisor[1]),
        .R(1'b0));
  FDRE \divisor_reg[20] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[4]),
        .Q(divisor[20]),
        .R(1'b0));
  FDRE \divisor_reg[21] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[5]),
        .Q(divisor[21]),
        .R(1'b0));
  FDRE \divisor_reg[22] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[6]),
        .Q(divisor[22]),
        .R(1'b0));
  FDRE \divisor_reg[23] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[7]),
        .Q(divisor[23]),
        .R(1'b0));
  FDRE \divisor_reg[24] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[8]),
        .Q(divisor[24]),
        .R(1'b0));
  FDRE \divisor_reg[25] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[9]),
        .Q(divisor[25]),
        .R(1'b0));
  FDRE \divisor_reg[26] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[10]),
        .Q(divisor[26]),
        .R(1'b0));
  FDRE \divisor_reg[27] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[11]),
        .Q(divisor[27]),
        .R(1'b0));
  FDRE \divisor_reg[28] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[12]),
        .Q(divisor[28]),
        .R(1'b0));
  FDRE \divisor_reg[29] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[13]),
        .Q(divisor[29]),
        .R(1'b0));
  FDRE \divisor_reg[2] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[2]_i_1_n_0 ),
        .Q(divisor[2]),
        .R(1'b0));
  FDRE \divisor_reg[30] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[14]),
        .Q(divisor[30]),
        .R(1'b0));
  FDRE \divisor_reg[31] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(p_0_in[15]),
        .Q(divisor[31]),
        .R(1'b0));
  FDRE \divisor_reg[3] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[3]_i_1_n_0 ),
        .Q(divisor[3]),
        .R(1'b0));
  FDRE \divisor_reg[4] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[4]_i_1_n_0 ),
        .Q(divisor[4]),
        .R(1'b0));
  FDRE \divisor_reg[5] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[5]_i_1_n_0 ),
        .Q(divisor[5]),
        .R(1'b0));
  FDRE \divisor_reg[6] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[6]_i_1_n_0 ),
        .Q(divisor[6]),
        .R(1'b0));
  FDRE \divisor_reg[7] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[7]_i_1_n_0 ),
        .Q(divisor[7]),
        .R(1'b0));
  FDRE \divisor_reg[8] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[8]_i_1_n_0 ),
        .Q(divisor[8]),
        .R(1'b0));
  FDRE \divisor_reg[9] 
       (.C(clk),
        .CE(\divisor[31]_i_1_n_0 ),
        .D(\write_value[9]_i_1_n_0 ),
        .Q(divisor[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h254FCC4B)) 
    g0_b0
       (.I0(opcode_2[0]),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(opcode_2[4]),
        .O(g0_b0_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    \literal_2[15]_i_1 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .O(\literal_2[15]_i_1_n_0 ));
  FDRE \literal_2_reg[0] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_52),
        .Q(literal_2[0]),
        .R(1'b0));
  FDRE \literal_2_reg[10] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_42),
        .Q(literal_2[10]),
        .R(1'b0));
  FDRE \literal_2_reg[11] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_41),
        .Q(literal_2[11]),
        .R(1'b0));
  FDRE \literal_2_reg[12] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_40),
        .Q(literal_2[12]),
        .R(1'b0));
  FDRE \literal_2_reg[13] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_39),
        .Q(literal_2[13]),
        .R(1'b0));
  FDRE \literal_2_reg[14] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_38),
        .Q(literal_2[14]),
        .R(1'b0));
  FDRE \literal_2_reg[15] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_37),
        .Q(literal_2[15]),
        .R(1'b0));
  FDRE \literal_2_reg[1] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_51),
        .Q(literal_2[1]),
        .R(1'b0));
  FDRE \literal_2_reg[2] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_50),
        .Q(literal_2[2]),
        .R(1'b0));
  FDRE \literal_2_reg[3] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_49),
        .Q(literal_2[3]),
        .R(1'b0));
  FDRE \literal_2_reg[4] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_48),
        .Q(literal_2[4]),
        .R(1'b0));
  FDRE \literal_2_reg[5] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_47),
        .Q(literal_2[5]),
        .R(1'b0));
  FDRE \literal_2_reg[6] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_46),
        .Q(literal_2[6]),
        .R(1'b0));
  FDRE \literal_2_reg[7] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_45),
        .Q(literal_2[7]),
        .R(1'b0));
  FDRE \literal_2_reg[8] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_44),
        .Q(literal_2[8]),
        .R(1'b0));
  FDRE \literal_2_reg[9] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_reg_rep_0_n_43),
        .Q(literal_2[9]),
        .R(1'b0));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "3" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_0
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_0_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_0_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_0_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\write_value[3]_i_1_n_0 ,\write_value[2]_i_1_n_0 ,\write_value[1]_i_1_n_0 ,\write_value[0]_i_1_n_0 }),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_0_DOADO_UNCONNECTED[31:4],load_data[3:0]}),
        .DOBDO(NLW_memory_reg_0_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_0_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_0_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_0_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_0_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_0_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_0_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_0_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    memory_reg_0_i_1
       (.I0(opcode_2[4]),
        .I1(\address_z_3[3]_i_1_n_0 ),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(opcode_2[0]),
        .I5(opcode_2[1]),
        .O(p_0_in__0));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "4" *) 
  (* bram_slice_end = "7" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_1
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_1_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_1_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_1_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\write_value[7]_i_1_n_0 ,\write_value[6]_i_1_n_0 ,\write_value[5]_i_1_n_0 ,\write_value[4]_i_1_n_0 }),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_1_DOADO_UNCONNECTED[31:4],load_data[7:4]}),
        .DOBDO(NLW_memory_reg_1_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_1_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_1_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_1_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_1_ENARDEN_cooolgate_en_sig_1),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_1_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_1_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_1_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_1_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_1_ENARDEN_cooolgate_en_gate_1
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_1_ENARDEN_cooolgate_en_sig_1));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "8" *) 
  (* bram_slice_end = "11" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_2
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_2_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_2_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_2_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\write_value[11]_i_1_n_0 ,\write_value[10]_i_1_n_0 ,\write_value[9]_i_1_n_0 ,\write_value[8]_i_1_n_0 }),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_2_DOADO_UNCONNECTED[31:4],load_data[11:8]}),
        .DOBDO(NLW_memory_reg_2_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_2_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_2_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_2_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_2_ENARDEN_cooolgate_en_sig_2),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_2_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_2_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_2_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_2_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_2_ENARDEN_cooolgate_en_gate_3
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_2_ENARDEN_cooolgate_en_sig_2));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "12" *) 
  (* bram_slice_end = "15" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_3
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_3_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_3_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_3_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\write_value[15]_i_1_n_0 ,\write_value[14]_i_1_n_0 ,\write_value[13]_i_1_n_0 ,\write_value[12]_i_1_n_0 }),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_3_DOADO_UNCONNECTED[31:4],load_data[15:12]}),
        .DOBDO(NLW_memory_reg_3_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_3_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_3_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_3_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_3_ENARDEN_cooolgate_en_sig_3),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_3_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_3_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_3_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_3_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_3_ENARDEN_cooolgate_en_gate_5
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_3_ENARDEN_cooolgate_en_sig_3));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "16" *) 
  (* bram_slice_end = "19" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_4
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_4_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_4_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_4_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_0_in[3:0]}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_4_DOADO_UNCONNECTED[31:4],load_data[19:16]}),
        .DOBDO(NLW_memory_reg_4_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_4_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_4_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_4_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_4_ENARDEN_cooolgate_en_sig_4),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_4_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_4_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_4_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_4_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_4_ENARDEN_cooolgate_en_gate_7
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_4_ENARDEN_cooolgate_en_sig_4));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "20" *) 
  (* bram_slice_end = "23" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_5
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_5_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_5_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_5_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_0_in[7:4]}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_5_DOADO_UNCONNECTED[31:4],load_data[23:20]}),
        .DOBDO(NLW_memory_reg_5_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_5_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_5_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_5_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_5_ENARDEN_cooolgate_en_sig_5),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_5_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_5_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_5_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_5_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_5_ENARDEN_cooolgate_en_gate_9
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_5_ENARDEN_cooolgate_en_sig_5));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "24" *) 
  (* bram_slice_end = "27" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_6
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_6_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_6_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_6_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_0_in[11:8]}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_6_DOADO_UNCONNECTED[31:4],load_data[27:24]}),
        .DOBDO(NLW_memory_reg_6_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_6_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_6_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_6_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_6_ENARDEN_cooolgate_en_sig_6),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_6_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_6_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_6_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_6_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_6_ENARDEN_cooolgate_en_gate_11
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_6_ENARDEN_cooolgate_en_sig_6));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* POWER_OPTED_CE = "ENARDEN=NEW" *) 
  (* RTL_RAM_BITS = "131104" *) 
  (* RTL_RAM_NAME = "memory" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "28" *) 
  (* bram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(0)) 
    memory_reg_7
       (.ADDRARDADDR({1'b1,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 ,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_memory_reg_7_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_memory_reg_7_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_memory_reg_7_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_0_in[15:12]}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_memory_reg_7_DOADO_UNCONNECTED[31:4],load_data[31:28]}),
        .DOBDO(NLW_memory_reg_7_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_memory_reg_7_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_memory_reg_7_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_memory_reg_7_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(memory_reg_7_ENARDEN_cooolgate_en_sig_7),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_memory_reg_7_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_memory_reg_7_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_memory_reg_7_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_memory_reg_7_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,p_0_in__0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hd)) 
    memory_reg_7_ENARDEN_cooolgate_en_gate_13
       (.I0(pwropt),
        .I1(p_0_in__0),
        .O(memory_reg_7_ENARDEN_cooolgate_en_sig_7));
  FDRE \opcode_2_reg[0] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(opcode[0]),
        .Q(opcode_2[0]),
        .R(1'b0));
  FDRE \opcode_2_reg[1] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(opcode[1]),
        .Q(opcode_2[1]),
        .R(1'b0));
  FDRE \opcode_2_reg[2] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(opcode[2]),
        .Q(opcode_2[2]),
        .R(1'b0));
  FDRE \opcode_2_reg[3] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(opcode[3]),
        .Q(opcode_2[3]),
        .R(1'b0));
  FDRE \opcode_2_reg[4] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(opcode[4]),
        .Q(opcode_2[4]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-12 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    product_b_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\a_lo[15]_i_1_n_0 ,\a_lo[14]_i_1_n_0 ,\a_lo[13]_i_1_n_0 ,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 }),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_product_b_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,p_0_in}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_product_b_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_product_b_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_product_b_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(product_c_reg_i_1_n_0),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_product_b_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_product_b_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_product_b_reg_P_UNCONNECTED[47:16],C}),
        .PATTERNBDETECT(NLW_product_b_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_product_b_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_product_b_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_product_b_reg_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-12 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    product_c_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_product_c_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,\write_value[15]_i_1_n_0 ,\write_value[14]_i_1_n_0 ,\write_value[13]_i_1_n_0 ,\write_value[12]_i_1_n_0 ,\write_value[11]_i_1_n_0 ,\write_value[10]_i_1_n_0 ,\write_value[9]_i_1_n_0 ,\write_value[8]_i_1_n_0 ,\write_value[7]_i_1_n_0 ,\write_value[6]_i_1_n_0 ,\write_value[5]_i_1_n_0 ,\write_value[4]_i_1_n_0 ,\write_value[3]_i_1_n_0 ,\write_value[2]_i_1_n_0 ,\write_value[1]_i_1_n_0 ,\write_value[0]_i_1_n_0 }),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_product_c_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_product_c_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_product_c_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(product_c_reg_i_1_n_0),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_product_c_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_product_c_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_product_c_reg_P_UNCONNECTED[47:16],A,product_c_reg_n_104,product_c_reg_n_105}),
        .PATTERNBDETECT(NLW_product_c_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_product_c_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_product_c_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_product_c_reg_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    product_c_reg_i_1
       (.I0(opcode_2[4]),
        .I1(opcode_2[3]),
        .I2(opcode_2[1]),
        .I3(product_c_reg_i_2_n_0),
        .I4(\result[30]_i_2_n_0 ),
        .I5(product_c_reg_i_3_n_0),
        .O(product_c_reg_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    product_c_reg_i_2
       (.I0(opcode_2[0]),
        .I1(opcode_2[2]),
        .O(product_c_reg_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    product_c_reg_i_3
       (.I0(state[1]),
        .I1(state[2]),
        .O(product_c_reg_i_3_n_0));
  LUT6 #(
    .INIT(64'h707F407F404F407F)) 
    \program_counter[0]_i_1 
       (.I0(\program_counter[0]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg_n_0_[0] ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[0]),
        .O(sel[0]));
  LUT5 #(
    .INIT(32'h3A003AFF)) 
    \program_counter[0]_i_2 
       (.I0(\program_counter_reg_n_0_[0] ),
        .I1(literal_2[0]),
        .I2(\state[3]_i_9_n_0 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[0]_i_1_n_0 ),
        .O(\program_counter[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[10]_i_1 
       (.I0(\program_counter[10]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[12]_i_3_n_6 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[10]),
        .O(sel[10]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[10]_i_2 
       (.I0(literal_2[10]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[12]_i_3_n_6 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[10]_i_1_n_0 ),
        .O(\program_counter[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[11]_i_1 
       (.I0(\program_counter[11]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[12]_i_3_n_5 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[11]),
        .O(sel[11]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[11]_i_2 
       (.I0(literal_2[11]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[12]_i_3_n_5 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[11]_i_1_n_0 ),
        .O(\program_counter[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FBBFFFF0F880000)) 
    \program_counter[12]_i_1 
       (.I0(literal_2[12]),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(\program_counter[12]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[12]_i_3_n_4 ),
        .O(sel[12]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[12]_i_2 
       (.I0(literal_2[12]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[12]_i_3_n_4 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[12]_i_1_n_0 ),
        .O(\program_counter[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[13]_i_1 
       (.I0(\program_counter[13]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[15]_i_6_n_7 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[13]),
        .O(sel[13]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[13]_i_2 
       (.I0(literal_2[13]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[15]_i_6_n_7 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[13]_i_1_n_0 ),
        .O(\program_counter[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FBBFFFF0F880000)) 
    \program_counter[14]_i_1 
       (.I0(literal_2[14]),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(\program_counter[14]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[15]_i_6_n_6 ),
        .O(sel[14]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[14]_i_2 
       (.I0(literal_2[14]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[15]_i_6_n_6 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[14]_i_1_n_0 ),
        .O(\program_counter[14]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0054)) 
    \program_counter[15]_i_1 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(\program_counter[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000100C)) 
    \program_counter[15]_i_12 
       (.I0(opcode_2[2]),
        .I1(opcode_2[3]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(opcode_2[4]),
        .O(\program_counter[15]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \program_counter[15]_i_13 
       (.I0(\program_counter[15]_i_17_n_0 ),
        .I1(p_1_in[7]),
        .I2(p_1_in[6]),
        .I3(p_1_in[5]),
        .I4(p_1_in[4]),
        .I5(\program_counter[15]_i_18_n_0 ),
        .O(\program_counter[15]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \program_counter[15]_i_14 
       (.I0(\a_lo[8]_i_1_n_0 ),
        .I1(\a_lo[9]_i_1_n_0 ),
        .I2(\a_lo[10]_i_1_n_0 ),
        .I3(\a_lo[11]_i_1_n_0 ),
        .I4(\program_counter[15]_i_19_n_0 ),
        .O(\program_counter[15]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFB8)) 
    \program_counter[15]_i_15 
       (.I0(result[5]),
        .I1(operand_a1),
        .I2(register_a[5]),
        .I3(\a_lo[4]_i_1_n_0 ),
        .I4(\a_lo[7]_i_1_n_0 ),
        .I5(\a_lo[6]_i_1_n_0 ),
        .O(\program_counter[15]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \program_counter[15]_i_16 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(result[0]),
        .I2(operand_a1),
        .I3(register_a[0]),
        .I4(\a_lo[3]_i_1_n_0 ),
        .I5(\a_lo[2]_i_1_n_0 ),
        .O(\program_counter[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFEFEFE)) 
    \program_counter[15]_i_17 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(p_1_in[1]),
        .I3(result[16]),
        .I4(operand_a1),
        .I5(register_a[16]),
        .O(\program_counter[15]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \program_counter[15]_i_18 
       (.I0(p_1_in[8]),
        .I1(p_1_in[9]),
        .I2(p_1_in[10]),
        .I3(p_1_in[11]),
        .I4(\program_counter[15]_i_20_n_0 ),
        .O(\program_counter[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFEFEFE)) 
    \program_counter[15]_i_19 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\a_lo[14]_i_1_n_0 ),
        .I2(\a_lo[13]_i_1_n_0 ),
        .I3(result[12]),
        .I4(operand_a1),
        .I5(register_a[12]),
        .O(\program_counter[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[15]_i_2 
       (.I0(\program_counter[15]_i_3_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[15]_i_6_n_5 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[15]),
        .O(sel[15]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \program_counter[15]_i_20 
       (.I0(p_1_in[15]),
        .I1(result[30]),
        .I2(operand_a1),
        .I3(register_a[30]),
        .I4(p_1_in[13]),
        .I5(p_1_in[12]),
        .O(\program_counter[15]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[15]_i_3 
       (.I0(literal_2[15]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[15]_i_6_n_5 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[15]_i_1_n_0 ),
        .O(\program_counter[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00020200)) 
    \program_counter[15]_i_4 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(opcode_2[0]),
        .I3(opcode_2[3]),
        .I4(opcode_2[4]),
        .O(\program_counter[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \program_counter[15]_i_5 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\program_counter[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555545)) 
    \program_counter[15]_i_7 
       (.I0(\program_counter[15]_i_8_n_0 ),
        .I1(\program_counter[15]_i_12_n_0 ),
        .I2(\program_counter[15]_i_13_n_0 ),
        .I3(\program_counter[15]_i_14_n_0 ),
        .I4(\program_counter[15]_i_15_n_0 ),
        .I5(\program_counter[15]_i_16_n_0 ),
        .O(\program_counter[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFDCFFB)) 
    \program_counter[15]_i_8 
       (.I0(opcode_2[2]),
        .I1(opcode_2[3]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(opcode_2[4]),
        .O(\program_counter[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[1]_i_1 
       (.I0(\program_counter[1]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[4]_i_3_n_7 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[1]),
        .O(sel[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[1]_i_2 
       (.I0(literal_2[1]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[4]_i_3_n_7 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[1]_i_1_n_0 ),
        .O(\program_counter[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FDDFFFF0F880000)) 
    \program_counter[2]_i_1 
       (.I0(\program_counter[15]_i_7_n_0 ),
        .I1(literal_2[2]),
        .I2(\program_counter[2]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[4]_i_3_n_6 ),
        .O(sel[2]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[2]_i_2 
       (.I0(literal_2[2]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[4]_i_3_n_6 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[2]_i_1_n_0 ),
        .O(\program_counter[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FDDFFFF0F880000)) 
    \program_counter[3]_i_1 
       (.I0(\program_counter[15]_i_7_n_0 ),
        .I1(literal_2[3]),
        .I2(\program_counter[3]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[4]_i_3_n_5 ),
        .O(sel[3]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[3]_i_2 
       (.I0(literal_2[3]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[4]_i_3_n_5 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[3]_i_1_n_0 ),
        .O(\program_counter[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB0BFFFFF8080000)) 
    \program_counter[4]_i_1 
       (.I0(literal_2[4]),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(\program_counter[15]_i_4_n_0 ),
        .I3(\program_counter[4]_i_2_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[4]_i_3_n_4 ),
        .O(sel[4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[4]_i_2 
       (.I0(literal_2[4]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[4]_i_3_n_4 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[4]_i_1_n_0 ),
        .O(\program_counter[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[5]_i_1 
       (.I0(\program_counter[5]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_7 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[5]),
        .O(sel[5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[5]_i_2 
       (.I0(literal_2[5]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[8]_i_3_n_7 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[5]_i_1_n_0 ),
        .O(\program_counter[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FBBFFFF0F880000)) 
    \program_counter[6]_i_1 
       (.I0(literal_2[6]),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(\program_counter[6]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[8]_i_3_n_6 ),
        .O(sel[6]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[6]_i_2 
       (.I0(literal_2[6]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[8]_i_3_n_6 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[6]_i_1_n_0 ),
        .O(\program_counter[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BF808F80BF80)) 
    \program_counter[7]_i_1 
       (.I0(\program_counter[7]_i_2_n_0 ),
        .I1(\program_counter[15]_i_4_n_0 ),
        .I2(\program_counter[15]_i_5_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_5 ),
        .I4(\program_counter[15]_i_7_n_0 ),
        .I5(literal_2[7]),
        .O(sel[7]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \program_counter[7]_i_2 
       (.I0(literal_2[7]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[8]_i_3_n_5 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[7]_i_1_n_0 ),
        .O(\program_counter[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FDDFFFF0F880000)) 
    \program_counter[8]_i_1 
       (.I0(\program_counter[15]_i_7_n_0 ),
        .I1(literal_2[8]),
        .I2(\program_counter[8]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[8]_i_3_n_4 ),
        .O(sel[8]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[8]_i_2 
       (.I0(literal_2[8]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[8]_i_3_n_4 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[8]_i_1_n_0 ),
        .O(\program_counter[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0FBBFFFF0F880000)) 
    \program_counter[9]_i_1 
       (.I0(literal_2[9]),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(\program_counter[9]_i_2_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .I4(\program_counter[15]_i_5_n_0 ),
        .I5(\program_counter_reg[12]_i_3_n_7 ),
        .O(sel[9]));
  LUT5 #(
    .INIT(32'h470047FF)) 
    \program_counter[9]_i_2 
       (.I0(literal_2[9]),
        .I1(\state[3]_i_9_n_0 ),
        .I2(\program_counter_reg[12]_i_3_n_7 ),
        .I3(\program_counter[15]_i_8_n_0 ),
        .I4(\a_lo[9]_i_1_n_0 ),
        .O(\program_counter[9]_i_2_n_0 ));
  FDRE \program_counter_1_reg[0] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[0] ),
        .Q(program_counter_1[0]),
        .R(1'b0));
  FDRE \program_counter_1_reg[10] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[10] ),
        .Q(program_counter_1[10]),
        .R(1'b0));
  FDRE \program_counter_1_reg[11] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[11] ),
        .Q(program_counter_1[11]),
        .R(1'b0));
  FDRE \program_counter_1_reg[12] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[12] ),
        .Q(program_counter_1[12]),
        .R(1'b0));
  FDRE \program_counter_1_reg[13] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[13] ),
        .Q(program_counter_1[13]),
        .R(1'b0));
  FDRE \program_counter_1_reg[14] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[14] ),
        .Q(program_counter_1[14]),
        .R(1'b0));
  FDRE \program_counter_1_reg[15] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[15] ),
        .Q(program_counter_1[15]),
        .R(1'b0));
  FDRE \program_counter_1_reg[1] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[1] ),
        .Q(program_counter_1[1]),
        .R(1'b0));
  FDRE \program_counter_1_reg[2] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[2] ),
        .Q(program_counter_1[2]),
        .R(1'b0));
  FDRE \program_counter_1_reg[3] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[3] ),
        .Q(program_counter_1[3]),
        .R(1'b0));
  FDRE \program_counter_1_reg[4] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[4] ),
        .Q(program_counter_1[4]),
        .R(1'b0));
  FDRE \program_counter_1_reg[5] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[5] ),
        .Q(program_counter_1[5]),
        .R(1'b0));
  FDRE \program_counter_1_reg[6] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[6] ),
        .Q(program_counter_1[6]),
        .R(1'b0));
  FDRE \program_counter_1_reg[7] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[7] ),
        .Q(program_counter_1[7]),
        .R(1'b0));
  FDRE \program_counter_1_reg[8] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[8] ),
        .Q(program_counter_1[8]),
        .R(1'b0));
  FDRE \program_counter_1_reg[9] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(\program_counter_reg_n_0_[9] ),
        .Q(program_counter_1[9]),
        .R(1'b0));
  FDRE \program_counter_2_reg[0] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[0]),
        .Q(program_counter_2[0]),
        .R(1'b0));
  FDRE \program_counter_2_reg[10] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[10]),
        .Q(program_counter_2[10]),
        .R(1'b0));
  FDRE \program_counter_2_reg[11] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[11]),
        .Q(program_counter_2[11]),
        .R(1'b0));
  FDRE \program_counter_2_reg[12] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[12]),
        .Q(program_counter_2[12]),
        .R(1'b0));
  FDRE \program_counter_2_reg[13] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[13]),
        .Q(program_counter_2[13]),
        .R(1'b0));
  FDRE \program_counter_2_reg[14] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[14]),
        .Q(program_counter_2[14]),
        .R(1'b0));
  FDRE \program_counter_2_reg[15] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[15]),
        .Q(program_counter_2[15]),
        .R(1'b0));
  FDRE \program_counter_2_reg[1] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[1]),
        .Q(program_counter_2[1]),
        .R(1'b0));
  FDRE \program_counter_2_reg[2] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[2]),
        .Q(program_counter_2[2]),
        .R(1'b0));
  FDRE \program_counter_2_reg[3] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[3]),
        .Q(program_counter_2[3]),
        .R(1'b0));
  FDRE \program_counter_2_reg[4] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[4]),
        .Q(program_counter_2[4]),
        .R(1'b0));
  FDRE \program_counter_2_reg[5] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[5]),
        .Q(program_counter_2[5]),
        .R(1'b0));
  FDRE \program_counter_2_reg[6] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[6]),
        .Q(program_counter_2[6]),
        .R(1'b0));
  FDRE \program_counter_2_reg[7] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[7]),
        .Q(program_counter_2[7]),
        .R(1'b0));
  FDRE \program_counter_2_reg[8] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[8]),
        .Q(program_counter_2[8]),
        .R(1'b0));
  FDRE \program_counter_2_reg[9] 
       (.C(clk),
        .CE(\literal_2[15]_i_1_n_0 ),
        .D(program_counter_1[9]),
        .Q(program_counter_2[9]),
        .R(1'b0));
  FDRE \program_counter_reg[0] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[0]),
        .Q(\program_counter_reg_n_0_[0] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[10] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[10]),
        .Q(\program_counter_reg_n_0_[10] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[11] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[11]),
        .Q(\program_counter_reg_n_0_[11] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[12] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[12]),
        .Q(\program_counter_reg_n_0_[12] ),
        .R(internal_rst_reg));
  CARRY4 \program_counter_reg[12]_i_3 
       (.CI(\program_counter_reg[8]_i_3_n_0 ),
        .CO({\program_counter_reg[12]_i_3_n_0 ,\NLW_program_counter_reg[12]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\program_counter_reg[12]_i_3_n_4 ,\program_counter_reg[12]_i_3_n_5 ,\program_counter_reg[12]_i_3_n_6 ,\program_counter_reg[12]_i_3_n_7 }),
        .S({\program_counter_reg_n_0_[12] ,\program_counter_reg_n_0_[11] ,\program_counter_reg_n_0_[10] ,\program_counter_reg_n_0_[9] }));
  FDRE \program_counter_reg[13] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[13]),
        .Q(\program_counter_reg_n_0_[13] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[14] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[14]),
        .Q(\program_counter_reg_n_0_[14] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[15] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[15]),
        .Q(\program_counter_reg_n_0_[15] ),
        .R(internal_rst_reg));
  CARRY4 \program_counter_reg[15]_i_6 
       (.CI(\program_counter_reg[12]_i_3_n_0 ),
        .CO(\NLW_program_counter_reg[15]_i_6_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_program_counter_reg[15]_i_6_O_UNCONNECTED [3],\program_counter_reg[15]_i_6_n_5 ,\program_counter_reg[15]_i_6_n_6 ,\program_counter_reg[15]_i_6_n_7 }),
        .S({1'b0,\program_counter_reg_n_0_[15] ,\program_counter_reg_n_0_[14] ,\program_counter_reg_n_0_[13] }));
  FDRE \program_counter_reg[1] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[1]),
        .Q(\program_counter_reg_n_0_[1] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[2] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[2]),
        .Q(\program_counter_reg_n_0_[2] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[3] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[3]),
        .Q(\program_counter_reg_n_0_[3] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[4] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[4]),
        .Q(\program_counter_reg_n_0_[4] ),
        .R(internal_rst_reg));
  CARRY4 \program_counter_reg[4]_i_3 
       (.CI(1'b0),
        .CO({\program_counter_reg[4]_i_3_n_0 ,\NLW_program_counter_reg[4]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(\program_counter_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\program_counter_reg[4]_i_3_n_4 ,\program_counter_reg[4]_i_3_n_5 ,\program_counter_reg[4]_i_3_n_6 ,\program_counter_reg[4]_i_3_n_7 }),
        .S({\program_counter_reg_n_0_[4] ,\program_counter_reg_n_0_[3] ,\program_counter_reg_n_0_[2] ,\program_counter_reg_n_0_[1] }));
  FDRE \program_counter_reg[5] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[5]),
        .Q(\program_counter_reg_n_0_[5] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[6] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[6]),
        .Q(\program_counter_reg_n_0_[6] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[7] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[7]),
        .Q(\program_counter_reg_n_0_[7] ),
        .R(internal_rst_reg));
  FDRE \program_counter_reg[8] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[8]),
        .Q(\program_counter_reg_n_0_[8] ),
        .R(internal_rst_reg));
  CARRY4 \program_counter_reg[8]_i_3 
       (.CI(\program_counter_reg[4]_i_3_n_0 ),
        .CO({\program_counter_reg[8]_i_3_n_0 ,\NLW_program_counter_reg[8]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\program_counter_reg[8]_i_3_n_4 ,\program_counter_reg[8]_i_3_n_5 ,\program_counter_reg[8]_i_3_n_6 ,\program_counter_reg[8]_i_3_n_7 }),
        .S({\program_counter_reg_n_0_[8] ,\program_counter_reg_n_0_[7] ,\program_counter_reg_n_0_[6] ,\program_counter_reg_n_0_[5] }));
  FDRE \program_counter_reg[9] 
       (.C(clk),
        .CE(\program_counter[15]_i_1_n_0 ),
        .D(sel[9]),
        .Q(\program_counter_reg_n_0_[9] ),
        .R(internal_rst_reg));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "59392" *) 
  (* RTL_RAM_NAME = "program_counter" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "17" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h830C820820820820820820820820820820820820820820820820820820820830),
    .INITP_01(256'hFF33E0FF88FFCCFF3FFCCF3FC0000000000008223FF33FFFFCCFF88220820820),
    .INITP_02(256'h8FFCCFF3FFCCF3FFFFCCF3FFFFCCF83FE23FF33FCFFF33CFFCF83E0FFF33CFFF),
    .INITP_03(256'hFCCF3FFFFCCF3FFFFCCF83FF3E0F8223FF33FCFFF33CFFFFF33CFFFFF33E0FF8),
    .INITP_04(256'h33CFF83E0F20F83CF8FFCCFFF223FF33FC83CF808803E0F20F83CF83C0F3E03F),
    .INITP_05(256'h83E0FFF33E0F83E0FF003E0F20F83C20F83CF8FFCCFFF223FF33FC3E0F820FFF),
    .INITP_06(256'hF03E0F820FFF33CFF83E0F20F83CF8FFCCFFF223FF33FF3E0F803E0F83CF820F),
    .INITP_07(256'hF33FFFC3E0F82088FFCCFF0F83E0F3E0FFF33E0F83FE0F8FFCCFFF20F8FFCCFF),
    .INITP_08(256'h3FFCCF83E0FFEC820C2C0F20F0000802003B03FFCCF3FC0F83E0F3E0FFF33E3F),
    .INITP_09(256'h03E3FF33E0FFF20820EC88FFCCF83FFB00F83E0F3E0CF83E0F83E020F83E083B),
    .INITP_0A(256'hCF3CF83E0F3C208203B3FFCCF83E0FFEC83CF803E0F3B22020F83CF83C83E0F0),
    .INITP_0B(256'hEC3E0F83CF833E0F83CF803CF82003E0F83CF820F83C83E0F8020F83CBC3E0F3),
    .INITP_0C(256'h0000B33E0F83B33E0F820F83CF83C83CF83CF3B33E0F820F83E083E0F20F83E0),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h000400080003000000080002000A00080001003E000800000002002B00000000),
    .INIT_01(256'h000A000A00080009003E00080007000000080006000000080005000A00080004),
    .INIT_02(256'h0008000F003E0008000E00000008000D000A0008000C003E0008000B00000008),
    .INIT_03(256'h000000080015000A00080014003E00080012000000080011000000080010000A),
    .INIT_04(256'h001B000A0008001A003E00080019000000080018000A00080017000500080016),
    .INIT_05(256'h00080020000A0008001F00000008001E000A0008001D003E0008001C00000008),
    .INIT_06(256'h003E00080026000300080025000000080024000A000800230000000800210000),
    .INIT_07(256'h000800000000002C0000007C0000000000080029000000080028000A00080027),
    .INIT_08(256'h001200000000001700080005000000080003000000080002006900080001208D),
    .INIT_09(256'h0000FFFF0000043A000000000001000700010006000800070000000000230008),
    .INIT_0A(256'h00130000FFFF0000FFFF0000045D00000000000100070001000600000000FFFF),
    .INIT_0B(256'h006401B50000006303190000006202040000006100000000000B0008000B0000),
    .INIT_0C(256'h0006043600CF0000003E03D40000007A012F0000007300E00000006601720000),
    .INIT_0D(256'h043600000000FFFF0000FFFFFFFF046700000000000100080009000100070001),
    .INIT_0E(256'h000800000000002A0000FFFF0000FFFF000004C2000000000001000700010006),
    .INIT_0F(256'hFFFF0000FFFFFFFF054100000000000100080000000000000001000700010006),
    .INIT_10(256'hFFFF0000FFFFFFFF046700000000000100080018000100070001000600000000),
    .INIT_11(256'h00010006000000080000FFFF0000000000000001000800000000000000000000),
    .INIT_12(256'h0006043600000000FFFF0000FFFFFFFF04670000000000010008001400010007),
    .INIT_13(256'h0006000800010000002A0000FFFF0000FFFF000004C200000000000100070001),
    .INIT_14(256'h0000FFFF0000FFFFFFFF05410000000000010008000000000001000100070001),
    .INIT_15(256'h0000FFFF0000FFFFFFFF04670000000000010008002400010007000100060000),
    .INIT_16(256'h0000FFFF0000FFFFFFFF04670000000000010008000100010007000100060000),
    .INIT_17(256'h0000002A0000FFFF0000FFFF000004C200000000000100070001000604360000),
    .INIT_18(256'hFFFFFFFF05410000000000010008000000000002000100070001000600080002),
    .INIT_19(256'hFFFFFFFF046700000000000100080020000100070001000600000000FFFF0000),
    .INIT_1A(256'hFFFFFFFF04670000000000010008000F000100070001000600000000FFFF0000),
    .INIT_1B(256'hFFFF0000FFFF000004C2000000000001000700010006043600000000FFFF0000),
    .INIT_1C(256'h00080000FFFF00000000000300010008000000000004000800030000002A0000),
    .INIT_1D(256'h0000FFFFFFFF0541000000000001000800000000000300010007000100060000),
    .INIT_1E(256'h0000FFFFFFFF046700000000000100080005000100070001000600000000FFFF),
    .INIT_1F(256'h0000FFFFFFFF04670000000000010008001A000100070001000600000000FFFF),
    .INIT_20(256'h00080007023D000A0000FFFF000000010008000000000005043600000000FFFF),
    .INIT_21(256'h0007000A0000FFFF00000000000500010008000A0000FFFF0000000000010001),
    .INIT_22(256'h000800050000000000070231000A0000FFFF0000000000070001000800000008),
    .INIT_23(256'h000700010006023D00080005000A0000FFFF000000010008000000000001023C),
    .INIT_24(256'h00010008000800080006000000130000FFFF0000FFFF0000045D000000000001),
    .INIT_25(256'h0000FFFF000000130000FFFF0000FFFF0000045D000000000001000700010006),
    .INIT_26(256'h000000060001000807FF00080006000A0000FFFF00000000000600010008000A),
    .INIT_27(256'h04670000000000010008001D000100070001000600080006000A0000FFFF0000),
    .INIT_28(256'h000000060001000800000000000400080004000000000000FFFF0000FFFFFFFF),
    .INIT_29(256'hFFFF0000FFFF0000045D0000000000010007000100060318000A0000FFFF0000),
    .INIT_2A(256'h0000045D00000000000100070001000600010008000800080008000000130000),
    .INIT_2B(256'h0000FFFF00000000000800010008000A0000FFFF000000130000FFFF0000FFFF),
    .INIT_2C(256'h000000080008000A0000FFFF000000000008000100080000800000080008000A),
    .INIT_2D(256'h000100070001000602CF02DC02DB02DA000A0000FFFF00000000000500010008),
    .INIT_2E(256'h0000000100080000000000020001000800000000000000010008000000000008),
    .INIT_2F(256'h0000000000050001000800000000000100000000FFFF0000FFFFFFFD05FF0000),
    .INIT_30(256'h0000000000040001000800010001000800000000000400080005000A0000FFFF),
    .INIT_31(256'h0000000000010008000000000000043602890000FFFF00080004000A0000FFFF),
    .INIT_32(256'hFFFF0000FFFF0000045D000000000001000700010006000000080000FFFF0000),
    .INIT_33(256'h0000045D00000000000100070001000600010008000800080006000000130000),
    .INIT_34(256'h0000FFFF00000000000600010008000A0000FFFF000000130000FFFF0000FFFF),
    .INIT_35(256'h0001000600080006000A0000FFFF0000000000060001000807FF00080006000A),
    .INIT_36(256'h0004000000000000FFFF0000FFFFFFFF04670000000000010008002700010007),
    .INIT_37(256'h00010008008003D3000A0000FFFF000000000006000100080000000000040008),
    .INIT_38(256'h0000FFFF000000130000FFFF0000FFFF0000045D000000000001000700010006),
    .INIT_39(256'h0000FFFF0000045D00000000000100070001000600010008008000080009000A),
    .INIT_3A(256'h00000000000900010007000100060008000A000A0000FFFF000000130000FFFF),
    .INIT_3B(256'h00000000FFFF0000FFFFFFFE0634000000000001000800000000000A00010008),
    .INIT_3C(256'h00080004000A0000FFFF00000000000400010008000100010008000000000004),
    .INIT_3D(256'h0000FFFF0000FFFF0000045D000000000001000700010006043603710000FFFF),
    .INIT_3E(256'hFFFF000000000006000100080000000000040008000400000008000600000013),
    .INIT_3F(256'hFFFF0000045D00000000000100070001000600010007000100060423000A0000),
    .INIT_40(256'h00000000FFFF0000FFFFFFFF06680000000000010008000000130000FFFF0000),
    .INIT_41(256'h00080004000A0000FFFF00000000000400010008000100010008000000000004),
    .INIT_42(256'hFFFF04670000000000010008000C000100070001000603E7042504240000FFFF),
    .INIT_43(256'h00000007000002FAF080000000000000000000A3043600000000FFFF0000FFFF),
    .INIT_44(256'h000100080000043E044D044C0000009896800000000000000007044B00000000),
    .INIT_45(256'h000000070000043B045C000000000000045C000A0000FFFF0000000000000007),
    .INIT_46(256'h000800000000FFFF000100070001000600000000000000000008001300000000),
    .INIT_47(256'h000000000000FFFF0000FFFFFFFE048200000000000100080000000000120001),
    .INIT_48(256'h0000FFFF0000000000000001000800000000FFFE000800000000000100000000),
    .INIT_49(256'h000000000001000800000000FFFE0001000800000000FFFF04BD000000000002),
    .INIT_4A(256'h000100010008000000000000000000080000FFFF0000000000020000FFFF0000),
    .INIT_4B(256'h0000048604BF04BE0000FFFF00080000000A0000FFFF00000000000000010008),
    .INIT_4C(256'hFFFF04DB00000000000100080000000000070001000700010006000000000000),
    .INIT_4D(256'hFFFF00080000000000020000000000000008002A000000220000FFFF0000FFFF),
    .INIT_4E(256'h0008000000000001000100070001000600010008000000080001000000000000),
    .INIT_4F(256'h05200501000A0000FFFF000000080000FFFF0000FFFFFFFF0528000000000001),
    .INIT_50(256'h000100010008003000080000000A0000FFFF00000000000000010008000A0501),
    .INIT_51(256'h04DF00080000000A0000FFFF00000000000000010008000A0000FFFF00000000),
    .INIT_52(256'hFFFF00000000FFFF000100080030000000000000000000080022000000000000),
    .INIT_53(256'h0000000000080008000A0000FFFF00390001000800000000FFFF053C000A0000),
    .INIT_54(256'h000100080000000000120001000800000000FFFF000100070001000600000000),
    .INIT_55(256'h000A3B9ACA00000C00000000000000000000FFFF0000FFFFFFFE055C00000000),
    .INIT_56(256'h0000000A00010008000F00010008003005C600000000000A0008000B00000008),
    .INIT_57(256'h0008000A0000FFFF000A0000FFFF000A0000FFFF00000000FFFE000100080000),
    .INIT_58(256'h0008000000080000FFFF000000020000FFFF00000000000B0001000800000001),
    .INIT_59(256'h0001000800000000000A000000000000000000020000FFFF00000000000B0001),
    .INIT_5A(256'h0000FFFF00000000000A00010008000A0008FFFE000A0000FFFF00000000FFFE),
    .INIT_5B(256'h0000FFFF00000000000B0001000800010001000800000000000B0008000A000A),
    .INIT_5C(256'h0001000800000000000B0008000B0000056405C805C70000FFFF0008000B000A),
    .INIT_5D(256'h00000000000B0001000800000001000800000000FFFF05FC000A0000FFFF000A),
    .INIT_5E(256'h000800010001000800000000000B000000080000FFFF0000000000020000FFFF),
    .INIT_5F(256'h000100000000000005CB0000FFFF0008000B000A0000FFFF00000000000B0001),
    .INIT_60(256'h00010008000800080000000A0000FFFF00000000FFFD0001000800000000FFFF),
    .INIT_61(256'h0000000000000001000800000000FFFE00080000000A0000FFFF000000000000),
    .INIT_62(256'h00080000FFFF0000000000000001000800000000000000080000000A0000FFFF),
    .INIT_63(256'h0000FFFF00000000FFFE0001000800FF00010008001000010000000000000000),
    .INIT_64(256'h0008000A0000FFFF00000000FFFF0001000800FF00080000000A0000FFFF000A),
    .INIT_65(256'h000000000001000800000000002600080000000A0000FFFF0000000000000001),
    .INIT_66(256'h0000FFFF000100080000000000120000000000000000000000080000FFFF0000),
    .INIT_67(256'h00000000000000000000000000000000000000000000000000080000FFFF0000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    program_counter_reg_rep_0
       (.ADDRARDADDR({1'b1,program_counter_reg_rep_0_i_2_n_0,program_counter_reg_rep_0_i_3_n_0,program_counter_reg_rep_0_i_4_n_0,program_counter_reg_rep_0_i_5_n_0,program_counter_reg_rep_0_i_6_n_0,program_counter_reg_rep_0_i_7_n_0,program_counter_reg_rep_0_i_8_n_0,program_counter_reg_rep_0_i_9_n_0,program_counter_reg_rep_0_i_10_n_0,program_counter_reg_rep_0_i_11_n_0,program_counter_reg_rep_0_i_12_n_0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_program_counter_reg_rep_0_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_program_counter_reg_rep_0_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_program_counter_reg_rep_0_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_program_counter_reg_rep_0_DOADO_UNCONNECTED[31:16],program_counter_reg_rep_0_n_37,program_counter_reg_rep_0_n_38,program_counter_reg_rep_0_n_39,program_counter_reg_rep_0_n_40,program_counter_reg_rep_0_n_41,program_counter_reg_rep_0_n_42,program_counter_reg_rep_0_n_43,program_counter_reg_rep_0_n_44,program_counter_reg_rep_0_n_45,program_counter_reg_rep_0_n_46,program_counter_reg_rep_0_n_47,program_counter_reg_rep_0_n_48,program_counter_reg_rep_0_n_49,program_counter_reg_rep_0_n_50,program_counter_reg_rep_0_n_51,program_counter_reg_rep_0_n_52}),
        .DOBDO(NLW_program_counter_reg_rep_0_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP({NLW_program_counter_reg_rep_0_DOPADOP_UNCONNECTED[3:2],address_a[1:0]}),
        .DOPBDOP(NLW_program_counter_reg_rep_0_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_program_counter_reg_rep_0_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(program_counter_reg_rep_0_i_1_n_0),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_program_counter_reg_rep_0_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_program_counter_reg_rep_0_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_program_counter_reg_rep_0_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(\program_counter[15]_i_1_n_0 ),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_program_counter_reg_rep_0_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT5 #(
    .INIT(32'hAAAABBBA)) 
    program_counter_reg_rep_0_i_1
       (.I0(internal_rst_reg),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[3]),
        .O(program_counter_reg_rep_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_10
       (.I0(\program_counter_reg[4]_i_3_n_6 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_29_n_0),
        .I4(program_counter_reg_rep_0_i_30_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_10_n_0));
  LUT6 #(
    .INIT(64'h000000003FBF0080)) 
    program_counter_reg_rep_0_i_11
       (.I0(program_counter_reg_rep_0_i_31_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(program_counter_reg_rep_0_i_32_n_0),
        .I4(\program_counter_reg[4]_i_3_n_7 ),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_11_n_0));
  LUT6 #(
    .INIT(64'h00000000C040FF7F)) 
    program_counter_reg_rep_0_i_12
       (.I0(program_counter_reg_rep_0_i_33_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(program_counter_reg_rep_0_i_34_n_0),
        .I4(\program_counter_reg_n_0_[0] ),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_12_n_0));
  LUT4 #(
    .INIT(16'hFEAE)) 
    program_counter_reg_rep_0_i_13
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\program_counter_reg[12]_i_3_n_6 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(literal_2[10]),
        .O(program_counter_reg_rep_0_i_13_n_0));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    program_counter_reg_rep_0_i_14
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[10]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[12]_i_3_n_6 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[10]),
        .O(program_counter_reg_rep_0_i_14_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8080808A808)) 
    program_counter_reg_rep_0_i_15
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[9]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[12]_i_3_n_7 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[9]),
        .O(program_counter_reg_rep_0_i_15_n_0));
  LUT4 #(
    .INIT(16'h00E2)) 
    program_counter_reg_rep_0_i_16
       (.I0(\program_counter_reg[12]_i_3_n_7 ),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(literal_2[9]),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_16_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8080808A808)) 
    program_counter_reg_rep_0_i_17
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[8]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_4 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[8]),
        .O(program_counter_reg_rep_0_i_17_n_0));
  LUT4 #(
    .INIT(16'h00AC)) 
    program_counter_reg_rep_0_i_18
       (.I0(literal_2[8]),
        .I1(\program_counter_reg[8]_i_3_n_4 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_18_n_0));
  LUT4 #(
    .INIT(16'hFEAE)) 
    program_counter_reg_rep_0_i_19
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\program_counter_reg[8]_i_3_n_5 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(literal_2[7]),
        .O(program_counter_reg_rep_0_i_19_n_0));
  LUT6 #(
    .INIT(64'h000000003FBF0080)) 
    program_counter_reg_rep_0_i_2
       (.I0(program_counter_reg_rep_0_i_13_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(program_counter_reg_rep_0_i_14_n_0),
        .I4(\program_counter_reg[12]_i_3_n_6 ),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_2_n_0));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    program_counter_reg_rep_0_i_20
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[7]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_5 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[7]),
        .O(program_counter_reg_rep_0_i_20_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8080808A808)) 
    program_counter_reg_rep_0_i_21
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[6]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_6 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[6]),
        .O(program_counter_reg_rep_0_i_21_n_0));
  LUT4 #(
    .INIT(16'h00E2)) 
    program_counter_reg_rep_0_i_22
       (.I0(\program_counter_reg[8]_i_3_n_6 ),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(literal_2[6]),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_22_n_0));
  LUT4 #(
    .INIT(16'hFEAE)) 
    program_counter_reg_rep_0_i_23
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\program_counter_reg[8]_i_3_n_7 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(literal_2[5]),
        .O(program_counter_reg_rep_0_i_23_n_0));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    program_counter_reg_rep_0_i_24
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[5]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[8]_i_3_n_7 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[5]),
        .O(program_counter_reg_rep_0_i_24_n_0));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    program_counter_reg_rep_0_i_25
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(\program_counter[15]_i_8_n_0 ),
        .I2(\program_counter_reg[4]_i_3_n_4 ),
        .I3(\state[3]_i_9_n_0 ),
        .I4(literal_2[4]),
        .I5(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_25_n_0));
  LUT4 #(
    .INIT(16'h00E2)) 
    program_counter_reg_rep_0_i_26
       (.I0(\program_counter_reg[4]_i_3_n_4 ),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(literal_2[4]),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_26_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8080808A808)) 
    program_counter_reg_rep_0_i_27
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[3]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[4]_i_3_n_5 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[3]),
        .O(program_counter_reg_rep_0_i_27_n_0));
  LUT4 #(
    .INIT(16'h00AC)) 
    program_counter_reg_rep_0_i_28
       (.I0(literal_2[3]),
        .I1(\program_counter_reg[4]_i_3_n_5 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_28_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8080808A808)) 
    program_counter_reg_rep_0_i_29
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[2]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[4]_i_3_n_6 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[2]),
        .O(program_counter_reg_rep_0_i_29_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_3
       (.I0(\program_counter_reg[12]_i_3_n_7 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_15_n_0),
        .I4(program_counter_reg_rep_0_i_16_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_3_n_0));
  LUT4 #(
    .INIT(16'h00AC)) 
    program_counter_reg_rep_0_i_30
       (.I0(literal_2[2]),
        .I1(\program_counter_reg[4]_i_3_n_6 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_30_n_0));
  LUT4 #(
    .INIT(16'hFEAE)) 
    program_counter_reg_rep_0_i_31
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\program_counter_reg[4]_i_3_n_7 ),
        .I2(\program_counter[15]_i_7_n_0 ),
        .I3(literal_2[1]),
        .O(program_counter_reg_rep_0_i_31_n_0));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    program_counter_reg_rep_0_i_32
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[1]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\program_counter_reg[4]_i_3_n_7 ),
        .I4(\state[3]_i_9_n_0 ),
        .I5(literal_2[1]),
        .O(program_counter_reg_rep_0_i_32_n_0));
  LUT4 #(
    .INIT(16'hFF2E)) 
    program_counter_reg_rep_0_i_33
       (.I0(\program_counter_reg_n_0_[0] ),
        .I1(\program_counter[15]_i_7_n_0 ),
        .I2(literal_2[0]),
        .I3(\program_counter[15]_i_4_n_0 ),
        .O(program_counter_reg_rep_0_i_33_n_0));
  LUT6 #(
    .INIT(64'hA8080808A8A808A8)) 
    program_counter_reg_rep_0_i_34
       (.I0(\program_counter[15]_i_4_n_0 ),
        .I1(\a_lo[0]_i_1_n_0 ),
        .I2(\program_counter[15]_i_8_n_0 ),
        .I3(\state[3]_i_9_n_0 ),
        .I4(literal_2[0]),
        .I5(\program_counter_reg_n_0_[0] ),
        .O(program_counter_reg_rep_0_i_34_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_4
       (.I0(\program_counter_reg[8]_i_3_n_4 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_17_n_0),
        .I4(program_counter_reg_rep_0_i_18_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h000000003FBF0080)) 
    program_counter_reg_rep_0_i_5
       (.I0(program_counter_reg_rep_0_i_19_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(program_counter_reg_rep_0_i_20_n_0),
        .I4(\program_counter_reg[8]_i_3_n_5 ),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_6
       (.I0(\program_counter_reg[8]_i_3_n_6 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_21_n_0),
        .I4(program_counter_reg_rep_0_i_22_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h000000003FBF0080)) 
    program_counter_reg_rep_0_i_7
       (.I0(program_counter_reg_rep_0_i_23_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(program_counter_reg_rep_0_i_24_n_0),
        .I4(\program_counter_reg[8]_i_3_n_7 ),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_8
       (.I0(\program_counter_reg[4]_i_3_n_4 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_25_n_0),
        .I4(program_counter_reg_rep_0_i_26_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_8_n_0));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    program_counter_reg_rep_0_i_9
       (.I0(\program_counter_reg[4]_i_3_n_5 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(program_counter_reg_rep_0_i_27_n_0),
        .I4(program_counter_reg_rep_0_i_28_n_0),
        .I5(internal_rst_reg),
        .O(program_counter_reg_rep_0_i_9_n_0));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d11" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "59392" *) 
  (* RTL_RAM_NAME = "program_counter" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "18" *) 
  (* bram_slice_end = "28" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0020008000080020008000080020008000080020008000080020004C0010000C),
    .INIT_01(256'h0008002000800008002000800008002000800008002000800008002000800008),
    .INIT_02(256'h0080000800200080000800200080000800200080000800200080000800200080),
    .INIT_03(256'h0020008000080020008000080020008000080020008000080020008000080020),
    .INIT_04(256'h0008002000800008002000800008002000800008002000800008002000800008),
    .INIT_05(256'h0080000800200080000800200080000800200080000800200080000800200080),
    .INIT_06(256'h0020008000080020008000080020008000080020008000080020008000080020),
    .INIT_07(256'h008000490020004C010000D80050005D00800008002000800008002000800008),
    .INIT_08(256'h00080160004A0020008000490020008000490020008000490020008000490020),
    .INIT_09(256'h015C004C004C00D80050005D004C0080004C0080008000080160004A00200080),
    .INIT_0A(256'h00080158004C015C004C004C00D80050005D004C0080004C0080004C0158004C),
    .INIT_0B(256'h000001C00182000001C00182000001C0018200000160004A0061008000490160),
    .INIT_0C(256'h0080020001C00182000001C00182000001C00182000001C00182000001C00182),
    .INIT_0D(256'h0200004C0158004C015C004C004C00D80050005D004C00800020004C0080004C),
    .INIT_0E(256'h00800049016000080158004C015C004C004C00D80050005D004C0080004C0080),
    .INIT_0F(256'h004C015C004C004C00D80050005D004C00800160004A0061004C0080004C0080),
    .INIT_10(256'h004C015C004C004C00D80050005D004C00800020004C0080004C0080004C0158),
    .INIT_11(256'h004C0080004C02400140004C0160004A0061004C00800160004A0020004C0158),
    .INIT_12(256'h00800200004C0158004C015C004C004C00D80050005D004C00800020004C0080),
    .INIT_13(256'h008000800049016000080158004C015C004C004C00D80050005D004C0080004C),
    .INIT_14(256'h0158004C015C004C004C00D80050005D004C00800160004A0061004C0080004C),
    .INIT_15(256'h0158004C015C004C004C00D80050005D004C00800020004C0080004C0080004C),
    .INIT_16(256'h0158004C015C004C004C00D80050005D004C00800020004C0080004C0080004C),
    .INIT_17(256'h016000080158004C015C004C004C00D80050005D004C0080004C00800200004C),
    .INIT_18(256'h004C004C00D80050005D004C00800160004A0061004C0080004C008000800049),
    .INIT_19(256'h004C004C00D80050005D004C00800020004C0080004C0080004C0158004C015C),
    .INIT_1A(256'h004C004C00D80050005D004C00800020004C0080004C0080004C0158004C015C),
    .INIT_1B(256'h004C015C004C004C00D80050005D004C0080004C00800200004C0158004C015C),
    .INIT_1C(256'h02400140004C0160004A0061004C00800160004A002000800049016000080158),
    .INIT_1D(256'h015C004C004C00D80050005D004C00800160004A0061004C0080004C0080004C),
    .INIT_1E(256'h015C004C004C00D80050005D004C00800020004C0080004C0080004C0158004C),
    .INIT_1F(256'h015C004C004C00D80050005D004C00800020004C0080004C0080004C0158004C),
    .INIT_20(256'h00800020030202E20168004C02A0004C00800160004A00610200004C0158004C),
    .INIT_21(256'h004903A20168004C0160004A0061004C008003620168004C0160004A0061004C),
    .INIT_22(256'h008000490160004A0061030202E20168004C0160004A0061004C008002A00080),
    .INIT_23(256'h0080004C008002000080004903A20168004C02A0004C00800160004A00610200),
    .INIT_24(256'h004C0080002000800049016000080158004C015C004C004C00D80050005D004C),
    .INIT_25(256'h0168004C016000080158004C015C004C004C00D80050005D004C0080004C0080),
    .INIT_26(256'h004A0061004C008000200080004904220168004C0160004A0061004C008003E2),
    .INIT_27(256'h00D80050005D004C00800020004C0080004C00800080004904620168004C0160),
    .INIT_28(256'h004A0061004C00800160004A0061008000490020004C0158004C015C004C004C),
    .INIT_29(256'h004C015C004C004C00D80050005D004C0080004C0080030202E20168004C0160),
    .INIT_2A(256'h004C00D80050005D004C0080004C0080004C0080002000800049016000080158),
    .INIT_2B(256'h0168004C0160004A0061004C008003E20168004C016000080158004C015C004C),
    .INIT_2C(256'h02A00080004904E20168004C0160004A0061004C008004A20020008000490422),
    .INIT_2D(256'h004C0080004C0080020002000200030202E20168004C0160004A0061004C0080),
    .INIT_2E(256'h005D004C00800160004A0061004C00800160004A0061004C00800160004A0061),
    .INIT_2F(256'h0160004A0061004C00800160004A0061004C0158004C015C004C004C00D80050),
    .INIT_30(256'h0160004A0061004C00800020004C00800160004A00610080004903A20168004C),
    .INIT_31(256'h004A0061004C00800160004A0020020002000160004C0080004903A20168004C),
    .INIT_32(256'h004C015C004C004C00D80050005D004C0080004C0080004C02400140004C0160),
    .INIT_33(256'h004C00D80050005D004C0080004C0080004C0080002000800049016000080158),
    .INIT_34(256'h0168004C0160004A0061004C008003E20168004C016000080158004C015C004C),
    .INIT_35(256'h004C00800080004904620168004C0160004A0061004C00800020008000490422),
    .INIT_36(256'h00490020004C0158004C015C004C004C00D80050005D004C00800020004C0080),
    .INIT_37(256'h004C00800020030202E20168004C0160004A0061004C00800160004A00610080),
    .INIT_38(256'h0168004C016000080158004C015C004C004C00D80050005D004C0080004C0080),
    .INIT_39(256'h015C004C004C00D80050005D004C0080004C0080004C008000200080004904E2),
    .INIT_3A(256'h0160004A0061004C0080004C00800080004904E20168004C016000080158004C),
    .INIT_3B(256'h004C0158004C015C004C004C00D80050005D004C00800160004A0061004C0080),
    .INIT_3C(256'h0080004903A20168004C0160004A0061004C00800020004C00800160004A0061),
    .INIT_3D(256'h0158004C015C004C004C00D80050005D004C0080004C0080020002000160004C),
    .INIT_3E(256'h004C0160004A0061004C00800160004A00610080004900200080004901600008),
    .INIT_3F(256'h004C004C00D80050005D004C0080004C0080004C0080004C0080030202E20168),
    .INIT_40(256'h004C0158004C015C004C004C00D80050005D004C0080016000080158004C015C),
    .INIT_41(256'h0080004903A20168004C0160004A0061004C00800020004C00800160004A0061),
    .INIT_42(256'h004C00D80050005D004C00800020004C0080004C00800200020002000160004C),
    .INIT_43(256'h004A0020054204A20020004C05010051004D02000200004C0158004C015C004C),
    .INIT_44(256'h004C00800020020002000200054204A2002005E20160004A0020030205A20160),
    .INIT_45(256'h004A0020004C0200020005010051004D030201A20168004C05A20160004A0020),
    .INIT_46(256'h00800160004A0061004C0080004C0080004C05010051004D0080000805E20160),
    .INIT_47(256'h004D004C0158004C015C004C004C00D80050005D004C00800160004A0020004C),
    .INIT_48(256'h0148004C0160004A0061004C00800160004A0061008000490020004C05010051),
    .INIT_49(256'h004A0061004C00800160004A0061004C00800160004A006103020160004A03A2),
    .INIT_4A(256'h0020004C00800160004A0061004C02400140004C0160004A03A20148004C0160),
    .INIT_4B(256'h004D0200020002000160004C0080004903A20168004C0160004A0061004C0080),
    .INIT_4C(256'h004C00D80050005D004C00800160004A0020004C0080004C0080004C05010051),
    .INIT_4D(256'h0061008000490020004C05010051004D00800008016000080158004C015C004C),
    .INIT_4E(256'h00800160004A0061004C0080004C0080004C008000200080004905E20160004A),
    .INIT_4F(256'h0200030201A20168004C016000080158004C015C004C004C00D80050005D004C),
    .INIT_50(256'h0061004C008000200080004903620168004C0160004A0061004C008000200200),
    .INIT_51(256'h02000080004903A20168004C0160004A0061004C008004E20168004C0160004A),
    .INIT_52(256'h004C0160004A0061004C00800020004C05010051004D008000080160004A0061),
    .INIT_53(256'h0051004D0080000806220168004C0020004C00800160004A0061030206220168),
    .INIT_54(256'h004C00800160004A0020004C00800160004A0061004C0080004C0080004C0501),
    .INIT_55(256'h004904A20020004C05010051004D004C0158004C015C004C004C00D80050005D),
    .INIT_56(256'h004A0061004C00800020004C0080002003020160004A00610080004900200080),
    .INIT_57(256'h008004220168004C04620168004C06620168004C0160004A0061004C00800160),
    .INIT_58(256'h0080006100800160004C004A03A20148004C0160004A0061004C00800061004C),
    .INIT_59(256'h004C00800160004A006106C006A20160004A03A20148004C0160004A0061004C),
    .INIT_5A(256'h0168004C0160004A0061004C008000200080004907220168004C0160004A0061),
    .INIT_5B(256'h0168004C0160004A0061004C00800020004C00800160004A0061008000490662),
    .INIT_5C(256'h004C00800160004A00610080004900200200020002000160004C0080004903A2),
    .INIT_5D(256'h0160004A0061004C00800061004C00800160004A0061030202E20168004C0020),
    .INIT_5E(256'h00800020004C00800160004A0061004C02400140004C0160004A03A20148004C),
    .INIT_5F(256'h004C05010051004D02000160004C0080004903A20168004C0160004A0061004C),
    .INIT_60(256'h004C008000200080004903620168004C0160004A0061004C00800160004A0061),
    .INIT_61(256'h0160004A0061004C00800160004A00610080004907620168004C0160004A0061),
    .INIT_62(256'h02400140004C0160004A0061004C00800160004A00200080004903A20168004C),
    .INIT_63(256'h0168004C0160004A0061004C00800020004C00800020004C05010051004D004C),
    .INIT_64(256'h008004620168004C0160004A0061004C008000200080004903E20168004C0462),
    .INIT_65(256'h004A0061004C00800160004A00200080004904220168004C0160004A0061004C),
    .INIT_66(256'h004A0061004C00800160004A0020004C05010051004D004C02400140004C0160),
    .INIT_67(256'h0000000000000000000000000000000005010051004D004C02400140004C0160),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    program_counter_reg_rep_1
       (.ADDRARDADDR({1'b1,program_counter_reg_rep_0_i_2_n_0,program_counter_reg_rep_0_i_3_n_0,program_counter_reg_rep_0_i_4_n_0,program_counter_reg_rep_0_i_5_n_0,program_counter_reg_rep_0_i_6_n_0,program_counter_reg_rep_0_i_7_n_0,program_counter_reg_rep_0_i_8_n_0,program_counter_reg_rep_0_i_9_n_0,program_counter_reg_rep_0_i_10_n_0,program_counter_reg_rep_0_i_11_n_0,program_counter_reg_rep_0_i_12_n_0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_program_counter_reg_rep_1_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_program_counter_reg_rep_1_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(1'b0),
        .DBITERR(NLW_program_counter_reg_rep_1_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO({NLW_program_counter_reg_rep_1_DOADO_UNCONNECTED[31:11],opcode,address_z,address_a[3:2]}),
        .DOBDO(NLW_program_counter_reg_rep_1_DOBDO_UNCONNECTED[31:0]),
        .DOPADOP(NLW_program_counter_reg_rep_1_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_program_counter_reg_rep_1_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_program_counter_reg_rep_1_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(program_counter_reg_rep_0_i_1_n_0),
        .ENBWREN(1'b0),
        .INJECTDBITERR(NLW_program_counter_reg_rep_1_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_program_counter_reg_rep_1_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_program_counter_reg_rep_1_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(\program_counter[15]_i_1_n_0 ),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_program_counter_reg_rep_1_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  FDRE \quotient_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\quotient_reg[0]_i_1_n_3 ),
        .Q(quotient[1]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \quotient_reg[0]_i_1 
       (.CI(\remainder_reg[31]_i_2_n_0 ),
        .CO({\NLW_quotient_reg[0]_i_1_CO_UNCONNECTED [3:1],\quotient_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_quotient_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE \quotient_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[10]),
        .Q(quotient[11]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[11]),
        .Q(quotient[12]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[12]),
        .Q(quotient[13]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[13]),
        .Q(quotient[14]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[14]),
        .Q(quotient[15]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[15]),
        .Q(quotient[16]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[16]),
        .Q(quotient[17]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[17]),
        .Q(quotient[18]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[18]),
        .Q(quotient[19]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[19]),
        .Q(quotient[20]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[1]),
        .Q(quotient[2]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[20]),
        .Q(quotient[21]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[21]),
        .Q(quotient[22]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[22]),
        .Q(quotient[23]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[23]),
        .Q(quotient[24]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[24]),
        .Q(quotient[25]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[25]),
        .Q(quotient[26]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[26]),
        .Q(quotient[27]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[27]),
        .Q(quotient[28]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[28]),
        .Q(quotient[29]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[29]),
        .Q(quotient[30]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[2]),
        .Q(quotient[3]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[30]),
        .Q(quotient[31]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[31]),
        .Q(\quotient_reg_n_0_[31] ),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[3]),
        .Q(quotient[4]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[4]),
        .Q(quotient[5]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[5]),
        .Q(quotient[6]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[6]),
        .Q(quotient[7]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[7]),
        .Q(quotient[8]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[8]),
        .Q(quotient[9]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \quotient_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(quotient[9]),
        .Q(quotient[10]),
        .R(\divisor[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \read_input[31]_i_1 
       (.I0(\read_input[31]_i_2_n_0 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[4]),
        .I3(opcode_2[1]),
        .I4(state[3]),
        .I5(\read_input[31]_i_3_n_0 ),
        .O(\read_input[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \read_input[31]_i_2 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\read_input[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \read_input[31]_i_3 
       (.I0(opcode_2[3]),
        .I1(opcode_2[0]),
        .O(\read_input[31]_i_3_n_0 ));
  FDRE \read_input_reg[0] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[0]_i_1_n_0 ),
        .Q(read_input[0]),
        .R(1'b0));
  FDRE \read_input_reg[10] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[10]_i_1_n_0 ),
        .Q(read_input[10]),
        .R(1'b0));
  FDRE \read_input_reg[11] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[11]_i_1_n_0 ),
        .Q(read_input[11]),
        .R(1'b0));
  FDRE \read_input_reg[12] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[12]_i_1_n_0 ),
        .Q(read_input[12]),
        .R(1'b0));
  FDRE \read_input_reg[13] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[13]_i_1_n_0 ),
        .Q(read_input[13]),
        .R(1'b0));
  FDRE \read_input_reg[14] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[14]_i_1_n_0 ),
        .Q(read_input[14]),
        .R(1'b0));
  FDRE \read_input_reg[15] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[15]_i_1_n_0 ),
        .Q(read_input[15]),
        .R(1'b0));
  FDRE \read_input_reg[16] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(read_input[16]),
        .R(1'b0));
  FDRE \read_input_reg[17] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(read_input[17]),
        .R(1'b0));
  FDRE \read_input_reg[18] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(read_input[18]),
        .R(1'b0));
  FDRE \read_input_reg[19] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(read_input[19]),
        .R(1'b0));
  FDRE \read_input_reg[1] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[1]_i_1_n_0 ),
        .Q(read_input[1]),
        .R(1'b0));
  FDRE \read_input_reg[20] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(read_input[20]),
        .R(1'b0));
  FDRE \read_input_reg[21] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(read_input[21]),
        .R(1'b0));
  FDRE \read_input_reg[22] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(read_input[22]),
        .R(1'b0));
  FDRE \read_input_reg[23] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(read_input[23]),
        .R(1'b0));
  FDRE \read_input_reg[24] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(read_input[24]),
        .R(1'b0));
  FDRE \read_input_reg[25] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(read_input[25]),
        .R(1'b0));
  FDRE \read_input_reg[26] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(read_input[26]),
        .R(1'b0));
  FDRE \read_input_reg[27] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(read_input[27]),
        .R(1'b0));
  FDRE \read_input_reg[28] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(read_input[28]),
        .R(1'b0));
  FDRE \read_input_reg[29] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(read_input[29]),
        .R(1'b0));
  FDRE \read_input_reg[2] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[2]_i_1_n_0 ),
        .Q(read_input[2]),
        .R(1'b0));
  FDRE \read_input_reg[30] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(read_input[30]),
        .R(1'b0));
  FDRE \read_input_reg[31] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(read_input[31]),
        .R(1'b0));
  FDRE \read_input_reg[3] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[3]_i_1_n_0 ),
        .Q(read_input[3]),
        .R(1'b0));
  FDRE \read_input_reg[4] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[4]_i_1_n_0 ),
        .Q(read_input[4]),
        .R(1'b0));
  FDRE \read_input_reg[5] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[5]_i_1_n_0 ),
        .Q(read_input[5]),
        .R(1'b0));
  FDRE \read_input_reg[6] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[6]_i_1_n_0 ),
        .Q(read_input[6]),
        .R(1'b0));
  FDRE \read_input_reg[7] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[7]_i_1_n_0 ),
        .Q(read_input[7]),
        .R(1'b0));
  FDRE \read_input_reg[8] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[8]_i_1_n_0 ),
        .Q(read_input[8]),
        .R(1'b0));
  FDRE \read_input_reg[9] 
       (.C(clk),
        .CE(\read_input[31]_i_1_n_0 ),
        .D(\a_lo[9]_i_1_n_0 ),
        .Q(read_input[9]),
        .R(1'b0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD519 registers_reg_r1_0_15_0_5
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[1:0]),
        .DIB(result[3:2]),
        .DIC(result[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(register_b[1:0]),
        .DOB(register_b[3:2]),
        .DOC(register_b[5:4]),
        .DOD(NLW_registers_reg_r1_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD521 registers_reg_r1_0_15_12_17
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[13:12]),
        .DIB(result[15:14]),
        .DIC(result[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(register_b[13:12]),
        .DOB(register_b[15:14]),
        .DOC(register_b[17:16]),
        .DOD(NLW_registers_reg_r1_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD522 registers_reg_r1_0_15_18_23
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[19:18]),
        .DIB(result[21:20]),
        .DIC(result[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(register_b[19:18]),
        .DOB(register_b[21:20]),
        .DOC(register_b[23:22]),
        .DOD(NLW_registers_reg_r1_0_15_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD523 registers_reg_r1_0_15_24_29
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[25:24]),
        .DIB(result[27:26]),
        .DIC(result[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(register_b[25:24]),
        .DOB(register_b[27:26]),
        .DOC(register_b[29:28]),
        .DOD(NLW_registers_reg_r1_0_15_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD524 registers_reg_r1_0_15_30_31
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[31:30]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(register_b[31:30]),
        .DOB(NLW_registers_reg_r1_0_15_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_registers_reg_r1_0_15_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_registers_reg_r1_0_15_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD520 registers_reg_r1_0_15_6_11
       (.ADDRA({1'b0,literal_2[3:0]}),
        .ADDRB({1'b0,literal_2[3:0]}),
        .ADDRC({1'b0,literal_2[3:0]}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[7:6]),
        .DIB(result[9:8]),
        .DIC(result[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(register_b[7:6]),
        .DOB(register_b[9:8]),
        .DOC(register_b[11:10]),
        .DOD(NLW_registers_reg_r1_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD525 registers_reg_r2_0_15_0_5
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[1:0]),
        .DIB(result[3:2]),
        .DIC(result[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(register_a[1:0]),
        .DOB(register_a[3:2]),
        .DOC(register_a[5:4]),
        .DOD(NLW_registers_reg_r2_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD527 registers_reg_r2_0_15_12_17
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[13:12]),
        .DIB(result[15:14]),
        .DIC(result[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(register_a[13:12]),
        .DOB(register_a[15:14]),
        .DOC(register_a[17:16]),
        .DOD(NLW_registers_reg_r2_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD528 registers_reg_r2_0_15_18_23
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[19:18]),
        .DIB(result[21:20]),
        .DIC(result[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(register_a[19:18]),
        .DOB(register_a[21:20]),
        .DOC(register_a[23:22]),
        .DOD(NLW_registers_reg_r2_0_15_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD529 registers_reg_r2_0_15_24_29
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[25:24]),
        .DIB(result[27:26]),
        .DIC(result[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(register_a[25:24]),
        .DOB(register_a[27:26]),
        .DOC(register_a[29:28]),
        .DOD(NLW_registers_reg_r2_0_15_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD530 registers_reg_r2_0_15_30_31
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[31:30]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(register_a[31:30]),
        .DOB(NLW_registers_reg_r2_0_15_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_registers_reg_r2_0_15_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_registers_reg_r2_0_15_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M_HD526 registers_reg_r2_0_15_6_11
       (.ADDRA({1'b0,address_a_2}),
        .ADDRB({1'b0,address_a_2}),
        .ADDRC({1'b0,address_a_2}),
        .ADDRD({1'b0,address_z_3}),
        .DIA(result[7:6]),
        .DIB(result[9:8]),
        .DIC(result[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(register_a[7:6]),
        .DOB(register_a[9:8]),
        .DOC(register_a[11:10]),
        .DOD(NLW_registers_reg_r2_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(write_enable_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[0]_i_1 
       (.I0(\remainder_reg[3]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[0]),
        .O(\remainder[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[10]_i_1 
       (.I0(\remainder_reg[11]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[10]),
        .O(\remainder[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[11]_i_1 
       (.I0(\remainder_reg[11]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[11]),
        .O(\remainder[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[11]_i_3 
       (.I0(p_0_in1_in[11]),
        .I1(divisor[11]),
        .O(\remainder[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[11]_i_4 
       (.I0(p_0_in1_in[10]),
        .I1(divisor[10]),
        .O(\remainder[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[11]_i_5 
       (.I0(p_0_in1_in[9]),
        .I1(divisor[9]),
        .O(\remainder[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[11]_i_6 
       (.I0(p_0_in1_in[8]),
        .I1(divisor[8]),
        .O(\remainder[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[12]_i_1 
       (.I0(\remainder_reg[15]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[12]),
        .O(\remainder[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[13]_i_1 
       (.I0(\remainder_reg[15]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[13]),
        .O(\remainder[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[14]_i_1 
       (.I0(\remainder_reg[15]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[14]),
        .O(\remainder[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[15]_i_1 
       (.I0(\remainder_reg[15]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[15]),
        .O(\remainder[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[15]_i_3 
       (.I0(p_0_in1_in[15]),
        .I1(divisor[15]),
        .O(\remainder[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[15]_i_4 
       (.I0(p_0_in1_in[14]),
        .I1(divisor[14]),
        .O(\remainder[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[15]_i_5 
       (.I0(p_0_in1_in[13]),
        .I1(divisor[13]),
        .O(\remainder[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[15]_i_6 
       (.I0(p_0_in1_in[12]),
        .I1(divisor[12]),
        .O(\remainder[15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[16]_i_1 
       (.I0(\remainder_reg[19]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[16]),
        .O(\remainder[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[17]_i_1 
       (.I0(\remainder_reg[19]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[17]),
        .O(\remainder[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[18]_i_1 
       (.I0(\remainder_reg[19]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[18]),
        .O(\remainder[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[19]_i_1 
       (.I0(\remainder_reg[19]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[19]),
        .O(\remainder[19]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[19]_i_3 
       (.I0(p_0_in1_in[19]),
        .I1(divisor[19]),
        .O(\remainder[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[19]_i_4 
       (.I0(p_0_in1_in[18]),
        .I1(divisor[18]),
        .O(\remainder[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[19]_i_5 
       (.I0(p_0_in1_in[17]),
        .I1(divisor[17]),
        .O(\remainder[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[19]_i_6 
       (.I0(p_0_in1_in[16]),
        .I1(divisor[16]),
        .O(\remainder[19]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[1]_i_1 
       (.I0(\remainder_reg[3]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[1]),
        .O(\remainder[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[20]_i_1 
       (.I0(\remainder_reg[23]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[20]),
        .O(\remainder[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[21]_i_1 
       (.I0(\remainder_reg[23]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[21]),
        .O(\remainder[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[22]_i_1 
       (.I0(\remainder_reg[23]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[22]),
        .O(\remainder[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[23]_i_1 
       (.I0(\remainder_reg[23]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[23]),
        .O(\remainder[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[23]_i_3 
       (.I0(p_0_in1_in[23]),
        .I1(divisor[23]),
        .O(\remainder[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[23]_i_4 
       (.I0(p_0_in1_in[22]),
        .I1(divisor[22]),
        .O(\remainder[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[23]_i_5 
       (.I0(p_0_in1_in[21]),
        .I1(divisor[21]),
        .O(\remainder[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[23]_i_6 
       (.I0(p_0_in1_in[20]),
        .I1(divisor[20]),
        .O(\remainder[23]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[24]_i_1 
       (.I0(\remainder_reg[27]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[24]),
        .O(\remainder[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[25]_i_1 
       (.I0(\remainder_reg[27]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[25]),
        .O(\remainder[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[26]_i_1 
       (.I0(\remainder_reg[27]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[26]),
        .O(\remainder[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[27]_i_1 
       (.I0(\remainder_reg[27]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[27]),
        .O(\remainder[27]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[27]_i_3 
       (.I0(p_0_in1_in[27]),
        .I1(divisor[27]),
        .O(\remainder[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[27]_i_4 
       (.I0(p_0_in1_in[26]),
        .I1(divisor[26]),
        .O(\remainder[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[27]_i_5 
       (.I0(p_0_in1_in[25]),
        .I1(divisor[25]),
        .O(\remainder[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[27]_i_6 
       (.I0(p_0_in1_in[24]),
        .I1(divisor[24]),
        .O(\remainder[27]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[28]_i_1 
       (.I0(\remainder_reg[31]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[28]),
        .O(\remainder[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[29]_i_1 
       (.I0(\remainder_reg[31]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[29]),
        .O(\remainder[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[2]_i_1 
       (.I0(\remainder_reg[3]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[2]),
        .O(\remainder[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[30]_i_1 
       (.I0(\remainder_reg[31]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[30]),
        .O(\remainder[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[31]_i_1 
       (.I0(\remainder_reg[31]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[31]),
        .O(\remainder[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[31]_i_3 
       (.I0(p_0_in1_in[31]),
        .I1(divisor[31]),
        .O(\remainder[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[31]_i_4 
       (.I0(p_0_in1_in[30]),
        .I1(divisor[30]),
        .O(\remainder[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[31]_i_5 
       (.I0(p_0_in1_in[29]),
        .I1(divisor[29]),
        .O(\remainder[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[31]_i_6 
       (.I0(p_0_in1_in[28]),
        .I1(divisor[28]),
        .O(\remainder[31]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[3]_i_1 
       (.I0(\remainder_reg[3]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[3]),
        .O(\remainder[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[3]_i_3 
       (.I0(p_0_in1_in[3]),
        .I1(divisor[3]),
        .O(\remainder[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[3]_i_4 
       (.I0(p_0_in1_in[2]),
        .I1(divisor[2]),
        .O(\remainder[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[3]_i_5 
       (.I0(p_0_in1_in[1]),
        .I1(divisor[1]),
        .O(\remainder[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[3]_i_6 
       (.I0(p_0_in1_in[0]),
        .I1(divisor[0]),
        .O(\remainder[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[4]_i_1 
       (.I0(\remainder_reg[7]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[4]),
        .O(\remainder[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[5]_i_1 
       (.I0(\remainder_reg[7]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[5]),
        .O(\remainder[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[6]_i_1 
       (.I0(\remainder_reg[7]_i_2_n_5 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[6]),
        .O(\remainder[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[7]_i_1 
       (.I0(\remainder_reg[7]_i_2_n_4 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[7]),
        .O(\remainder[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[7]_i_3 
       (.I0(p_0_in1_in[7]),
        .I1(divisor[7]),
        .O(\remainder[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[7]_i_4 
       (.I0(p_0_in1_in[6]),
        .I1(divisor[6]),
        .O(\remainder[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[7]_i_5 
       (.I0(p_0_in1_in[5]),
        .I1(divisor[5]),
        .O(\remainder[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \remainder[7]_i_6 
       (.I0(p_0_in1_in[4]),
        .I1(divisor[4]),
        .O(\remainder[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[8]_i_1 
       (.I0(\remainder_reg[11]_i_2_n_7 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[8]),
        .O(\remainder[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \remainder[9]_i_1 
       (.I0(\remainder_reg[11]_i_2_n_6 ),
        .I1(\quotient_reg[0]_i_1_n_3 ),
        .I2(p_0_in1_in[9]),
        .O(\remainder[9]_i_1_n_0 ));
  FDRE \remainder_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[0]_i_1_n_0 ),
        .Q(p_0_in1_in[1]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[10]_i_1_n_0 ),
        .Q(p_0_in1_in[11]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[11]_i_1_n_0 ),
        .Q(p_0_in1_in[12]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[11]_i_2 
       (.CI(\remainder_reg[7]_i_2_n_0 ),
        .CO({\remainder_reg[11]_i_2_n_0 ,\NLW_remainder_reg[11]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[11:8]),
        .O({\remainder_reg[11]_i_2_n_4 ,\remainder_reg[11]_i_2_n_5 ,\remainder_reg[11]_i_2_n_6 ,\remainder_reg[11]_i_2_n_7 }),
        .S({\remainder[11]_i_3_n_0 ,\remainder[11]_i_4_n_0 ,\remainder[11]_i_5_n_0 ,\remainder[11]_i_6_n_0 }));
  FDRE \remainder_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[12]_i_1_n_0 ),
        .Q(p_0_in1_in[13]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[13]_i_1_n_0 ),
        .Q(p_0_in1_in[14]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[14]_i_1_n_0 ),
        .Q(p_0_in1_in[15]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[15]_i_1_n_0 ),
        .Q(p_0_in1_in[16]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[15]_i_2 
       (.CI(\remainder_reg[11]_i_2_n_0 ),
        .CO({\remainder_reg[15]_i_2_n_0 ,\NLW_remainder_reg[15]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[15:12]),
        .O({\remainder_reg[15]_i_2_n_4 ,\remainder_reg[15]_i_2_n_5 ,\remainder_reg[15]_i_2_n_6 ,\remainder_reg[15]_i_2_n_7 }),
        .S({\remainder[15]_i_3_n_0 ,\remainder[15]_i_4_n_0 ,\remainder[15]_i_5_n_0 ,\remainder[15]_i_6_n_0 }));
  FDRE \remainder_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[16]_i_1_n_0 ),
        .Q(p_0_in1_in[17]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[17]_i_1_n_0 ),
        .Q(p_0_in1_in[18]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[18]_i_1_n_0 ),
        .Q(p_0_in1_in[19]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[19]_i_1_n_0 ),
        .Q(p_0_in1_in[20]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[19]_i_2 
       (.CI(\remainder_reg[15]_i_2_n_0 ),
        .CO({\remainder_reg[19]_i_2_n_0 ,\NLW_remainder_reg[19]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[19:16]),
        .O({\remainder_reg[19]_i_2_n_4 ,\remainder_reg[19]_i_2_n_5 ,\remainder_reg[19]_i_2_n_6 ,\remainder_reg[19]_i_2_n_7 }),
        .S({\remainder[19]_i_3_n_0 ,\remainder[19]_i_4_n_0 ,\remainder[19]_i_5_n_0 ,\remainder[19]_i_6_n_0 }));
  FDRE \remainder_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[1]_i_1_n_0 ),
        .Q(p_0_in1_in[2]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[20]_i_1_n_0 ),
        .Q(p_0_in1_in[21]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[21]_i_1_n_0 ),
        .Q(p_0_in1_in[22]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[22]_i_1_n_0 ),
        .Q(p_0_in1_in[23]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[23]_i_1_n_0 ),
        .Q(p_0_in1_in[24]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[23]_i_2 
       (.CI(\remainder_reg[19]_i_2_n_0 ),
        .CO({\remainder_reg[23]_i_2_n_0 ,\NLW_remainder_reg[23]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[23:20]),
        .O({\remainder_reg[23]_i_2_n_4 ,\remainder_reg[23]_i_2_n_5 ,\remainder_reg[23]_i_2_n_6 ,\remainder_reg[23]_i_2_n_7 }),
        .S({\remainder[23]_i_3_n_0 ,\remainder[23]_i_4_n_0 ,\remainder[23]_i_5_n_0 ,\remainder[23]_i_6_n_0 }));
  FDRE \remainder_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[24]_i_1_n_0 ),
        .Q(p_0_in1_in[25]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[25]_i_1_n_0 ),
        .Q(p_0_in1_in[26]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[26]_i_1_n_0 ),
        .Q(p_0_in1_in[27]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[27]_i_1_n_0 ),
        .Q(p_0_in1_in[28]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[27]_i_2 
       (.CI(\remainder_reg[23]_i_2_n_0 ),
        .CO({\remainder_reg[27]_i_2_n_0 ,\NLW_remainder_reg[27]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[27:24]),
        .O({\remainder_reg[27]_i_2_n_4 ,\remainder_reg[27]_i_2_n_5 ,\remainder_reg[27]_i_2_n_6 ,\remainder_reg[27]_i_2_n_7 }),
        .S({\remainder[27]_i_3_n_0 ,\remainder[27]_i_4_n_0 ,\remainder[27]_i_5_n_0 ,\remainder[27]_i_6_n_0 }));
  FDRE \remainder_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[28]_i_1_n_0 ),
        .Q(p_0_in1_in[29]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[29]_i_1_n_0 ),
        .Q(p_0_in1_in[30]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[2]_i_1_n_0 ),
        .Q(p_0_in1_in[3]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[30]_i_1_n_0 ),
        .Q(p_0_in1_in[31]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[31]_i_1_n_0 ),
        .Q(\remainder_reg_n_0_[31] ),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[31]_i_2 
       (.CI(\remainder_reg[27]_i_2_n_0 ),
        .CO({\remainder_reg[31]_i_2_n_0 ,\NLW_remainder_reg[31]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[31:28]),
        .O({\remainder_reg[31]_i_2_n_4 ,\remainder_reg[31]_i_2_n_5 ,\remainder_reg[31]_i_2_n_6 ,\remainder_reg[31]_i_2_n_7 }),
        .S({\remainder[31]_i_3_n_0 ,\remainder[31]_i_4_n_0 ,\remainder[31]_i_5_n_0 ,\remainder[31]_i_6_n_0 }));
  FDRE \remainder_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[3]_i_1_n_0 ),
        .Q(p_0_in1_in[4]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\remainder_reg[3]_i_2_n_0 ,\NLW_remainder_reg[3]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(p_0_in1_in[3:0]),
        .O({\remainder_reg[3]_i_2_n_4 ,\remainder_reg[3]_i_2_n_5 ,\remainder_reg[3]_i_2_n_6 ,\remainder_reg[3]_i_2_n_7 }),
        .S({\remainder[3]_i_3_n_0 ,\remainder[3]_i_4_n_0 ,\remainder[3]_i_5_n_0 ,\remainder[3]_i_6_n_0 }));
  FDRE \remainder_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[4]_i_1_n_0 ),
        .Q(p_0_in1_in[5]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[5]_i_1_n_0 ),
        .Q(p_0_in1_in[6]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[6]_i_1_n_0 ),
        .Q(p_0_in1_in[7]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[7]_i_1_n_0 ),
        .Q(p_0_in1_in[8]),
        .R(\divisor[31]_i_1_n_0 ));
  CARRY4 \remainder_reg[7]_i_2 
       (.CI(\remainder_reg[3]_i_2_n_0 ),
        .CO({\remainder_reg[7]_i_2_n_0 ,\NLW_remainder_reg[7]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_0_in1_in[7:4]),
        .O({\remainder_reg[7]_i_2_n_4 ,\remainder_reg[7]_i_2_n_5 ,\remainder_reg[7]_i_2_n_6 ,\remainder_reg[7]_i_2_n_7 }),
        .S({\remainder[7]_i_3_n_0 ,\remainder[7]_i_4_n_0 ,\remainder[7]_i_5_n_0 ,\remainder[7]_i_6_n_0 }));
  FDRE \remainder_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[8]_i_1_n_0 ),
        .Q(p_0_in1_in[9]),
        .R(\divisor[31]_i_1_n_0 ));
  FDRE \remainder_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\remainder[9]_i_1_n_0 ),
        .Q(p_0_in1_in[10]),
        .R(\divisor[31]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-12 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(0),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    result0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\a_lo[15]_i_1_n_0 ,\a_lo[14]_i_1_n_0 ,\a_lo[13]_i_1_n_0 ,\a_lo[12]_i_1_n_0 ,\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 ,\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\a_lo[4]_i_1_n_0 ,\a_lo[3]_i_1_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 }),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_result0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,\write_value[15]_i_1_n_0 ,\write_value[14]_i_1_n_0 ,\write_value[13]_i_1_n_0 ,\write_value[12]_i_1_n_0 ,\write_value[11]_i_1_n_0 ,\write_value[10]_i_1_n_0 ,\write_value[9]_i_1_n_0 ,\write_value[8]_i_1_n_0 ,\write_value[7]_i_1_n_0 ,\write_value[6]_i_1_n_0 ,\write_value[5]_i_1_n_0 ,\write_value[4]_i_1_n_0 ,\write_value[3]_i_1_n_0 ,\write_value[2]_i_1_n_0 ,\write_value[1]_i_1_n_0 ,\write_value[0]_i_1_n_0 }),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_result0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A,product_c_reg_n_104,product_c_reg_n_105,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_result0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_result0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(product_c_reg_i_1_n_0),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_result0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_result0_OVERFLOW_UNCONNECTED),
        .P({NLW_result0_P_UNCONNECTED[47:32],result0_n_74,result0_n_75,result0_n_76,result0_n_77,result0_n_78,result0_n_79,result0_n_80,result0_n_81,result0_n_82,result0_n_83,result0_n_84,result0_n_85,result0_n_86,result0_n_87,result0_n_88,result0_n_89,result0_n_90,result0_n_91,result0_n_92,result0_n_93,result0_n_94,result0_n_95,result0_n_96,result0_n_97,result0_n_98,result0_n_99,result0_n_100,result0_n_101,result0_n_102,result0_n_103,result0_n_104,result0_n_105}),
        .PATTERNBDETECT(NLW_result0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_result0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_result0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_result0_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'hF111FFFFF1110000)) 
    \result[0]_i_1 
       (.I0(\result[0]_i_2_n_0 ),
        .I1(\result[0]_i_3_n_0 ),
        .I2(p_0_in1_in[1]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\result[0]_i_4_n_0 ),
        .O(\result[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_100 
       (.I0(result[11]),
        .I1(operand_b1),
        .I2(register_b[11]),
        .I3(\a_lo[11]_i_1_n_0 ),
        .I4(\write_value[10]_i_1_n_0 ),
        .I5(\a_lo[10]_i_1_n_0 ),
        .O(\result[0]_i_100_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_101 
       (.I0(result[9]),
        .I1(operand_b1),
        .I2(register_b[9]),
        .I3(\a_lo[9]_i_1_n_0 ),
        .I4(\write_value[8]_i_1_n_0 ),
        .I5(\a_lo[8]_i_1_n_0 ),
        .O(\result[0]_i_101_n_0 ));
  LUT6 #(
    .INIT(64'h5451454054511015)) 
    \result[0]_i_102 
       (.I0(\result[0]_i_95_n_0 ),
        .I1(result[6]),
        .I2(operand_b1),
        .I3(register_b[6]),
        .I4(operand_a1),
        .I5(register_a[6]),
        .O(\result[0]_i_102_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_103 
       (.I0(result[5]),
        .I1(operand_b1),
        .I2(register_b[5]),
        .I3(\a_lo[5]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(\a_lo[4]_i_1_n_0 ),
        .O(\result[0]_i_103_n_0 ));
  LUT6 #(
    .INIT(64'h9009909090090909)) 
    \result[0]_i_104 
       (.I0(\write_value[3]_i_1_n_0 ),
        .I1(\a_lo[3]_i_1_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(result[2]),
        .I4(operand_a1),
        .I5(register_a[2]),
        .O(\result[0]_i_104_n_0 ));
  LUT6 #(
    .INIT(64'h9A95000000009A95)) 
    \result[0]_i_105 
       (.I0(\write_value[1]_i_1_n_0 ),
        .I1(result[1]),
        .I2(operand_a1),
        .I3(register_a[1]),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\a_lo[0]_i_1_n_0 ),
        .O(\result[0]_i_105_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[0]_i_12 
       (.I0(opcode_2[1]),
        .I1(opcode_2[2]),
        .O(\result[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[0]_i_14 
       (.I0(\result[8]_i_24_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\result[0]_i_36_n_0 ),
        .O(\result[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \result[0]_i_15 
       (.I0(\program_counter[15]_i_16_n_0 ),
        .I1(\a_lo[5]_i_1_n_0 ),
        .I2(\a_lo[4]_i_1_n_0 ),
        .I3(\a_lo[7]_i_1_n_0 ),
        .I4(\a_lo[6]_i_1_n_0 ),
        .I5(\program_counter[15]_i_14_n_0 ),
        .O(\result[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFBBBBBBBBBBB)) 
    \result[0]_i_16 
       (.I0(\result[0]_i_37_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[0]),
        .I3(opcode_2[1]),
        .I4(data13),
        .I5(\result[0]_i_39_n_0 ),
        .O(\result[0]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \result[0]_i_17 
       (.I0(\write_value[1]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[0]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[0]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h1D000000FFFF1D00)) 
    \result[0]_i_19 
       (.I0(register_b[30]),
        .I1(operand_b1),
        .I2(result[30]),
        .I3(p_1_in[14]),
        .I4(p_1_in[15]),
        .I5(p_0_in[15]),
        .O(\result[0]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'hAAAABABF)) 
    \result[0]_i_2 
       (.I0(state[3]),
        .I1(\result[0]_i_5_n_0 ),
        .I2(opcode_2[3]),
        .I3(\result[0]_i_6_n_0 ),
        .I4(opcode_2[4]),
        .O(\result[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_20 
       (.I0(p_1_in[13]),
        .I1(p_0_in[13]),
        .I2(p_1_in[12]),
        .I3(register_b[28]),
        .I4(operand_b1),
        .I5(result[28]),
        .O(\result[0]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h47004700FF474700)) 
    \result[0]_i_21 
       (.I0(result[27]),
        .I1(operand_b1),
        .I2(register_b[27]),
        .I3(p_1_in[11]),
        .I4(p_1_in[10]),
        .I5(p_0_in[10]),
        .O(\result[0]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_22 
       (.I0(p_1_in[9]),
        .I1(p_0_in[9]),
        .I2(p_1_in[8]),
        .I3(register_b[24]),
        .I4(operand_b1),
        .I5(result[24]),
        .O(\result[0]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_23 
       (.I0(p_0_in[15]),
        .I1(p_1_in[15]),
        .I2(result[30]),
        .I3(operand_b1),
        .I4(register_b[30]),
        .I5(p_1_in[14]),
        .O(\result[0]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_24 
       (.I0(result[29]),
        .I1(operand_b1),
        .I2(register_b[29]),
        .I3(p_1_in[13]),
        .I4(p_0_in[12]),
        .I5(p_1_in[12]),
        .O(\result[0]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \result[0]_i_25 
       (.I0(p_1_in[11]),
        .I1(register_b[27]),
        .I2(operand_b1),
        .I3(result[27]),
        .I4(p_0_in[10]),
        .I5(p_1_in[10]),
        .O(\result[0]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h9090900909099009)) 
    \result[0]_i_26 
       (.I0(p_0_in[9]),
        .I1(p_1_in[9]),
        .I2(p_1_in[8]),
        .I3(register_b[24]),
        .I4(operand_b1),
        .I5(result[24]),
        .O(\result[0]_i_26_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[0]_i_27 
       (.I0(result[3]),
        .I1(operand_a1),
        .I2(register_a[3]),
        .O(\result[0]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[0]_i_28 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(literal_2[3]),
        .O(\result[0]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[0]_i_29 
       (.I0(register_a[2]),
        .I1(operand_a1),
        .I2(result[2]),
        .I3(literal_2[2]),
        .O(\result[0]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h0000000047FFFFFF)) 
    \result[0]_i_3 
       (.I0(\result[1]_i_5_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[0]_i_7_n_0 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[0]_i_8_n_0 ),
        .O(\result[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[0]_i_30 
       (.I0(register_a[1]),
        .I1(operand_a1),
        .I2(result[1]),
        .I3(literal_2[1]),
        .O(\result[0]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[0]_i_31 
       (.I0(register_a[0]),
        .I1(operand_a1),
        .I2(result[0]),
        .I3(literal_2[0]),
        .O(\result[0]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_33 
       (.I0(p_0_in[15]),
        .I1(p_1_in[15]),
        .I2(result[30]),
        .I3(operand_b1),
        .I4(register_b[30]),
        .I5(p_1_in[14]),
        .O(\result[0]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hEDB8ED4700000000)) 
    \result[0]_i_34 
       (.I0(result[27]),
        .I1(operand_b1),
        .I2(register_b[27]),
        .I3(operand_a1),
        .I4(register_a[27]),
        .I5(\result[0]_i_54_n_0 ),
        .O(\result[0]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000B847)) 
    \result[0]_i_35 
       (.I0(result[24]),
        .I1(operand_b1),
        .I2(register_b[24]),
        .I3(p_1_in[8]),
        .I4(\result[0]_i_55_n_0 ),
        .I5(\result[0]_i_56_n_0 ),
        .O(\result[0]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB8FF0000B800)) 
    \result[0]_i_36 
       (.I0(p_1_in[0]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\a_lo[0]_i_1_n_0 ),
        .I3(\result[19]_i_23_n_0 ),
        .I4(\result[22]_i_19_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[0]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hFC8E0C8E00000000)) 
    \result[0]_i_37 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\a_lo[0]_i_1_n_0 ),
        .I2(opcode_2[0]),
        .I3(opcode_2[1]),
        .I4(data11[0]),
        .I5(\result[30]_i_15_n_0 ),
        .O(\result[0]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \result[0]_i_39 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .O(\result[0]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[0]_i_4 
       (.I0(\output [0]),
        .I1(result0_n_105),
        .I2(state[1]),
        .I3(load_data[0]),
        .I4(state[2]),
        .I5(quotient[1]),
        .O(\result[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h02A202A2ABFB02A2)) 
    \result[0]_i_41 
       (.I0(p_1_in[7]),
        .I1(register_b[23]),
        .I2(operand_b1),
        .I3(result[23]),
        .I4(p_1_in[6]),
        .I5(p_0_in[6]),
        .O(\result[0]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_42 
       (.I0(p_1_in[5]),
        .I1(p_0_in[5]),
        .I2(p_1_in[4]),
        .I3(register_b[20]),
        .I4(operand_b1),
        .I5(result[20]),
        .O(\result[0]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_43 
       (.I0(p_1_in[3]),
        .I1(p_0_in[3]),
        .I2(p_1_in[2]),
        .I3(register_b[18]),
        .I4(operand_b1),
        .I5(result[18]),
        .O(\result[0]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_44 
       (.I0(p_1_in[1]),
        .I1(p_0_in[1]),
        .I2(p_1_in[0]),
        .I3(register_b[16]),
        .I4(operand_b1),
        .I5(result[16]),
        .O(\result[0]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_45 
       (.I0(result[23]),
        .I1(operand_b1),
        .I2(register_b[23]),
        .I3(p_1_in[7]),
        .I4(p_0_in[6]),
        .I5(p_1_in[6]),
        .O(\result[0]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_46 
       (.I0(result[21]),
        .I1(operand_b1),
        .I2(register_b[21]),
        .I3(p_1_in[5]),
        .I4(p_0_in[4]),
        .I5(p_1_in[4]),
        .O(\result[0]_i_46_n_0 ));
  LUT5 #(
    .INIT(32'h45401015)) 
    \result[0]_i_47 
       (.I0(\result[0]_i_72_n_0 ),
        .I1(result[18]),
        .I2(operand_b1),
        .I3(register_b[18]),
        .I4(p_1_in[2]),
        .O(\result[0]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_48 
       (.I0(p_0_in[1]),
        .I1(p_1_in[1]),
        .I2(result[16]),
        .I3(operand_b1),
        .I4(register_b[16]),
        .I5(p_1_in[0]),
        .O(\result[0]_i_48_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[0]_i_5 
       (.I0(\result[0]_i_9_n_0 ),
        .I1(opcode_2[2]),
        .I2(data5),
        .I3(opcode_2[0]),
        .I4(timer_clock_reg[0]),
        .O(\result[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hA9590000)) 
    \result[0]_i_50 
       (.I0(p_1_in[5]),
        .I1(register_b[21]),
        .I2(operand_b1),
        .I3(result[21]),
        .I4(\result[0]_i_77_n_0 ),
        .O(\result[0]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000A959)) 
    \result[0]_i_51 
       (.I0(p_1_in[2]),
        .I1(register_b[18]),
        .I2(operand_b1),
        .I3(result[18]),
        .I4(\result[0]_i_72_n_0 ),
        .I5(\result[0]_i_78_n_0 ),
        .O(\result[0]_i_51_n_0 ));
  LUT5 #(
    .INIT(32'hA9590000)) 
    \result[0]_i_52 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(register_b[15]),
        .I2(operand_b1),
        .I3(result[15]),
        .I4(\result[0]_i_79_n_0 ),
        .O(\result[0]_i_52_n_0 ));
  LUT5 #(
    .INIT(32'h09000009)) 
    \result[0]_i_53 
       (.I0(\a_lo[12]_i_1_n_0 ),
        .I1(\write_value[12]_i_1_n_0 ),
        .I2(\result[0]_i_80_n_0 ),
        .I3(\a_lo[14]_i_1_n_0 ),
        .I4(\write_value[14]_i_1_n_0 ),
        .O(\result[0]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_54 
       (.I0(result[29]),
        .I1(operand_b1),
        .I2(register_b[29]),
        .I3(p_1_in[13]),
        .I4(p_0_in[12]),
        .I5(p_1_in[12]),
        .O(\result[0]_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_55 
       (.I0(register_a[25]),
        .I1(operand_a1),
        .I2(register_b[25]),
        .I3(operand_b1),
        .I4(result[25]),
        .O(\result[0]_i_55_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_56 
       (.I0(register_a[26]),
        .I1(operand_a1),
        .I2(register_b[26]),
        .I3(operand_b1),
        .I4(result[26]),
        .O(\result[0]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h1D00FFFF00001D00)) 
    \result[0]_i_58 
       (.I0(register_b[30]),
        .I1(operand_b1),
        .I2(result[30]),
        .I3(p_1_in[14]),
        .I4(p_1_in[15]),
        .I5(p_0_in[15]),
        .O(\result[0]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_59 
       (.I0(p_0_in[15]),
        .I1(p_1_in[15]),
        .I2(result[30]),
        .I3(operand_b1),
        .I4(register_b[30]),
        .I5(p_1_in[14]),
        .O(\result[0]_i_59_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFC0CFA0A0C0CF)) 
    \result[0]_i_6 
       (.I0(\result_reg[0]_i_11_n_7 ),
        .I1(literal_2[0]),
        .I2(\result[0]_i_12_n_0 ),
        .I3(program_counter_2[0]),
        .I4(\result[30]_i_9_n_0 ),
        .I5(data3),
        .O(\result[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_60 
       (.I0(result[29]),
        .I1(operand_b1),
        .I2(register_b[29]),
        .I3(p_1_in[13]),
        .I4(p_0_in[12]),
        .I5(p_1_in[12]),
        .O(\result[0]_i_60_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \result[0]_i_61 
       (.I0(p_1_in[11]),
        .I1(register_b[27]),
        .I2(operand_b1),
        .I3(result[27]),
        .I4(p_0_in[10]),
        .I5(p_1_in[10]),
        .O(\result[0]_i_61_n_0 ));
  LUT6 #(
    .INIT(64'h9090900909099009)) 
    \result[0]_i_62 
       (.I0(p_0_in[9]),
        .I1(p_1_in[9]),
        .I2(p_1_in[8]),
        .I3(register_b[24]),
        .I4(operand_b1),
        .I5(result[24]),
        .O(\result[0]_i_62_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_64 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\write_value[15]_i_1_n_0 ),
        .I2(\a_lo[14]_i_1_n_0 ),
        .I3(register_b[14]),
        .I4(operand_b1),
        .I5(result[14]),
        .O(\result[0]_i_64_n_0 ));
  LUT6 #(
    .INIT(64'h02A202A2ABFB02A2)) 
    \result[0]_i_65 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(register_b[13]),
        .I2(operand_b1),
        .I3(result[13]),
        .I4(\a_lo[12]_i_1_n_0 ),
        .I5(\write_value[12]_i_1_n_0 ),
        .O(\result[0]_i_65_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_66 
       (.I0(\a_lo[11]_i_1_n_0 ),
        .I1(\write_value[11]_i_1_n_0 ),
        .I2(\a_lo[10]_i_1_n_0 ),
        .I3(register_b[10]),
        .I4(operand_b1),
        .I5(result[10]),
        .O(\result[0]_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_67 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(\write_value[9]_i_1_n_0 ),
        .I2(\a_lo[8]_i_1_n_0 ),
        .I3(register_b[8]),
        .I4(operand_b1),
        .I5(result[8]),
        .O(\result[0]_i_67_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_68 
       (.I0(result[15]),
        .I1(operand_b1),
        .I2(register_b[15]),
        .I3(\a_lo[15]_i_1_n_0 ),
        .I4(\write_value[14]_i_1_n_0 ),
        .I5(\a_lo[14]_i_1_n_0 ),
        .O(\result[0]_i_68_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_69 
       (.I0(result[13]),
        .I1(operand_b1),
        .I2(register_b[13]),
        .I3(\a_lo[13]_i_1_n_0 ),
        .I4(\write_value[12]_i_1_n_0 ),
        .I5(\a_lo[12]_i_1_n_0 ),
        .O(\result[0]_i_69_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[0]_i_7 
       (.I0(\result[2]_i_13_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[4]_i_12_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .I4(\result[0]_i_14_n_0 ),
        .O(\result[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_70 
       (.I0(result[11]),
        .I1(operand_b1),
        .I2(register_b[11]),
        .I3(\a_lo[11]_i_1_n_0 ),
        .I4(\write_value[10]_i_1_n_0 ),
        .I5(\a_lo[10]_i_1_n_0 ),
        .O(\result[0]_i_70_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_71 
       (.I0(result[9]),
        .I1(operand_b1),
        .I2(register_b[9]),
        .I3(\a_lo[9]_i_1_n_0 ),
        .I4(\write_value[8]_i_1_n_0 ),
        .I5(\a_lo[8]_i_1_n_0 ),
        .O(\result[0]_i_71_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_72 
       (.I0(register_a[19]),
        .I1(operand_a1),
        .I2(register_b[19]),
        .I3(operand_b1),
        .I4(result[19]),
        .O(\result[0]_i_72_n_0 ));
  LUT5 #(
    .INIT(32'hA9590000)) 
    \result[0]_i_73 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(register_b[9]),
        .I2(operand_b1),
        .I3(result[9]),
        .I4(\result[0]_i_94_n_0 ),
        .O(\result[0]_i_73_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000A959)) 
    \result[0]_i_74 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(register_b[6]),
        .I2(operand_b1),
        .I3(result[6]),
        .I4(\result[0]_i_95_n_0 ),
        .I5(\result[0]_i_96_n_0 ),
        .O(\result[0]_i_74_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \result[0]_i_75 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[4]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\a_lo[5]_i_1_n_0 ),
        .I5(\write_value[5]_i_1_n_0 ),
        .O(\result[0]_i_75_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \result[0]_i_76 
       (.I0(\a_lo[0]_i_1_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\a_lo[1]_i_1_n_0 ),
        .I3(\write_value[1]_i_1_n_0 ),
        .I4(\a_lo[2]_i_1_n_0 ),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[0]_i_76_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_77 
       (.I0(result[23]),
        .I1(operand_b1),
        .I2(register_b[23]),
        .I3(p_1_in[7]),
        .I4(p_0_in[6]),
        .I5(p_1_in[6]),
        .O(\result[0]_i_77_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_78 
       (.I0(register_a[20]),
        .I1(operand_a1),
        .I2(register_b[20]),
        .I3(operand_b1),
        .I4(result[20]),
        .O(\result[0]_i_78_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_79 
       (.I0(p_0_in[1]),
        .I1(p_1_in[1]),
        .I2(result[16]),
        .I3(operand_b1),
        .I4(register_b[16]),
        .I5(p_1_in[0]),
        .O(\result[0]_i_79_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    \result[0]_i_8 
       (.I0(opcode_2[3]),
        .I1(out1_stb),
        .I2(\result[0]_i_15_n_0 ),
        .I3(\program_counter[15]_i_13_n_0 ),
        .I4(opcode_2[2]),
        .I5(\result[0]_i_16_n_0 ),
        .O(\result[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[0]_i_80 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(register_b[13]),
        .I2(operand_b1),
        .I3(result[13]),
        .O(\result[0]_i_80_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_82 
       (.I0(result[23]),
        .I1(operand_b1),
        .I2(register_b[23]),
        .I3(p_1_in[7]),
        .I4(p_0_in[6]),
        .I5(p_1_in[6]),
        .O(\result[0]_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_83 
       (.I0(result[21]),
        .I1(operand_b1),
        .I2(register_b[21]),
        .I3(p_1_in[5]),
        .I4(p_0_in[4]),
        .I5(p_1_in[4]),
        .O(\result[0]_i_83_n_0 ));
  LUT5 #(
    .INIT(32'h45401015)) 
    \result[0]_i_84 
       (.I0(\result[0]_i_72_n_0 ),
        .I1(result[18]),
        .I2(operand_b1),
        .I3(register_b[18]),
        .I4(p_1_in[2]),
        .O(\result[0]_i_84_n_0 ));
  LUT6 #(
    .INIT(64'h9099900009000999)) 
    \result[0]_i_85 
       (.I0(p_0_in[1]),
        .I1(p_1_in[1]),
        .I2(result[16]),
        .I3(operand_b1),
        .I4(register_b[16]),
        .I5(p_1_in[0]),
        .O(\result[0]_i_85_n_0 ));
  LUT6 #(
    .INIT(64'h222222B2B2B222B2)) 
    \result[0]_i_86 
       (.I0(\a_lo[7]_i_1_n_0 ),
        .I1(\write_value[7]_i_1_n_0 ),
        .I2(\a_lo[6]_i_1_n_0 ),
        .I3(register_b[6]),
        .I4(operand_b1),
        .I5(result[6]),
        .O(\result[0]_i_86_n_0 ));
  LUT6 #(
    .INIT(64'h02A202A2ABFB02A2)) 
    \result[0]_i_87 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(register_b[5]),
        .I2(operand_b1),
        .I3(result[5]),
        .I4(\a_lo[4]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[0]_i_87_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \result[0]_i_88 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[2]),
        .I3(operand_a1),
        .I4(result[2]),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[0]_i_88_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \result[0]_i_89 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(register_a[0]),
        .I3(operand_a1),
        .I4(result[0]),
        .I5(\write_value[0]_i_1_n_0 ),
        .O(\result[0]_i_89_n_0 ));
  LUT5 #(
    .INIT(32'h02FF0200)) 
    \result[0]_i_9 
       (.I0(\result[30]_i_30_n_0 ),
        .I1(\result[0]_i_17_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(opcode_2[0]),
        .I4(data6[0]),
        .O(\result[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h5451454054511015)) 
    \result[0]_i_90 
       (.I0(\result[0]_i_95_n_0 ),
        .I1(result[6]),
        .I2(operand_b1),
        .I3(register_b[6]),
        .I4(operand_a1),
        .I5(register_a[6]),
        .O(\result[0]_i_90_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_91 
       (.I0(result[5]),
        .I1(operand_b1),
        .I2(register_b[5]),
        .I3(\a_lo[5]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(\a_lo[4]_i_1_n_0 ),
        .O(\result[0]_i_91_n_0 ));
  LUT6 #(
    .INIT(64'h9009909090090909)) 
    \result[0]_i_92 
       (.I0(\write_value[3]_i_1_n_0 ),
        .I1(\a_lo[3]_i_1_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(result[2]),
        .I4(operand_a1),
        .I5(register_a[2]),
        .O(\result[0]_i_92_n_0 ));
  LUT6 #(
    .INIT(64'h9A95000000009A95)) 
    \result[0]_i_93 
       (.I0(\write_value[1]_i_1_n_0 ),
        .I1(result[1]),
        .I2(operand_a1),
        .I3(register_a[1]),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\a_lo[0]_i_1_n_0 ),
        .O(\result[0]_i_93_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_94 
       (.I0(result[11]),
        .I1(operand_b1),
        .I2(register_b[11]),
        .I3(\a_lo[11]_i_1_n_0 ),
        .I4(\write_value[10]_i_1_n_0 ),
        .I5(\a_lo[10]_i_1_n_0 ),
        .O(\result[0]_i_94_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_95 
       (.I0(register_a[7]),
        .I1(operand_a1),
        .I2(register_b[7]),
        .I3(operand_b1),
        .I4(result[7]),
        .O(\result[0]_i_95_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[0]_i_96 
       (.I0(register_a[8]),
        .I1(operand_a1),
        .I2(register_b[8]),
        .I3(operand_b1),
        .I4(result[8]),
        .O(\result[0]_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_98 
       (.I0(result[15]),
        .I1(operand_b1),
        .I2(register_b[15]),
        .I3(\a_lo[15]_i_1_n_0 ),
        .I4(\write_value[14]_i_1_n_0 ),
        .I5(\a_lo[14]_i_1_n_0 ),
        .O(\result[0]_i_98_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \result[0]_i_99 
       (.I0(result[13]),
        .I1(operand_b1),
        .I2(register_b[13]),
        .I3(\a_lo[13]_i_1_n_0 ),
        .I4(\write_value[12]_i_1_n_0 ),
        .I5(\a_lo[12]_i_1_n_0 ),
        .O(\result[0]_i_99_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551000)) 
    \result[10]_i_1 
       (.I0(\result[10]_i_2_n_0 ),
        .I1(\result[10]_i_3_n_0 ),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(\result[10]_i_4_n_0 ),
        .I5(\result[10]_i_5_n_0 ),
        .O(\result[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[10]_i_10 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(result0_n_95),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[11]),
        .O(\result[10]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[10]_i_11 
       (.I0(timer_clock_reg[10]),
        .I1(opcode_2[2]),
        .I2(data6[10]),
        .I3(opcode_2[0]),
        .O(\result[10]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[10]_i_12 
       (.I0(\result[10]_i_14_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[12]_i_22_n_0 ),
        .O(\result[10]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h101F0000D0DFFFFF)) 
    \result[10]_i_13 
       (.I0(p_1_in[2]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\result[10]_i_15_n_0 ),
        .I4(\result[30]_i_30_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[10]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \result[10]_i_14 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[7]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[10]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFCFCFA0A0C0C)) 
    \result[10]_i_15 
       (.I0(result[10]),
        .I1(register_a[10]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[26]),
        .I4(operand_a1),
        .I5(register_a[26]),
        .O(\result[10]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAAAAA)) 
    \result[10]_i_2 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[10]_i_6_n_0 ),
        .I2(data2[10]),
        .I3(\result[14]_i_10_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[10]_i_7_n_0 ),
        .O(\result[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \result[10]_i_3 
       (.I0(\result[11]_i_8_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[11]_i_9_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[10]_i_8_n_0 ),
        .O(\result[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[10]_i_4 
       (.I0(\result[10]_i_9_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[10]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[10]_i_5 
       (.I0(load_data[10]),
        .I1(state[2]),
        .I2(quotient[11]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[10]_i_10_n_0 ),
        .O(\result[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0002000300020000)) 
    \result[10]_i_6 
       (.I0(\result_reg[13]_i_15_n_5 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[0]),
        .I5(literal_2[10]),
        .O(\result[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[10]_i_7 
       (.I0(\result[10]_i_11_n_0 ),
        .I1(\result[11]_i_13_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[10]_i_12_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[10]_i_8 
       (.I0(\result[14]_i_13_n_0 ),
        .I1(\result[12]_i_21_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[14]_i_15_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[10]_i_13_n_0 ),
        .O(\result[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[10]_i_9 
       (.I0(\write_value[10]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[10]),
        .I3(opcode_2[1]),
        .I4(\a_lo[10]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[10]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551000)) 
    \result[11]_i_1 
       (.I0(\result[11]_i_2_n_0 ),
        .I1(\result[11]_i_3_n_0 ),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(\result[11]_i_4_n_0 ),
        .I5(\result[11]_i_5_n_0 ),
        .O(\result[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[11]_i_10 
       (.I0(\write_value[11]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[11]),
        .I3(opcode_2[1]),
        .I4(\a_lo[11]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[11]_i_11 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(result0_n_94),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[12]),
        .O(\result[11]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[11]_i_12 
       (.I0(timer_clock_reg[11]),
        .I1(opcode_2[2]),
        .I2(data6[11]),
        .I3(opcode_2[0]),
        .O(\result[11]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[11]_i_13 
       (.I0(\result[11]_i_17_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[13]_i_24_n_0 ),
        .O(\result[11]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h45754575FFFF0000)) 
    \result[11]_i_14 
       (.I0(p_1_in[15]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\result[30]_i_30_n_0 ),
        .I3(p_1_in[3]),
        .I4(\result[11]_i_18_n_0 ),
        .I5(\write_value[3]_i_1_n_0 ),
        .O(\result[11]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \result[11]_i_17 
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\a_lo[0]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[8]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[11]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h00500030FF5FFF3F)) 
    \result[11]_i_18 
       (.I0(p_1_in[11]),
        .I1(\a_lo[11]_i_1_n_0 ),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[22]_i_19_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[11]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[11]_i_19 
       (.I0(result[11]),
        .I1(operand_b1),
        .I2(register_b[11]),
        .I3(operand_a1),
        .I4(register_a[11]),
        .O(\result[11]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAAAAA)) 
    \result[11]_i_2 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[11]_i_6_n_0 ),
        .I2(data2[11]),
        .I3(\result[14]_i_10_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[11]_i_7_n_0 ),
        .O(\result[11]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[11]_i_20 
       (.I0(result[10]),
        .I1(operand_b1),
        .I2(register_b[10]),
        .I3(\a_lo[10]_i_1_n_0 ),
        .O(\result[11]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[11]_i_21 
       (.I0(result[9]),
        .I1(operand_b1),
        .I2(register_b[9]),
        .I3(\a_lo[9]_i_1_n_0 ),
        .O(\result[11]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[11]_i_22 
       (.I0(result[8]),
        .I1(operand_b1),
        .I2(register_b[8]),
        .I3(operand_a1),
        .I4(register_a[8]),
        .O(\result[11]_i_22_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[11]_i_23 
       (.I0(register_a[11]),
        .I1(operand_a1),
        .I2(register_b[11]),
        .I3(operand_b1),
        .I4(result[11]),
        .O(\result[11]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[11]_i_24 
       (.I0(\a_lo[10]_i_1_n_0 ),
        .I1(register_b[10]),
        .I2(operand_b1),
        .I3(result[10]),
        .O(\result[11]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[11]_i_25 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(register_b[9]),
        .I2(operand_b1),
        .I3(result[9]),
        .O(\result[11]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[11]_i_26 
       (.I0(register_a[8]),
        .I1(operand_a1),
        .I2(register_b[8]),
        .I3(operand_b1),
        .I4(result[8]),
        .O(\result[11]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[11]_i_3 
       (.I0(\result[12]_i_11_n_0 ),
        .I1(\result[12]_i_12_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[11]_i_8_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[11]_i_9_n_0 ),
        .O(\result[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[11]_i_4 
       (.I0(\result[11]_i_10_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[11]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[11]_i_5 
       (.I0(load_data[11]),
        .I1(state[2]),
        .I2(quotient[12]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[11]_i_11_n_0 ),
        .O(\result[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0002000300020000)) 
    \result[11]_i_6 
       (.I0(\result_reg[13]_i_15_n_4 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[0]),
        .I5(literal_2[11]),
        .O(\result[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[11]_i_7 
       (.I0(\result[11]_i_12_n_0 ),
        .I1(\result[12]_i_19_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[11]_i_13_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[11]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[11]_i_8 
       (.I0(\result[17]_i_14_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[13]_i_12_n_0 ),
        .O(\result[11]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[11]_i_9 
       (.I0(\result[14]_i_16_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[11]_i_14_n_0 ),
        .O(\result[11]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54555454)) 
    \result[12]_i_1 
       (.I0(\result[12]_i_2_n_0 ),
        .I1(\result[12]_i_3_n_0 ),
        .I2(\result[12]_i_4_n_0 ),
        .I3(\result[12]_i_5_n_0 ),
        .I4(\result[22]_i_4_n_0 ),
        .I5(\result[12]_i_6_n_0 ),
        .O(\result[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[12]_i_10 
       (.I0(data11[12]),
        .I1(opcode_2[0]),
        .I2(result[12]),
        .I3(operand_a1),
        .I4(register_a[12]),
        .O(\result[12]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[12]_i_11 
       (.I0(\result[14]_i_14_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[14]_i_15_n_0 ),
        .O(\result[12]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[12]_i_12 
       (.I0(\result[14]_i_13_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[12]_i_21_n_0 ),
        .O(\result[12]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[12]_i_13 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(result0_n_93),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[13]),
        .O(\result[12]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[12]_i_18 
       (.I0(timer_clock_reg[12]),
        .I1(opcode_2[2]),
        .I2(data6[12]),
        .I3(opcode_2[0]),
        .O(\result[12]_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[12]_i_19 
       (.I0(\result[12]_i_22_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[14]_i_26_n_0 ),
        .O(\result[12]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAAAAA)) 
    \result[12]_i_2 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[12]_i_7_n_0 ),
        .I2(data2[12]),
        .I3(\result[14]_i_10_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[12]_i_9_n_0 ),
        .O(\result[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h101F0000D0DFFFFF)) 
    \result[12]_i_21 
       (.I0(p_1_in[4]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\result[12]_i_27_n_0 ),
        .I4(\result[30]_i_30_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[12]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \result[12]_i_22 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\a_lo[1]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[9]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[12]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[12]_i_23 
       (.I0(result[15]),
        .I1(operand_b1),
        .I2(register_b[15]),
        .I3(\a_lo[15]_i_1_n_0 ),
        .O(\result[12]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[12]_i_24 
       (.I0(result[14]),
        .I1(operand_b1),
        .I2(register_b[14]),
        .I3(\a_lo[14]_i_1_n_0 ),
        .O(\result[12]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[12]_i_25 
       (.I0(result[13]),
        .I1(operand_b1),
        .I2(register_b[13]),
        .I3(\a_lo[13]_i_1_n_0 ),
        .O(\result[12]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[12]_i_26 
       (.I0(result[12]),
        .I1(operand_b1),
        .I2(register_b[12]),
        .I3(operand_a1),
        .I4(register_a[12]),
        .O(\result[12]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFCFCFA0A0C0C)) 
    \result[12]_i_27 
       (.I0(result[12]),
        .I1(register_a[12]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[28]),
        .I4(operand_a1),
        .I5(register_a[28]),
        .O(\result[12]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h3333B3F33333B333)) 
    \result[12]_i_3 
       (.I0(a_lo[12]),
        .I1(opcode_2[4]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[12]_i_10_n_0 ),
        .O(\result[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[12]_i_4 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(\a_lo[12]_i_1_n_0 ),
        .I3(register_b[12]),
        .I4(operand_b1),
        .I5(result[12]),
        .O(\result[12]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[12]_i_5 
       (.I0(\result[13]_i_6_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[12]_i_11_n_0 ),
        .I3(\write_value[1]_i_1_n_0 ),
        .I4(\result[12]_i_12_n_0 ),
        .O(\result[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[12]_i_6 
       (.I0(load_data[12]),
        .I1(state[2]),
        .I2(quotient[13]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[12]_i_13_n_0 ),
        .O(\result[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0002000300020000)) 
    \result[12]_i_7 
       (.I0(\result_reg[13]_i_9_n_7 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[0]),
        .I5(literal_2[12]),
        .O(\result[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[12]_i_9 
       (.I0(\result[12]_i_18_n_0 ),
        .I1(\result[13]_i_14_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[12]_i_19_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFB0B0B000)) 
    \result[13]_i_1 
       (.I0(p_0_in1_in[14]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(\result[13]_i_2_n_0 ),
        .I4(\result[13]_i_3_n_0 ),
        .I5(\result[13]_i_4_n_0 ),
        .O(\result[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \result[13]_i_10 
       (.I0(opcode_2[3]),
        .I1(opcode_2[4]),
        .I2(opcode_2[2]),
        .I3(opcode_2[1]),
        .O(\result[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[13]_i_11 
       (.I0(\write_value[13]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[13]),
        .I3(opcode_2[1]),
        .I4(\a_lo[13]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[13]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h5535FFFF55350000)) 
    \result[13]_i_12 
       (.I0(p_1_in[15]),
        .I1(p_1_in[5]),
        .I2(\result[30]_i_30_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[13]_i_23_n_0 ),
        .O(\result[13]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[13]_i_13 
       (.I0(timer_clock_reg[13]),
        .I1(opcode_2[2]),
        .I2(data6[13]),
        .I3(opcode_2[0]),
        .O(\result[13]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_14 
       (.I0(\result[13]_i_24_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[14]_i_24_n_0 ),
        .O(\result[13]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_16 
       (.I0(result[15]),
        .I1(operand_a1),
        .I2(register_a[15]),
        .O(\result[13]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_17 
       (.I0(result[14]),
        .I1(operand_a1),
        .I2(register_a[14]),
        .O(\result[13]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_18 
       (.I0(result[13]),
        .I1(operand_a1),
        .I2(register_a[13]),
        .O(\result[13]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[13]_i_19 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(literal_2[15]),
        .O(\result[13]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h888AAA8A88888888)) 
    \result[13]_i_2 
       (.I0(opcode_2[4]),
        .I1(\result[13]_i_5_n_0 ),
        .I2(\result[13]_i_6_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[14]_i_6_n_0 ),
        .I5(\result[22]_i_4_n_0 ),
        .O(\result[13]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[13]_i_20 
       (.I0(\a_lo[14]_i_1_n_0 ),
        .I1(literal_2[14]),
        .O(\result[13]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[13]_i_21 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(literal_2[13]),
        .O(\result[13]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[13]_i_22 
       (.I0(register_a[12]),
        .I1(operand_a1),
        .I2(result[12]),
        .I3(literal_2[12]),
        .O(\result[13]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h330F333333553333)) 
    \result[13]_i_23 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(p_1_in[15]),
        .I2(p_1_in[13]),
        .I3(\result[22]_i_19_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[13]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \result[13]_i_24 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\a_lo[2]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[10]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[13]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_25 
       (.I0(result[10]),
        .I1(operand_a1),
        .I2(register_a[10]),
        .O(\result[13]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[13]_i_26 
       (.I0(result[9]),
        .I1(operand_a1),
        .I2(register_a[9]),
        .O(\result[13]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[13]_i_27 
       (.I0(register_a[11]),
        .I1(operand_a1),
        .I2(result[11]),
        .I3(literal_2[11]),
        .O(\result[13]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[13]_i_28 
       (.I0(\a_lo[10]_i_1_n_0 ),
        .I1(literal_2[10]),
        .O(\result[13]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[13]_i_29 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(literal_2[9]),
        .O(\result[13]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFEEEFE)) 
    \result[13]_i_3 
       (.I0(\result[13]_i_7_n_0 ),
        .I1(\result[13]_i_8_n_0 ),
        .I2(literal_2[13]),
        .I3(\result[30]_i_9_n_0 ),
        .I4(\result_reg[13]_i_9_n_6 ),
        .I5(\result[13]_i_10_n_0 ),
        .O(\result[13]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[13]_i_30 
       (.I0(register_a[8]),
        .I1(operand_a1),
        .I2(result[8]),
        .I3(literal_2[8]),
        .O(\result[13]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0A0000CFC0)) 
    \result[13]_i_4 
       (.I0(result0_n_92),
        .I1(load_data[13]),
        .I2(state[2]),
        .I3(quotient[14]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\result[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \result[13]_i_5 
       (.I0(\result[13]_i_11_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[13]),
        .O(\result[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[13]_i_6 
       (.I0(\result[17]_i_13_n_0 ),
        .I1(\result[14]_i_16_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[17]_i_14_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[13]_i_12_n_0 ),
        .O(\result[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[13]_i_7 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[13]_i_13_n_0 ),
        .I2(\result[14]_i_20_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[13]_i_14_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAABAAAAAAAAA)) 
    \result[13]_i_8 
       (.I0(state[3]),
        .I1(opcode_2[4]),
        .I2(data2[13]),
        .I3(opcode_2[2]),
        .I4(opcode_2[3]),
        .I5(opcode_2[1]),
        .O(\result[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFB0B0B000)) 
    \result[14]_i_1 
       (.I0(p_0_in1_in[15]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(\result[14]_i_2_n_0 ),
        .I4(\result[14]_i_3_n_0 ),
        .I5(\result[14]_i_4_n_0 ),
        .O(\result[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \result[14]_i_10 
       (.I0(opcode_2[2]),
        .I1(opcode_2[3]),
        .I2(opcode_2[1]),
        .O(\result[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00F400F500F40000)) 
    \result[14]_i_11 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(\result_reg[13]_i_9_n_5 ),
        .I3(\result[13]_i_10_n_0 ),
        .I4(opcode_2[0]),
        .I5(literal_2[14]),
        .O(\result[14]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[14]_i_12 
       (.I0(\write_value[14]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[14]),
        .I3(opcode_2[1]),
        .I4(\a_lo[14]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[14]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h55555555303F5555)) 
    \result[14]_i_13 
       (.I0(p_1_in[15]),
        .I1(p_1_in[8]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[0]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[14]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h55555555303F5555)) 
    \result[14]_i_14 
       (.I0(p_1_in[15]),
        .I1(p_1_in[10]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[2]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[14]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h5535FFFF55350000)) 
    \result[14]_i_15 
       (.I0(p_1_in[15]),
        .I1(p_1_in[6]),
        .I2(\result[30]_i_30_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[6]_i_13_n_0 ),
        .O(\result[14]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00001D00FFFF1DFF)) 
    \result[14]_i_16 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[7]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[14]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \result[14]_i_17 
       (.I0(opcode_2[3]),
        .I1(opcode_2[4]),
        .O(\result[14]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[14]_i_18 
       (.I0(timer_clock_reg[14]),
        .I1(opcode_2[2]),
        .I2(data6[14]),
        .I3(opcode_2[0]),
        .O(\result[14]_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[14]_i_19 
       (.I0(\result[14]_i_24_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[14]_i_25_n_0 ),
        .O(\result[14]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h888AAA8A88888888)) 
    \result[14]_i_2 
       (.I0(opcode_2[4]),
        .I1(\result[14]_i_5_n_0 ),
        .I2(\result[14]_i_6_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[14]_i_7_n_0 ),
        .I5(\result[22]_i_4_n_0 ),
        .O(\result[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[14]_i_20 
       (.I0(\result[14]_i_26_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[14]_i_27_n_0 ),
        .O(\result[14]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h88888888B8BBB888)) 
    \result[14]_i_24 
       (.I0(\result[14]_i_28_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\a_lo[4]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[12]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[14]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[14]_i_25 
       (.I0(\a_lo[2]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[10]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[17]_i_16_n_0 ),
        .O(\result[14]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h0000000033B800B8)) 
    \result[14]_i_26 
       (.I0(\a_lo[7]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\a_lo[11]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[3]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[14]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[14]_i_27 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[9]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[16]_i_22_n_0 ),
        .O(\result[14]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2FFE200)) 
    \result[14]_i_28 
       (.I0(register_a[0]),
        .I1(operand_a1),
        .I2(result[0]),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[8]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[14]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    \result[14]_i_3 
       (.I0(\result[14]_i_8_n_0 ),
        .I1(state[3]),
        .I2(opcode_2[4]),
        .I3(data2[14]),
        .I4(\result[14]_i_10_n_0 ),
        .I5(\result[14]_i_11_n_0 ),
        .O(\result[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0A0000CFC0)) 
    \result[14]_i_4 
       (.I0(result0_n_91),
        .I1(load_data[14]),
        .I2(state[2]),
        .I3(quotient[15]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\result[14]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \result[14]_i_5 
       (.I0(\result[14]_i_12_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[14]),
        .O(\result[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[14]_i_6 
       (.I0(\result[20]_i_13_n_0 ),
        .I1(\result[14]_i_13_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[14]_i_14_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[14]_i_15_n_0 ),
        .O(\result[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[14]_i_7 
       (.I0(\result[21]_i_15_n_0 ),
        .I1(\result[17]_i_14_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[17]_i_13_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[14]_i_16_n_0 ),
        .O(\result[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[14]_i_8 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[14]_i_18_n_0 ),
        .I2(\result[14]_i_19_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[14]_i_20_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[14]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \result[15]_i_1 
       (.I0(p_0_in1_in[16]),
        .I1(state[3]),
        .I2(\result[15]_i_2_n_0 ),
        .I3(state[0]),
        .I4(\result[15]_i_3_n_0 ),
        .O(\result[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \result[15]_i_10 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[16]_i_20_n_0 ),
        .O(\result[15]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[15]_i_11 
       (.I0(timer_clock_reg[15]),
        .I1(opcode_2[2]),
        .I2(data6[15]),
        .I3(opcode_2[0]),
        .O(\result[15]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00FA000A00FC000C)) 
    \result[15]_i_12 
       (.I0(\result_reg[13]_i_9_n_4 ),
        .I1(literal_2[15]),
        .I2(opcode_2[1]),
        .I3(opcode_2[2]),
        .I4(data2[15]),
        .I5(opcode_2[0]),
        .O(\result[15]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    \result[15]_i_13 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\result[19]_i_23_n_0 ),
        .I2(\result[30]_i_37_n_0 ),
        .I3(\result[30]_i_38_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[15]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[15]_i_15 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(register_b[15]),
        .I2(operand_b1),
        .I3(result[15]),
        .O(\result[15]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[15]_i_16 
       (.I0(\a_lo[14]_i_1_n_0 ),
        .I1(register_b[14]),
        .I2(operand_b1),
        .I3(result[14]),
        .O(\result[15]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[15]_i_17 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(register_b[13]),
        .I2(operand_b1),
        .I3(result[13]),
        .O(\result[15]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[15]_i_18 
       (.I0(register_a[12]),
        .I1(operand_a1),
        .I2(register_b[12]),
        .I3(operand_b1),
        .I4(result[12]),
        .O(\result[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFF40FFFFFF400000)) 
    \result[15]_i_2 
       (.I0(\result[15]_i_4_n_0 ),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(\result[15]_i_5_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[15]_i_6_n_0 ),
        .O(\result[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[15]_i_3 
       (.I0(\result_reg[18]_i_10_n_7 ),
        .I1(state[1]),
        .I2(load_data[15]),
        .I3(state[2]),
        .I4(quotient[16]),
        .O(\result[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[15]_i_4 
       (.I0(\result[18]_i_7_n_0 ),
        .I1(\result[16]_i_8_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[16]_i_7_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[15]_i_7_n_0 ),
        .O(\result[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \result[15]_i_5 
       (.I0(\result[15]_i_8_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[15]),
        .O(\result[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FFFFFF100000)) 
    \result[15]_i_6 
       (.I0(\result[27]_i_10_n_0 ),
        .I1(\result[15]_i_9_n_0 ),
        .I2(\result[15]_i_10_n_0 ),
        .I3(\result[15]_i_11_n_0 ),
        .I4(opcode_2[3]),
        .I5(\result[15]_i_12_n_0 ),
        .O(\result[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFC0CFA0A0C0CF)) 
    \result[15]_i_7 
       (.I0(\result[19]_i_18_n_0 ),
        .I1(\result[19]_i_19_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[15]_i_13_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[19]_i_17_n_0 ),
        .O(\result[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[15]_i_8 
       (.I0(\write_value[15]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[15]),
        .I3(opcode_2[1]),
        .I4(\a_lo[15]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \result[15]_i_9 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[14]_i_19_n_0 ),
        .O(\result[15]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \result[16]_i_1 
       (.I0(p_0_in1_in[17]),
        .I1(state[3]),
        .I2(\result[16]_i_2_n_0 ),
        .I3(state[0]),
        .I4(\result[16]_i_3_n_0 ),
        .O(\result[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE200FFFFE2000000)) 
    \result[16]_i_10 
       (.I0(\result[17]_i_11_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[16]_i_20_n_0 ),
        .I3(\result[30]_i_30_n_0 ),
        .I4(opcode_2[0]),
        .I5(data6[16]),
        .O(\result[16]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00FA000A00FC000C)) 
    \result[16]_i_11 
       (.I0(\result_reg[19]_i_7_n_7 ),
        .I1(literal_2[15]),
        .I2(opcode_2[1]),
        .I3(opcode_2[2]),
        .I4(data2[16]),
        .I5(opcode_2[0]),
        .O(\result[16]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_12 
       (.I0(p_1_in[15]),
        .I1(p_1_in[13]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_13 
       (.I0(p_1_in[15]),
        .I1(p_1_in[5]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h5554555555575555)) 
    \result[16]_i_14 
       (.I0(p_1_in[15]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\result[30]_i_38_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(p_1_in[9]),
        .O(\result[16]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_15 
       (.I0(p_1_in[15]),
        .I1(p_1_in[1]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_16 
       (.I0(p_1_in[15]),
        .I1(p_1_in[12]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_17 
       (.I0(p_1_in[15]),
        .I1(p_1_in[4]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_18 
       (.I0(p_1_in[15]),
        .I1(p_1_in[8]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[16]_i_19 
       (.I0(p_1_in[15]),
        .I1(p_1_in[0]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFF40FFFFFF400000)) 
    \result[16]_i_2 
       (.I0(\result[16]_i_4_n_0 ),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(\result[16]_i_5_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[16]_i_6_n_0 ),
        .O(\result[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[16]_i_20 
       (.I0(\result[16]_i_21_n_0 ),
        .I1(\result[16]_i_22_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[16]_i_23_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[18]_i_23_n_0 ),
        .O(\result[16]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB888B8)) 
    \result[16]_i_21 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[9]),
        .I3(operand_a1),
        .I4(result[9]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB888B8)) 
    \result[16]_i_22 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[13]),
        .I3(operand_a1),
        .I4(result[13]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \result[16]_i_23 
       (.I0(\a_lo[11]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[3]),
        .I3(operand_a1),
        .I4(result[3]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[16]_i_23_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[16]_i_3 
       (.I0(\result_reg[18]_i_10_n_6 ),
        .I1(state[1]),
        .I2(load_data[16]),
        .I3(state[2]),
        .I4(quotient[17]),
        .O(\result[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[16]_i_4 
       (.I0(\result[19]_i_8_n_0 ),
        .I1(\result[16]_i_7_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[18]_i_7_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[16]_i_8_n_0 ),
        .O(\result[16]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0C0A000A)) 
    \result[16]_i_5 
       (.I0(\result[16]_i_9_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[16]),
        .O(\result[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h88B8FFFF88B80000)) 
    \result[16]_i_6 
       (.I0(\result[16]_i_10_n_0 ),
        .I1(opcode_2[2]),
        .I2(timer_clock_reg[16]),
        .I3(opcode_2[0]),
        .I4(opcode_2[3]),
        .I5(\result[16]_i_11_n_0 ),
        .O(\result[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[16]_i_7 
       (.I0(\result[16]_i_12_n_0 ),
        .I1(\result[16]_i_13_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[16]_i_14_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[16]_i_15_n_0 ),
        .O(\result[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[16]_i_8 
       (.I0(\result[16]_i_16_n_0 ),
        .I1(\result[16]_i_17_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[16]_i_18_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[16]_i_19_n_0 ),
        .O(\result[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[16]_i_9 
       (.I0(data11[16]),
        .I1(literal_2[0]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[0]),
        .I5(p_0_in[0]),
        .O(\result[16]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[17]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[17]_i_2_n_0 ),
        .I2(\result[17]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[17]_i_4_n_0 ),
        .I5(\result[17]_i_5_n_0 ),
        .O(\result[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[17]_i_10 
       (.I0(timer_clock_reg[17]),
        .I1(opcode_2[2]),
        .I2(data6[17]),
        .I3(opcode_2[0]),
        .O(\result[17]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[17]_i_11 
       (.I0(\result[17]_i_15_n_0 ),
        .I1(\result[17]_i_16_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[17]_i_17_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[23]_i_17_n_0 ),
        .O(\result[17]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h55554755)) 
    \result[17]_i_12 
       (.I0(p_1_in[15]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[7]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .O(\result[17]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0F440F0F0F770F0F)) 
    \result[17]_i_13 
       (.I0(p_1_in[11]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[15]),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\result[30]_i_30_n_0 ),
        .I5(p_1_in[3]),
        .O(\result[17]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00004700FFFF47FF)) 
    \result[17]_i_14 
       (.I0(p_1_in[9]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[1]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[17]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB888B8)) 
    \result[17]_i_15 
       (.I0(\a_lo[2]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[10]),
        .I3(operand_a1),
        .I4(result[10]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[17]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB888B8)) 
    \result[17]_i_16 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[14]),
        .I3(operand_a1),
        .I4(result[14]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[17]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2FFE200)) 
    \result[17]_i_17 
       (.I0(register_a[4]),
        .I1(operand_a1),
        .I2(result[4]),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\a_lo[12]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[17]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[17]_i_2 
       (.I0(\result[17]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[19]_i_7_n_6 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \result[17]_i_3 
       (.I0(\result[20]_i_7_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[18]_i_7_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[17]_i_7_n_0 ),
        .O(\result[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[17]_i_4 
       (.I0(\result[17]_i_8_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[17]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[17]_i_5 
       (.I0(load_data[17]),
        .I1(state[2]),
        .I2(quotient[18]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[17]_i_9_n_0 ),
        .O(\result[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[17]_i_6 
       (.I0(\result[17]_i_10_n_0 ),
        .I1(\result[18]_i_13_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[17]_i_11_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[17]_i_7 
       (.I0(\result[17]_i_12_n_0 ),
        .I1(\result[17]_i_13_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[21]_i_15_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[17]_i_14_n_0 ),
        .O(\result[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[17]_i_8 
       (.I0(data11[17]),
        .I1(literal_2[1]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[1]),
        .I5(p_0_in[1]),
        .O(\result[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[17]_i_9 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[18]_i_10_n_5 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[18]),
        .O(\result[17]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[18]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[18]_i_2_n_0 ),
        .I2(\result[18]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[18]_i_4_n_0 ),
        .I5(\result[18]_i_5_n_0 ),
        .O(\result[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h11100010)) 
    \result[18]_i_11 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(quotient[19]),
        .I3(state[2]),
        .I4(load_data[18]),
        .O(\result[18]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[18]_i_12 
       (.I0(timer_clock_reg[18]),
        .I1(opcode_2[2]),
        .I2(data6[18]),
        .I3(opcode_2[0]),
        .O(\result[18]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[18]_i_13 
       (.I0(\result[18]_i_22_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[20]_i_14_n_0 ),
        .O(\result[18]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[18]_i_14 
       (.I0(p_1_in[15]),
        .I1(p_1_in[14]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[18]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[18]_i_15 
       (.I0(p_1_in[15]),
        .I1(p_1_in[6]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[18]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[18]_i_16 
       (.I0(p_1_in[15]),
        .I1(p_1_in[10]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[18]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[18]_i_17 
       (.I0(p_1_in[15]),
        .I1(p_1_in[2]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[18]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[18]_i_18 
       (.I0(C[18]),
        .I1(result0_n_87),
        .O(\result[18]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[18]_i_19 
       (.I0(C[17]),
        .I1(result0_n_88),
        .O(\result[18]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[18]_i_2 
       (.I0(\result[18]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[19]_i_7_n_5 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[18]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[18]_i_20 
       (.I0(C[16]),
        .I1(result0_n_89),
        .O(\result[18]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \result[18]_i_22 
       (.I0(\a_lo[11]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[3]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[18]_i_23_n_0 ),
        .O(\result[18]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB888B8)) 
    \result[18]_i_23 
       (.I0(\a_lo[7]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(register_a[15]),
        .I3(operand_a1),
        .I4(result[15]),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[18]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[18]_i_3 
       (.I0(\result[21]_i_8_n_0 ),
        .I1(\result[19]_i_8_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[20]_i_7_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[18]_i_7_n_0 ),
        .O(\result[18]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \result[18]_i_4 
       (.I0(\result[18]_i_8_n_0 ),
        .I1(\result[30]_i_13_n_0 ),
        .I2(a_lo[18]),
        .I3(opcode_2[4]),
        .I4(\result[18]_i_9_n_0 ),
        .O(\result[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF4444444)) 
    \result[18]_i_5 
       (.I0(\result[30]_i_7_n_0 ),
        .I1(\result_reg[18]_i_10_n_4 ),
        .I2(p_0_in1_in[19]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\result[18]_i_11_n_0 ),
        .O(\result[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[18]_i_6 
       (.I0(\result[18]_i_12_n_0 ),
        .I1(\result[19]_i_12_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[18]_i_13_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[18]_i_7 
       (.I0(\result[18]_i_14_n_0 ),
        .I1(\result[18]_i_15_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[18]_i_16_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[18]_i_17_n_0 ),
        .O(\result[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[18]_i_8 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[2]),
        .I3(register_b[18]),
        .I4(operand_b1),
        .I5(result[18]),
        .O(\result[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0202020000020000)) 
    \result[18]_i_9 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(literal_2[2]),
        .I5(data11[18]),
        .O(\result[18]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[19]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[19]_i_2_n_0 ),
        .I2(\result[19]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[19]_i_4_n_0 ),
        .I5(\result[19]_i_5_n_0 ),
        .O(\result[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[19]_i_10 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[24]_i_9_n_7 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[20]),
        .O(\result[19]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[19]_i_11 
       (.I0(timer_clock_reg[19]),
        .I1(opcode_2[2]),
        .I2(data6[19]),
        .I3(opcode_2[0]),
        .O(\result[19]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_12 
       (.I0(\result[19]_i_22_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[21]_i_16_n_0 ),
        .O(\result[19]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_13 
       (.I0(result[19]),
        .I1(operand_a1),
        .I2(register_a[19]),
        .O(\result[19]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_14 
       (.I0(result[18]),
        .I1(operand_a1),
        .I2(register_a[18]),
        .O(\result[19]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_15 
       (.I0(result[17]),
        .I1(operand_a1),
        .I2(register_a[17]),
        .O(\result[19]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \result[19]_i_16 
       (.I0(result[16]),
        .I1(write_enable_reg_n_0),
        .I2(\a_lo[16]_i_2_n_0 ),
        .I3(address_z_3[3]),
        .I4(address_a_2[3]),
        .I5(register_a[16]),
        .O(\result[19]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[19]_i_17 
       (.I0(p_1_in[15]),
        .I1(p_1_in[7]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[19]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555535)) 
    \result[19]_i_18 
       (.I0(p_1_in[15]),
        .I1(p_1_in[11]),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[19]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h5554555555575555)) 
    \result[19]_i_19 
       (.I0(p_1_in[15]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\result[30]_i_38_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(p_1_in[3]),
        .O(\result[19]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[19]_i_2 
       (.I0(\result[19]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[19]_i_7_n_4 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[19]_i_22 
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[12]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[23]_i_17_n_0 ),
        .O(\result[19]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \result[19]_i_23 
       (.I0(\result[19]_i_38_n_0 ),
        .I1(\result[30]_i_52_n_0 ),
        .I2(\write_value[14]_i_1_n_0 ),
        .I3(\write_value[15]_i_1_n_0 ),
        .I4(p_0_in[13]),
        .I5(p_0_in[6]),
        .O(\result[19]_i_23_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_24 
       (.I0(result[19]),
        .I1(operand_a1),
        .I2(register_a[19]),
        .O(\result[19]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_25 
       (.I0(result[18]),
        .I1(operand_a1),
        .I2(register_a[18]),
        .O(\result[19]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_26 
       (.I0(result[17]),
        .I1(operand_a1),
        .I2(register_a[17]),
        .O(\result[19]_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[19]_i_27 
       (.I0(result[19]),
        .I1(operand_b1),
        .I2(register_b[19]),
        .I3(operand_a1),
        .I4(register_a[19]),
        .O(\result[19]_i_27_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[19]_i_28 
       (.I0(result[18]),
        .I1(operand_b1),
        .I2(register_b[18]),
        .I3(operand_a1),
        .I4(register_a[18]),
        .O(\result[19]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[19]_i_29 
       (.I0(result[17]),
        .I1(operand_b1),
        .I2(register_b[17]),
        .I3(operand_a1),
        .I4(register_a[17]),
        .O(\result[19]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[19]_i_3 
       (.I0(\result[22]_i_9_n_0 ),
        .I1(\result[20]_i_7_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[21]_i_8_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[19]_i_8_n_0 ),
        .O(\result[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[19]_i_30 
       (.I0(result[16]),
        .I1(operand_b1),
        .I2(register_b[16]),
        .I3(operand_a1),
        .I4(register_a[16]),
        .O(\result[19]_i_30_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_31 
       (.I0(result[19]),
        .I1(operand_a1),
        .I2(register_a[19]),
        .O(\result[19]_i_31_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_32 
       (.I0(result[18]),
        .I1(operand_a1),
        .I2(register_a[18]),
        .O(\result[19]_i_32_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[19]_i_33 
       (.I0(result[17]),
        .I1(operand_a1),
        .I2(register_a[17]),
        .O(\result[19]_i_33_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[19]_i_34 
       (.I0(register_a[19]),
        .I1(operand_a1),
        .I2(register_b[19]),
        .I3(operand_b1),
        .I4(result[19]),
        .O(\result[19]_i_34_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[19]_i_35 
       (.I0(register_a[18]),
        .I1(operand_a1),
        .I2(register_b[18]),
        .I3(operand_b1),
        .I4(result[18]),
        .O(\result[19]_i_35_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[19]_i_36 
       (.I0(register_a[17]),
        .I1(operand_a1),
        .I2(register_b[17]),
        .I3(operand_b1),
        .I4(result[17]),
        .O(\result[19]_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[19]_i_37 
       (.I0(register_a[16]),
        .I1(operand_a1),
        .I2(register_b[16]),
        .I3(operand_b1),
        .I4(result[16]),
        .O(\result[19]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'h0000000003000355)) 
    \result[19]_i_38 
       (.I0(register_b[26]),
        .I1(result[26]),
        .I2(result[28]),
        .I3(operand_b1),
        .I4(register_b[28]),
        .I5(p_0_in[15]),
        .O(\result[19]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[19]_i_4 
       (.I0(\result[19]_i_9_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[19]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[19]_i_5 
       (.I0(load_data[19]),
        .I1(state[2]),
        .I2(quotient[20]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[19]_i_10_n_0 ),
        .O(\result[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[19]_i_6 
       (.I0(\result[19]_i_11_n_0 ),
        .I1(\result[20]_i_11_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[19]_i_12_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \result[19]_i_8 
       (.I0(p_1_in[15]),
        .I1(\result[19]_i_17_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[19]_i_18_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[19]_i_19_n_0 ),
        .O(\result[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[19]_i_9 
       (.I0(data11[19]),
        .I1(literal_2[3]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[3]),
        .I5(p_0_in[3]),
        .O(\result[19]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h88B8FFFF88B80000)) 
    \result[1]_i_1 
       (.I0(p_0_in1_in[2]),
        .I1(state[3]),
        .I2(\result[1]_i_2_n_0 ),
        .I3(\result[1]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[1]_i_4_n_0 ),
        .O(\result[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    \result[1]_i_10 
       (.I0(\result[5]_i_15_n_0 ),
        .I1(\result[19]_i_23_n_0 ),
        .I2(\result[1]_i_16_n_0 ),
        .I3(\result[1]_i_17_n_0 ),
        .I4(\result[30]_i_38_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF30)) 
    \result[1]_i_11 
       (.I0(\result[9]_i_13_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\result[1]_i_18_n_0 ),
        .I3(p_1_in[15]),
        .I4(\result[30]_i_30_n_0 ),
        .O(\result[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8C808C80CC0C0C00)) 
    \result[1]_i_12 
       (.I0(data11[1]),
        .I1(\result[30]_i_15_n_0 ),
        .I2(opcode_2[0]),
        .I3(\a_lo[1]_i_1_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(opcode_2[1]),
        .O(\result[1]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h00004540)) 
    \result[1]_i_13 
       (.I0(\write_value[4]_i_1_n_0 ),
        .I1(result[1]),
        .I2(operand_a1),
        .I3(register_a[1]),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[1]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00004540)) 
    \result[1]_i_14 
       (.I0(\write_value[4]_i_1_n_0 ),
        .I1(result[0]),
        .I2(operand_a1),
        .I3(register_a[0]),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000B8)) 
    \result[1]_i_15 
       (.I0(\result_reg[0]_i_11_n_6 ),
        .I1(opcode_2[0]),
        .I2(literal_2[1]),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .I5(opcode_2[3]),
        .O(\result[1]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \result[1]_i_16 
       (.I0(p_0_in[14]),
        .I1(result[21]),
        .I2(operand_b1),
        .I3(register_b[21]),
        .I4(\write_value[11]_i_1_n_0 ),
        .I5(\write_value[13]_i_1_n_0 ),
        .O(\result[1]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \result[1]_i_17 
       (.I0(p_0_in[8]),
        .I1(result[25]),
        .I2(operand_b1),
        .I3(register_b[25]),
        .I4(p_0_in[11]),
        .I5(p_0_in[7]),
        .O(\result[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h000C0000000A0000)) 
    \result[1]_i_18 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(p_1_in[1]),
        .I2(\result[30]_i_38_n_0 ),
        .I3(\result[30]_i_37_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[1]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80888000)) 
    \result[1]_i_2 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .I2(\result[2]_i_7_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[1]_i_5_n_0 ),
        .I5(\result[1]_i_6_n_0 ),
        .O(\result[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000055FD)) 
    \result[1]_i_3 
       (.I0(opcode_2[3]),
        .I1(\result[1]_i_7_n_0 ),
        .I2(\result[27]_i_10_n_0 ),
        .I3(\result[1]_i_8_n_0 ),
        .I4(\result[1]_i_9_n_0 ),
        .O(\result[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[1]_i_4 
       (.I0(\output [1]),
        .I1(result0_n_104),
        .I2(state[1]),
        .I3(load_data[1]),
        .I4(state[2]),
        .I5(quotient[2]),
        .O(\result[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[1]_i_5 
       (.I0(\result[7]_i_10_n_0 ),
        .I1(\result[3]_i_11_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[1]_i_10_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[1]_i_11_n_0 ),
        .O(\result[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[1]_i_6 
       (.I0(\result[1]_i_12_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFF1FFFD)) 
    \result[1]_i_7 
       (.I0(\result[1]_i_13_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .I4(\result[1]_i_14_n_0 ),
        .O(\result[1]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[1]_i_8 
       (.I0(timer_clock_reg[1]),
        .I1(opcode_2[2]),
        .I2(data6[1]),
        .I3(opcode_2[0]),
        .O(\result[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAEA)) 
    \result[1]_i_9 
       (.I0(\result[1]_i_15_n_0 ),
        .I1(data2[1]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[4]),
        .O(\result[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[20]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[20]_i_2_n_0 ),
        .I2(\result[20]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[20]_i_4_n_0 ),
        .I5(\result[20]_i_5_n_0 ),
        .O(\result[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[20]_i_10 
       (.I0(timer_clock_reg[20]),
        .I1(opcode_2[2]),
        .I2(data6[20]),
        .I3(opcode_2[0]),
        .O(\result[20]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[20]_i_11 
       (.I0(\result[20]_i_14_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[22]_i_18_n_0 ),
        .O(\result[20]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h55554755)) 
    \result[20]_i_12 
       (.I0(p_1_in[15]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[8]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .O(\result[20]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h55555555303F5555)) 
    \result[20]_i_13 
       (.I0(p_1_in[15]),
        .I1(p_1_in[12]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[4]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[20]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[20]_i_14 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[13]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[24]_i_21_n_0 ),
        .O(\result[20]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[20]_i_2 
       (.I0(\result[20]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[23]_i_6_n_7 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[20]_i_3 
       (.I0(\result[21]_i_7_n_0 ),
        .I1(\result[21]_i_8_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[22]_i_9_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[20]_i_7_n_0 ),
        .O(\result[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[20]_i_4 
       (.I0(\result[20]_i_8_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[20]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF4444444)) 
    \result[20]_i_5 
       (.I0(\result[30]_i_7_n_0 ),
        .I1(\result_reg[24]_i_9_n_6 ),
        .I2(p_0_in1_in[21]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\result[20]_i_9_n_0 ),
        .O(\result[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[20]_i_6 
       (.I0(\result[20]_i_10_n_0 ),
        .I1(\result[21]_i_13_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[20]_i_11_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[20]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[20]_i_7 
       (.I0(\result[20]_i_12_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[20]_i_13_n_0 ),
        .O(\result[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[20]_i_8 
       (.I0(data11[20]),
        .I1(literal_2[4]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[4]),
        .I5(p_0_in[4]),
        .O(\result[20]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h11100010)) 
    \result[20]_i_9 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(quotient[21]),
        .I3(state[2]),
        .I4(load_data[20]),
        .O(\result[20]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[21]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[21]_i_2_n_0 ),
        .I2(\result[21]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[21]_i_4_n_0 ),
        .I5(\result[21]_i_5_n_0 ),
        .O(\result[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0202000202000000)) 
    \result[21]_i_10 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(data11[21]),
        .I5(literal_2[5]),
        .O(\result[21]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h11100010)) 
    \result[21]_i_11 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(quotient[22]),
        .I3(state[2]),
        .I4(load_data[21]),
        .O(\result[21]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[21]_i_12 
       (.I0(timer_clock_reg[21]),
        .I1(opcode_2[2]),
        .I2(data6[21]),
        .I3(opcode_2[0]),
        .O(\result[21]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \result[21]_i_13 
       (.I0(\result[23]_i_17_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_26_n_0 ),
        .I3(\result[21]_i_16_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .O(\result[21]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h32333733)) 
    \result[21]_i_14 
       (.I0(\write_value[3]_i_1_n_0 ),
        .I1(p_1_in[15]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\result[30]_i_30_n_0 ),
        .I4(p_1_in[9]),
        .O(\result[21]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h55555555303F5555)) 
    \result[21]_i_15 
       (.I0(p_1_in[15]),
        .I1(p_1_in[13]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[5]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[21]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[21]_i_16 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[14]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[25]_i_11_n_0 ),
        .O(\result[21]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[21]_i_2 
       (.I0(\result[21]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[23]_i_6_n_6 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[21]_i_3 
       (.I0(\result[22]_i_8_n_0 ),
        .I1(\result[22]_i_9_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[21]_i_7_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[21]_i_8_n_0 ),
        .O(\result[21]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \result[21]_i_4 
       (.I0(\result[21]_i_9_n_0 ),
        .I1(\result[30]_i_13_n_0 ),
        .I2(a_lo[21]),
        .I3(opcode_2[4]),
        .I4(\result[21]_i_10_n_0 ),
        .O(\result[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF4444444)) 
    \result[21]_i_5 
       (.I0(\result[30]_i_7_n_0 ),
        .I1(\result_reg[24]_i_9_n_5 ),
        .I2(p_0_in1_in[22]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\result[21]_i_11_n_0 ),
        .O(\result[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[21]_i_6 
       (.I0(\result[21]_i_12_n_0 ),
        .I1(\result[22]_i_13_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[21]_i_13_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5530553F55555555)) 
    \result[21]_i_7 
       (.I0(p_1_in[15]),
        .I1(p_1_in[11]),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(p_1_in[7]),
        .I5(\result[22]_i_14_n_0 ),
        .O(\result[21]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[21]_i_8 
       (.I0(\result[21]_i_14_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[21]_i_15_n_0 ),
        .O(\result[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[21]_i_9 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[5]),
        .I3(register_b[21]),
        .I4(operand_b1),
        .I5(result[21]),
        .O(\result[21]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11110100)) 
    \result[22]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[22]_i_2_n_0 ),
        .I2(\result[22]_i_3_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[22]_i_5_n_0 ),
        .I5(\result[22]_i_6_n_0 ),
        .O(\result[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[22]_i_10 
       (.I0(data11[22]),
        .I1(literal_2[6]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[6]),
        .I5(p_0_in[6]),
        .O(\result[22]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h11100010)) 
    \result[22]_i_11 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(quotient[23]),
        .I3(state[2]),
        .I4(load_data[22]),
        .O(\result[22]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[22]_i_12 
       (.I0(timer_clock_reg[22]),
        .I1(opcode_2[2]),
        .I2(data6[22]),
        .I3(opcode_2[0]),
        .O(\result[22]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \result[22]_i_13 
       (.I0(\result[24]_i_21_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_22_n_0 ),
        .I3(\result[22]_i_18_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .O(\result[22]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \result[22]_i_14 
       (.I0(\result[30]_i_36_n_0 ),
        .I1(p_0_in[10]),
        .I2(p_0_in[12]),
        .I3(p_0_in[15]),
        .I4(\result[22]_i_19_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[22]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h55554755)) 
    \result[22]_i_15 
       (.I0(p_1_in[15]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[10]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .O(\result[22]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h55555555303F5555)) 
    \result[22]_i_16 
       (.I0(p_1_in[15]),
        .I1(p_1_in[14]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[6]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[22]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \result[22]_i_18 
       (.I0(\a_lo[7]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[15]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[26]_i_12_n_0 ),
        .O(\result[22]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \result[22]_i_19 
       (.I0(\result[22]_i_28_n_0 ),
        .I1(\result[30]_i_53_n_0 ),
        .I2(p_0_in[8]),
        .I3(p_0_in[9]),
        .I4(\result[22]_i_29_n_0 ),
        .I5(\result[1]_i_16_n_0 ),
        .O(\result[22]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[22]_i_2 
       (.I0(\result[22]_i_7_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[23]_i_6_n_5 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[22]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[22]_i_20 
       (.I0(result[23]),
        .I1(operand_a1),
        .I2(register_a[23]),
        .O(\result[22]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[22]_i_21 
       (.I0(result[22]),
        .I1(operand_a1),
        .I2(register_a[22]),
        .O(\result[22]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[22]_i_22 
       (.I0(result[21]),
        .I1(operand_a1),
        .I2(register_a[21]),
        .O(\result[22]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[22]_i_23 
       (.I0(result[20]),
        .I1(operand_a1),
        .I2(register_a[20]),
        .O(\result[22]_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[22]_i_24 
       (.I0(result[23]),
        .I1(operand_b1),
        .I2(register_b[23]),
        .I3(operand_a1),
        .I4(register_a[23]),
        .O(\result[22]_i_24_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[22]_i_25 
       (.I0(result[22]),
        .I1(operand_b1),
        .I2(register_b[22]),
        .I3(operand_a1),
        .I4(register_a[22]),
        .O(\result[22]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[22]_i_26 
       (.I0(result[21]),
        .I1(operand_b1),
        .I2(register_b[21]),
        .I3(operand_a1),
        .I4(register_a[21]),
        .O(\result[22]_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[22]_i_27 
       (.I0(result[20]),
        .I1(operand_b1),
        .I2(register_b[20]),
        .I3(operand_a1),
        .I4(register_a[20]),
        .O(\result[22]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \result[22]_i_28 
       (.I0(\write_value[8]_i_1_n_0 ),
        .I1(result[12]),
        .I2(operand_b1),
        .I3(register_b[12]),
        .I4(\write_value[6]_i_1_n_0 ),
        .I5(\write_value[7]_i_1_n_0 ),
        .O(\result[22]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    \result[22]_i_29 
       (.I0(register_b[23]),
        .I1(result[23]),
        .I2(register_b[27]),
        .I3(operand_b1),
        .I4(result[27]),
        .O(\result[22]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[22]_i_3 
       (.I0(\result[23]_i_7_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[22]_i_8_n_0 ),
        .I3(\write_value[1]_i_1_n_0 ),
        .I4(\result[22]_i_9_n_0 ),
        .O(\result[22]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \result[22]_i_4 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .O(\result[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[22]_i_5 
       (.I0(\result[22]_i_10_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[22]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF4444444)) 
    \result[22]_i_6 
       (.I0(\result[30]_i_7_n_0 ),
        .I1(\result_reg[24]_i_9_n_4 ),
        .I2(p_0_in1_in[23]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\result[22]_i_11_n_0 ),
        .O(\result[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[22]_i_7 
       (.I0(\result[22]_i_12_n_0 ),
        .I1(\result[23]_i_11_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[22]_i_13_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5530553F55555555)) 
    \result[22]_i_8 
       (.I0(p_1_in[15]),
        .I1(p_1_in[12]),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(p_1_in[8]),
        .I5(\result[22]_i_14_n_0 ),
        .O(\result[22]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[22]_i_9 
       (.I0(\result[22]_i_15_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[22]_i_16_n_0 ),
        .O(\result[22]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FF10FFFFFF10)) 
    \result[23]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[23]_i_2_n_0 ),
        .I2(\result[23]_i_3_n_0 ),
        .I3(\result[23]_i_4_n_0 ),
        .I4(\result_reg[24]_i_5_n_7 ),
        .I5(\result[30]_i_7_n_0 ),
        .O(\result[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[23]_i_10 
       (.I0(timer_clock_reg[23]),
        .I1(opcode_2[2]),
        .I2(data6[23]),
        .I3(opcode_2[0]),
        .O(\result[23]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \result[23]_i_11 
       (.I0(\result[25]_i_11_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_24_n_0 ),
        .I3(\result[23]_i_17_n_0 ),
        .I4(\result[27]_i_26_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[23]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[23]_i_12 
       (.I0(result[23]),
        .I1(operand_a1),
        .I2(register_a[23]),
        .O(\result[23]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[23]_i_13 
       (.I0(result[22]),
        .I1(operand_a1),
        .I2(register_a[22]),
        .O(\result[23]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[23]_i_14 
       (.I0(result[21]),
        .I1(operand_a1),
        .I2(register_a[21]),
        .O(\result[23]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[23]_i_15 
       (.I0(result[20]),
        .I1(operand_a1),
        .I2(register_a[20]),
        .O(\result[23]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h0202000202000000)) 
    \result[23]_i_16 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(data11[23]),
        .I5(literal_2[7]),
        .O(\result[23]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[23]_i_17 
       (.I0(\a_lo[8]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[0]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[0]),
        .O(\result[23]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[23]_i_2 
       (.I0(\result[23]_i_5_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[23]_i_6_n_4 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4700)) 
    \result[23]_i_3 
       (.I0(\result[24]_i_7_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[23]_i_7_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[23]_i_8_n_0 ),
        .I5(\result[23]_i_9_n_0 ),
        .O(\result[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \result[23]_i_4 
       (.I0(load_data[23]),
        .I1(state[2]),
        .I2(quotient[24]),
        .I3(\result[30]_i_16_n_0 ),
        .I4(\result[30]_i_17_n_0 ),
        .I5(p_0_in1_in[24]),
        .O(\result[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[23]_i_5 
       (.I0(\result[23]_i_10_n_0 ),
        .I1(\result[24]_i_15_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[23]_i_11_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[23]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[23]_i_7 
       (.I0(\result[25]_i_12_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[21]_i_7_n_0 ),
        .O(\result[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[23]_i_8 
       (.I0(\result[23]_i_16_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[23]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[23]_i_9 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[7]),
        .I3(register_b[23]),
        .I4(operand_b1),
        .I5(result[23]),
        .O(\result[23]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FF10FFFFFF10)) 
    \result[24]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[24]_i_2_n_0 ),
        .I2(\result[24]_i_3_n_0 ),
        .I3(\result[24]_i_4_n_0 ),
        .I4(\result_reg[24]_i_5_n_6 ),
        .I5(\result[30]_i_7_n_0 ),
        .O(\result[24]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_10 
       (.I0(C[26]),
        .I1(result0_n_79),
        .O(\result[24]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_11 
       (.I0(C[25]),
        .I1(result0_n_80),
        .O(\result[24]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_12 
       (.I0(C[24]),
        .I1(result0_n_81),
        .O(\result[24]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_13 
       (.I0(C[23]),
        .I1(result0_n_82),
        .O(\result[24]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[24]_i_14 
       (.I0(timer_clock_reg[24]),
        .I1(opcode_2[2]),
        .I2(data6[24]),
        .I3(opcode_2[0]),
        .O(\result[24]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \result[24]_i_15 
       (.I0(\result[26]_i_12_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_20_n_0 ),
        .I3(\result[24]_i_21_n_0 ),
        .I4(\result[27]_i_22_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[24]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[24]_i_16 
       (.I0(data11[24]),
        .I1(literal_2[8]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[8]),
        .I5(p_0_in[8]),
        .O(\result[24]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_17 
       (.I0(C[22]),
        .I1(result0_n_83),
        .O(\result[24]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_18 
       (.I0(C[21]),
        .I1(result0_n_84),
        .O(\result[24]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_19 
       (.I0(C[20]),
        .I1(result0_n_85),
        .O(\result[24]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[24]_i_2 
       (.I0(\result[24]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[27]_i_6_n_7 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[24]_i_20 
       (.I0(C[19]),
        .I1(result0_n_86),
        .O(\result[24]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[24]_i_21 
       (.I0(\a_lo[9]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[1]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[1]),
        .O(\result[24]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF47000000)) 
    \result[24]_i_3 
       (.I0(\result[25]_i_8_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[24]_i_7_n_0 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[24]_i_8_n_0 ),
        .O(\result[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \result[24]_i_4 
       (.I0(load_data[24]),
        .I1(state[2]),
        .I2(quotient[25]),
        .I3(\result[30]_i_16_n_0 ),
        .I4(\result[30]_i_17_n_0 ),
        .I5(p_0_in1_in[25]),
        .O(\result[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[24]_i_6 
       (.I0(\result[24]_i_14_n_0 ),
        .I1(\result[25]_i_7_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[24]_i_15_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[24]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[24]_i_7 
       (.I0(\result[26]_i_13_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[22]_i_8_n_0 ),
        .O(\result[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[24]_i_8 
       (.I0(\result[24]_i_16_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[24]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54550000)) 
    \result[25]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(opcode_2[4]),
        .I2(\result[25]_i_2_n_0 ),
        .I3(\result[25]_i_3_n_0 ),
        .I4(\result[25]_i_4_n_0 ),
        .I5(\result[25]_i_5_n_0 ),
        .O(\result[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[25]_i_10 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[24]_i_5_n_5 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[26]),
        .O(\result[25]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[25]_i_11 
       (.I0(\a_lo[10]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[2]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[2]),
        .O(\result[25]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00FF04F400FF07F7)) 
    \result[25]_i_12 
       (.I0(p_1_in[13]),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[15]),
        .I4(\result[25]_i_14_n_0 ),
        .I5(p_1_in[9]),
        .O(\result[25]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[25]_i_13 
       (.I0(data11[25]),
        .I1(literal_2[9]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[9]),
        .I5(p_0_in[9]),
        .O(\result[25]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \result[25]_i_14 
       (.I0(\write_value[4]_i_1_n_0 ),
        .I1(\result[22]_i_19_n_0 ),
        .I2(p_0_in[15]),
        .I3(p_0_in[12]),
        .I4(p_0_in[10]),
        .I5(\result[30]_i_36_n_0 ),
        .O(\result[25]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    \result[25]_i_2 
       (.I0(literal_2[15]),
        .I1(opcode_2[0]),
        .I2(\result_reg[27]_i_6_n_6 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[1]),
        .I5(opcode_2[2]),
        .O(\result[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[25]_i_3 
       (.I0(\result[25]_i_6_n_0 ),
        .I1(\result[26]_i_7_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[25]_i_7_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF47000000)) 
    \result[25]_i_4 
       (.I0(\result[26]_i_8_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[25]_i_8_n_0 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[25]_i_9_n_0 ),
        .O(\result[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[25]_i_5 
       (.I0(load_data[25]),
        .I1(state[2]),
        .I2(quotient[26]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[25]_i_10_n_0 ),
        .O(\result[25]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[25]_i_6 
       (.I0(timer_clock_reg[25]),
        .I1(opcode_2[2]),
        .I2(data6[25]),
        .I3(opcode_2[0]),
        .O(\result[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \result[25]_i_7 
       (.I0(\result[25]_i_11_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_24_n_0 ),
        .I3(\result[27]_i_26_n_0 ),
        .I4(\result[27]_i_27_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[25]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[25]_i_8 
       (.I0(\result[27]_i_28_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[25]_i_12_n_0 ),
        .O(\result[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h3333F3BB333333BB)) 
    \result[25]_i_9 
       (.I0(\result[25]_i_13_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[25]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[25]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54550000)) 
    \result[26]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(opcode_2[4]),
        .I2(\result[26]_i_2_n_0 ),
        .I3(\result[26]_i_3_n_0 ),
        .I4(\result[26]_i_4_n_0 ),
        .I5(\result[26]_i_5_n_0 ),
        .O(\result[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[26]_i_10 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[10]),
        .I3(register_b[26]),
        .I4(operand_b1),
        .I5(result[26]),
        .O(\result[26]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[26]_i_11 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[24]_i_5_n_4 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[27]),
        .O(\result[26]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[26]_i_12 
       (.I0(\a_lo[11]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[3]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[3]),
        .O(\result[26]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5530553F55555555)) 
    \result[26]_i_13 
       (.I0(p_1_in[15]),
        .I1(p_1_in[14]),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(p_1_in[10]),
        .I5(\result[22]_i_14_n_0 ),
        .O(\result[26]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0202000202000000)) 
    \result[26]_i_14 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(data11[26]),
        .I5(literal_2[10]),
        .O(\result[26]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    \result[26]_i_2 
       (.I0(literal_2[15]),
        .I1(opcode_2[0]),
        .I2(\result_reg[27]_i_6_n_5 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[1]),
        .I5(opcode_2[2]),
        .O(\result[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[26]_i_3 
       (.I0(\result[26]_i_6_n_0 ),
        .I1(\result[27]_i_9_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[26]_i_7_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4700)) 
    \result[26]_i_4 
       (.I0(\result[27]_i_11_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[26]_i_8_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[26]_i_9_n_0 ),
        .I5(\result[26]_i_10_n_0 ),
        .O(\result[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[26]_i_5 
       (.I0(load_data[26]),
        .I1(state[2]),
        .I2(quotient[27]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[26]_i_11_n_0 ),
        .O(\result[26]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[26]_i_6 
       (.I0(timer_clock_reg[26]),
        .I1(opcode_2[2]),
        .I2(data6[26]),
        .I3(opcode_2[0]),
        .O(\result[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \result[26]_i_7 
       (.I0(\result[26]_i_12_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_20_n_0 ),
        .I3(\result[27]_i_22_n_0 ),
        .I4(\result[27]_i_23_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[26]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[26]_i_8 
       (.I0(\result[28]_i_13_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[26]_i_13_n_0 ),
        .O(\result[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[26]_i_9 
       (.I0(\result[26]_i_14_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[26]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[26]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF54550000)) 
    \result[27]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(opcode_2[4]),
        .I2(\result[27]_i_2_n_0 ),
        .I3(\result[27]_i_3_n_0 ),
        .I4(\result[27]_i_4_n_0 ),
        .I5(\result[27]_i_5_n_0 ),
        .O(\result[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \result[27]_i_10 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\result[30]_i_30_n_0 ),
        .O(\result[27]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_11 
       (.I0(\result[28]_i_8_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[27]_i_28_n_0 ),
        .O(\result[27]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[27]_i_12 
       (.I0(\result[27]_i_29_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[27]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[27]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[27]_i_13 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[11]),
        .I3(register_b[27]),
        .I4(operand_b1),
        .I5(result[27]),
        .O(\result[27]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[27]_i_14 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[30]_i_6_n_7 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[28]),
        .O(\result[27]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_15 
       (.I0(result[27]),
        .I1(operand_a1),
        .I2(register_a[27]),
        .O(\result[27]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_16 
       (.I0(result[26]),
        .I1(operand_a1),
        .I2(register_a[26]),
        .O(\result[27]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_17 
       (.I0(result[25]),
        .I1(operand_a1),
        .I2(register_a[25]),
        .O(\result[27]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_18 
       (.I0(result[24]),
        .I1(operand_a1),
        .I2(register_a[24]),
        .O(\result[27]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    \result[27]_i_2 
       (.I0(literal_2[15]),
        .I1(opcode_2[0]),
        .I2(\result_reg[27]_i_6_n_4 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[1]),
        .I5(opcode_2[2]),
        .O(\result[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[27]_i_20 
       (.I0(\a_lo[15]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[7]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[7]),
        .O(\result[27]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[27]_i_21 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(p_1_in[3]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[11]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[11]),
        .O(\result[27]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[27]_i_22 
       (.I0(\a_lo[13]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[5]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[5]),
        .O(\result[27]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[27]_i_23 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(p_1_in[1]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[9]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[9]),
        .O(\result[27]_i_23_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[27]_i_24 
       (.I0(\a_lo[14]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[6]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[6]),
        .O(\result[27]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[27]_i_25 
       (.I0(\a_lo[2]_i_1_n_0 ),
        .I1(p_1_in[2]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[10]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[10]),
        .O(\result[27]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[27]_i_26 
       (.I0(\a_lo[12]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\a_lo[4]_i_1_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[4]),
        .O(\result[27]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[27]_i_27 
       (.I0(\a_lo[0]_i_1_n_0 ),
        .I1(p_1_in[0]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[8]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[8]),
        .O(\result[27]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h5555555554575555)) 
    \result[27]_i_28 
       (.I0(p_1_in[15]),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[11]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[27]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h0202000202000000)) 
    \result[27]_i_29 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(data11[27]),
        .I5(literal_2[11]),
        .O(\result[27]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[27]_i_3 
       (.I0(\result[27]_i_7_n_0 ),
        .I1(\result[27]_i_8_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[27]_i_9_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[27]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_31 
       (.I0(result[27]),
        .I1(operand_a1),
        .I2(register_a[27]),
        .O(\result[27]_i_31_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_32 
       (.I0(result[26]),
        .I1(operand_a1),
        .I2(register_a[26]),
        .O(\result[27]_i_32_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_33 
       (.I0(result[25]),
        .I1(operand_a1),
        .I2(register_a[25]),
        .O(\result[27]_i_33_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_34 
       (.I0(result[24]),
        .I1(operand_a1),
        .I2(register_a[24]),
        .O(\result[27]_i_34_n_0 ));
  LUT5 #(
    .INIT(32'h124712B8)) 
    \result[27]_i_35 
       (.I0(result[27]),
        .I1(operand_b1),
        .I2(register_b[27]),
        .I3(operand_a1),
        .I4(register_a[27]),
        .O(\result[27]_i_35_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_36 
       (.I0(register_a[26]),
        .I1(operand_a1),
        .I2(register_b[26]),
        .I3(operand_b1),
        .I4(result[26]),
        .O(\result[27]_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_37 
       (.I0(register_a[25]),
        .I1(operand_a1),
        .I2(register_b[25]),
        .I3(operand_b1),
        .I4(result[25]),
        .O(\result[27]_i_37_n_0 ));
  LUT5 #(
    .INIT(32'h124712B8)) 
    \result[27]_i_38 
       (.I0(result[24]),
        .I1(operand_b1),
        .I2(register_b[24]),
        .I3(operand_a1),
        .I4(register_a[24]),
        .O(\result[27]_i_38_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_39 
       (.I0(result[23]),
        .I1(operand_a1),
        .I2(register_a[23]),
        .O(\result[27]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4700)) 
    \result[27]_i_4 
       (.I0(\result[28]_i_7_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[27]_i_11_n_0 ),
        .I3(\result[22]_i_4_n_0 ),
        .I4(\result[27]_i_12_n_0 ),
        .I5(\result[27]_i_13_n_0 ),
        .O(\result[27]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_40 
       (.I0(result[22]),
        .I1(operand_a1),
        .I2(register_a[22]),
        .O(\result[27]_i_40_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_41 
       (.I0(result[21]),
        .I1(operand_a1),
        .I2(register_a[21]),
        .O(\result[27]_i_41_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[27]_i_42 
       (.I0(result[20]),
        .I1(operand_a1),
        .I2(register_a[20]),
        .O(\result[27]_i_42_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_43 
       (.I0(register_a[23]),
        .I1(operand_a1),
        .I2(register_b[23]),
        .I3(operand_b1),
        .I4(result[23]),
        .O(\result[27]_i_43_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_44 
       (.I0(register_a[22]),
        .I1(operand_a1),
        .I2(register_b[22]),
        .I3(operand_b1),
        .I4(result[22]),
        .O(\result[27]_i_44_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_45 
       (.I0(register_a[21]),
        .I1(operand_a1),
        .I2(register_b[21]),
        .I3(operand_b1),
        .I4(result[21]),
        .O(\result[27]_i_45_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[27]_i_46 
       (.I0(register_a[20]),
        .I1(operand_a1),
        .I2(register_b[20]),
        .I3(operand_b1),
        .I4(result[20]),
        .O(\result[27]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[27]_i_5 
       (.I0(load_data[27]),
        .I1(state[2]),
        .I2(quotient[28]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[27]_i_14_n_0 ),
        .O(\result[27]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[27]_i_7 
       (.I0(timer_clock_reg[27]),
        .I1(opcode_2[2]),
        .I2(data6[27]),
        .I3(opcode_2[0]),
        .O(\result[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \result[27]_i_8 
       (.I0(\result[27]_i_20_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_21_n_0 ),
        .I3(\result[27]_i_22_n_0 ),
        .I4(\result[27]_i_23_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \result[27]_i_9 
       (.I0(\result[27]_i_24_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_25_n_0 ),
        .I3(\result[27]_i_26_n_0 ),
        .I4(\result[27]_i_27_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[27]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02020200)) 
    \result[28]_i_1 
       (.I0(state[0]),
        .I1(state[3]),
        .I2(\result[28]_i_2_n_0 ),
        .I3(\result[28]_i_3_n_0 ),
        .I4(\result[28]_i_4_n_0 ),
        .I5(\result[28]_i_5_n_0 ),
        .O(\result[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0202000202000000)) 
    \result[28]_i_10 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(opcode_2[0]),
        .I4(data11[28]),
        .I5(literal_2[12]),
        .O(\result[28]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF40004000400040)) 
    \result[28]_i_11 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\result_reg[30]_i_6_n_6 ),
        .I3(state[0]),
        .I4(state[3]),
        .I5(p_0_in1_in[29]),
        .O(\result[28]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[28]_i_12 
       (.I0(timer_clock_reg[28]),
        .I1(opcode_2[2]),
        .I2(data6[28]),
        .I3(opcode_2[0]),
        .O(\result[28]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5555555554575555)) 
    \result[28]_i_13 
       (.I0(p_1_in[15]),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[12]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[28]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[28]_i_2 
       (.I0(\result[28]_i_6_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[30]_i_10_n_7 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h880C880C000CCC0C)) 
    \result[28]_i_3 
       (.I0(p_1_in[15]),
        .I1(\result[22]_i_4_n_0 ),
        .I2(\result[28]_i_7_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[28]_i_8_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[28]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \result[28]_i_4 
       (.I0(\result[28]_i_9_n_0 ),
        .I1(\result[30]_i_13_n_0 ),
        .I2(a_lo[28]),
        .I3(opcode_2[4]),
        .I4(\result[28]_i_10_n_0 ),
        .O(\result[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000B8)) 
    \result[28]_i_5 
       (.I0(load_data[28]),
        .I1(state[2]),
        .I2(quotient[29]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\result[28]_i_11_n_0 ),
        .O(\result[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[28]_i_6 
       (.I0(\result[28]_i_12_n_0 ),
        .I1(\result[29]_i_10_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[27]_i_8_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[28]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[28]_i_7 
       (.I0(\result[30]_i_29_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[28]_i_13_n_0 ),
        .O(\result[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5555555554575555)) 
    \result[28]_i_8 
       (.I0(p_1_in[15]),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[13]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hC4C4C4404040C440)) 
    \result[28]_i_9 
       (.I0(opcode_2[0]),
        .I1(\result[30]_i_11_n_0 ),
        .I2(p_1_in[12]),
        .I3(register_b[28]),
        .I4(operand_b1),
        .I5(result[28]),
        .O(\result[28]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FF10FFFFFF10)) 
    \result[29]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[29]_i_2_n_0 ),
        .I2(\result[29]_i_3_n_0 ),
        .I3(\result[29]_i_4_n_0 ),
        .I4(\result_reg[30]_i_6_n_5 ),
        .I5(\result[30]_i_7_n_0 ),
        .O(\result[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \result[29]_i_10 
       (.I0(\result[27]_i_24_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_25_n_0 ),
        .I3(\result[27]_i_27_n_0 ),
        .I4(\result[30]_i_33_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[29]_i_2 
       (.I0(\result[29]_i_5_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[30]_i_10_n_6 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAFFFFFFBAFF)) 
    \result[29]_i_3 
       (.I0(\result[29]_i_6_n_0 ),
        .I1(\result[30]_i_13_n_0 ),
        .I2(a_lo[29]),
        .I3(opcode_2[4]),
        .I4(\result[29]_i_7_n_0 ),
        .I5(\result[29]_i_8_n_0 ),
        .O(\result[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \result[29]_i_4 
       (.I0(load_data[29]),
        .I1(state[2]),
        .I2(quotient[30]),
        .I3(\result[30]_i_16_n_0 ),
        .I4(\result[30]_i_17_n_0 ),
        .I5(p_0_in1_in[30]),
        .O(\result[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[29]_i_5 
       (.I0(\result[29]_i_9_n_0 ),
        .I1(\result[30]_i_22_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[29]_i_10_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8800880C88CC880C)) 
    \result[29]_i_6 
       (.I0(p_1_in[15]),
        .I1(\result[22]_i_4_n_0 ),
        .I2(\result[28]_i_8_n_0 ),
        .I3(\write_value[1]_i_1_n_0 ),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\result[30]_i_29_n_0 ),
        .O(\result[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFDDD444D4)) 
    \result[29]_i_7 
       (.I0(opcode_2[0]),
        .I1(p_1_in[13]),
        .I2(register_b[29]),
        .I3(operand_b1),
        .I4(result[29]),
        .I5(opcode_2[1]),
        .O(\result[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF10B0)) 
    \result[29]_i_8 
       (.I0(opcode_2[0]),
        .I1(literal_2[13]),
        .I2(opcode_2[1]),
        .I3(data11[29]),
        .I4(opcode_2[2]),
        .I5(opcode_2[3]),
        .O(\result[29]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[29]_i_9 
       (.I0(timer_clock_reg[29]),
        .I1(opcode_2[2]),
        .I2(data6[29]),
        .I3(opcode_2[0]),
        .O(\result[29]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h88B8FFFF88B80000)) 
    \result[2]_i_1 
       (.I0(p_0_in1_in[3]),
        .I1(state[3]),
        .I2(\result[2]_i_2_n_0 ),
        .I3(\result[2]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[2]_i_4_n_0 ),
        .O(\result[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[2]_i_10 
       (.I0(timer_clock_reg[2]),
        .I1(opcode_2[2]),
        .I2(data6[2]),
        .I3(opcode_2[0]),
        .O(\result[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAEA)) 
    \result[2]_i_11 
       (.I0(\result[2]_i_14_n_0 ),
        .I1(data2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[4]),
        .O(\result[2]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[2]_i_12 
       (.I0(data11[2]),
        .I1(opcode_2[0]),
        .I2(result[2]),
        .I3(operand_a1),
        .I4(register_a[2]),
        .O(\result[2]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h74FF7400)) 
    \result[2]_i_13 
       (.I0(\result[6]_i_13_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\result[5]_i_16_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .I4(\result[2]_i_15_n_0 ),
        .O(\result[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0002000300020000)) 
    \result[2]_i_14 
       (.I0(\result_reg[0]_i_11_n_5 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[0]),
        .I5(literal_2[2]),
        .O(\result[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFCF00C0FFAF00A0)) 
    \result[2]_i_15 
       (.I0(\result[2]_i_16_n_0 ),
        .I1(\result[10]_i_15_n_0 ),
        .I2(\result[19]_i_23_n_0 ),
        .I3(\result[22]_i_19_n_0 ),
        .I4(p_1_in[15]),
        .I5(\write_value[3]_i_1_n_0 ),
        .O(\result[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[2]_i_16 
       (.I0(result[18]),
        .I1(register_a[18]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[2]),
        .I4(operand_a1),
        .I5(register_a[2]),
        .O(\result[2]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEFEFEEEEEEE)) 
    \result[2]_i_2 
       (.I0(\result[2]_i_5_n_0 ),
        .I1(\result[2]_i_6_n_0 ),
        .I2(\result[22]_i_4_n_0 ),
        .I3(\result[3]_i_5_n_0 ),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\result[2]_i_7_n_0 ),
        .O(\result[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000005555FFFD)) 
    \result[2]_i_3 
       (.I0(opcode_2[3]),
        .I1(\result[27]_i_10_n_0 ),
        .I2(\result[2]_i_8_n_0 ),
        .I3(\result[2]_i_9_n_0 ),
        .I4(\result[2]_i_10_n_0 ),
        .I5(\result[2]_i_11_n_0 ),
        .O(\result[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[2]_i_4 
       (.I0(\output [2]),
        .I1(result0_n_103),
        .I2(state[1]),
        .I3(load_data[2]),
        .I4(state[2]),
        .I5(quotient[3]),
        .O(\result[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3333B3F33333B333)) 
    \result[2]_i_5 
       (.I0(a_lo[2]),
        .I1(opcode_2[4]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[2]_i_12_n_0 ),
        .O(\result[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0003000100010000)) 
    \result[2]_i_6 
       (.I0(opcode_2[0]),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(\a_lo[2]_i_1_n_0 ),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    \result[2]_i_7 
       (.I0(\result[6]_i_16_n_0 ),
        .I1(\result[6]_i_15_n_0 ),
        .I2(\write_value[2]_i_1_n_0 ),
        .I3(\result[4]_i_12_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[2]_i_13_n_0 ),
        .O(\result[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \result[2]_i_8 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[1]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[2]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[2]_i_9 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[3]_i_14_n_0 ),
        .O(\result[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FF10FFFFFF10)) 
    \result[30]_i_1 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[30]_i_3_n_0 ),
        .I2(\result[30]_i_4_n_0 ),
        .I3(\result[30]_i_5_n_0 ),
        .I4(\result_reg[30]_i_6_n_4 ),
        .I5(\result[30]_i_7_n_0 ),
        .O(\result[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \result[30]_i_11 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(opcode_2[3]),
        .O(\result[30]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hF000B010F000F000)) 
    \result[30]_i_12 
       (.I0(\write_value[1]_i_1_n_0 ),
        .I1(\result[30]_i_29_n_0 ),
        .I2(\result[22]_i_4_n_0 ),
        .I3(p_1_in[15]),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\result[30]_i_30_n_0 ),
        .O(\result[30]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \result[30]_i_13 
       (.I0(opcode_2[1]),
        .I1(opcode_2[2]),
        .I2(opcode_2[3]),
        .O(\result[30]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[30]_i_14 
       (.I0(data11[30]),
        .I1(literal_2[14]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[14]),
        .I5(p_0_in[14]),
        .O(\result[30]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[30]_i_15 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .O(\result[30]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[30]_i_16 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\result[30]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \result[30]_i_17 
       (.I0(state[0]),
        .I1(state[3]),
        .O(\result[30]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[30]_i_18 
       (.I0(C[30]),
        .I1(result0_n_75),
        .O(\result[30]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[30]_i_19 
       (.I0(C[29]),
        .I1(result0_n_76),
        .O(\result[30]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \result[30]_i_2 
       (.I0(state[3]),
        .I1(state[0]),
        .O(\result[30]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[30]_i_20 
       (.I0(C[28]),
        .I1(result0_n_77),
        .O(\result[30]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[30]_i_21 
       (.I0(C[27]),
        .I1(result0_n_78),
        .O(\result[30]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \result[30]_i_22 
       (.I0(\result[27]_i_20_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[27]_i_21_n_0 ),
        .I3(\result[27]_i_23_n_0 ),
        .I4(\result[30]_i_32_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[30]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFB833B8CCB800)) 
    \result[30]_i_23 
       (.I0(\result[27]_i_27_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[30]_i_33_n_0 ),
        .I3(\write_value[1]_i_1_n_0 ),
        .I4(\result[27]_i_25_n_0 ),
        .I5(\result[30]_i_34_n_0 ),
        .O(\result[30]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \result[30]_i_24 
       (.I0(opcode_2[0]),
        .I1(timer_clock_reg[30]),
        .I2(opcode_2[2]),
        .I3(data6[30]),
        .O(\result[30]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_25 
       (.I0(result[31]),
        .I1(operand_a1),
        .I2(register_a[31]),
        .O(\result[30]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_26 
       (.I0(result[30]),
        .I1(operand_a1),
        .I2(register_a[30]),
        .O(\result[30]_i_26_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_27 
       (.I0(result[29]),
        .I1(operand_a1),
        .I2(register_a[29]),
        .O(\result[30]_i_27_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_28 
       (.I0(result[28]),
        .I1(operand_a1),
        .I2(register_a[28]),
        .O(\result[30]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h5555555554575555)) 
    \result[30]_i_29 
       (.I0(p_1_in[15]),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[14]),
        .I4(\result[30]_i_30_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[30]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002A2AAAA)) 
    \result[30]_i_3 
       (.I0(\result[30]_i_8_n_0 ),
        .I1(literal_2[15]),
        .I2(\result[30]_i_9_n_0 ),
        .I3(\result_reg[30]_i_10_n_5 ),
        .I4(\result[30]_i_11_n_0 ),
        .I5(opcode_2[4]),
        .O(\result[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \result[30]_i_30 
       (.I0(\result[30]_i_36_n_0 ),
        .I1(p_0_in[10]),
        .I2(p_0_in[12]),
        .I3(p_0_in[15]),
        .I4(\result[30]_i_37_n_0 ),
        .I5(\result[30]_i_38_n_0 ),
        .O(\result[30]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[30]_i_32 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(p_1_in[5]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[13]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[13]),
        .O(\result[30]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[30]_i_33 
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(p_1_in[4]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[12]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[12]),
        .O(\result[30]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[30]_i_34 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(p_1_in[6]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[14]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[14]),
        .O(\result[30]_i_34_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \result[30]_i_36 
       (.I0(p_0_in[6]),
        .I1(p_0_in[13]),
        .I2(\write_value[15]_i_1_n_0 ),
        .I3(\write_value[14]_i_1_n_0 ),
        .I4(\result[30]_i_52_n_0 ),
        .O(\result[30]_i_36_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \result[30]_i_37 
       (.I0(\write_value[13]_i_1_n_0 ),
        .I1(\write_value[11]_i_1_n_0 ),
        .I2(p_0_in[5]),
        .I3(p_0_in[14]),
        .I4(\result[1]_i_17_n_0 ),
        .O(\result[30]_i_37_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \result[30]_i_38 
       (.I0(\result[30]_i_53_n_0 ),
        .I1(\write_value[7]_i_1_n_0 ),
        .I2(\write_value[6]_i_1_n_0 ),
        .I3(\write_value[12]_i_1_n_0 ),
        .I4(\write_value[8]_i_1_n_0 ),
        .O(\result[30]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBAFFBAFFBAFF)) 
    \result[30]_i_4 
       (.I0(\result[30]_i_12_n_0 ),
        .I1(\result[30]_i_13_n_0 ),
        .I2(a_lo[30]),
        .I3(opcode_2[4]),
        .I4(\result[30]_i_14_n_0 ),
        .I5(\result[30]_i_15_n_0 ),
        .O(\result[30]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_40 
       (.I0(result[30]),
        .I1(operand_a1),
        .I2(register_a[30]),
        .O(\result[30]_i_40_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_41 
       (.I0(result[28]),
        .I1(operand_a1),
        .I2(register_a[28]),
        .O(\result[30]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \result[30]_i_42 
       (.I0(p_1_in[15]),
        .I1(register_b[31]),
        .I2(operand_b1),
        .I3(result[31]),
        .O(\result[30]_i_42_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[30]_i_43 
       (.I0(result[30]),
        .I1(operand_b1),
        .I2(register_b[30]),
        .I3(operand_a1),
        .I4(register_a[30]),
        .O(\result[30]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \result[30]_i_44 
       (.I0(result[29]),
        .I1(operand_b1),
        .I2(register_b[29]),
        .I3(p_1_in[13]),
        .O(\result[30]_i_44_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[30]_i_45 
       (.I0(result[28]),
        .I1(operand_b1),
        .I2(register_b[28]),
        .I3(operand_a1),
        .I4(register_a[28]),
        .O(\result[30]_i_45_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_46 
       (.I0(result[30]),
        .I1(operand_a1),
        .I2(register_a[30]),
        .O(\result[30]_i_46_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_47 
       (.I0(result[28]),
        .I1(operand_a1),
        .I2(register_a[28]),
        .O(\result[30]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h47B8)) 
    \result[30]_i_48 
       (.I0(result[31]),
        .I1(operand_b1),
        .I2(register_b[31]),
        .I3(p_1_in[15]),
        .O(\result[30]_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[30]_i_49 
       (.I0(register_a[30]),
        .I1(operand_a1),
        .I2(register_b[30]),
        .I3(operand_b1),
        .I4(result[30]),
        .O(\result[30]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \result[30]_i_5 
       (.I0(load_data[30]),
        .I1(state[2]),
        .I2(quotient[31]),
        .I3(\result[30]_i_16_n_0 ),
        .I4(\result[30]_i_17_n_0 ),
        .I5(p_0_in1_in[31]),
        .O(\result[30]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \result[30]_i_50 
       (.I0(p_1_in[13]),
        .I1(register_b[29]),
        .I2(operand_b1),
        .I3(result[29]),
        .O(\result[30]_i_50_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[30]_i_51 
       (.I0(register_a[28]),
        .I1(operand_a1),
        .I2(register_b[28]),
        .I3(operand_b1),
        .I4(result[28]),
        .O(\result[30]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFEFEFE)) 
    \result[30]_i_52 
       (.I0(\write_value[9]_i_1_n_0 ),
        .I1(\write_value[10]_i_1_n_0 ),
        .I2(p_0_in[0]),
        .I3(result[17]),
        .I4(operand_b1),
        .I5(register_b[17]),
        .O(\result[30]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEA)) 
    \result[30]_i_53 
       (.I0(p_0_in[3]),
        .I1(result[20]),
        .I2(operand_b1),
        .I3(register_b[20]),
        .I4(\write_value[5]_i_1_n_0 ),
        .I5(p_0_in[2]),
        .O(\result[30]_i_53_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_54 
       (.I0(result[27]),
        .I1(operand_a1),
        .I2(register_a[27]),
        .O(\result[30]_i_54_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_55 
       (.I0(result[26]),
        .I1(operand_a1),
        .I2(register_a[26]),
        .O(\result[30]_i_55_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_56 
       (.I0(result[25]),
        .I1(operand_a1),
        .I2(register_a[25]),
        .O(\result[30]_i_56_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[30]_i_57 
       (.I0(result[24]),
        .I1(operand_a1),
        .I2(register_a[24]),
        .O(\result[30]_i_57_n_0 ));
  LUT5 #(
    .INIT(32'hEEE1DD2D)) 
    \result[30]_i_58 
       (.I0(register_a[27]),
        .I1(operand_a1),
        .I2(register_b[27]),
        .I3(operand_b1),
        .I4(result[27]),
        .O(\result[30]_i_58_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[30]_i_59 
       (.I0(result[26]),
        .I1(operand_b1),
        .I2(register_b[26]),
        .I3(operand_a1),
        .I4(register_a[26]),
        .O(\result[30]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[30]_i_60 
       (.I0(result[25]),
        .I1(operand_b1),
        .I2(register_b[25]),
        .I3(operand_a1),
        .I4(register_a[25]),
        .O(\result[30]_i_60_n_0 ));
  LUT5 #(
    .INIT(32'hEEE1DD2D)) 
    \result[30]_i_61 
       (.I0(register_a[24]),
        .I1(operand_a1),
        .I2(register_b[24]),
        .I3(operand_b1),
        .I4(result[24]),
        .O(\result[30]_i_61_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \result[30]_i_7 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[1]),
        .O(\result[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFF470000FFFFFFFF)) 
    \result[30]_i_8 
       (.I0(\result[30]_i_22_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[30]_i_23_n_0 ),
        .I3(\result[27]_i_10_n_0 ),
        .I4(\result[30]_i_24_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[30]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \result[30]_i_9 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(opcode_2[0]),
        .O(\result[30]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10001010)) 
    \result[31]_i_1 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(\result[31]_i_3_n_0 ),
        .I4(state[1]),
        .I5(\result[31]_i_4_n_0 ),
        .O(\result[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[31]_i_10 
       (.I0(result0_n_74),
        .I1(C[31]),
        .O(\result[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFA0CFA0CFA0C0)) 
    \result[31]_i_11 
       (.I0(data11[31]),
        .I1(literal_2[15]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(p_1_in[15]),
        .I5(p_0_in[15]),
        .O(\result[31]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h000000E2)) 
    \result[31]_i_12 
       (.I0(literal_2[15]),
        .I1(opcode_2[0]),
        .I2(\result_reg[30]_i_10_n_4 ),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .O(\result[31]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hBABBAAAB)) 
    \result[31]_i_13 
       (.I0(\result[31]_i_14_n_0 ),
        .I1(\result[27]_i_10_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[31]_i_15_n_0 ),
        .I4(\result[30]_i_23_n_0 ),
        .O(\result[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[31]_i_14 
       (.I0(timer_clock_reg[31]),
        .I1(opcode_2[2]),
        .I2(data6[31]),
        .I3(opcode_2[0]),
        .O(\result[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h4747474700CC33FF)) 
    \result[31]_i_15 
       (.I0(\result[27]_i_23_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[30]_i_32_n_0 ),
        .I3(\result[27]_i_21_n_0 ),
        .I4(\result[31]_i_16_n_0 ),
        .I5(\write_value[1]_i_1_n_0 ),
        .O(\result[31]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[31]_i_16 
       (.I0(\a_lo[7]_i_1_n_0 ),
        .I1(p_1_in[7]),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[15]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[31]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \result[31]_i_3 
       (.I0(\s_input_rs232_rx_ack[0]_i_2_n_0 ),
        .I1(out1_stb),
        .I2(input_rs232_rx_ack),
        .O(\result[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h050F080005000800)) 
    \result[31]_i_4 
       (.I0(state[0]),
        .I1(g0_b0_n_0),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[3]),
        .I5(\state[3]_i_4_n_0 ),
        .O(\result[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \result[31]_i_5 
       (.I0(\result_reg[31]_i_7_n_7 ),
        .I1(state[1]),
        .I2(load_data[31]),
        .I3(state[2]),
        .I4(\quotient_reg_n_0_[31] ),
        .O(\result[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[31]_i_6 
       (.I0(\remainder_reg_n_0_[31] ),
        .I1(state[3]),
        .I2(\result[31]_i_8_n_0 ),
        .I3(opcode_2[4]),
        .I4(\result_reg[31]_i_9_n_0 ),
        .O(\result[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF0CAF00A00CA000A)) 
    \result[31]_i_8 
       (.I0(\result[31]_i_11_n_0 ),
        .I1(a_lo[31]),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .I5(p_1_in[15]),
        .O(\result[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h88B8FFFF88B80000)) 
    \result[3]_i_1 
       (.I0(p_0_in1_in[4]),
        .I1(state[3]),
        .I2(\result[3]_i_2_n_0 ),
        .I3(\result[3]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[3]_i_4_n_0 ),
        .O(\result[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAEA)) 
    \result[3]_i_10 
       (.I0(\result[3]_i_15_n_0 ),
        .I1(data2[3]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[4]),
        .O(\result[3]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h77744474)) 
    \result[3]_i_11 
       (.I0(\result[11]_i_18_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(p_1_in[15]),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\result[3]_i_16_n_0 ),
        .O(\result[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8C808C80CC0C0C00)) 
    \result[3]_i_12 
       (.I0(data11[3]),
        .I1(\result[30]_i_15_n_0 ),
        .I2(opcode_2[0]),
        .I3(\a_lo[3]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(opcode_2[1]),
        .O(\result[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \result[3]_i_14 
       (.I0(\a_lo[0]_i_1_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\a_lo[2]_i_1_n_0 ),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[3]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000B8)) 
    \result[3]_i_15 
       (.I0(\result_reg[0]_i_11_n_4 ),
        .I1(opcode_2[0]),
        .I2(literal_2[3]),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .I5(opcode_2[3]),
        .O(\result[3]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[3]_i_16 
       (.I0(result[19]),
        .I1(register_a[19]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[3]),
        .I4(operand_a1),
        .I5(register_a[3]),
        .O(\result[3]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[3]_i_17 
       (.I0(result[3]),
        .I1(operand_a1),
        .I2(register_a[3]),
        .O(\result[3]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[3]_i_18 
       (.I0(\a_lo[3]_i_1_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .O(\result[3]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[3]_i_19 
       (.I0(register_a[2]),
        .I1(operand_a1),
        .I2(result[2]),
        .I3(\write_value[2]_i_1_n_0 ),
        .O(\result[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80888000)) 
    \result[3]_i_2 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .I2(\result[4]_i_5_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[3]_i_5_n_0 ),
        .I5(\result[3]_i_6_n_0 ),
        .O(\result[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[3]_i_20 
       (.I0(register_a[1]),
        .I1(operand_a1),
        .I2(result[1]),
        .I3(\write_value[1]_i_1_n_0 ),
        .O(\result[3]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[3]_i_21 
       (.I0(register_a[0]),
        .I1(operand_a1),
        .I2(result[0]),
        .I3(\write_value[0]_i_1_n_0 ),
        .O(\result[3]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h00000000DDD5DDDD)) 
    \result[3]_i_3 
       (.I0(opcode_2[3]),
        .I1(\result[3]_i_7_n_0 ),
        .I2(\result[27]_i_10_n_0 ),
        .I3(\result[3]_i_8_n_0 ),
        .I4(\result[3]_i_9_n_0 ),
        .I5(\result[3]_i_10_n_0 ),
        .O(\result[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[3]_i_4 
       (.I0(\output [3]),
        .I1(result0_n_102),
        .I2(state[1]),
        .I3(load_data[3]),
        .I4(state[2]),
        .I5(quotient[4]),
        .O(\result[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hDFD0CFCFDFD0C0C0)) 
    \result[3]_i_5 
       (.I0(\result[9]_i_10_n_0 ),
        .I1(\result[5]_i_11_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[7]_i_10_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[3]_i_11_n_0 ),
        .O(\result[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[3]_i_6 
       (.I0(\result[3]_i_12_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[3]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \result[3]_i_7 
       (.I0(opcode_2[0]),
        .I1(timer_clock_reg[3]),
        .I2(opcode_2[2]),
        .I3(data6[3]),
        .O(\result[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[3]_i_8 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[4]_i_14_n_0 ),
        .O(\result[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \result[3]_i_9 
       (.I0(\result[3]_i_14_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .O(\result[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h88B8FFFF88B80000)) 
    \result[4]_i_1 
       (.I0(p_0_in1_in[5]),
        .I1(state[3]),
        .I2(\result[4]_i_2_n_0 ),
        .I3(\result[4]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[4]_i_4_n_0 ),
        .O(\result[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[4]_i_10 
       (.I0(timer_clock_reg[4]),
        .I1(opcode_2[2]),
        .I2(data6[4]),
        .I3(opcode_2[0]),
        .O(\result[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAEA)) 
    \result[4]_i_11 
       (.I0(\result[4]_i_16_n_0 ),
        .I1(data2[4]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[4]),
        .O(\result[4]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \result[4]_i_12 
       (.I0(\result[12]_i_27_n_0 ),
        .I1(\result[30]_i_30_n_0 ),
        .I2(p_1_in[15]),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\result[4]_i_17_n_0 ),
        .O(\result[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0202020000000200)) 
    \result[4]_i_13 
       (.I0(opcode_2[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[2]),
        .I3(\a_lo[4]_i_1_n_0 ),
        .I4(opcode_2[0]),
        .I5(data11[4]),
        .O(\result[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \result[4]_i_14 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[3]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\write_value[2]_i_1_n_0 ),
        .O(\result[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000B8)) 
    \result[4]_i_16 
       (.I0(\result_reg[7]_i_13_n_7 ),
        .I1(opcode_2[0]),
        .I2(literal_2[4]),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .I5(opcode_2[3]),
        .O(\result[4]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAAF0AAAAAACCAAAA)) 
    \result[4]_i_17 
       (.I0(p_1_in[15]),
        .I1(\a_lo[4]_i_1_n_0 ),
        .I2(p_1_in[4]),
        .I3(\result[22]_i_19_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[4]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[4]_i_18 
       (.I0(result[4]),
        .I1(operand_a1),
        .I2(register_a[4]),
        .O(\result[4]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[4]_i_19 
       (.I0(register_a[7]),
        .I1(operand_a1),
        .I2(register_b[7]),
        .I3(operand_b1),
        .I4(result[7]),
        .O(\result[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8A80)) 
    \result[4]_i_2 
       (.I0(\result[22]_i_4_n_0 ),
        .I1(\result[5]_i_6_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[4]_i_5_n_0 ),
        .I4(\result[4]_i_6_n_0 ),
        .I5(\result[4]_i_7_n_0 ),
        .O(\result[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[4]_i_20 
       (.I0(register_a[6]),
        .I1(operand_a1),
        .I2(register_b[6]),
        .I3(operand_b1),
        .I4(result[6]),
        .O(\result[4]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h111E22D2)) 
    \result[4]_i_21 
       (.I0(register_a[5]),
        .I1(operand_a1),
        .I2(register_b[5]),
        .I3(operand_b1),
        .I4(result[5]),
        .O(\result[4]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[4]_i_22 
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(\write_value[4]_i_1_n_0 ),
        .O(\result[4]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h000000005555FFFD)) 
    \result[4]_i_3 
       (.I0(opcode_2[3]),
        .I1(\result[27]_i_10_n_0 ),
        .I2(\result[4]_i_8_n_0 ),
        .I3(\result[4]_i_9_n_0 ),
        .I4(\result[4]_i_10_n_0 ),
        .I5(\result[4]_i_11_n_0 ),
        .O(\result[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[4]_i_4 
       (.I0(\output [4]),
        .I1(result0_n_101),
        .I2(state[1]),
        .I3(load_data[4]),
        .I4(state[2]),
        .I5(quotient[5]),
        .O(\result[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h505FCFCF505FC0C0)) 
    \result[4]_i_5 
       (.I0(\result[10]_i_13_n_0 ),
        .I1(\result[5]_i_12_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[8]_i_17_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[4]_i_12_n_0 ),
        .O(\result[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2000FFFF)) 
    \result[4]_i_6 
       (.I0(opcode_2[1]),
        .I1(opcode_2[2]),
        .I2(opcode_2[3]),
        .I3(a_lo[4]),
        .I4(opcode_2[4]),
        .I5(\result[4]_i_13_n_0 ),
        .O(\result[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0003000100010000)) 
    \result[4]_i_7 
       (.I0(opcode_2[0]),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[3]),
        .I4(\a_lo[4]_i_1_n_0 ),
        .I5(\write_value[4]_i_1_n_0 ),
        .O(\result[4]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \result[4]_i_8 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[4]_i_14_n_0 ),
        .O(\result[4]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[4]_i_9 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(\result[5]_i_14_n_0 ),
        .O(\result[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hBBB0FFFFBBB00000)) 
    \result[5]_i_1 
       (.I0(p_0_in1_in[6]),
        .I1(state[3]),
        .I2(\result[5]_i_2_n_0 ),
        .I3(\result[5]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[5]_i_4_n_0 ),
        .O(\result[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[5]_i_10 
       (.I0(\write_value[5]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[5]),
        .I3(opcode_2[1]),
        .I4(\a_lo[5]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[5]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[5]_i_11 
       (.I0(p_1_in[15]),
        .I1(\result[30]_i_30_n_0 ),
        .I2(\result[5]_i_15_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .O(\result[5]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    \result[5]_i_12 
       (.I0(\result[6]_i_13_n_0 ),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\result[5]_i_16_n_0 ),
        .O(\result[5]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[5]_i_13 
       (.I0(timer_clock_reg[5]),
        .I1(opcode_2[2]),
        .I2(data6[5]),
        .I3(opcode_2[0]),
        .O(\result[5]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \result[5]_i_14 
       (.I0(\write_value[3]_i_1_n_0 ),
        .I1(\a_lo[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[7]_i_15_n_0 ),
        .O(\result[5]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[5]_i_15 
       (.I0(p_1_in[13]),
        .I1(\a_lo[13]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(p_1_in[5]),
        .I4(\write_value[4]_i_1_n_0 ),
        .I5(\a_lo[5]_i_1_n_0 ),
        .O(\result[5]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFB0C08F3FB0008)) 
    \result[5]_i_16 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(\result[19]_i_23_n_0 ),
        .I2(\result[22]_i_19_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[15]),
        .I5(p_1_in[6]),
        .O(\result[5]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8888888A888)) 
    \result[5]_i_2 
       (.I0(opcode_2[4]),
        .I1(\result[5]_i_5_n_0 ),
        .I2(\result[22]_i_4_n_0 ),
        .I3(\result[5]_i_6_n_0 ),
        .I4(\write_value[0]_i_1_n_0 ),
        .I5(\result[5]_i_7_n_0 ),
        .O(\result[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    \result[5]_i_3 
       (.I0(\result[5]_i_8_n_0 ),
        .I1(state[3]),
        .I2(opcode_2[4]),
        .I3(data2[5]),
        .I4(\result[14]_i_10_n_0 ),
        .I5(\result[5]_i_9_n_0 ),
        .O(\result[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[5]_i_4 
       (.I0(\output [5]),
        .I1(result0_n_100),
        .I2(state[1]),
        .I3(load_data[5]),
        .I4(state[2]),
        .I5(quotient[6]),
        .O(\result[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \result[5]_i_5 
       (.I0(\result[5]_i_10_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[5]),
        .O(\result[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5F5FCFCF505FC0C0)) 
    \result[5]_i_6 
       (.I0(\result[11]_i_14_n_0 ),
        .I1(\result[7]_i_10_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[9]_i_10_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[5]_i_11_n_0 ),
        .O(\result[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h505F3F3F505F3030)) 
    \result[5]_i_7 
       (.I0(\result[12]_i_21_n_0 ),
        .I1(\result[8]_i_17_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[10]_i_13_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[5]_i_12_n_0 ),
        .O(\result[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[5]_i_8 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[5]_i_13_n_0 ),
        .I2(\result[6]_i_19_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[5]_i_14_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00F400F500F40000)) 
    \result[5]_i_9 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(\result_reg[7]_i_13_n_6 ),
        .I3(\result[13]_i_10_n_0 ),
        .I4(opcode_2[0]),
        .I5(literal_2[5]),
        .O(\result[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55555100)) 
    \result[6]_i_1 
       (.I0(\result[6]_i_2_n_0 ),
        .I1(\result[6]_i_3_n_0 ),
        .I2(\result[6]_i_4_n_0 ),
        .I3(opcode_2[4]),
        .I4(\result[6]_i_5_n_0 ),
        .I5(\result[6]_i_6_n_0 ),
        .O(\result[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[6]_i_10 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[6]_i_18_n_0 ),
        .I2(\result[7]_i_12_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[6]_i_19_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[6]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00F400F500F40000)) 
    \result[6]_i_11 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(\result_reg[7]_i_13_n_5 ),
        .I3(\result[13]_i_10_n_0 ),
        .I4(opcode_2[0]),
        .I5(literal_2[6]),
        .O(\result[6]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[6]_i_12 
       (.I0(\output [6]),
        .I1(result0_n_99),
        .I2(state[1]),
        .I3(load_data[6]),
        .I4(state[2]),
        .I5(quotient[7]),
        .O(\result[6]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h00470000FF47FFFF)) 
    \result[6]_i_13 
       (.I0(p_1_in[14]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\a_lo[14]_i_1_n_0 ),
        .I3(\result[22]_i_19_n_0 ),
        .I4(\result[19]_i_23_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[6]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h50335F33)) 
    \result[6]_i_14 
       (.I0(p_1_in[6]),
        .I1(p_1_in[15]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\result[30]_i_30_n_0 ),
        .I4(\a_lo[6]_i_1_n_0 ),
        .O(\result[6]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h8C888088)) 
    \result[6]_i_15 
       (.I0(p_1_in[15]),
        .I1(\write_value[3]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\result[30]_i_30_n_0 ),
        .I4(p_1_in[0]),
        .O(\result[6]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2EEE222)) 
    \result[6]_i_16 
       (.I0(p_1_in[15]),
        .I1(\result[30]_i_30_n_0 ),
        .I2(p_1_in[8]),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\a_lo[8]_i_1_n_0 ),
        .I5(\write_value[3]_i_1_n_0 ),
        .O(\result[6]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[6]_i_18 
       (.I0(timer_clock_reg[6]),
        .I1(opcode_2[2]),
        .I2(data6[6]),
        .I3(opcode_2[0]),
        .O(\result[6]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \result[6]_i_19 
       (.I0(\write_value[4]_i_1_n_0 ),
        .I1(\a_lo[3]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\write_value[2]_i_1_n_0 ),
        .I4(\write_value[1]_i_1_n_0 ),
        .I5(\result[8]_i_23_n_0 ),
        .O(\result[6]_i_19_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \result[6]_i_2 
       (.I0(p_0_in1_in[7]),
        .I1(state[3]),
        .I2(state[0]),
        .O(\result[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[6]_i_21 
       (.I0(result[4]),
        .I1(operand_a1),
        .I2(register_a[4]),
        .O(\result[6]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[6]_i_22 
       (.I0(result[7]),
        .I1(operand_b1),
        .I2(register_b[7]),
        .I3(operand_a1),
        .I4(register_a[7]),
        .O(\result[6]_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[6]_i_23 
       (.I0(result[6]),
        .I1(operand_b1),
        .I2(register_b[6]),
        .I3(operand_a1),
        .I4(register_a[6]),
        .O(\result[6]_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEDB8ED47)) 
    \result[6]_i_24 
       (.I0(result[5]),
        .I1(operand_b1),
        .I2(register_b[5]),
        .I3(operand_a1),
        .I4(register_a[5]),
        .O(\result[6]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \result[6]_i_25 
       (.I0(\write_value[4]_i_1_n_0 ),
        .I1(\a_lo[4]_i_1_n_0 ),
        .O(\result[6]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[6]_i_26 
       (.I0(result[3]),
        .I1(operand_a1),
        .I2(register_a[3]),
        .O(\result[6]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \result[6]_i_27 
       (.I0(\write_value[3]_i_1_n_0 ),
        .I1(\a_lo[3]_i_1_n_0 ),
        .O(\result[6]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \result[6]_i_28 
       (.I0(\write_value[2]_i_1_n_0 ),
        .I1(result[2]),
        .I2(operand_a1),
        .I3(register_a[2]),
        .O(\result[6]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \result[6]_i_29 
       (.I0(\write_value[1]_i_1_n_0 ),
        .I1(result[1]),
        .I2(operand_a1),
        .I3(register_a[1]),
        .O(\result[6]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E2FFFFFFFF)) 
    \result[6]_i_3 
       (.I0(\result[6]_i_7_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[6]_i_8_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[7]_i_6_n_0 ),
        .I5(\result[22]_i_4_n_0 ),
        .O(\result[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \result[6]_i_30 
       (.I0(\write_value[0]_i_1_n_0 ),
        .I1(result[0]),
        .I2(operand_a1),
        .I3(register_a[0]),
        .O(\result[6]_i_30_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \result[6]_i_4 
       (.I0(\result[6]_i_9_n_0 ),
        .I1(opcode_2[1]),
        .I2(opcode_2[2]),
        .I3(opcode_2[3]),
        .I4(a_lo[6]),
        .O(\result[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    \result[6]_i_5 
       (.I0(\result[6]_i_10_n_0 ),
        .I1(state[3]),
        .I2(opcode_2[4]),
        .I3(data2[6]),
        .I4(\result[14]_i_10_n_0 ),
        .I5(\result[6]_i_11_n_0 ),
        .O(\result[6]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \result[6]_i_6 
       (.I0(\result[6]_i_12_n_0 ),
        .I1(state[0]),
        .O(\result[6]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \result[6]_i_7 
       (.I0(\result[10]_i_13_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[6]_i_13_n_0 ),
        .I3(\write_value[3]_i_1_n_0 ),
        .I4(\result[6]_i_14_n_0 ),
        .O(\result[6]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h888B)) 
    \result[6]_i_8 
       (.I0(\result[12]_i_21_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\result[6]_i_15_n_0 ),
        .I3(\result[6]_i_16_n_0 ),
        .O(\result[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[6]_i_9 
       (.I0(\write_value[6]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[6]),
        .I3(opcode_2[1]),
        .I4(\a_lo[6]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[6]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hBBB0FFFFBBB00000)) 
    \result[7]_i_1 
       (.I0(p_0_in1_in[8]),
        .I1(state[3]),
        .I2(\result[7]_i_2_n_0 ),
        .I3(\result[7]_i_3_n_0 ),
        .I4(state[0]),
        .I5(\result[7]_i_4_n_0 ),
        .O(\result[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCF00C0AFAFA0A0)) 
    \result[7]_i_10 
       (.I0(\result[7]_i_14_n_0 ),
        .I1(\a_lo[15]_i_1_n_0 ),
        .I2(\result[30]_i_30_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(p_1_in[15]),
        .I5(\write_value[3]_i_1_n_0 ),
        .O(\result[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[7]_i_11 
       (.I0(timer_clock_reg[7]),
        .I1(opcode_2[2]),
        .I2(data6[7]),
        .I3(opcode_2[0]),
        .O(\result[7]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[7]_i_12 
       (.I0(\result[7]_i_15_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[9]_i_14_n_0 ),
        .O(\result[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[7]_i_14 
       (.I0(result[23]),
        .I1(register_a[23]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[7]),
        .I4(operand_a1),
        .I5(register_a[7]),
        .O(\result[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \result[7]_i_15 
       (.I0(\a_lo[0]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[4]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[7]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[7]_i_16 
       (.I0(result[4]),
        .I1(operand_a1),
        .I2(register_a[4]),
        .O(\result[7]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[7]_i_17 
       (.I0(register_a[7]),
        .I1(operand_a1),
        .I2(result[7]),
        .I3(literal_2[7]),
        .O(\result[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[7]_i_18 
       (.I0(register_a[6]),
        .I1(operand_a1),
        .I2(result[6]),
        .I3(literal_2[6]),
        .O(\result[7]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \result[7]_i_19 
       (.I0(register_a[5]),
        .I1(operand_a1),
        .I2(result[5]),
        .I3(literal_2[5]),
        .O(\result[7]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h888AAA8A88888888)) 
    \result[7]_i_2 
       (.I0(opcode_2[4]),
        .I1(\result[7]_i_5_n_0 ),
        .I2(\result[7]_i_6_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[8]_i_8_n_0 ),
        .I5(\result[22]_i_4_n_0 ),
        .O(\result[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \result[7]_i_20 
       (.I0(\a_lo[4]_i_1_n_0 ),
        .I1(literal_2[4]),
        .O(\result[7]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    \result[7]_i_3 
       (.I0(\result[7]_i_7_n_0 ),
        .I1(state[3]),
        .I2(opcode_2[4]),
        .I3(data2[7]),
        .I4(\result[14]_i_10_n_0 ),
        .I5(\result[7]_i_8_n_0 ),
        .O(\result[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[7]_i_4 
       (.I0(\output [7]),
        .I1(result0_n_98),
        .I2(state[1]),
        .I3(load_data[7]),
        .I4(state[2]),
        .I5(quotient[8]),
        .O(\result[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF80E0)) 
    \result[7]_i_5 
       (.I0(\write_value[7]_i_1_n_0 ),
        .I1(\a_lo[7]_i_1_n_0 ),
        .I2(\result[30]_i_11_n_0 ),
        .I3(opcode_2[0]),
        .I4(\result[7]_i_9_n_0 ),
        .O(\result[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0C0C0AFA0CFCF)) 
    \result[7]_i_6 
       (.I0(\result[13]_i_12_n_0 ),
        .I1(\result[9]_i_10_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[11]_i_14_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[7]_i_10_n_0 ),
        .O(\result[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[7]_i_7 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[7]_i_11_n_0 ),
        .I2(\result[8]_i_16_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[7]_i_12_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00F400F500F40000)) 
    \result[7]_i_8 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(\result_reg[7]_i_13_n_4 ),
        .I3(\result[13]_i_10_n_0 ),
        .I4(opcode_2[0]),
        .I5(literal_2[7]),
        .O(\result[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \result[7]_i_9 
       (.I0(\result[30]_i_13_n_0 ),
        .I1(a_lo[7]),
        .I2(data11[7]),
        .I3(opcode_2[0]),
        .I4(\a_lo[7]_i_1_n_0 ),
        .I5(\result[14]_i_10_n_0 ),
        .O(\result[7]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \result[8]_i_1 
       (.I0(\result[8]_i_2_n_0 ),
        .I1(\result[8]_i_3_n_0 ),
        .I2(\result[8]_i_4_n_0 ),
        .I3(result0_n_97),
        .I4(\result[30]_i_7_n_0 ),
        .O(\result[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[8]_i_15 
       (.I0(timer_clock_reg[8]),
        .I1(opcode_2[2]),
        .I2(data6[8]),
        .I3(opcode_2[0]),
        .O(\result[8]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[8]_i_16 
       (.I0(\result[8]_i_23_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[10]_i_14_n_0 ),
        .O(\result[8]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h553500005535FFFF)) 
    \result[8]_i_17 
       (.I0(p_1_in[15]),
        .I1(p_1_in[0]),
        .I2(\result[30]_i_30_n_0 ),
        .I3(\write_value[4]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .I5(\result[8]_i_24_n_0 ),
        .O(\result[8]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hC088C000CCCC0088)) 
    \result[8]_i_18 
       (.I0(\write_value[8]_i_1_n_0 ),
        .I1(\result[30]_i_15_n_0 ),
        .I2(data11[8]),
        .I3(opcode_2[1]),
        .I4(\a_lo[8]_i_1_n_0 ),
        .I5(opcode_2[0]),
        .O(\result[8]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAAAAA)) 
    \result[8]_i_2 
       (.I0(\result[30]_i_2_n_0 ),
        .I1(\result[8]_i_5_n_0 ),
        .I2(data2[8]),
        .I3(\result[14]_i_10_n_0 ),
        .I4(opcode_2[4]),
        .I5(\result[8]_i_7_n_0 ),
        .O(\result[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \result[8]_i_23 
       (.I0(\a_lo[1]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[5]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[8]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFE2FF0000E200)) 
    \result[8]_i_24 
       (.I0(\a_lo[8]_i_1_n_0 ),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(p_1_in[8]),
        .I3(\result[19]_i_23_n_0 ),
        .I4(\result[22]_i_19_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[8]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF47000000)) 
    \result[8]_i_3 
       (.I0(\result[9]_i_6_n_0 ),
        .I1(\write_value[0]_i_1_n_0 ),
        .I2(\result[8]_i_8_n_0 ),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(\result[8]_i_9_n_0 ),
        .O(\result[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \result[8]_i_4 
       (.I0(load_data[8]),
        .I1(state[2]),
        .I2(quotient[9]),
        .I3(\result[30]_i_16_n_0 ),
        .I4(\result[30]_i_17_n_0 ),
        .I5(p_0_in1_in[9]),
        .O(\result[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000B8)) 
    \result[8]_i_5 
       (.I0(\result_reg[13]_i_15_n_7 ),
        .I1(opcode_2[0]),
        .I2(literal_2[8]),
        .I3(opcode_2[2]),
        .I4(opcode_2[1]),
        .I5(opcode_2[3]),
        .O(\result[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55550151FFFFFFFF)) 
    \result[8]_i_7 
       (.I0(\result[8]_i_15_n_0 ),
        .I1(\result[9]_i_12_n_0 ),
        .I2(\write_value[0]_i_1_n_0 ),
        .I3(\result[8]_i_16_n_0 ),
        .I4(\result[27]_i_10_n_0 ),
        .I5(opcode_2[3]),
        .O(\result[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[8]_i_8 
       (.I0(\result[14]_i_15_n_0 ),
        .I1(\result[10]_i_13_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[12]_i_21_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[8]_i_17_n_0 ),
        .O(\result[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBFBBBBBBBBBBB)) 
    \result[8]_i_9 
       (.I0(\result[8]_i_18_n_0 ),
        .I1(opcode_2[4]),
        .I2(a_lo[8]),
        .I3(opcode_2[3]),
        .I4(opcode_2[2]),
        .I5(opcode_2[1]),
        .O(\result[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFB0B0B000)) 
    \result[9]_i_1 
       (.I0(p_0_in1_in[10]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(\result[9]_i_2_n_0 ),
        .I4(\result[9]_i_3_n_0 ),
        .I5(\result[9]_i_4_n_0 ),
        .O(\result[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h101F0000D0DFFFFF)) 
    \result[9]_i_10 
       (.I0(p_1_in[1]),
        .I1(\write_value[4]_i_1_n_0 ),
        .I2(\write_value[3]_i_1_n_0 ),
        .I3(\result[9]_i_13_n_0 ),
        .I4(\result[30]_i_30_n_0 ),
        .I5(p_1_in[15]),
        .O(\result[9]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \result[9]_i_11 
       (.I0(timer_clock_reg[9]),
        .I1(opcode_2[2]),
        .I2(data6[9]),
        .I3(opcode_2[0]),
        .O(\result[9]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \result[9]_i_12 
       (.I0(\result[9]_i_14_n_0 ),
        .I1(\write_value[1]_i_1_n_0 ),
        .I2(\result[11]_i_17_n_0 ),
        .O(\result[9]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFCFCFA0A0C0C)) 
    \result[9]_i_13 
       (.I0(result[9]),
        .I1(register_a[9]),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(result[25]),
        .I4(operand_a1),
        .I5(register_a[25]),
        .O(\result[9]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \result[9]_i_14 
       (.I0(\a_lo[2]_i_1_n_0 ),
        .I1(\write_value[2]_i_1_n_0 ),
        .I2(\write_value[4]_i_1_n_0 ),
        .I3(\a_lo[6]_i_1_n_0 ),
        .I4(\write_value[3]_i_1_n_0 ),
        .O(\result[9]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h888AAA8A88888888)) 
    \result[9]_i_2 
       (.I0(opcode_2[4]),
        .I1(\result[9]_i_5_n_0 ),
        .I2(\result[9]_i_6_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[10]_i_8_n_0 ),
        .I5(\result[22]_i_4_n_0 ),
        .O(\result[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    \result[9]_i_3 
       (.I0(\result[9]_i_7_n_0 ),
        .I1(state[3]),
        .I2(opcode_2[4]),
        .I3(data2[9]),
        .I4(\result[14]_i_10_n_0 ),
        .I5(\result[9]_i_8_n_0 ),
        .O(\result[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0A0000CFC0)) 
    \result[9]_i_4 
       (.I0(result0_n_96),
        .I1(load_data[9]),
        .I2(state[2]),
        .I3(quotient[10]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\result[9]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF80E0)) 
    \result[9]_i_5 
       (.I0(\write_value[9]_i_1_n_0 ),
        .I1(\a_lo[9]_i_1_n_0 ),
        .I2(\result[30]_i_11_n_0 ),
        .I3(opcode_2[0]),
        .I4(\result[9]_i_9_n_0 ),
        .O(\result[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \result[9]_i_6 
       (.I0(\result[14]_i_16_n_0 ),
        .I1(\result[11]_i_14_n_0 ),
        .I2(\write_value[1]_i_1_n_0 ),
        .I3(\result[13]_i_12_n_0 ),
        .I4(\write_value[2]_i_1_n_0 ),
        .I5(\result[9]_i_10_n_0 ),
        .O(\result[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \result[9]_i_7 
       (.I0(\result[14]_i_17_n_0 ),
        .I1(\result[9]_i_11_n_0 ),
        .I2(\result[10]_i_12_n_0 ),
        .I3(\write_value[0]_i_1_n_0 ),
        .I4(\result[9]_i_12_n_0 ),
        .I5(\result[27]_i_10_n_0 ),
        .O(\result[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00F400F500F40000)) 
    \result[9]_i_8 
       (.I0(opcode_2[2]),
        .I1(opcode_2[1]),
        .I2(\result_reg[13]_i_15_n_6 ),
        .I3(\result[13]_i_10_n_0 ),
        .I4(opcode_2[0]),
        .I5(literal_2[9]),
        .O(\result[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \result[9]_i_9 
       (.I0(\result[30]_i_13_n_0 ),
        .I1(a_lo[9]),
        .I2(data11[9]),
        .I3(opcode_2[0]),
        .I4(\a_lo[9]_i_1_n_0 ),
        .I5(\result[14]_i_10_n_0 ),
        .O(\result[9]_i_9_n_0 ));
  FDRE \result_reg[0] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[0]_i_1_n_0 ),
        .Q(result[0]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[0]_i_10 
       (.CI(\result_reg[0]_i_18_n_0 ),
        .CO({data5,\NLW_result_reg[0]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_19_n_0 ,\result[0]_i_20_n_0 ,\result[0]_i_21_n_0 ,\result[0]_i_22_n_0 }),
        .O(\NLW_result_reg[0]_i_10_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_23_n_0 ,\result[0]_i_24_n_0 ,\result[0]_i_25_n_0 ,\result[0]_i_26_n_0 }));
  CARRY4 \result_reg[0]_i_11 
       (.CI(1'b0),
        .CO({\result_reg[0]_i_11_n_0 ,\NLW_result_reg[0]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_27_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 }),
        .O({\result_reg[0]_i_11_n_4 ,\result_reg[0]_i_11_n_5 ,\result_reg[0]_i_11_n_6 ,\result_reg[0]_i_11_n_7 }),
        .S({\result[0]_i_28_n_0 ,\result[0]_i_29_n_0 ,\result[0]_i_30_n_0 ,\result[0]_i_31_n_0 }));
  CARRY4 \result_reg[0]_i_13 
       (.CI(\result_reg[0]_i_32_n_0 ),
        .CO({\NLW_result_reg[0]_i_13_CO_UNCONNECTED [3],data3,\NLW_result_reg[0]_i_13_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_result_reg[0]_i_13_O_UNCONNECTED [3:0]),
        .S({1'b0,\result[0]_i_33_n_0 ,\result[0]_i_34_n_0 ,\result[0]_i_35_n_0 }));
  CARRY4 \result_reg[0]_i_18 
       (.CI(\result_reg[0]_i_40_n_0 ),
        .CO({\result_reg[0]_i_18_n_0 ,\NLW_result_reg[0]_i_18_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_41_n_0 ,\result[0]_i_42_n_0 ,\result[0]_i_43_n_0 ,\result[0]_i_44_n_0 }),
        .O(\NLW_result_reg[0]_i_18_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_45_n_0 ,\result[0]_i_46_n_0 ,\result[0]_i_47_n_0 ,\result[0]_i_48_n_0 }));
  CARRY4 \result_reg[0]_i_32 
       (.CI(\result_reg[0]_i_49_n_0 ),
        .CO({\result_reg[0]_i_32_n_0 ,\NLW_result_reg[0]_i_32_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_result_reg[0]_i_32_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_50_n_0 ,\result[0]_i_51_n_0 ,\result[0]_i_52_n_0 ,\result[0]_i_53_n_0 }));
  CARRY4 \result_reg[0]_i_38 
       (.CI(\result_reg[0]_i_57_n_0 ),
        .CO({data13,\NLW_result_reg[0]_i_38_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_58_n_0 ,\result[0]_i_20_n_0 ,\result[0]_i_21_n_0 ,\result[0]_i_22_n_0 }),
        .O(\NLW_result_reg[0]_i_38_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_59_n_0 ,\result[0]_i_60_n_0 ,\result[0]_i_61_n_0 ,\result[0]_i_62_n_0 }));
  CARRY4 \result_reg[0]_i_40 
       (.CI(\result_reg[0]_i_63_n_0 ),
        .CO({\result_reg[0]_i_40_n_0 ,\NLW_result_reg[0]_i_40_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_64_n_0 ,\result[0]_i_65_n_0 ,\result[0]_i_66_n_0 ,\result[0]_i_67_n_0 }),
        .O(\NLW_result_reg[0]_i_40_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_68_n_0 ,\result[0]_i_69_n_0 ,\result[0]_i_70_n_0 ,\result[0]_i_71_n_0 }));
  CARRY4 \result_reg[0]_i_49 
       (.CI(1'b0),
        .CO({\result_reg[0]_i_49_n_0 ,\NLW_result_reg[0]_i_49_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_result_reg[0]_i_49_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_73_n_0 ,\result[0]_i_74_n_0 ,\result[0]_i_75_n_0 ,\result[0]_i_76_n_0 }));
  CARRY4 \result_reg[0]_i_57 
       (.CI(\result_reg[0]_i_81_n_0 ),
        .CO({\result_reg[0]_i_57_n_0 ,\NLW_result_reg[0]_i_57_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_41_n_0 ,\result[0]_i_42_n_0 ,\result[0]_i_43_n_0 ,\result[0]_i_44_n_0 }),
        .O(\NLW_result_reg[0]_i_57_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_82_n_0 ,\result[0]_i_83_n_0 ,\result[0]_i_84_n_0 ,\result[0]_i_85_n_0 }));
  CARRY4 \result_reg[0]_i_63 
       (.CI(1'b0),
        .CO({\result_reg[0]_i_63_n_0 ,\NLW_result_reg[0]_i_63_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_86_n_0 ,\result[0]_i_87_n_0 ,\result[0]_i_88_n_0 ,\result[0]_i_89_n_0 }),
        .O(\NLW_result_reg[0]_i_63_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_90_n_0 ,\result[0]_i_91_n_0 ,\result[0]_i_92_n_0 ,\result[0]_i_93_n_0 }));
  CARRY4 \result_reg[0]_i_81 
       (.CI(\result_reg[0]_i_97_n_0 ),
        .CO({\result_reg[0]_i_81_n_0 ,\NLW_result_reg[0]_i_81_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[0]_i_64_n_0 ,\result[0]_i_65_n_0 ,\result[0]_i_66_n_0 ,\result[0]_i_67_n_0 }),
        .O(\NLW_result_reg[0]_i_81_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_98_n_0 ,\result[0]_i_99_n_0 ,\result[0]_i_100_n_0 ,\result[0]_i_101_n_0 }));
  CARRY4 \result_reg[0]_i_97 
       (.CI(1'b0),
        .CO({\result_reg[0]_i_97_n_0 ,\NLW_result_reg[0]_i_97_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\result[0]_i_86_n_0 ,\result[0]_i_87_n_0 ,\result[0]_i_88_n_0 ,\result[0]_i_89_n_0 }),
        .O(\NLW_result_reg[0]_i_97_O_UNCONNECTED [3:0]),
        .S({\result[0]_i_102_n_0 ,\result[0]_i_103_n_0 ,\result[0]_i_104_n_0 ,\result[0]_i_105_n_0 }));
  FDRE \result_reg[10] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[10]_i_1_n_0 ),
        .Q(result[10]),
        .R(internal_rst_reg));
  FDRE \result_reg[11] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[11]_i_1_n_0 ),
        .Q(result[11]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[11]_i_15 
       (.CI(\result_reg[6]_i_17_n_0 ),
        .CO({\result_reg[11]_i_15_n_0 ,\NLW_result_reg[11]_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 }),
        .O(data11[11:8]),
        .S({\result[11]_i_19_n_0 ,\result[11]_i_20_n_0 ,\result[11]_i_21_n_0 ,\result[11]_i_22_n_0 }));
  CARRY4 \result_reg[11]_i_16 
       (.CI(\result_reg[4]_i_15_n_0 ),
        .CO({\result_reg[11]_i_16_n_0 ,\NLW_result_reg[11]_i_16_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[11]_i_1_n_0 ,\a_lo[10]_i_1_n_0 ,\a_lo[9]_i_1_n_0 ,\a_lo[8]_i_1_n_0 }),
        .O(data6[11:8]),
        .S({\result[11]_i_23_n_0 ,\result[11]_i_24_n_0 ,\result[11]_i_25_n_0 ,\result[11]_i_26_n_0 }));
  FDRE \result_reg[12] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[12]_i_1_n_0 ),
        .Q(result[12]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[12]_i_20 
       (.CI(\result_reg[11]_i_15_n_0 ),
        .CO({\result_reg[12]_i_20_n_0 ,\NLW_result_reg[12]_i_20_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[15]_i_1_n_0 ,\a_lo[14]_i_1_n_0 ,\a_lo[13]_i_1_n_0 ,\a_lo[12]_i_1_n_0 }),
        .O(data11[15:12]),
        .S({\result[12]_i_23_n_0 ,\result[12]_i_24_n_0 ,\result[12]_i_25_n_0 ,\result[12]_i_26_n_0 }));
  CARRY4 \result_reg[12]_i_8 
       (.CI(\result_reg[8]_i_6_n_0 ),
        .CO({\result_reg[12]_i_8_n_0 ,\NLW_result_reg[12]_i_8_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data2[12:9]),
        .S(program_counter_2[12:9]));
  FDRE \result_reg[13] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[13]_i_1_n_0 ),
        .Q(result[13]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[13]_i_15 
       (.CI(\result_reg[7]_i_13_n_0 ),
        .CO({\result_reg[13]_i_15_n_0 ,\NLW_result_reg[13]_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[11]_i_1_n_0 ,\result[13]_i_25_n_0 ,\result[13]_i_26_n_0 ,\a_lo[8]_i_1_n_0 }),
        .O({\result_reg[13]_i_15_n_4 ,\result_reg[13]_i_15_n_5 ,\result_reg[13]_i_15_n_6 ,\result_reg[13]_i_15_n_7 }),
        .S({\result[13]_i_27_n_0 ,\result[13]_i_28_n_0 ,\result[13]_i_29_n_0 ,\result[13]_i_30_n_0 }));
  CARRY4 \result_reg[13]_i_9 
       (.CI(\result_reg[13]_i_15_n_0 ),
        .CO({\result_reg[13]_i_9_n_0 ,\NLW_result_reg[13]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[13]_i_16_n_0 ,\result[13]_i_17_n_0 ,\result[13]_i_18_n_0 ,\a_lo[12]_i_1_n_0 }),
        .O({\result_reg[13]_i_9_n_4 ,\result_reg[13]_i_9_n_5 ,\result_reg[13]_i_9_n_6 ,\result_reg[13]_i_9_n_7 }),
        .S({\result[13]_i_19_n_0 ,\result[13]_i_20_n_0 ,\result[13]_i_21_n_0 ,\result[13]_i_22_n_0 }));
  FDRE \result_reg[14] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[14]_i_1_n_0 ),
        .Q(result[14]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[14]_i_9 
       (.CI(\result_reg[12]_i_8_n_0 ),
        .CO({data2[16],\NLW_result_reg[14]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_result_reg[14]_i_9_O_UNCONNECTED [3],data2[15:13]}),
        .S({1'b1,program_counter_2[15:13]}));
  FDRE \result_reg[15] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[15]_i_1_n_0 ),
        .Q(result[15]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[15]_i_14 
       (.CI(\result_reg[11]_i_16_n_0 ),
        .CO({\result_reg[15]_i_14_n_0 ,\NLW_result_reg[15]_i_14_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[15]_i_1_n_0 ,\a_lo[14]_i_1_n_0 ,\a_lo[13]_i_1_n_0 ,\a_lo[12]_i_1_n_0 }),
        .O(data6[15:12]),
        .S({\result[15]_i_15_n_0 ,\result[15]_i_16_n_0 ,\result[15]_i_17_n_0 ,\result[15]_i_18_n_0 }));
  FDRE \result_reg[16] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[16]_i_1_n_0 ),
        .Q(result[16]),
        .R(internal_rst_reg));
  FDRE \result_reg[17] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[17]_i_1_n_0 ),
        .Q(result[17]),
        .R(internal_rst_reg));
  FDRE \result_reg[18] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[18]_i_1_n_0 ),
        .Q(result[18]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[18]_i_10 
       (.CI(1'b0),
        .CO({\result_reg[18]_i_10_n_0 ,\NLW_result_reg[18]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({C[18:16],1'b0}),
        .O({\result_reg[18]_i_10_n_4 ,\result_reg[18]_i_10_n_5 ,\result_reg[18]_i_10_n_6 ,\result_reg[18]_i_10_n_7 }),
        .S({\result[18]_i_18_n_0 ,\result[18]_i_19_n_0 ,\result[18]_i_20_n_0 ,result0_n_90}));
  FDRE \result_reg[19] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[19]_i_1_n_0 ),
        .Q(result[19]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[19]_i_20 
       (.CI(\result_reg[12]_i_20_n_0 ),
        .CO({\result_reg[19]_i_20_n_0 ,\NLW_result_reg[19]_i_20_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[19]_i_24_n_0 ,\result[19]_i_25_n_0 ,\result[19]_i_26_n_0 ,p_1_in[0]}),
        .O(data11[19:16]),
        .S({\result[19]_i_27_n_0 ,\result[19]_i_28_n_0 ,\result[19]_i_29_n_0 ,\result[19]_i_30_n_0 }));
  CARRY4 \result_reg[19]_i_21 
       (.CI(\result_reg[15]_i_14_n_0 ),
        .CO({\result_reg[19]_i_21_n_0 ,\NLW_result_reg[19]_i_21_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[19]_i_31_n_0 ,\result[19]_i_32_n_0 ,\result[19]_i_33_n_0 ,p_1_in[0]}),
        .O(data6[19:16]),
        .S({\result[19]_i_34_n_0 ,\result[19]_i_35_n_0 ,\result[19]_i_36_n_0 ,\result[19]_i_37_n_0 }));
  CARRY4 \result_reg[19]_i_7 
       (.CI(\result_reg[13]_i_9_n_0 ),
        .CO({\result_reg[19]_i_7_n_0 ,\NLW_result_reg[19]_i_7_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\result_reg[19]_i_7_n_4 ,\result_reg[19]_i_7_n_5 ,\result_reg[19]_i_7_n_6 ,\result_reg[19]_i_7_n_7 }),
        .S({\result[19]_i_13_n_0 ,\result[19]_i_14_n_0 ,\result[19]_i_15_n_0 ,\result[19]_i_16_n_0 }));
  FDRE \result_reg[1] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[1]_i_1_n_0 ),
        .Q(result[1]),
        .R(internal_rst_reg));
  FDRE \result_reg[20] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[20]_i_1_n_0 ),
        .Q(result[20]),
        .R(internal_rst_reg));
  FDRE \result_reg[21] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[21]_i_1_n_0 ),
        .Q(result[21]),
        .R(internal_rst_reg));
  FDRE \result_reg[22] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[22]_i_1_n_0 ),
        .Q(result[22]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[22]_i_17 
       (.CI(\result_reg[19]_i_20_n_0 ),
        .CO({\result_reg[22]_i_17_n_0 ,\NLW_result_reg[22]_i_17_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[22]_i_20_n_0 ,\result[22]_i_21_n_0 ,\result[22]_i_22_n_0 ,\result[22]_i_23_n_0 }),
        .O(data11[23:20]),
        .S({\result[22]_i_24_n_0 ,\result[22]_i_25_n_0 ,\result[22]_i_26_n_0 ,\result[22]_i_27_n_0 }));
  FDRE \result_reg[23] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[23]_i_1_n_0 ),
        .Q(result[23]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[23]_i_6 
       (.CI(\result_reg[19]_i_7_n_0 ),
        .CO({\result_reg[23]_i_6_n_0 ,\NLW_result_reg[23]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\result_reg[23]_i_6_n_4 ,\result_reg[23]_i_6_n_5 ,\result_reg[23]_i_6_n_6 ,\result_reg[23]_i_6_n_7 }),
        .S({\result[23]_i_12_n_0 ,\result[23]_i_13_n_0 ,\result[23]_i_14_n_0 ,\result[23]_i_15_n_0 }));
  FDRE \result_reg[24] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[24]_i_1_n_0 ),
        .Q(result[24]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[24]_i_5 
       (.CI(\result_reg[24]_i_9_n_0 ),
        .CO({\result_reg[24]_i_5_n_0 ,\NLW_result_reg[24]_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(C[26:23]),
        .O({\result_reg[24]_i_5_n_4 ,\result_reg[24]_i_5_n_5 ,\result_reg[24]_i_5_n_6 ,\result_reg[24]_i_5_n_7 }),
        .S({\result[24]_i_10_n_0 ,\result[24]_i_11_n_0 ,\result[24]_i_12_n_0 ,\result[24]_i_13_n_0 }));
  CARRY4 \result_reg[24]_i_9 
       (.CI(\result_reg[18]_i_10_n_0 ),
        .CO({\result_reg[24]_i_9_n_0 ,\NLW_result_reg[24]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(C[22:19]),
        .O({\result_reg[24]_i_9_n_4 ,\result_reg[24]_i_9_n_5 ,\result_reg[24]_i_9_n_6 ,\result_reg[24]_i_9_n_7 }),
        .S({\result[24]_i_17_n_0 ,\result[24]_i_18_n_0 ,\result[24]_i_19_n_0 ,\result[24]_i_20_n_0 }));
  FDRE \result_reg[25] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[25]_i_1_n_0 ),
        .Q(result[25]),
        .R(internal_rst_reg));
  FDRE \result_reg[26] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[26]_i_1_n_0 ),
        .Q(result[26]),
        .R(internal_rst_reg));
  FDRE \result_reg[27] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[27]_i_1_n_0 ),
        .Q(result[27]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[27]_i_19 
       (.CI(\result_reg[27]_i_30_n_0 ),
        .CO({\result_reg[27]_i_19_n_0 ,\NLW_result_reg[27]_i_19_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[27]_i_31_n_0 ,\result[27]_i_32_n_0 ,\result[27]_i_33_n_0 ,\result[27]_i_34_n_0 }),
        .O(data6[27:24]),
        .S({\result[27]_i_35_n_0 ,\result[27]_i_36_n_0 ,\result[27]_i_37_n_0 ,\result[27]_i_38_n_0 }));
  CARRY4 \result_reg[27]_i_30 
       (.CI(\result_reg[19]_i_21_n_0 ),
        .CO({\result_reg[27]_i_30_n_0 ,\NLW_result_reg[27]_i_30_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[27]_i_39_n_0 ,\result[27]_i_40_n_0 ,\result[27]_i_41_n_0 ,\result[27]_i_42_n_0 }),
        .O(data6[23:20]),
        .S({\result[27]_i_43_n_0 ,\result[27]_i_44_n_0 ,\result[27]_i_45_n_0 ,\result[27]_i_46_n_0 }));
  CARRY4 \result_reg[27]_i_6 
       (.CI(\result_reg[23]_i_6_n_0 ),
        .CO({\result_reg[27]_i_6_n_0 ,\NLW_result_reg[27]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\result_reg[27]_i_6_n_4 ,\result_reg[27]_i_6_n_5 ,\result_reg[27]_i_6_n_6 ,\result_reg[27]_i_6_n_7 }),
        .S({\result[27]_i_15_n_0 ,\result[27]_i_16_n_0 ,\result[27]_i_17_n_0 ,\result[27]_i_18_n_0 }));
  FDRE \result_reg[28] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[28]_i_1_n_0 ),
        .Q(result[28]),
        .R(internal_rst_reg));
  FDRE \result_reg[29] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[29]_i_1_n_0 ),
        .Q(result[29]),
        .R(internal_rst_reg));
  FDRE \result_reg[2] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[2]_i_1_n_0 ),
        .Q(result[2]),
        .R(internal_rst_reg));
  FDRE \result_reg[30] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[30]_i_1_n_0 ),
        .Q(result[30]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[30]_i_10 
       (.CI(\result_reg[27]_i_6_n_0 ),
        .CO(\NLW_result_reg[30]_i_10_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\result_reg[30]_i_10_n_4 ,\result_reg[30]_i_10_n_5 ,\result_reg[30]_i_10_n_6 ,\result_reg[30]_i_10_n_7 }),
        .S({\result[30]_i_25_n_0 ,\result[30]_i_26_n_0 ,\result[30]_i_27_n_0 ,\result[30]_i_28_n_0 }));
  CARRY4 \result_reg[30]_i_31 
       (.CI(\result_reg[30]_i_39_n_0 ),
        .CO(\NLW_result_reg[30]_i_31_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\result[30]_i_40_n_0 ,p_1_in[13],\result[30]_i_41_n_0 }),
        .O(data11[31:28]),
        .S({\result[30]_i_42_n_0 ,\result[30]_i_43_n_0 ,\result[30]_i_44_n_0 ,\result[30]_i_45_n_0 }));
  CARRY4 \result_reg[30]_i_35 
       (.CI(\result_reg[27]_i_19_n_0 ),
        .CO(\NLW_result_reg[30]_i_35_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\result[30]_i_46_n_0 ,p_1_in[13],\result[30]_i_47_n_0 }),
        .O(data6[31:28]),
        .S({\result[30]_i_48_n_0 ,\result[30]_i_49_n_0 ,\result[30]_i_50_n_0 ,\result[30]_i_51_n_0 }));
  CARRY4 \result_reg[30]_i_39 
       (.CI(\result_reg[22]_i_17_n_0 ),
        .CO({\result_reg[30]_i_39_n_0 ,\NLW_result_reg[30]_i_39_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[30]_i_54_n_0 ,\result[30]_i_55_n_0 ,\result[30]_i_56_n_0 ,\result[30]_i_57_n_0 }),
        .O(data11[27:24]),
        .S({\result[30]_i_58_n_0 ,\result[30]_i_59_n_0 ,\result[30]_i_60_n_0 ,\result[30]_i_61_n_0 }));
  CARRY4 \result_reg[30]_i_6 
       (.CI(\result_reg[24]_i_5_n_0 ),
        .CO({\result_reg[30]_i_6_n_0 ,\NLW_result_reg[30]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(C[30:27]),
        .O({\result_reg[30]_i_6_n_4 ,\result_reg[30]_i_6_n_5 ,\result_reg[30]_i_6_n_6 ,\result_reg[30]_i_6_n_7 }),
        .S({\result[30]_i_18_n_0 ,\result[30]_i_19_n_0 ,\result[30]_i_20_n_0 ,\result[30]_i_21_n_0 }));
  FDRE \result_reg[31] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result_reg[31]_i_2_n_0 ),
        .Q(result[31]),
        .R(internal_rst_reg));
  MUXF7 \result_reg[31]_i_2 
       (.I0(\result[31]_i_5_n_0 ),
        .I1(\result[31]_i_6_n_0 ),
        .O(\result_reg[31]_i_2_n_0 ),
        .S(state[0]));
  CARRY4 \result_reg[31]_i_7 
       (.CI(\result_reg[30]_i_6_n_0 ),
        .CO(\NLW_result_reg[31]_i_7_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_result_reg[31]_i_7_O_UNCONNECTED [3:1],\result_reg[31]_i_7_n_7 }),
        .S({1'b0,1'b0,1'b0,\result[31]_i_10_n_0 }));
  MUXF7 \result_reg[31]_i_9 
       (.I0(\result[31]_i_12_n_0 ),
        .I1(\result[31]_i_13_n_0 ),
        .O(\result_reg[31]_i_9_n_0 ),
        .S(opcode_2[3]));
  FDRE \result_reg[3] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[3]_i_1_n_0 ),
        .Q(result[3]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[3]_i_13 
       (.CI(1'b0),
        .CO({\result_reg[3]_i_13_n_0 ,\NLW_result_reg[3]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\result[3]_i_17_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 }),
        .O(data6[3:0]),
        .S({\result[3]_i_18_n_0 ,\result[3]_i_19_n_0 ,\result[3]_i_20_n_0 ,\result[3]_i_21_n_0 }));
  FDRE \result_reg[4] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[4]_i_1_n_0 ),
        .Q(result[4]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[4]_i_15 
       (.CI(\result_reg[3]_i_13_n_0 ),
        .CO({\result_reg[4]_i_15_n_0 ,\NLW_result_reg[4]_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\result[4]_i_18_n_0 }),
        .O(data6[7:4]),
        .S({\result[4]_i_19_n_0 ,\result[4]_i_20_n_0 ,\result[4]_i_21_n_0 ,\result[4]_i_22_n_0 }));
  FDRE \result_reg[5] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[5]_i_1_n_0 ),
        .Q(result[5]),
        .R(internal_rst_reg));
  FDRE \result_reg[6] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[6]_i_1_n_0 ),
        .Q(result[6]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[6]_i_17 
       (.CI(\result_reg[6]_i_20_n_0 ),
        .CO({\result_reg[6]_i_17_n_0 ,\NLW_result_reg[6]_i_17_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\result[6]_i_21_n_0 }),
        .O(data11[7:4]),
        .S({\result[6]_i_22_n_0 ,\result[6]_i_23_n_0 ,\result[6]_i_24_n_0 ,\result[6]_i_25_n_0 }));
  CARRY4 \result_reg[6]_i_20 
       (.CI(1'b0),
        .CO({\result_reg[6]_i_20_n_0 ,\NLW_result_reg[6]_i_20_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\result[6]_i_26_n_0 ,\a_lo[2]_i_1_n_0 ,\a_lo[1]_i_1_n_0 ,\a_lo[0]_i_1_n_0 }),
        .O(data11[3:0]),
        .S({\result[6]_i_27_n_0 ,\result[6]_i_28_n_0 ,\result[6]_i_29_n_0 ,\result[6]_i_30_n_0 }));
  FDRE \result_reg[7] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[7]_i_1_n_0 ),
        .Q(result[7]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[7]_i_13 
       (.CI(\result_reg[0]_i_11_n_0 ),
        .CO({\result_reg[7]_i_13_n_0 ,\NLW_result_reg[7]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\a_lo[7]_i_1_n_0 ,\a_lo[6]_i_1_n_0 ,\a_lo[5]_i_1_n_0 ,\result[7]_i_16_n_0 }),
        .O({\result_reg[7]_i_13_n_4 ,\result_reg[7]_i_13_n_5 ,\result_reg[7]_i_13_n_6 ,\result_reg[7]_i_13_n_7 }),
        .S({\result[7]_i_17_n_0 ,\result[7]_i_18_n_0 ,\result[7]_i_19_n_0 ,\result[7]_i_20_n_0 }));
  FDRE \result_reg[8] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[8]_i_1_n_0 ),
        .Q(result[8]),
        .R(internal_rst_reg));
  CARRY4 \result_reg[8]_i_10 
       (.CI(1'b0),
        .CO({\result_reg[8]_i_10_n_0 ,\NLW_result_reg[8]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(program_counter_2[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data2[4:1]),
        .S(program_counter_2[4:1]));
  CARRY4 \result_reg[8]_i_6 
       (.CI(\result_reg[8]_i_10_n_0 ),
        .CO({\result_reg[8]_i_6_n_0 ,\NLW_result_reg[8]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data2[8:5]),
        .S(program_counter_2[8:5]));
  FDRE \result_reg[9] 
       (.C(clk),
        .CE(\result[31]_i_1_n_0 ),
        .D(\result[9]_i_1_n_0 ),
        .Q(result[9]),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFFFF7FFF0000C000)) 
    \s_input_rs232_rx_ack[0]_i_1 
       (.I0(out1_stb),
        .I1(\s_input_rs232_rx_ack[0]_i_2_n_0 ),
        .I2(state[1]),
        .I3(state[2]),
        .I4(\s_input_rs232_rx_ack[0]_i_3_n_0 ),
        .I5(input_rs232_rx_ack),
        .O(\s_input_rs232_rx_ack[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_input_rs232_rx_ack[0]_i_10 
       (.I0(read_input[29]),
        .I1(read_input[28]),
        .I2(read_input[31]),
        .I3(read_input[30]),
        .O(\s_input_rs232_rx_ack[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_input_rs232_rx_ack[0]_i_11 
       (.I0(read_input[23]),
        .I1(read_input[22]),
        .I2(read_input[21]),
        .I3(read_input[20]),
        .O(\s_input_rs232_rx_ack[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \s_input_rs232_rx_ack[0]_i_2 
       (.I0(\s_input_rs232_rx_ack[0]_i_4_n_0 ),
        .I1(\s_input_rs232_rx_ack[0]_i_5_n_0 ),
        .I2(\s_input_rs232_rx_ack[0]_i_6_n_0 ),
        .I3(\s_input_rs232_rx_ack[0]_i_7_n_0 ),
        .O(\s_input_rs232_rx_ack[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \s_input_rs232_rx_ack[0]_i_3 
       (.I0(state[0]),
        .I1(state[3]),
        .O(\s_input_rs232_rx_ack[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \s_input_rs232_rx_ack[0]_i_4 
       (.I0(read_input[8]),
        .I1(read_input[9]),
        .I2(read_input[10]),
        .I3(read_input[11]),
        .I4(\s_input_rs232_rx_ack[0]_i_8_n_0 ),
        .O(\s_input_rs232_rx_ack[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \s_input_rs232_rx_ack[0]_i_5 
       (.I0(read_input[7]),
        .I1(read_input[6]),
        .I2(read_input[4]),
        .I3(read_input[5]),
        .I4(\s_input_rs232_rx_ack[0]_i_9_n_0 ),
        .O(\s_input_rs232_rx_ack[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \s_input_rs232_rx_ack[0]_i_6 
       (.I0(read_input[26]),
        .I1(read_input[27]),
        .I2(read_input[25]),
        .I3(read_input[24]),
        .I4(\s_input_rs232_rx_ack[0]_i_10_n_0 ),
        .O(\s_input_rs232_rx_ack[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \s_input_rs232_rx_ack[0]_i_7 
       (.I0(read_input[19]),
        .I1(read_input[18]),
        .I2(read_input[16]),
        .I3(read_input[17]),
        .I4(\s_input_rs232_rx_ack[0]_i_11_n_0 ),
        .O(\s_input_rs232_rx_ack[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_input_rs232_rx_ack[0]_i_8 
       (.I0(read_input[12]),
        .I1(read_input[13]),
        .I2(read_input[15]),
        .I3(read_input[14]),
        .O(\s_input_rs232_rx_ack[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_input_rs232_rx_ack[0]_i_9 
       (.I0(read_input[0]),
        .I1(read_input[1]),
        .I2(read_input[3]),
        .I3(read_input[2]),
        .O(\s_input_rs232_rx_ack[0]_i_9_n_0 ));
  FDRE \s_input_rs232_rx_ack_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\s_input_rs232_rx_ack[0]_i_1_n_0 ),
        .Q(input_rs232_rx_ack),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \s_output_am_out[23]_i_1 
       (.I0(write_output[2]),
        .I1(\result[30]_i_2_n_0 ),
        .I2(state[1]),
        .I3(state[2]),
        .I4(write_output[1]),
        .I5(\s_output_am_out[23]_i_2_n_0 ),
        .O(\s_output_am_out_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_output_am_out[23]_i_2 
       (.I0(\s_output_audio_out[9]_i_2_n_0 ),
        .I1(write_output[0]),
        .O(\s_output_am_out[23]_i_2_n_0 ));
  FDRE \s_output_am_out_reg[0] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(\s_output_audio_out_reg[0]_1 ),
        .Q(output_am_out[0]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[16] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[16]),
        .Q(output_am_out[8]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[17] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[17]),
        .Q(output_am_out[9]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[18] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[18]),
        .Q(output_am_out[10]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[19] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[19]),
        .Q(output_am_out[11]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[1] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[1]),
        .Q(output_am_out[1]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[20] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[20]),
        .Q(output_am_out[12]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[21] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[21]),
        .Q(output_am_out[13]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[22] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[22]),
        .Q(output_am_out[14]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[23] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[23]),
        .Q(output_am_out[15]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[2] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[2]),
        .Q(output_am_out[2]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[3] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[3]),
        .Q(output_am_out[3]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[4] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[4]),
        .Q(output_am_out[4]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[5] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[5]),
        .Q(output_am_out[5]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[6] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[6]),
        .Q(output_am_out[6]),
        .R(1'b0));
  FDRE \s_output_am_out_reg[7] 
       (.C(clk),
        .CE(\s_output_am_out_reg[0]_0 ),
        .D(write_value[7]),
        .Q(output_am_out[7]),
        .R(1'b0));
  FDRE \s_output_am_out_stb_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(input_ack_reg),
        .Q(amplitude_stb),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \s_output_audio_out[9]_i_1 
       (.I0(\s_output_audio_out[9]_i_2_n_0 ),
        .I1(\s_output_audio_out[9]_i_3_n_0 ),
        .I2(write_output[2]),
        .I3(\result[30]_i_2_n_0 ),
        .I4(state[1]),
        .I5(state[2]),
        .O(\s_output_audio_out_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \s_output_audio_out[9]_i_2 
       (.I0(write_output[7]),
        .I1(write_output[8]),
        .I2(write_output[23]),
        .I3(\s_output_audio_out[9]_i_4_n_0 ),
        .I4(\s_output_audio_out[9]_i_5_n_0 ),
        .I5(\s_output_audio_out[9]_i_6_n_0 ),
        .O(\s_output_audio_out[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \s_output_audio_out[9]_i_3 
       (.I0(write_output[0]),
        .I1(write_output[1]),
        .O(\s_output_audio_out[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_output_audio_out[9]_i_4 
       (.I0(write_output[17]),
        .I1(write_output[19]),
        .I2(write_output[18]),
        .I3(write_output[5]),
        .O(\s_output_audio_out[9]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \s_output_audio_out[9]_i_5 
       (.I0(write_output[4]),
        .I1(write_output[28]),
        .I2(write_output[12]),
        .I3(write_output[15]),
        .I4(\s_output_audio_out[9]_i_7_n_0 ),
        .O(\s_output_audio_out[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \s_output_audio_out[9]_i_6 
       (.I0(\s_output_audio_out[9]_i_8_n_0 ),
        .I1(\s_output_audio_out[9]_i_9_n_0 ),
        .I2(write_output[21]),
        .I3(write_output[14]),
        .I4(write_output[20]),
        .I5(write_output[24]),
        .O(\s_output_audio_out[9]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_output_audio_out[9]_i_7 
       (.I0(write_output[30]),
        .I1(write_output[26]),
        .I2(write_output[29]),
        .I3(write_output[3]),
        .O(\s_output_audio_out[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \s_output_audio_out[9]_i_8 
       (.I0(write_output[6]),
        .I1(write_output[11]),
        .I2(write_output[27]),
        .I3(write_output[31]),
        .I4(write_output[25]),
        .I5(write_output[22]),
        .O(\s_output_audio_out[9]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_output_audio_out[9]_i_9 
       (.I0(write_output[13]),
        .I1(write_output[10]),
        .I2(write_output[9]),
        .I3(write_output[16]),
        .O(\s_output_audio_out[9]_i_9_n_0 ));
  FDRE \s_output_audio_out_reg[0] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(\s_output_audio_out_reg[0]_1 ),
        .Q(output_audio_out[0]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[1] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[1]),
        .Q(output_audio_out[1]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[2] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[2]),
        .Q(output_audio_out[2]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[3] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[3]),
        .Q(output_audio_out[3]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[4] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[4]),
        .Q(output_audio_out[4]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[5] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[5]),
        .Q(output_audio_out[5]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[6] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[6]),
        .Q(output_audio_out[6]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[7] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[7]),
        .Q(output_audio_out[7]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[8] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[8]),
        .Q(output_audio_out[8]),
        .R(1'b0));
  FDRE \s_output_audio_out_reg[9] 
       (.C(clk),
        .CE(\s_output_audio_out_reg[0]_0 ),
        .D(write_value[9]),
        .Q(output_audio_out[9]),
        .R(1'b0));
  FDRE \s_output_audio_out_stb_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(S_DATA_IN_ACK_reg),
        .Q(data_in_stb),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \s_output_ctl_out[0]_i_2 
       (.I0(\s_output_freq_out[31]_i_2_n_0 ),
        .I1(write_output[1]),
        .I2(write_output[2]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(\result[30]_i_2_n_0 ),
        .O(\s_output_ctl_out_reg[0]_0 ));
  FDRE \s_output_ctl_out_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_value_reg[0]_0 ),
        .Q(control),
        .R(1'b0));
  FDRE \s_output_ctl_out_stb_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\s_output_ctl_out_stb_reg[0]_0 ),
        .Q(control_stb),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \s_output_freq_out[31]_i_1 
       (.I0(\s_output_freq_out[31]_i_2_n_0 ),
        .I1(write_output[2]),
        .I2(\result[30]_i_2_n_0 ),
        .I3(state[1]),
        .I4(state[2]),
        .I5(write_output[1]),
        .O(\s_output_freq_out_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \s_output_freq_out[31]_i_2 
       (.I0(\s_output_audio_out[9]_i_2_n_0 ),
        .I1(write_output[0]),
        .O(\s_output_freq_out[31]_i_2_n_0 ));
  FDRE \s_output_freq_out_reg[0] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(\s_output_audio_out_reg[0]_1 ),
        .Q(output_freq_out[0]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[10] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[10]),
        .Q(output_freq_out[10]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[11] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[11]),
        .Q(output_freq_out[11]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[12] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[12]),
        .Q(output_freq_out[12]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[13] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[13]),
        .Q(output_freq_out[13]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[14] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[14]),
        .Q(output_freq_out[14]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[15] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[15]),
        .Q(output_freq_out[15]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[16] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[16]),
        .Q(output_freq_out[16]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[17] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[17]),
        .Q(output_freq_out[17]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[18] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[18]),
        .Q(output_freq_out[18]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[19] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[19]),
        .Q(output_freq_out[19]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[1] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[1]),
        .Q(output_freq_out[1]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[20] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[20]),
        .Q(output_freq_out[20]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[21] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[21]),
        .Q(output_freq_out[21]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[22] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[22]),
        .Q(output_freq_out[22]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[23] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[23]),
        .Q(output_freq_out[23]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[24] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[24]),
        .Q(output_freq_out[24]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[25] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[25]),
        .Q(output_freq_out[25]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[26] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[26]),
        .Q(output_freq_out[26]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[27] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[27]),
        .Q(output_freq_out[27]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[28] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[28]),
        .Q(output_freq_out[28]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[29] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[29]),
        .Q(output_freq_out[29]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[2] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[2]),
        .Q(output_freq_out[2]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[30] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[30]),
        .Q(output_freq_out[30]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[31] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[31]),
        .Q(output_freq_out[31]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[3] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[3]),
        .Q(output_freq_out[3]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[4] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[4]),
        .Q(output_freq_out[4]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[5] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[5]),
        .Q(output_freq_out[5]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[6] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[6]),
        .Q(output_freq_out[6]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[7] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[7]),
        .Q(output_freq_out[7]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[8] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[8]),
        .Q(output_freq_out[8]),
        .R(1'b0));
  FDRE \s_output_freq_out_reg[9] 
       (.C(clk),
        .CE(\s_output_freq_out_reg[0]_0 ),
        .D(write_value[9]),
        .Q(output_freq_out[9]),
        .R(1'b0));
  FDRE \s_output_freq_out_stb_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\s_output_freq_out_stb_reg[0]_0 ),
        .Q(E),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \s_output_rs232_tx[7]_i_1 
       (.I0(\s_output_am_out[23]_i_2_n_0 ),
        .I1(write_output[1]),
        .I2(write_output[2]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(\result[30]_i_2_n_0 ),
        .O(\s_output_rs232_tx_reg[0]_0 ));
  FDRE \s_output_rs232_tx_reg[0] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(\s_output_audio_out_reg[0]_1 ),
        .Q(output_rs232_tx[0]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[1] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[1]),
        .Q(output_rs232_tx[1]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[2] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[2]),
        .Q(output_rs232_tx[2]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[3] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[3]),
        .Q(output_rs232_tx[3]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[4] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[4]),
        .Q(output_rs232_tx[4]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[5] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[5]),
        .Q(output_rs232_tx[5]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[6] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[6]),
        .Q(output_rs232_tx[6]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_reg[7] 
       (.C(clk),
        .CE(\s_output_rs232_tx_reg[0]_0 ),
        .D(write_value[7]),
        .Q(output_rs232_tx[7]),
        .R(1'b0));
  FDRE \s_output_rs232_tx_stb_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(S_IN1_ACK_reg),
        .Q(output_rs232_tx_stb),
        .R(internal_rst_reg));
  LUT2 #(
    .INIT(4'h6)) 
    s_test_2_i_1
       (.I0(amplitude_stb),
        .I1(test_2_OBUF),
        .O(s_test_2_reg));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h020A000020082808)) 
    \state[0]_i_2 
       (.I0(state[1]),
        .I1(opcode_2[3]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(opcode_2[2]),
        .I5(opcode_2[4]),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08400040FFFFFFFF)) 
    \state[1]_i_1 
       (.I0(opcode_2[1]),
        .I1(opcode_2[0]),
        .I2(opcode_2[3]),
        .I3(opcode_2[4]),
        .I4(opcode_2[2]),
        .I5(\read_input[31]_i_2_n_0 ),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0C00044000000000)) 
    \state[2]_i_1 
       (.I0(opcode_2[1]),
        .I1(opcode_2[0]),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(opcode_2[4]),
        .I5(\read_input[31]_i_2_n_0 ),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF00C500C500)) 
    \state[3]_i_1 
       (.I0(\state[3]_i_3_n_0 ),
        .I1(\state[3]_i_4_n_0 ),
        .I2(\state[3]_i_5_n_0 ),
        .I3(\state[3]_i_6_n_0 ),
        .I4(\state[3]_i_7_n_0 ),
        .I5(\state[3]_i_8_n_0 ),
        .O(\state[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \state[3]_i_10 
       (.I0(timer[7]),
        .I1(timer[6]),
        .I2(timer[5]),
        .I3(timer[4]),
        .I4(\state[3]_i_17_n_0 ),
        .O(\state[3]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \state[3]_i_11 
       (.I0(timer[11]),
        .I1(timer[8]),
        .I2(timer[10]),
        .I3(timer[9]),
        .I4(\state[3]_i_18_n_0 ),
        .O(\state[3]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \state[3]_i_12 
       (.I0(timer[23]),
        .I1(timer[22]),
        .I2(timer[21]),
        .I3(timer[20]),
        .I4(\state[3]_i_19_n_0 ),
        .O(\state[3]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \state[3]_i_13 
       (.I0(timer[27]),
        .I1(timer[26]),
        .I2(timer[25]),
        .I3(timer[24]),
        .I4(\state[3]_i_20_n_0 ),
        .O(\state[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hA0A2AAA2AAA2AAA2)) 
    \state[3]_i_14 
       (.I0(write_output[2]),
        .I1(control_stb),
        .I2(write_output[1]),
        .I3(write_output[0]),
        .I4(output_rs232_tx_ack),
        .I5(output_rs232_tx_stb),
        .O(\state[3]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h000000007F557FFF)) 
    \state[3]_i_15 
       (.I0(write_output[1]),
        .I1(amplitude_stb),
        .I2(output_tx_am_ack),
        .I3(write_output[0]),
        .I4(E),
        .I5(\state[3]_i_21_n_0 ),
        .O(\state[3]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    \state[3]_i_16 
       (.I0(register_a[6]),
        .I1(result[6]),
        .I2(register_a[7]),
        .I3(operand_a1),
        .I4(result[7]),
        .O(\state[3]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[3]_i_17 
       (.I0(timer[0]),
        .I1(timer[1]),
        .I2(timer[2]),
        .I3(timer[3]),
        .O(\state[3]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[3]_i_18 
       (.I0(timer[12]),
        .I1(timer[13]),
        .I2(timer[14]),
        .I3(timer[15]),
        .O(\state[3]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[3]_i_19 
       (.I0(timer[16]),
        .I1(timer[17]),
        .I2(timer[18]),
        .I3(timer[19]),
        .O(\state[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0048008000000000)) 
    \state[3]_i_2 
       (.I0(opcode_2[2]),
        .I1(opcode_2[3]),
        .I2(opcode_2[0]),
        .I3(opcode_2[1]),
        .I4(opcode_2[4]),
        .I5(\read_input[31]_i_2_n_0 ),
        .O(\state[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[3]_i_20 
       (.I0(timer[31]),
        .I1(timer[29]),
        .I2(timer[30]),
        .I3(timer[28]),
        .O(\state[3]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \state[3]_i_21 
       (.I0(write_output[2]),
        .I1(write_output[0]),
        .I2(write_output[1]),
        .I3(data_in_stb),
        .I4(output_audio_ack),
        .O(\state[3]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hB9F3E1F1B9F3A1F9)) 
    \state[3]_i_3 
       (.I0(opcode_2[3]),
        .I1(opcode_2[2]),
        .I2(opcode_2[1]),
        .I3(opcode_2[0]),
        .I4(opcode_2[4]),
        .I5(\state[3]_i_9_n_0 ),
        .O(\state[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \state[3]_i_4 
       (.I0(\state[3]_i_10_n_0 ),
        .I1(\state[3]_i_11_n_0 ),
        .I2(\state[3]_i_12_n_0 ),
        .I3(\state[3]_i_13_n_0 ),
        .O(\state[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h193E)) 
    \state[3]_i_5 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .O(\state[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h057E)) 
    \state[3]_i_6 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[2]),
        .O(\state[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h02FF0200)) 
    \state[3]_i_7 
       (.I0(\s_output_audio_out[9]_i_2_n_0 ),
        .I1(\state[3]_i_14_n_0 ),
        .I2(\state[3]_i_15_n_0 ),
        .I3(\state[3]_i_5_n_0 ),
        .I4(\result[31]_i_3_n_0 ),
        .O(\state[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h02B6)) 
    \state[3]_i_8 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[3]),
        .O(\state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \state[3]_i_9 
       (.I0(\program_counter[15]_i_13_n_0 ),
        .I1(\program_counter[15]_i_14_n_0 ),
        .I2(\state[3]_i_16_n_0 ),
        .I3(\a_lo[4]_i_1_n_0 ),
        .I4(\a_lo[5]_i_1_n_0 ),
        .I5(\program_counter[15]_i_16_n_0 ),
        .O(\state[3]_i_9_n_0 ));
  FDSE \state_reg[0] 
       (.C(clk),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .S(internal_rst_reg));
  FDRE \state_reg[1] 
       (.C(clk),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(internal_rst_reg));
  FDRE \state_reg[2] 
       (.C(clk),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(internal_rst_reg));
  FDRE \state_reg[3] 
       (.C(clk),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[3]_i_2_n_0 ),
        .Q(state[3]),
        .R(internal_rst_reg));
  LUT5 #(
    .INIT(32'h800080FF)) 
    \timer[0]_i_1 
       (.I0(\a_lo[0]_i_1_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer[0]),
        .O(p_1_in__0[0]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[10]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[10]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[10]),
        .O(p_1_in__0[10]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[11]_i_1 
       (.I0(\a_lo[11]_i_1_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[11]),
        .O(p_1_in__0[11]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[12]_i_1 
       (.I0(\a_lo[12]_i_1_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[12]),
        .O(p_1_in__0[12]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[12]_i_3 
       (.I0(timer[12]),
        .O(\timer[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[12]_i_4 
       (.I0(timer[11]),
        .O(\timer[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[12]_i_5 
       (.I0(timer[10]),
        .O(\timer[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[12]_i_6 
       (.I0(timer[9]),
        .O(\timer[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[13]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[13]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[13]),
        .O(p_1_in__0[13]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[14]_i_1 
       (.I0(\a_lo[14]_i_1_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[14]),
        .O(p_1_in__0[14]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[15]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[15]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[15]),
        .O(p_1_in__0[15]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[16]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[0]),
        .I3(state[1]),
        .I4(timer0[16]),
        .O(p_1_in__0[16]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[16]_i_3 
       (.I0(timer[16]),
        .O(\timer[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[16]_i_4 
       (.I0(timer[15]),
        .O(\timer[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[16]_i_5 
       (.I0(timer[14]),
        .O(\timer[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[16]_i_6 
       (.I0(timer[13]),
        .O(\timer[16]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[17]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[1]),
        .I3(state[1]),
        .I4(timer0[17]),
        .O(p_1_in__0[17]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[18]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[2]),
        .I3(state[1]),
        .I4(timer0[18]),
        .O(p_1_in__0[18]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[19]_i_1 
       (.I0(p_1_in[3]),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[19]),
        .O(p_1_in__0[19]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[1]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[1]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[1]),
        .O(p_1_in__0[1]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[20]_i_1 
       (.I0(p_1_in[4]),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[20]),
        .O(p_1_in__0[20]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[20]_i_3 
       (.I0(timer[20]),
        .O(\timer[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[20]_i_4 
       (.I0(timer[19]),
        .O(\timer[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[20]_i_5 
       (.I0(timer[18]),
        .O(\timer[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[20]_i_6 
       (.I0(timer[17]),
        .O(\timer[20]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[21]_i_1 
       (.I0(p_1_in[5]),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[21]),
        .O(p_1_in__0[21]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[22]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[6]),
        .I3(state[1]),
        .I4(timer0[22]),
        .O(p_1_in__0[22]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[23]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[7]),
        .I3(state[1]),
        .I4(timer0[23]),
        .O(p_1_in__0[23]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[24]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[8]),
        .I3(state[1]),
        .I4(timer0[24]),
        .O(p_1_in__0[24]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[24]_i_3 
       (.I0(timer[24]),
        .O(\timer[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[24]_i_4 
       (.I0(timer[23]),
        .O(\timer[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[24]_i_5 
       (.I0(timer[22]),
        .O(\timer[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[24]_i_6 
       (.I0(timer[21]),
        .O(\timer[24]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[25]_i_1 
       (.I0(p_1_in[9]),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[25]),
        .O(p_1_in__0[25]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[26]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[10]),
        .I3(state[1]),
        .I4(timer0[26]),
        .O(p_1_in__0[26]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[27]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[11]),
        .I3(state[1]),
        .I4(timer0[27]),
        .O(p_1_in__0[27]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[28]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[12]),
        .I3(state[1]),
        .I4(timer0[28]),
        .O(p_1_in__0[28]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[28]_i_3 
       (.I0(timer[28]),
        .O(\timer[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[28]_i_4 
       (.I0(timer[27]),
        .O(\timer[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[28]_i_5 
       (.I0(timer[26]),
        .O(\timer[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[28]_i_6 
       (.I0(timer[25]),
        .O(\timer[28]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[29]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[13]),
        .I3(state[1]),
        .I4(timer0[29]),
        .O(p_1_in__0[29]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[2]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[2]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[2]),
        .O(p_1_in__0[2]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[30]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[14]),
        .I3(state[1]),
        .I4(timer0[30]),
        .O(p_1_in__0[30]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00040050)) 
    \timer[31]_i_1 
       (.I0(\state[3]_i_4_n_0 ),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\timer[31]_i_3_n_0 ),
        .O(\timer[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[31]_i_2 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(p_1_in[15]),
        .I3(state[1]),
        .I4(timer0[31]),
        .O(p_1_in__0[31]));
  LUT6 #(
    .INIT(64'h0000000000006800)) 
    \timer[31]_i_3 
       (.I0(opcode_2[0]),
        .I1(opcode_2[2]),
        .I2(opcode_2[3]),
        .I3(\dividend[31]_i_3_n_0 ),
        .I4(opcode_2[1]),
        .I5(\timer[31]_i_5_n_0 ),
        .O(\timer[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \timer[31]_i_5 
       (.I0(opcode_2[4]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\timer[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[31]_i_6 
       (.I0(timer[31]),
        .O(\timer[31]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[31]_i_7 
       (.I0(timer[30]),
        .O(\timer[31]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[31]_i_8 
       (.I0(timer[29]),
        .O(\timer[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[3]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[3]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[3]),
        .O(p_1_in__0[3]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[4]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[4]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[4]),
        .O(p_1_in__0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[4]_i_3 
       (.I0(timer[4]),
        .O(\timer[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[4]_i_4 
       (.I0(timer[3]),
        .O(\timer[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[4]_i_5 
       (.I0(timer[2]),
        .O(\timer[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[4]_i_6 
       (.I0(timer[1]),
        .O(\timer[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hBFFFBF00)) 
    \timer[5]_i_1 
       (.I0(\a_lo[5]_i_1_n_0 ),
        .I1(opcode_2[2]),
        .I2(opcode_2[0]),
        .I3(state[1]),
        .I4(timer0[5]),
        .O(p_1_in__0[5]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[6]_i_1 
       (.I0(\a_lo[6]_i_1_n_0 ),
        .I1(opcode_2[0]),
        .I2(opcode_2[2]),
        .I3(state[1]),
        .I4(timer0[6]),
        .O(p_1_in__0[6]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[7]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[7]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[7]),
        .O(p_1_in__0[7]));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[8]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[8]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[8]),
        .O(p_1_in__0[8]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[8]_i_3 
       (.I0(timer[8]),
        .O(\timer[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[8]_i_4 
       (.I0(timer[7]),
        .O(\timer[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[8]_i_5 
       (.I0(timer[6]),
        .O(\timer[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timer[8]_i_6 
       (.I0(timer[5]),
        .O(\timer[8]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \timer[9]_i_1 
       (.I0(opcode_2[2]),
        .I1(opcode_2[0]),
        .I2(\a_lo[9]_i_1_n_0 ),
        .I3(state[1]),
        .I4(timer0[9]),
        .O(p_1_in__0[9]));
  LUT1 #(
    .INIT(2'h1)) 
    \timer_clock[0]_i_5 
       (.I0(timer_clock_reg[0]),
        .O(\timer_clock[0]_i_5_n_0 ));
  FDRE \timer_clock_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[0]_i_1_n_7 ),
        .Q(timer_clock_reg[0]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\timer_clock_reg[0]_i_1_n_0 ,\NLW_timer_clock_reg[0]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\timer_clock_reg[0]_i_1_n_4 ,\timer_clock_reg[0]_i_1_n_5 ,\timer_clock_reg[0]_i_1_n_6 ,\timer_clock_reg[0]_i_1_n_7 }),
        .S({timer_clock_reg[3:1],\timer_clock[0]_i_5_n_0 }));
  FDRE \timer_clock_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[8]_i_1_n_5 ),
        .Q(timer_clock_reg[10]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[8]_i_1_n_4 ),
        .Q(timer_clock_reg[11]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[12]_i_1_n_7 ),
        .Q(timer_clock_reg[12]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[12]_i_1 
       (.CI(\timer_clock_reg[8]_i_1_n_0 ),
        .CO({\timer_clock_reg[12]_i_1_n_0 ,\NLW_timer_clock_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[12]_i_1_n_4 ,\timer_clock_reg[12]_i_1_n_5 ,\timer_clock_reg[12]_i_1_n_6 ,\timer_clock_reg[12]_i_1_n_7 }),
        .S(timer_clock_reg[15:12]));
  FDRE \timer_clock_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[12]_i_1_n_6 ),
        .Q(timer_clock_reg[13]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[12]_i_1_n_5 ),
        .Q(timer_clock_reg[14]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[12]_i_1_n_4 ),
        .Q(timer_clock_reg[15]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[16]_i_1_n_7 ),
        .Q(timer_clock_reg[16]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[16]_i_1 
       (.CI(\timer_clock_reg[12]_i_1_n_0 ),
        .CO({\timer_clock_reg[16]_i_1_n_0 ,\NLW_timer_clock_reg[16]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[16]_i_1_n_4 ,\timer_clock_reg[16]_i_1_n_5 ,\timer_clock_reg[16]_i_1_n_6 ,\timer_clock_reg[16]_i_1_n_7 }),
        .S(timer_clock_reg[19:16]));
  FDRE \timer_clock_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[16]_i_1_n_6 ),
        .Q(timer_clock_reg[17]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[16]_i_1_n_5 ),
        .Q(timer_clock_reg[18]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[16]_i_1_n_4 ),
        .Q(timer_clock_reg[19]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[0]_i_1_n_6 ),
        .Q(timer_clock_reg[1]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[20]_i_1_n_7 ),
        .Q(timer_clock_reg[20]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[20]_i_1 
       (.CI(\timer_clock_reg[16]_i_1_n_0 ),
        .CO({\timer_clock_reg[20]_i_1_n_0 ,\NLW_timer_clock_reg[20]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[20]_i_1_n_4 ,\timer_clock_reg[20]_i_1_n_5 ,\timer_clock_reg[20]_i_1_n_6 ,\timer_clock_reg[20]_i_1_n_7 }),
        .S(timer_clock_reg[23:20]));
  FDRE \timer_clock_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[20]_i_1_n_6 ),
        .Q(timer_clock_reg[21]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[20]_i_1_n_5 ),
        .Q(timer_clock_reg[22]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[20]_i_1_n_4 ),
        .Q(timer_clock_reg[23]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[24]_i_1_n_7 ),
        .Q(timer_clock_reg[24]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[24]_i_1 
       (.CI(\timer_clock_reg[20]_i_1_n_0 ),
        .CO({\timer_clock_reg[24]_i_1_n_0 ,\NLW_timer_clock_reg[24]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[24]_i_1_n_4 ,\timer_clock_reg[24]_i_1_n_5 ,\timer_clock_reg[24]_i_1_n_6 ,\timer_clock_reg[24]_i_1_n_7 }),
        .S(timer_clock_reg[27:24]));
  FDRE \timer_clock_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[24]_i_1_n_6 ),
        .Q(timer_clock_reg[25]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[24]_i_1_n_5 ),
        .Q(timer_clock_reg[26]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[24]_i_1_n_4 ),
        .Q(timer_clock_reg[27]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[28]_i_1_n_7 ),
        .Q(timer_clock_reg[28]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[28]_i_1 
       (.CI(\timer_clock_reg[24]_i_1_n_0 ),
        .CO(\NLW_timer_clock_reg[28]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[28]_i_1_n_4 ,\timer_clock_reg[28]_i_1_n_5 ,\timer_clock_reg[28]_i_1_n_6 ,\timer_clock_reg[28]_i_1_n_7 }),
        .S(timer_clock_reg[31:28]));
  FDRE \timer_clock_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[28]_i_1_n_6 ),
        .Q(timer_clock_reg[29]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[0]_i_1_n_5 ),
        .Q(timer_clock_reg[2]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[28]_i_1_n_5 ),
        .Q(timer_clock_reg[30]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[28]_i_1_n_4 ),
        .Q(timer_clock_reg[31]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[0]_i_1_n_4 ),
        .Q(timer_clock_reg[3]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[4]_i_1_n_7 ),
        .Q(timer_clock_reg[4]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[4]_i_1 
       (.CI(\timer_clock_reg[0]_i_1_n_0 ),
        .CO({\timer_clock_reg[4]_i_1_n_0 ,\NLW_timer_clock_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[4]_i_1_n_4 ,\timer_clock_reg[4]_i_1_n_5 ,\timer_clock_reg[4]_i_1_n_6 ,\timer_clock_reg[4]_i_1_n_7 }),
        .S(timer_clock_reg[7:4]));
  FDRE \timer_clock_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[4]_i_1_n_6 ),
        .Q(timer_clock_reg[5]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[4]_i_1_n_5 ),
        .Q(timer_clock_reg[6]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[4]_i_1_n_4 ),
        .Q(timer_clock_reg[7]),
        .R(internal_rst_reg));
  FDRE \timer_clock_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[8]_i_1_n_7 ),
        .Q(timer_clock_reg[8]),
        .R(internal_rst_reg));
  CARRY4 \timer_clock_reg[8]_i_1 
       (.CI(\timer_clock_reg[4]_i_1_n_0 ),
        .CO({\timer_clock_reg[8]_i_1_n_0 ,\NLW_timer_clock_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\timer_clock_reg[8]_i_1_n_4 ,\timer_clock_reg[8]_i_1_n_5 ,\timer_clock_reg[8]_i_1_n_6 ,\timer_clock_reg[8]_i_1_n_7 }),
        .S(timer_clock_reg[11:8]));
  FDRE \timer_clock_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\timer_clock_reg[8]_i_1_n_6 ),
        .Q(timer_clock_reg[9]),
        .R(internal_rst_reg));
  FDRE \timer_reg[0] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(timer[0]),
        .R(internal_rst_reg));
  FDRE \timer_reg[10] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[10]),
        .Q(timer[10]),
        .R(internal_rst_reg));
  FDRE \timer_reg[11] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[11]),
        .Q(timer[11]),
        .R(internal_rst_reg));
  FDRE \timer_reg[12] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[12]),
        .Q(timer[12]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[12]_i_2 
       (.CI(\timer_reg[8]_i_2_n_0 ),
        .CO({\timer_reg[12]_i_2_n_0 ,\NLW_timer_reg[12]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[12:9]),
        .O(timer0[12:9]),
        .S({\timer[12]_i_3_n_0 ,\timer[12]_i_4_n_0 ,\timer[12]_i_5_n_0 ,\timer[12]_i_6_n_0 }));
  FDRE \timer_reg[13] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[13]),
        .Q(timer[13]),
        .R(internal_rst_reg));
  FDRE \timer_reg[14] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[14]),
        .Q(timer[14]),
        .R(internal_rst_reg));
  FDRE \timer_reg[15] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[15]),
        .Q(timer[15]),
        .R(internal_rst_reg));
  FDRE \timer_reg[16] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[16]),
        .Q(timer[16]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[16]_i_2 
       (.CI(\timer_reg[12]_i_2_n_0 ),
        .CO({\timer_reg[16]_i_2_n_0 ,\NLW_timer_reg[16]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[16:13]),
        .O(timer0[16:13]),
        .S({\timer[16]_i_3_n_0 ,\timer[16]_i_4_n_0 ,\timer[16]_i_5_n_0 ,\timer[16]_i_6_n_0 }));
  FDRE \timer_reg[17] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[17]),
        .Q(timer[17]),
        .R(internal_rst_reg));
  FDRE \timer_reg[18] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[18]),
        .Q(timer[18]),
        .R(internal_rst_reg));
  FDRE \timer_reg[19] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[19]),
        .Q(timer[19]),
        .R(internal_rst_reg));
  FDRE \timer_reg[1] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(timer[1]),
        .R(internal_rst_reg));
  FDRE \timer_reg[20] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[20]),
        .Q(timer[20]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[20]_i_2 
       (.CI(\timer_reg[16]_i_2_n_0 ),
        .CO({\timer_reg[20]_i_2_n_0 ,\NLW_timer_reg[20]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[20:17]),
        .O(timer0[20:17]),
        .S({\timer[20]_i_3_n_0 ,\timer[20]_i_4_n_0 ,\timer[20]_i_5_n_0 ,\timer[20]_i_6_n_0 }));
  FDRE \timer_reg[21] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[21]),
        .Q(timer[21]),
        .R(internal_rst_reg));
  FDRE \timer_reg[22] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[22]),
        .Q(timer[22]),
        .R(internal_rst_reg));
  FDRE \timer_reg[23] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[23]),
        .Q(timer[23]),
        .R(internal_rst_reg));
  FDRE \timer_reg[24] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[24]),
        .Q(timer[24]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[24]_i_2 
       (.CI(\timer_reg[20]_i_2_n_0 ),
        .CO({\timer_reg[24]_i_2_n_0 ,\NLW_timer_reg[24]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[24:21]),
        .O(timer0[24:21]),
        .S({\timer[24]_i_3_n_0 ,\timer[24]_i_4_n_0 ,\timer[24]_i_5_n_0 ,\timer[24]_i_6_n_0 }));
  FDRE \timer_reg[25] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[25]),
        .Q(timer[25]),
        .R(internal_rst_reg));
  FDRE \timer_reg[26] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[26]),
        .Q(timer[26]),
        .R(internal_rst_reg));
  FDRE \timer_reg[27] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[27]),
        .Q(timer[27]),
        .R(internal_rst_reg));
  FDRE \timer_reg[28] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[28]),
        .Q(timer[28]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[28]_i_2 
       (.CI(\timer_reg[24]_i_2_n_0 ),
        .CO({\timer_reg[28]_i_2_n_0 ,\NLW_timer_reg[28]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[28:25]),
        .O(timer0[28:25]),
        .S({\timer[28]_i_3_n_0 ,\timer[28]_i_4_n_0 ,\timer[28]_i_5_n_0 ,\timer[28]_i_6_n_0 }));
  FDRE \timer_reg[29] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[29]),
        .Q(timer[29]),
        .R(internal_rst_reg));
  FDRE \timer_reg[2] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(timer[2]),
        .R(internal_rst_reg));
  FDRE \timer_reg[30] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[30]),
        .Q(timer[30]),
        .R(internal_rst_reg));
  FDRE \timer_reg[31] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[31]),
        .Q(timer[31]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[31]_i_4 
       (.CI(\timer_reg[28]_i_2_n_0 ),
        .CO(\NLW_timer_reg[31]_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,timer[30:29]}),
        .O({\NLW_timer_reg[31]_i_4_O_UNCONNECTED [3],timer0[31:29]}),
        .S({1'b0,\timer[31]_i_6_n_0 ,\timer[31]_i_7_n_0 ,\timer[31]_i_8_n_0 }));
  FDRE \timer_reg[3] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[3]),
        .Q(timer[3]),
        .R(internal_rst_reg));
  FDRE \timer_reg[4] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[4]),
        .Q(timer[4]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\timer_reg[4]_i_2_n_0 ,\NLW_timer_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(timer[0]),
        .DI(timer[4:1]),
        .O(timer0[4:1]),
        .S({\timer[4]_i_3_n_0 ,\timer[4]_i_4_n_0 ,\timer[4]_i_5_n_0 ,\timer[4]_i_6_n_0 }));
  FDRE \timer_reg[5] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[5]),
        .Q(timer[5]),
        .R(internal_rst_reg));
  FDRE \timer_reg[6] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[6]),
        .Q(timer[6]),
        .R(internal_rst_reg));
  FDRE \timer_reg[7] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[7]),
        .Q(timer[7]),
        .R(internal_rst_reg));
  FDRE \timer_reg[8] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[8]),
        .Q(timer[8]),
        .R(internal_rst_reg));
  CARRY4 \timer_reg[8]_i_2 
       (.CI(\timer_reg[4]_i_2_n_0 ),
        .CO({\timer_reg[8]_i_2_n_0 ,\NLW_timer_reg[8]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(timer[8:5]),
        .O(timer0[8:5]),
        .S({\timer[8]_i_3_n_0 ,\timer[8]_i_4_n_0 ,\timer[8]_i_5_n_0 ,\timer[8]_i_6_n_0 }));
  FDRE \timer_reg[9] 
       (.C(clk),
        .CE(\timer[31]_i_1_n_0 ),
        .D(p_1_in__0[9]),
        .Q(timer[9]),
        .R(internal_rst_reg));
  FDRE write_enable_reg
       (.C(clk),
        .CE(1'b1),
        .D(\result[31]_i_1_n_0 ),
        .Q(write_enable_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \write_output[31]_i_1 
       (.I0(opcode_2[0]),
        .I1(opcode_2[1]),
        .I2(opcode_2[3]),
        .I3(opcode_2[2]),
        .I4(opcode_2[4]),
        .I5(\address_z_3[3]_i_1_n_0 ),
        .O(out0));
  FDRE \write_output_reg[0] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[0]_i_1_n_0 ),
        .Q(write_output[0]),
        .R(1'b0));
  FDRE \write_output_reg[10] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[10]_i_1_n_0 ),
        .Q(write_output[10]),
        .R(1'b0));
  FDRE \write_output_reg[11] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[11]_i_1_n_0 ),
        .Q(write_output[11]),
        .R(1'b0));
  FDRE \write_output_reg[12] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[12]_i_1_n_0 ),
        .Q(write_output[12]),
        .R(1'b0));
  FDRE \write_output_reg[13] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[13]_i_1_n_0 ),
        .Q(write_output[13]),
        .R(1'b0));
  FDRE \write_output_reg[14] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[14]_i_1_n_0 ),
        .Q(write_output[14]),
        .R(1'b0));
  FDRE \write_output_reg[15] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[15]_i_1_n_0 ),
        .Q(write_output[15]),
        .R(1'b0));
  FDRE \write_output_reg[16] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[0]),
        .Q(write_output[16]),
        .R(1'b0));
  FDRE \write_output_reg[17] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[1]),
        .Q(write_output[17]),
        .R(1'b0));
  FDRE \write_output_reg[18] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[2]),
        .Q(write_output[18]),
        .R(1'b0));
  FDRE \write_output_reg[19] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[3]),
        .Q(write_output[19]),
        .R(1'b0));
  FDRE \write_output_reg[1] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[1]_i_1_n_0 ),
        .Q(write_output[1]),
        .R(1'b0));
  FDRE \write_output_reg[20] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[4]),
        .Q(write_output[20]),
        .R(1'b0));
  FDRE \write_output_reg[21] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[5]),
        .Q(write_output[21]),
        .R(1'b0));
  FDRE \write_output_reg[22] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[6]),
        .Q(write_output[22]),
        .R(1'b0));
  FDRE \write_output_reg[23] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[7]),
        .Q(write_output[23]),
        .R(1'b0));
  FDRE \write_output_reg[24] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[8]),
        .Q(write_output[24]),
        .R(1'b0));
  FDRE \write_output_reg[25] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[9]),
        .Q(write_output[25]),
        .R(1'b0));
  FDRE \write_output_reg[26] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[10]),
        .Q(write_output[26]),
        .R(1'b0));
  FDRE \write_output_reg[27] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[11]),
        .Q(write_output[27]),
        .R(1'b0));
  FDRE \write_output_reg[28] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[12]),
        .Q(write_output[28]),
        .R(1'b0));
  FDRE \write_output_reg[29] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[13]),
        .Q(write_output[29]),
        .R(1'b0));
  FDRE \write_output_reg[2] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[2]_i_1_n_0 ),
        .Q(write_output[2]),
        .R(1'b0));
  FDRE \write_output_reg[30] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[14]),
        .Q(write_output[30]),
        .R(1'b0));
  FDRE \write_output_reg[31] 
       (.C(clk),
        .CE(out0),
        .D(p_1_in[15]),
        .Q(write_output[31]),
        .R(1'b0));
  FDRE \write_output_reg[3] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[3]_i_1_n_0 ),
        .Q(write_output[3]),
        .R(1'b0));
  FDRE \write_output_reg[4] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[4]_i_1_n_0 ),
        .Q(write_output[4]),
        .R(1'b0));
  FDRE \write_output_reg[5] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[5]_i_1_n_0 ),
        .Q(write_output[5]),
        .R(1'b0));
  FDRE \write_output_reg[6] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[6]_i_1_n_0 ),
        .Q(write_output[6]),
        .R(1'b0));
  FDRE \write_output_reg[7] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[7]_i_1_n_0 ),
        .Q(write_output[7]),
        .R(1'b0));
  FDRE \write_output_reg[8] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[8]_i_1_n_0 ),
        .Q(write_output[8]),
        .R(1'b0));
  FDRE \write_output_reg[9] 
       (.C(clk),
        .CE(out0),
        .D(\a_lo[9]_i_1_n_0 ),
        .Q(write_output[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[0]_i_1 
       (.I0(result[0]),
        .I1(operand_b1),
        .I2(register_b[0]),
        .O(\write_value[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[10]_i_1 
       (.I0(result[10]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[10]),
        .O(\write_value[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[11]_i_1 
       (.I0(result[11]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[11]),
        .O(\write_value[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[12]_i_1 
       (.I0(result[12]),
        .I1(operand_b1),
        .I2(register_b[12]),
        .O(\write_value[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[13]_i_1 
       (.I0(result[13]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[13]),
        .O(\write_value[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[14]_i_1 
       (.I0(result[14]),
        .I1(operand_b1),
        .I2(register_b[14]),
        .O(\write_value[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[15]_i_1 
       (.I0(result[15]),
        .I1(operand_b1),
        .I2(register_b[15]),
        .O(\write_value[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[16]_i_1 
       (.I0(result[16]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[16]),
        .O(p_0_in[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[17]_i_1 
       (.I0(result[17]),
        .I1(operand_b1),
        .I2(register_b[17]),
        .O(p_0_in[1]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[18]_i_1 
       (.I0(result[18]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[18]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[19]_i_1 
       (.I0(result[19]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[19]),
        .O(p_0_in[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[1]_i_1 
       (.I0(result[1]),
        .I1(operand_b1),
        .I2(register_b[1]),
        .O(\write_value[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[20]_i_1 
       (.I0(result[20]),
        .I1(operand_b1),
        .I2(register_b[20]),
        .O(p_0_in[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[21]_i_1 
       (.I0(result[21]),
        .I1(operand_b1),
        .I2(register_b[21]),
        .O(p_0_in[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[22]_i_1 
       (.I0(result[22]),
        .I1(operand_b1),
        .I2(register_b[22]),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[23]_i_1 
       (.I0(result[23]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[23]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[24]_i_1 
       (.I0(result[24]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[24]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[25]_i_1 
       (.I0(result[25]),
        .I1(operand_b1),
        .I2(register_b[25]),
        .O(p_0_in[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[26]_i_1 
       (.I0(result[26]),
        .I1(operand_b1),
        .I2(register_b[26]),
        .O(p_0_in[10]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[27]_i_1 
       (.I0(result[27]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[27]),
        .O(p_0_in[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[28]_i_1 
       (.I0(result[28]),
        .I1(operand_b1),
        .I2(register_b[28]),
        .O(p_0_in[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[29]_i_1 
       (.I0(result[29]),
        .I1(operand_b1),
        .I2(register_b[29]),
        .O(p_0_in[13]));
  LUT4 #(
    .INIT(16'h2002)) 
    \write_value[29]_i_2 
       (.I0(write_enable_reg_n_0),
        .I1(\write_value[31]_i_2_n_0 ),
        .I2(literal_2[3]),
        .I3(address_z_3[3]),
        .O(operand_b1));
  LUT3 #(
    .INIT(8'hB8)) 
    \write_value[2]_i_1 
       (.I0(result[2]),
        .I1(operand_b1),
        .I2(register_b[2]),
        .O(\write_value[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[30]_i_1 
       (.I0(result[30]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[30]),
        .O(p_0_in[14]));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[31]_i_1 
       (.I0(result[31]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[31]),
        .O(p_0_in[15]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \write_value[31]_i_2 
       (.I0(address_z_3[0]),
        .I1(literal_2[0]),
        .I2(literal_2[2]),
        .I3(address_z_3[2]),
        .I4(literal_2[1]),
        .I5(address_z_3[1]),
        .O(\write_value[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[3]_i_1 
       (.I0(result[3]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[3]),
        .O(\write_value[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[4]_i_1 
       (.I0(result[4]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[4]),
        .O(\write_value[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[5]_i_1 
       (.I0(result[5]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[5]),
        .O(\write_value[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[6]_i_1 
       (.I0(result[6]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[6]),
        .O(\write_value[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[7]_i_1 
       (.I0(result[7]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[7]),
        .O(\write_value[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[8]_i_1 
       (.I0(result[8]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[8]),
        .O(\write_value[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFB08000008)) 
    \write_value[9]_i_1 
       (.I0(result[9]),
        .I1(write_enable_reg_n_0),
        .I2(\write_value[31]_i_2_n_0 ),
        .I3(literal_2[3]),
        .I4(address_z_3[3]),
        .I5(register_b[9]),
        .O(\write_value[9]_i_1_n_0 ));
  FDRE \write_value_reg[0] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[0]_i_1_n_0 ),
        .Q(\s_output_audio_out_reg[0]_1 ),
        .R(1'b0));
  FDRE \write_value_reg[10] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[10]_i_1_n_0 ),
        .Q(write_value[10]),
        .R(1'b0));
  FDRE \write_value_reg[11] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[11]_i_1_n_0 ),
        .Q(write_value[11]),
        .R(1'b0));
  FDRE \write_value_reg[12] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[12]_i_1_n_0 ),
        .Q(write_value[12]),
        .R(1'b0));
  FDRE \write_value_reg[13] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[13]_i_1_n_0 ),
        .Q(write_value[13]),
        .R(1'b0));
  FDRE \write_value_reg[14] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[14]_i_1_n_0 ),
        .Q(write_value[14]),
        .R(1'b0));
  FDRE \write_value_reg[15] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[15]_i_1_n_0 ),
        .Q(write_value[15]),
        .R(1'b0));
  FDRE \write_value_reg[16] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[0]),
        .Q(write_value[16]),
        .R(1'b0));
  FDRE \write_value_reg[17] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[1]),
        .Q(write_value[17]),
        .R(1'b0));
  FDRE \write_value_reg[18] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[2]),
        .Q(write_value[18]),
        .R(1'b0));
  FDRE \write_value_reg[19] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[3]),
        .Q(write_value[19]),
        .R(1'b0));
  FDRE \write_value_reg[1] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[1]_i_1_n_0 ),
        .Q(write_value[1]),
        .R(1'b0));
  FDRE \write_value_reg[20] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[4]),
        .Q(write_value[20]),
        .R(1'b0));
  FDRE \write_value_reg[21] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[5]),
        .Q(write_value[21]),
        .R(1'b0));
  FDRE \write_value_reg[22] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[6]),
        .Q(write_value[22]),
        .R(1'b0));
  FDRE \write_value_reg[23] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[7]),
        .Q(write_value[23]),
        .R(1'b0));
  FDRE \write_value_reg[24] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[8]),
        .Q(write_value[24]),
        .R(1'b0));
  FDRE \write_value_reg[25] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[9]),
        .Q(write_value[25]),
        .R(1'b0));
  FDRE \write_value_reg[26] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[10]),
        .Q(write_value[26]),
        .R(1'b0));
  FDRE \write_value_reg[27] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[11]),
        .Q(write_value[27]),
        .R(1'b0));
  FDRE \write_value_reg[28] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[12]),
        .Q(write_value[28]),
        .R(1'b0));
  FDRE \write_value_reg[29] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[13]),
        .Q(write_value[29]),
        .R(1'b0));
  FDRE \write_value_reg[2] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[2]_i_1_n_0 ),
        .Q(write_value[2]),
        .R(1'b0));
  FDRE \write_value_reg[30] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[14]),
        .Q(write_value[30]),
        .R(1'b0));
  FDRE \write_value_reg[31] 
       (.C(clk),
        .CE(out0),
        .D(p_0_in[15]),
        .Q(write_value[31]),
        .R(1'b0));
  FDRE \write_value_reg[3] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[3]_i_1_n_0 ),
        .Q(write_value[3]),
        .R(1'b0));
  FDRE \write_value_reg[4] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[4]_i_1_n_0 ),
        .Q(write_value[4]),
        .R(1'b0));
  FDRE \write_value_reg[5] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[5]_i_1_n_0 ),
        .Q(write_value[5]),
        .R(1'b0));
  FDRE \write_value_reg[6] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[6]_i_1_n_0 ),
        .Q(write_value[6]),
        .R(1'b0));
  FDRE \write_value_reg[7] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[7]_i_1_n_0 ),
        .Q(write_value[7]),
        .R(1'b0));
  FDRE \write_value_reg[8] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[8]_i_1_n_0 ),
        .Q(write_value[8]),
        .R(1'b0));
  FDRE \write_value_reg[9] 
       (.C(clk),
        .CE(out0),
        .D(\write_value[9]_i_1_n_0 ),
        .Q(write_value[9]),
        .R(1'b0));
endmodule

module nco
   (DOADO,
    DOBDO,
    out_00,
    out_10,
    i_out_2_reg,
    i_out_3_reg,
    out_20,
    out_30,
    i_out_4_reg,
    i_out_5_reg,
    out_40,
    out_50,
    i_out_6_reg,
    i_out_7_reg,
    out_60,
    out_70,
    clk,
    Q);
  output [9:0]DOADO;
  output [9:0]DOBDO;
  output [9:0]out_00;
  output [9:0]out_10;
  output [9:0]i_out_2_reg;
  output [9:0]i_out_3_reg;
  output [9:0]out_20;
  output [9:0]out_30;
  output [9:0]i_out_4_reg;
  output [9:0]i_out_5_reg;
  output [9:0]out_40;
  output [9:0]out_50;
  output [9:0]i_out_6_reg;
  output [9:0]i_out_7_reg;
  output [9:0]out_60;
  output [9:0]out_70;
  input clk;
  input [31:0]Q;

  wire [9:0]DOADO;
  wire [9:0]DOBDO;
  wire [31:0]Q;
  wire \accum[10]_i_2__0_n_0 ;
  wire \accum[10]_i_3__0_n_0 ;
  wire \accum[10]_i_4__0_n_0 ;
  wire \accum[10]_i_5__0_n_0 ;
  wire \accum[14]_i_2__0_n_0 ;
  wire \accum[14]_i_3__0_n_0 ;
  wire \accum[14]_i_4__0_n_0 ;
  wire \accum[14]_i_5__0_n_0 ;
  wire \accum[18]_i_2__0_n_0 ;
  wire \accum[18]_i_3__0_n_0 ;
  wire \accum[18]_i_4__0_n_0 ;
  wire \accum[18]_i_5__0_n_0 ;
  wire \accum[22]_i_2_n_0 ;
  wire \accum[22]_i_3__0_n_0 ;
  wire \accum[22]_i_4_n_0 ;
  wire \accum[22]_i_5_n_0 ;
  wire \accum[26]_i_2_n_0 ;
  wire \accum[26]_i_3_n_0 ;
  wire \accum[26]_i_4_n_0 ;
  wire \accum[26]_i_5_n_0 ;
  wire \accum[2]_i_2__0_n_0 ;
  wire \accum[2]_i_3__0_n_0 ;
  wire \accum[2]_i_4__0_n_0 ;
  wire \accum[30]_i_2_n_0 ;
  wire \accum[30]_i_3_n_0 ;
  wire \accum[6]_i_2__0_n_0 ;
  wire \accum[6]_i_3__0_n_0 ;
  wire \accum[6]_i_4__0_n_0 ;
  wire \accum[6]_i_5__0_n_0 ;
  wire [31:2]accum_reg;
  wire \accum_reg[10]_i_1__0_n_0 ;
  wire \accum_reg[10]_i_1__0_n_4 ;
  wire \accum_reg[10]_i_1__0_n_5 ;
  wire \accum_reg[10]_i_1__0_n_6 ;
  wire \accum_reg[10]_i_1__0_n_7 ;
  wire \accum_reg[14]_i_1__0_n_0 ;
  wire \accum_reg[14]_i_1__0_n_4 ;
  wire \accum_reg[14]_i_1__0_n_5 ;
  wire \accum_reg[14]_i_1__0_n_6 ;
  wire \accum_reg[14]_i_1__0_n_7 ;
  wire \accum_reg[18]_i_1__0_n_0 ;
  wire \accum_reg[18]_i_1__0_n_4 ;
  wire \accum_reg[18]_i_1__0_n_5 ;
  wire \accum_reg[18]_i_1__0_n_6 ;
  wire \accum_reg[18]_i_1__0_n_7 ;
  wire \accum_reg[22]_i_1__0_n_0 ;
  wire \accum_reg[22]_i_1__0_n_4 ;
  wire \accum_reg[22]_i_1__0_n_5 ;
  wire \accum_reg[22]_i_1__0_n_6 ;
  wire \accum_reg[22]_i_1__0_n_7 ;
  wire \accum_reg[26]_i_1_n_0 ;
  wire \accum_reg[26]_i_1_n_4 ;
  wire \accum_reg[26]_i_1_n_5 ;
  wire \accum_reg[26]_i_1_n_6 ;
  wire \accum_reg[26]_i_1_n_7 ;
  wire \accum_reg[2]_i_1__0_n_0 ;
  wire \accum_reg[2]_i_1__0_n_4 ;
  wire \accum_reg[2]_i_1__0_n_5 ;
  wire \accum_reg[2]_i_1__0_n_6 ;
  wire \accum_reg[2]_i_1__0_n_7 ;
  wire \accum_reg[30]_i_1_n_6 ;
  wire \accum_reg[30]_i_1_n_7 ;
  wire \accum_reg[6]_i_1__0_n_0 ;
  wire \accum_reg[6]_i_1__0_n_4 ;
  wire \accum_reg[6]_i_1__0_n_5 ;
  wire \accum_reg[6]_i_1__0_n_6 ;
  wire \accum_reg[6]_i_1__0_n_7 ;
  wire clk;
  wire [30:0]frequency_d1;
  wire \frequency_d2_reg[31]_srl2_n_0 ;
  wire [31:1]frequency_d3;
  wire [9:0]i_out_2_reg;
  wire [9:0]i_out_3_reg;
  wire [9:0]i_out_4_reg;
  wire [9:0]i_out_5_reg;
  wire [9:0]i_out_6_reg;
  wire [9:0]i_out_7_reg;
  wire [9:0]out_00;
  wire [9:0]out_10;
  wire [9:0]out_20;
  wire [9:0]out_30;
  wire [9:0]out_40;
  wire [9:0]out_50;
  wire [9:0]out_60;
  wire [9:0]out_70;
  wire [31:1]p_0_in_0;
  wire [9:0]sel;
  wire [31:2]tree_0;
  wire [31:2]tree_00;
  wire [31:22]tree_001;
  wire [31:22]tree_0010;
  wire tree_0010_carry__0_i_1__0_n_0;
  wire tree_0010_carry__0_i_2__0_n_0;
  wire tree_0010_carry__0_i_3__0_n_0;
  wire tree_0010_carry__0_i_4__0_n_0;
  wire tree_0010_carry__0_n_0;
  wire tree_0010_carry__1_i_1__0_n_0;
  wire tree_0010_carry__1_i_2__0_n_0;
  wire tree_0010_carry__1_i_3__0_n_0;
  wire tree_0010_carry__1_i_4__0_n_0;
  wire tree_0010_carry__1_n_0;
  wire tree_0010_carry__2_i_1__0_n_0;
  wire tree_0010_carry__2_i_2__0_n_0;
  wire tree_0010_carry__2_i_3__0_n_0;
  wire tree_0010_carry__2_i_4__0_n_0;
  wire tree_0010_carry__2_n_0;
  wire tree_0010_carry__3_i_1__0_n_0;
  wire tree_0010_carry__3_i_2__0_n_0;
  wire tree_0010_carry__3_i_3__0_n_0;
  wire tree_0010_carry__3_i_4__0_n_0;
  wire tree_0010_carry__3_n_0;
  wire tree_0010_carry__4_i_1__0_n_0;
  wire tree_0010_carry__4_i_2__0_n_0;
  wire tree_0010_carry__4_i_3_n_0;
  wire tree_0010_carry__4_i_4_n_0;
  wire tree_0010_carry__4_n_0;
  wire tree_0010_carry__5_i_1_n_0;
  wire tree_0010_carry__5_i_2_n_0;
  wire tree_0010_carry__5_i_3_n_0;
  wire tree_0010_carry__5_i_4_n_0;
  wire tree_0010_carry__5_n_0;
  wire tree_0010_carry__6_i_1_n_0;
  wire tree_0010_carry__6_i_2_n_0;
  wire tree_0010_carry_i_1__0_n_0;
  wire tree_0010_carry_i_2__0_n_0;
  wire tree_0010_carry_i_3__0_n_0;
  wire tree_0010_carry_i_4__0_n_0;
  wire tree_0010_carry_n_0;
  wire [31:1]tree_01;
  wire [31:2]tree_010;
  wire tree_010_carry__0_i_1__0_n_0;
  wire tree_010_carry__0_i_2__0_n_0;
  wire tree_010_carry__0_i_3__0_n_0;
  wire tree_010_carry__0_i_4__0_n_0;
  wire tree_010_carry__0_n_0;
  wire tree_010_carry__1_i_1__0_n_0;
  wire tree_010_carry__1_i_2__0_n_0;
  wire tree_010_carry__1_i_3__0_n_0;
  wire tree_010_carry__1_i_4__0_n_0;
  wire tree_010_carry__1_n_0;
  wire tree_010_carry__2_i_1__0_n_0;
  wire tree_010_carry__2_i_2__0_n_0;
  wire tree_010_carry__2_i_3__0_n_0;
  wire tree_010_carry__2_i_4__0_n_0;
  wire tree_010_carry__2_n_0;
  wire tree_010_carry__3_i_1__0_n_0;
  wire tree_010_carry__3_i_2__0_n_0;
  wire tree_010_carry__3_i_3__0_n_0;
  wire tree_010_carry__3_i_4__0_n_0;
  wire tree_010_carry__3_n_0;
  wire tree_010_carry__4_i_1__0_n_0;
  wire tree_010_carry__4_i_2__0_n_0;
  wire tree_010_carry__4_i_3__0_n_0;
  wire tree_010_carry__4_i_4_n_0;
  wire tree_010_carry__4_n_0;
  wire tree_010_carry__5_i_1_n_0;
  wire tree_010_carry__5_i_2_n_0;
  wire tree_010_carry__5_i_3_n_0;
  wire tree_010_carry__5_i_4_n_0;
  wire tree_010_carry__5_n_0;
  wire tree_010_carry__6_i_1_n_0;
  wire tree_010_carry__6_i_2_n_0;
  wire tree_010_carry__6_i_3_n_0;
  wire tree_010_carry_i_1__0_n_0;
  wire tree_010_carry_i_2__0_n_0;
  wire tree_010_carry_i_3__0_n_0;
  wire tree_010_carry_n_0;
  wire \tree_010_reg_n_0_[22] ;
  wire \tree_010_reg_n_0_[23] ;
  wire \tree_010_reg_n_0_[24] ;
  wire \tree_010_reg_n_0_[25] ;
  wire \tree_010_reg_n_0_[26] ;
  wire \tree_010_reg_n_0_[27] ;
  wire \tree_010_reg_n_0_[28] ;
  wire \tree_010_reg_n_0_[29] ;
  wire \tree_010_reg_n_0_[30] ;
  wire \tree_010_reg_n_0_[31] ;
  wire [31:22]tree_011;
  wire [31:22]tree_0110;
  wire tree_0110_carry__0_i_1__0_n_0;
  wire tree_0110_carry__0_i_2__0_n_0;
  wire tree_0110_carry__0_i_3__0_n_0;
  wire tree_0110_carry__0_i_4__0_n_0;
  wire tree_0110_carry__0_n_0;
  wire tree_0110_carry__1_i_1__0_n_0;
  wire tree_0110_carry__1_i_2__0_n_0;
  wire tree_0110_carry__1_i_3__0_n_0;
  wire tree_0110_carry__1_i_4__0_n_0;
  wire tree_0110_carry__1_n_0;
  wire tree_0110_carry__2_i_1__0_n_0;
  wire tree_0110_carry__2_i_2__0_n_0;
  wire tree_0110_carry__2_i_3__0_n_0;
  wire tree_0110_carry__2_i_4__0_n_0;
  wire tree_0110_carry__2_n_0;
  wire tree_0110_carry__3_i_1__0_n_0;
  wire tree_0110_carry__3_i_2__0_n_0;
  wire tree_0110_carry__3_i_3__0_n_0;
  wire tree_0110_carry__3_i_4__0_n_0;
  wire tree_0110_carry__3_n_0;
  wire tree_0110_carry__4_i_1__0_n_0;
  wire tree_0110_carry__4_i_2__0_n_0;
  wire tree_0110_carry__4_i_3__0_n_0;
  wire tree_0110_carry__4_i_4_n_0;
  wire tree_0110_carry__4_n_0;
  wire tree_0110_carry__5_i_1_n_0;
  wire tree_0110_carry__5_i_2_n_0;
  wire tree_0110_carry__5_i_3_n_0;
  wire tree_0110_carry__5_i_4_n_0;
  wire tree_0110_carry__5_n_0;
  wire tree_0110_carry__6_i_1_n_0;
  wire tree_0110_carry__6_i_2_n_0;
  wire tree_0110_carry__6_i_3_n_0;
  wire tree_0110_carry_i_1__0_n_0;
  wire tree_0110_carry_i_2__0_n_0;
  wire tree_0110_carry_i_3__0_n_0;
  wire tree_0110_carry_i_4__0_n_0;
  wire tree_0110_carry_n_0;
  wire [31:2]tree_1;
  wire [31:2]tree_10;
  wire [31:22]tree_100;
  wire [31:22]tree_101;
  wire [31:22]tree_1010;
  wire tree_1010_carry__0_i_1__0_n_0;
  wire tree_1010_carry__0_i_2__0_n_0;
  wire tree_1010_carry__0_i_3__0_n_0;
  wire tree_1010_carry__0_i_4__0_n_0;
  wire tree_1010_carry__0_n_0;
  wire tree_1010_carry__1_i_1__0_n_0;
  wire tree_1010_carry__1_i_2__0_n_0;
  wire tree_1010_carry__1_i_3__0_n_0;
  wire tree_1010_carry__1_i_4__0_n_0;
  wire tree_1010_carry__1_n_0;
  wire tree_1010_carry__2_i_1__0_n_0;
  wire tree_1010_carry__2_i_2__0_n_0;
  wire tree_1010_carry__2_i_3__0_n_0;
  wire tree_1010_carry__2_i_4__0_n_0;
  wire tree_1010_carry__2_n_0;
  wire tree_1010_carry__3_i_1__0_n_0;
  wire tree_1010_carry__3_i_2__0_n_0;
  wire tree_1010_carry__3_i_3__0_n_0;
  wire tree_1010_carry__3_i_4__0_n_0;
  wire tree_1010_carry__3_n_0;
  wire tree_1010_carry__4_i_1__0_n_0;
  wire tree_1010_carry__4_i_2__0_n_0;
  wire tree_1010_carry__4_i_3_n_0;
  wire tree_1010_carry__4_i_4_n_0;
  wire tree_1010_carry__4_n_0;
  wire tree_1010_carry__5_i_1_n_0;
  wire tree_1010_carry__5_i_2_n_0;
  wire tree_1010_carry__5_i_3_n_0;
  wire tree_1010_carry__5_i_4_n_0;
  wire tree_1010_carry__5_n_0;
  wire tree_1010_carry__6_i_1_n_0;
  wire tree_1010_carry__6_i_2_n_0;
  wire tree_1010_carry_i_1__0_n_0;
  wire tree_1010_carry_i_2__0_n_0;
  wire tree_1010_carry_i_3__0_n_0;
  wire tree_1010_carry_i_4__0_n_0;
  wire tree_1010_carry_n_0;
  wire [31:2]tree_101_out;
  wire tree_10_carry__0_i_1__0_n_0;
  wire tree_10_carry__0_i_2__0_n_0;
  wire tree_10_carry__0_i_3__0_n_0;
  wire tree_10_carry__0_i_4__0_n_0;
  wire tree_10_carry__0_n_0;
  wire tree_10_carry__1_i_1__0_n_0;
  wire tree_10_carry__1_i_2__0_n_0;
  wire tree_10_carry__1_i_3__0_n_0;
  wire tree_10_carry__1_i_4__0_n_0;
  wire tree_10_carry__1_n_0;
  wire tree_10_carry__2_i_1__0_n_0;
  wire tree_10_carry__2_i_2__0_n_0;
  wire tree_10_carry__2_i_3__0_n_0;
  wire tree_10_carry__2_i_4__0_n_0;
  wire tree_10_carry__2_n_0;
  wire tree_10_carry__3_i_1__0_n_0;
  wire tree_10_carry__3_i_2__0_n_0;
  wire tree_10_carry__3_i_3__0_n_0;
  wire tree_10_carry__3_i_4__0_n_0;
  wire tree_10_carry__3_n_0;
  wire tree_10_carry__4_i_1_n_0;
  wire tree_10_carry__4_i_2__0_n_0;
  wire tree_10_carry__4_i_3__0_n_0;
  wire tree_10_carry__4_i_4_n_0;
  wire tree_10_carry__4_n_0;
  wire tree_10_carry__5_i_1_n_0;
  wire tree_10_carry__5_i_2_n_0;
  wire tree_10_carry__5_i_3_n_0;
  wire tree_10_carry__5_i_4_n_0;
  wire tree_10_carry__5_n_0;
  wire tree_10_carry__6_i_1_n_0;
  wire tree_10_carry__6_i_2_n_0;
  wire tree_10_carry__6_i_3_n_0;
  wire tree_10_carry_i_1__0_n_0;
  wire tree_10_carry_i_2__0_n_0;
  wire tree_10_carry_i_3__0_n_0;
  wire tree_10_carry_n_0;
  wire [31:1]tree_11;
  wire [31:1]tree_110;
  wire tree_110_carry__0_i_1__0_n_0;
  wire tree_110_carry__0_i_2__0_n_0;
  wire tree_110_carry__0_i_3__0_n_0;
  wire tree_110_carry__0_i_4__0_n_0;
  wire tree_110_carry__0_n_0;
  wire tree_110_carry__1_i_1__0_n_0;
  wire tree_110_carry__1_i_2__0_n_0;
  wire tree_110_carry__1_i_3__0_n_0;
  wire tree_110_carry__1_i_4__0_n_0;
  wire tree_110_carry__1_n_0;
  wire tree_110_carry__2_i_1__0_n_0;
  wire tree_110_carry__2_i_2__0_n_0;
  wire tree_110_carry__2_i_3__0_n_0;
  wire tree_110_carry__2_i_4__0_n_0;
  wire tree_110_carry__2_n_0;
  wire tree_110_carry__3_i_1__0_n_0;
  wire tree_110_carry__3_i_2__0_n_0;
  wire tree_110_carry__3_i_3__0_n_0;
  wire tree_110_carry__3_i_4__0_n_0;
  wire tree_110_carry__3_n_0;
  wire tree_110_carry__4_i_1__0_n_0;
  wire tree_110_carry__4_i_2__0_n_0;
  wire tree_110_carry__4_i_3__0_n_0;
  wire tree_110_carry__4_i_4_n_0;
  wire tree_110_carry__4_n_0;
  wire tree_110_carry__5_i_1_n_0;
  wire tree_110_carry__5_i_2_n_0;
  wire tree_110_carry__5_i_3_n_0;
  wire tree_110_carry__5_i_4_n_0;
  wire tree_110_carry__5_n_0;
  wire tree_110_carry__6_i_1_n_0;
  wire tree_110_carry__6_i_2_n_0;
  wire tree_110_carry__6_i_3_n_0;
  wire tree_110_carry_i_1__0_n_0;
  wire tree_110_carry_i_2__0_n_0;
  wire tree_110_carry_i_3__0_n_0;
  wire tree_110_carry_n_0;
  wire \tree_110_reg_n_0_[22] ;
  wire \tree_110_reg_n_0_[23] ;
  wire \tree_110_reg_n_0_[24] ;
  wire \tree_110_reg_n_0_[25] ;
  wire \tree_110_reg_n_0_[26] ;
  wire \tree_110_reg_n_0_[27] ;
  wire \tree_110_reg_n_0_[28] ;
  wire \tree_110_reg_n_0_[29] ;
  wire \tree_110_reg_n_0_[30] ;
  wire \tree_110_reg_n_0_[31] ;
  wire [31:22]tree_111;
  wire [31:22]tree_1110;
  wire tree_1110_carry__0_i_1__0_n_0;
  wire tree_1110_carry__0_i_2__0_n_0;
  wire tree_1110_carry__0_i_3__0_n_0;
  wire tree_1110_carry__0_i_4__0_n_0;
  wire tree_1110_carry__0_n_0;
  wire tree_1110_carry__1_i_1__0_n_0;
  wire tree_1110_carry__1_i_2__0_n_0;
  wire tree_1110_carry__1_i_3__0_n_0;
  wire tree_1110_carry__1_i_4__0_n_0;
  wire tree_1110_carry__1_n_0;
  wire tree_1110_carry__2_i_1__0_n_0;
  wire tree_1110_carry__2_i_2__0_n_0;
  wire tree_1110_carry__2_i_3__0_n_0;
  wire tree_1110_carry__2_i_4__0_n_0;
  wire tree_1110_carry__2_n_0;
  wire tree_1110_carry__3_i_1__0_n_0;
  wire tree_1110_carry__3_i_2__0_n_0;
  wire tree_1110_carry__3_i_3__0_n_0;
  wire tree_1110_carry__3_i_4__0_n_0;
  wire tree_1110_carry__3_n_0;
  wire tree_1110_carry__4_i_1__0_n_0;
  wire tree_1110_carry__4_i_2__0_n_0;
  wire tree_1110_carry__4_i_3__0_n_0;
  wire tree_1110_carry__4_i_4_n_0;
  wire tree_1110_carry__4_n_0;
  wire tree_1110_carry__5_i_1_n_0;
  wire tree_1110_carry__5_i_2_n_0;
  wire tree_1110_carry__5_i_3_n_0;
  wire tree_1110_carry__5_i_4_n_0;
  wire tree_1110_carry__5_n_0;
  wire tree_1110_carry__6_i_1_n_0;
  wire tree_1110_carry__6_i_2_n_0;
  wire tree_1110_carry__6_i_3_n_0;
  wire tree_1110_carry_i_1__0_n_0;
  wire tree_1110_carry_i_2__0_n_0;
  wire tree_1110_carry_i_3__0_n_0;
  wire tree_1110_carry_i_4__0_n_0;
  wire tree_1110_carry_n_0;
  wire [2:0]\NLW_accum_reg[10]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[14]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[18]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[22]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[26]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[2]_i_1__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_accum_reg[30]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_accum_reg[30]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_accum_reg[6]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]NLW_tree_0010_carry_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__3_O_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_tree_0010_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0010_carry__6_CO_UNCONNECTED;
  wire [3:2]NLW_tree_0010_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_tree_010_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_010_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tree_010_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__3_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__4_CO_UNCONNECTED;
  wire [0:0]NLW_tree_0110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_0110_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_0110_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tree_0110_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__3_O_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_tree_1010_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1010_carry__6_CO_UNCONNECTED;
  wire [3:2]NLW_tree_1010_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_10_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_tree_10_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_10_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tree_10_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry_CO_UNCONNECTED;
  wire [0:0]NLW_tree_110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_tree_110_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_110_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tree_110_carry__6_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__3_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__4_CO_UNCONNECTED;
  wire [0:0]NLW_tree_1110_carry__4_O_UNCONNECTED;
  wire [2:0]NLW_tree_1110_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_tree_1110_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tree_1110_carry__6_O_UNCONNECTED;
  wire [15:10]NLW_w_0_reg_rep_bsel_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_0_reg_rep_bsel_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_0_reg_rep_bsel_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_0_reg_rep_bsel_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_0_reg_rep_bsel_rep_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_0_reg_rep_bsel_rep_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_0_reg_rep_bsel_rep_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_0_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_2_reg_rep_bsel_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_2_reg_rep_bsel_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_2_reg_rep_bsel_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_2_reg_rep_bsel_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_2_reg_rep_bsel_rep_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_2_reg_rep_bsel_rep_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_2_reg_rep_bsel_rep_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_2_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_4_reg_rep_bsel_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_4_reg_rep_bsel_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_4_reg_rep_bsel_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_4_reg_rep_bsel_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_4_reg_rep_bsel_rep_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_4_reg_rep_bsel_rep_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_4_reg_rep_bsel_rep_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_4_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_6_reg_rep_bsel_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_6_reg_rep_bsel_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_6_reg_rep_bsel_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_6_reg_rep_bsel_DOPBDOP_UNCONNECTED;
  wire [15:10]NLW_w_6_reg_rep_bsel_rep_DOADO_UNCONNECTED;
  wire [15:10]NLW_w_6_reg_rep_bsel_rep_DOBDO_UNCONNECTED;
  wire [1:0]NLW_w_6_reg_rep_bsel_rep_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_w_6_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_2__0 
       (.I0(Q[10]),
        .I1(accum_reg[13]),
        .O(\accum[10]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_3__0 
       (.I0(Q[9]),
        .I1(accum_reg[12]),
        .O(\accum[10]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_4__0 
       (.I0(Q[8]),
        .I1(accum_reg[11]),
        .O(\accum[10]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[10]_i_5__0 
       (.I0(Q[7]),
        .I1(accum_reg[10]),
        .O(\accum[10]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_2__0 
       (.I0(Q[14]),
        .I1(accum_reg[17]),
        .O(\accum[14]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_3__0 
       (.I0(Q[13]),
        .I1(accum_reg[16]),
        .O(\accum[14]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_4__0 
       (.I0(Q[12]),
        .I1(accum_reg[15]),
        .O(\accum[14]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[14]_i_5__0 
       (.I0(Q[11]),
        .I1(accum_reg[14]),
        .O(\accum[14]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_2__0 
       (.I0(Q[18]),
        .I1(accum_reg[21]),
        .O(\accum[18]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_3__0 
       (.I0(Q[17]),
        .I1(accum_reg[20]),
        .O(\accum[18]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_4__0 
       (.I0(Q[16]),
        .I1(accum_reg[19]),
        .O(\accum[18]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[18]_i_5__0 
       (.I0(Q[15]),
        .I1(accum_reg[18]),
        .O(\accum[18]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_2 
       (.I0(Q[22]),
        .I1(accum_reg[25]),
        .O(\accum[22]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_3__0 
       (.I0(Q[21]),
        .I1(accum_reg[24]),
        .O(\accum[22]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_4 
       (.I0(Q[20]),
        .I1(accum_reg[23]),
        .O(\accum[22]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[22]_i_5 
       (.I0(Q[19]),
        .I1(accum_reg[22]),
        .O(\accum[22]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[26]_i_2 
       (.I0(Q[26]),
        .I1(accum_reg[29]),
        .O(\accum[26]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[26]_i_3 
       (.I0(Q[25]),
        .I1(accum_reg[28]),
        .O(\accum[26]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[26]_i_4 
       (.I0(Q[24]),
        .I1(accum_reg[27]),
        .O(\accum[26]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[26]_i_5 
       (.I0(Q[23]),
        .I1(accum_reg[26]),
        .O(\accum[26]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_2__0 
       (.I0(Q[2]),
        .I1(accum_reg[5]),
        .O(\accum[2]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_3__0 
       (.I0(Q[1]),
        .I1(accum_reg[4]),
        .O(\accum[2]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[2]_i_4__0 
       (.I0(Q[0]),
        .I1(accum_reg[3]),
        .O(\accum[2]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[30]_i_2 
       (.I0(Q[28]),
        .I1(accum_reg[31]),
        .O(\accum[30]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[30]_i_3 
       (.I0(Q[27]),
        .I1(accum_reg[30]),
        .O(\accum[30]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_2__0 
       (.I0(Q[6]),
        .I1(accum_reg[9]),
        .O(\accum[6]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_3__0 
       (.I0(Q[5]),
        .I1(accum_reg[8]),
        .O(\accum[6]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_4__0 
       (.I0(Q[4]),
        .I1(accum_reg[7]),
        .O(\accum[6]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \accum[6]_i_5__0 
       (.I0(Q[3]),
        .I1(accum_reg[6]),
        .O(\accum[6]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__0_n_7 ),
        .Q(accum_reg[10]),
        .R(1'b0));
  CARRY4 \accum_reg[10]_i_1__0 
       (.CI(\accum_reg[6]_i_1__0_n_0 ),
        .CO({\accum_reg[10]_i_1__0_n_0 ,\NLW_accum_reg[10]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[10:7]),
        .O({\accum_reg[10]_i_1__0_n_4 ,\accum_reg[10]_i_1__0_n_5 ,\accum_reg[10]_i_1__0_n_6 ,\accum_reg[10]_i_1__0_n_7 }),
        .S({\accum[10]_i_2__0_n_0 ,\accum[10]_i_3__0_n_0 ,\accum[10]_i_4__0_n_0 ,\accum[10]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__0_n_6 ),
        .Q(accum_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__0_n_5 ),
        .Q(accum_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[10]_i_1__0_n_4 ),
        .Q(accum_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__0_n_7 ),
        .Q(accum_reg[14]),
        .R(1'b0));
  CARRY4 \accum_reg[14]_i_1__0 
       (.CI(\accum_reg[10]_i_1__0_n_0 ),
        .CO({\accum_reg[14]_i_1__0_n_0 ,\NLW_accum_reg[14]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[14:11]),
        .O({\accum_reg[14]_i_1__0_n_4 ,\accum_reg[14]_i_1__0_n_5 ,\accum_reg[14]_i_1__0_n_6 ,\accum_reg[14]_i_1__0_n_7 }),
        .S({\accum[14]_i_2__0_n_0 ,\accum[14]_i_3__0_n_0 ,\accum[14]_i_4__0_n_0 ,\accum[14]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__0_n_6 ),
        .Q(accum_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__0_n_5 ),
        .Q(accum_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[14]_i_1__0_n_4 ),
        .Q(accum_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__0_n_7 ),
        .Q(accum_reg[18]),
        .R(1'b0));
  CARRY4 \accum_reg[18]_i_1__0 
       (.CI(\accum_reg[14]_i_1__0_n_0 ),
        .CO({\accum_reg[18]_i_1__0_n_0 ,\NLW_accum_reg[18]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[18:15]),
        .O({\accum_reg[18]_i_1__0_n_4 ,\accum_reg[18]_i_1__0_n_5 ,\accum_reg[18]_i_1__0_n_6 ,\accum_reg[18]_i_1__0_n_7 }),
        .S({\accum[18]_i_2__0_n_0 ,\accum[18]_i_3__0_n_0 ,\accum[18]_i_4__0_n_0 ,\accum[18]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__0_n_6 ),
        .Q(accum_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__0_n_5 ),
        .Q(accum_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[18]_i_1__0_n_4 ),
        .Q(accum_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__0_n_7 ),
        .Q(accum_reg[22]),
        .R(1'b0));
  CARRY4 \accum_reg[22]_i_1__0 
       (.CI(\accum_reg[18]_i_1__0_n_0 ),
        .CO({\accum_reg[22]_i_1__0_n_0 ,\NLW_accum_reg[22]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[22:19]),
        .O({\accum_reg[22]_i_1__0_n_4 ,\accum_reg[22]_i_1__0_n_5 ,\accum_reg[22]_i_1__0_n_6 ,\accum_reg[22]_i_1__0_n_7 }),
        .S({\accum[22]_i_2_n_0 ,\accum[22]_i_3__0_n_0 ,\accum[22]_i_4_n_0 ,\accum[22]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__0_n_6 ),
        .Q(accum_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__0_n_5 ),
        .Q(accum_reg[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[22]_i_1__0_n_4 ),
        .Q(accum_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[26]_i_1_n_7 ),
        .Q(accum_reg[26]),
        .R(1'b0));
  CARRY4 \accum_reg[26]_i_1 
       (.CI(\accum_reg[22]_i_1__0_n_0 ),
        .CO({\accum_reg[26]_i_1_n_0 ,\NLW_accum_reg[26]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[26:23]),
        .O({\accum_reg[26]_i_1_n_4 ,\accum_reg[26]_i_1_n_5 ,\accum_reg[26]_i_1_n_6 ,\accum_reg[26]_i_1_n_7 }),
        .S({\accum[26]_i_2_n_0 ,\accum[26]_i_3_n_0 ,\accum[26]_i_4_n_0 ,\accum[26]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[26]_i_1_n_6 ),
        .Q(accum_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[26]_i_1_n_5 ),
        .Q(accum_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[26]_i_1_n_4 ),
        .Q(accum_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__0_n_7 ),
        .Q(accum_reg[2]),
        .R(1'b0));
  CARRY4 \accum_reg[2]_i_1__0 
       (.CI(1'b0),
        .CO({\accum_reg[2]_i_1__0_n_0 ,\NLW_accum_reg[2]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({Q[2:0],1'b0}),
        .O({\accum_reg[2]_i_1__0_n_4 ,\accum_reg[2]_i_1__0_n_5 ,\accum_reg[2]_i_1__0_n_6 ,\accum_reg[2]_i_1__0_n_7 }),
        .S({\accum[2]_i_2__0_n_0 ,\accum[2]_i_3__0_n_0 ,\accum[2]_i_4__0_n_0 ,accum_reg[2]}));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[30]_i_1_n_7 ),
        .Q(accum_reg[30]),
        .R(1'b0));
  CARRY4 \accum_reg[30]_i_1 
       (.CI(\accum_reg[26]_i_1_n_0 ),
        .CO(\NLW_accum_reg[30]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[27]}),
        .O({\NLW_accum_reg[30]_i_1_O_UNCONNECTED [3:2],\accum_reg[30]_i_1_n_6 ,\accum_reg[30]_i_1_n_7 }),
        .S({1'b0,1'b0,\accum[30]_i_2_n_0 ,\accum[30]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[30]_i_1_n_6 ),
        .Q(accum_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__0_n_6 ),
        .Q(accum_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__0_n_5 ),
        .Q(accum_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[2]_i_1__0_n_4 ),
        .Q(accum_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__0_n_7 ),
        .Q(accum_reg[6]),
        .R(1'b0));
  CARRY4 \accum_reg[6]_i_1__0 
       (.CI(\accum_reg[2]_i_1__0_n_0 ),
        .CO({\accum_reg[6]_i_1__0_n_0 ,\NLW_accum_reg[6]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(Q[6:3]),
        .O({\accum_reg[6]_i_1__0_n_4 ,\accum_reg[6]_i_1__0_n_5 ,\accum_reg[6]_i_1__0_n_6 ,\accum_reg[6]_i_1__0_n_7 }),
        .S({\accum[6]_i_2__0_n_0 ,\accum[6]_i_3__0_n_0 ,\accum[6]_i_4__0_n_0 ,\accum[6]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__0_n_6 ),
        .Q(accum_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__0_n_5 ),
        .Q(accum_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \accum_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\accum_reg[6]_i_1__0_n_4 ),
        .Q(accum_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(frequency_d1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(frequency_d1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(frequency_d1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(frequency_d1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(frequency_d1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(frequency_d1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(frequency_d1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(frequency_d1[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(frequency_d1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(frequency_d1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(frequency_d1[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(frequency_d1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(frequency_d1[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(frequency_d1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(frequency_d1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(frequency_d1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(frequency_d1[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(frequency_d1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(frequency_d1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(frequency_d1[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(frequency_d1[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(frequency_d1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(frequency_d1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(frequency_d1[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(frequency_d1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(frequency_d1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(frequency_d1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(frequency_d1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(frequency_d1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(frequency_d1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(frequency_d1[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[0]),
        .Q(p_0_in_0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[10]),
        .Q(p_0_in_0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[11]),
        .Q(p_0_in_0[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[12]),
        .Q(p_0_in_0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[13]),
        .Q(p_0_in_0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[14]),
        .Q(p_0_in_0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[15]),
        .Q(p_0_in_0[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[16]),
        .Q(p_0_in_0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[17]),
        .Q(p_0_in_0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[18]),
        .Q(p_0_in_0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[19]),
        .Q(p_0_in_0[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[1]),
        .Q(p_0_in_0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[20]),
        .Q(p_0_in_0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[21]),
        .Q(p_0_in_0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[22]),
        .Q(p_0_in_0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[23]),
        .Q(p_0_in_0[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[24]),
        .Q(p_0_in_0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[25]),
        .Q(p_0_in_0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[26]),
        .Q(p_0_in_0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[27]),
        .Q(p_0_in_0[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[28]),
        .Q(p_0_in_0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[29]),
        .Q(p_0_in_0[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[2]),
        .Q(p_0_in_0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[30]),
        .Q(p_0_in_0[31]),
        .R(1'b0));
  (* srl_bus_name = "\transmitter_inst_1/nco_inst_1/frequency_d2_reg " *) 
  (* srl_name = "\transmitter_inst_1/nco_inst_1/frequency_d2_reg[31]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \frequency_d2_reg[31]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(Q[31]),
        .Q(\frequency_d2_reg[31]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[3]),
        .Q(p_0_in_0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[4]),
        .Q(p_0_in_0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[5]),
        .Q(p_0_in_0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[6]),
        .Q(p_0_in_0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[7]),
        .Q(p_0_in_0[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[8]),
        .Q(p_0_in_0[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d2_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(frequency_d1[9]),
        .Q(p_0_in_0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[11]),
        .Q(frequency_d3[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[12]),
        .Q(frequency_d3[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[13]),
        .Q(frequency_d3[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[14]),
        .Q(frequency_d3[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[15]),
        .Q(frequency_d3[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[16]),
        .Q(frequency_d3[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[17]),
        .Q(frequency_d3[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[18]),
        .Q(frequency_d3[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[19]),
        .Q(frequency_d3[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[20]),
        .Q(frequency_d3[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[2]),
        .Q(frequency_d3[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[21]),
        .Q(frequency_d3[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[22]),
        .Q(frequency_d3[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[23]),
        .Q(frequency_d3[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[24]),
        .Q(frequency_d3[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[25]),
        .Q(frequency_d3[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[26]),
        .Q(frequency_d3[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[27]),
        .Q(frequency_d3[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[28]),
        .Q(frequency_d3[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[29]),
        .Q(frequency_d3[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[30]),
        .Q(frequency_d3[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[3]),
        .Q(frequency_d3[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[31]),
        .Q(frequency_d3[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[31]__0 
       (.C(clk),
        .CE(1'b1),
        .D(\frequency_d2_reg[31]_srl2_n_0 ),
        .Q(frequency_d3[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[4]),
        .Q(frequency_d3[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[5]),
        .Q(frequency_d3[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[6]),
        .Q(frequency_d3[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[7]),
        .Q(frequency_d3[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[8]),
        .Q(frequency_d3[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[9]),
        .Q(frequency_d3[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_d3_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[10]),
        .Q(frequency_d3[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[22]),
        .Q(sel[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[23]),
        .Q(sel[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[24]),
        .Q(sel[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[25]),
        .Q(sel[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[26]),
        .Q(sel[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[27]),
        .Q(sel[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[28]),
        .Q(sel[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[29]),
        .Q(sel[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[30]),
        .Q(sel[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_000_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_00[31]),
        .Q(sel[9]),
        .R(1'b0));
  CARRY4 tree_0010_carry
       (.CI(1'b0),
        .CO({tree_0010_carry_n_0,NLW_tree_0010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[5:2]),
        .O(NLW_tree_0010_carry_O_UNCONNECTED[3:0]),
        .S({tree_0010_carry_i_1__0_n_0,tree_0010_carry_i_2__0_n_0,tree_0010_carry_i_3__0_n_0,tree_0010_carry_i_4__0_n_0}));
  CARRY4 tree_0010_carry__0
       (.CI(tree_0010_carry_n_0),
        .CO({tree_0010_carry__0_n_0,NLW_tree_0010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[9:6]),
        .O(NLW_tree_0010_carry__0_O_UNCONNECTED[3:0]),
        .S({tree_0010_carry__0_i_1__0_n_0,tree_0010_carry__0_i_2__0_n_0,tree_0010_carry__0_i_3__0_n_0,tree_0010_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_1__0
       (.I0(tree_00[9]),
        .I1(frequency_d3[9]),
        .O(tree_0010_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_2__0
       (.I0(tree_00[8]),
        .I1(frequency_d3[8]),
        .O(tree_0010_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_3__0
       (.I0(tree_00[7]),
        .I1(frequency_d3[7]),
        .O(tree_0010_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__0_i_4__0
       (.I0(tree_00[6]),
        .I1(frequency_d3[6]),
        .O(tree_0010_carry__0_i_4__0_n_0));
  CARRY4 tree_0010_carry__1
       (.CI(tree_0010_carry__0_n_0),
        .CO({tree_0010_carry__1_n_0,NLW_tree_0010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[13:10]),
        .O(NLW_tree_0010_carry__1_O_UNCONNECTED[3:0]),
        .S({tree_0010_carry__1_i_1__0_n_0,tree_0010_carry__1_i_2__0_n_0,tree_0010_carry__1_i_3__0_n_0,tree_0010_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_1__0
       (.I0(tree_00[13]),
        .I1(frequency_d3[13]),
        .O(tree_0010_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_2__0
       (.I0(tree_00[12]),
        .I1(frequency_d3[12]),
        .O(tree_0010_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_3__0
       (.I0(tree_00[11]),
        .I1(frequency_d3[11]),
        .O(tree_0010_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__1_i_4__0
       (.I0(tree_00[10]),
        .I1(frequency_d3[10]),
        .O(tree_0010_carry__1_i_4__0_n_0));
  CARRY4 tree_0010_carry__2
       (.CI(tree_0010_carry__1_n_0),
        .CO({tree_0010_carry__2_n_0,NLW_tree_0010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[17:14]),
        .O(NLW_tree_0010_carry__2_O_UNCONNECTED[3:0]),
        .S({tree_0010_carry__2_i_1__0_n_0,tree_0010_carry__2_i_2__0_n_0,tree_0010_carry__2_i_3__0_n_0,tree_0010_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_1__0
       (.I0(tree_00[17]),
        .I1(frequency_d3[17]),
        .O(tree_0010_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_2__0
       (.I0(tree_00[16]),
        .I1(frequency_d3[16]),
        .O(tree_0010_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_3__0
       (.I0(tree_00[15]),
        .I1(frequency_d3[15]),
        .O(tree_0010_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__2_i_4__0
       (.I0(tree_00[14]),
        .I1(frequency_d3[14]),
        .O(tree_0010_carry__2_i_4__0_n_0));
  CARRY4 tree_0010_carry__3
       (.CI(tree_0010_carry__2_n_0),
        .CO({tree_0010_carry__3_n_0,NLW_tree_0010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[21:18]),
        .O(NLW_tree_0010_carry__3_O_UNCONNECTED[3:0]),
        .S({tree_0010_carry__3_i_1__0_n_0,tree_0010_carry__3_i_2__0_n_0,tree_0010_carry__3_i_3__0_n_0,tree_0010_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_1__0
       (.I0(tree_00[21]),
        .I1(frequency_d3[21]),
        .O(tree_0010_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_2__0
       (.I0(tree_00[20]),
        .I1(frequency_d3[20]),
        .O(tree_0010_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_3__0
       (.I0(tree_00[19]),
        .I1(frequency_d3[19]),
        .O(tree_0010_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__3_i_4__0
       (.I0(tree_00[18]),
        .I1(frequency_d3[18]),
        .O(tree_0010_carry__3_i_4__0_n_0));
  CARRY4 tree_0010_carry__4
       (.CI(tree_0010_carry__3_n_0),
        .CO({tree_0010_carry__4_n_0,NLW_tree_0010_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[25:22]),
        .O(tree_0010[25:22]),
        .S({tree_0010_carry__4_i_1__0_n_0,tree_0010_carry__4_i_2__0_n_0,tree_0010_carry__4_i_3_n_0,tree_0010_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_1__0
       (.I0(tree_00[25]),
        .I1(frequency_d3[25]),
        .O(tree_0010_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_2__0
       (.I0(tree_00[24]),
        .I1(frequency_d3[24]),
        .O(tree_0010_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_3
       (.I0(tree_00[23]),
        .I1(frequency_d3[23]),
        .O(tree_0010_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__4_i_4
       (.I0(tree_00[22]),
        .I1(frequency_d3[22]),
        .O(tree_0010_carry__4_i_4_n_0));
  CARRY4 tree_0010_carry__5
       (.CI(tree_0010_carry__4_n_0),
        .CO({tree_0010_carry__5_n_0,NLW_tree_0010_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_00[29:26]),
        .O(tree_0010[29:26]),
        .S({tree_0010_carry__5_i_1_n_0,tree_0010_carry__5_i_2_n_0,tree_0010_carry__5_i_3_n_0,tree_0010_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__5_i_1
       (.I0(tree_00[29]),
        .I1(frequency_d3[29]),
        .O(tree_0010_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__5_i_2
       (.I0(tree_00[28]),
        .I1(frequency_d3[28]),
        .O(tree_0010_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__5_i_3
       (.I0(tree_00[27]),
        .I1(frequency_d3[27]),
        .O(tree_0010_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__5_i_4
       (.I0(tree_00[26]),
        .I1(frequency_d3[26]),
        .O(tree_0010_carry__5_i_4_n_0));
  CARRY4 tree_0010_carry__6
       (.CI(tree_0010_carry__5_n_0),
        .CO(NLW_tree_0010_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,tree_00[30]}),
        .O({NLW_tree_0010_carry__6_O_UNCONNECTED[3:2],tree_0010[31:30]}),
        .S({1'b0,1'b0,tree_0010_carry__6_i_1_n_0,tree_0010_carry__6_i_2_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__6_i_1
       (.I0(tree_00[31]),
        .I1(frequency_d3[31]),
        .O(tree_0010_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry__6_i_2
       (.I0(tree_00[30]),
        .I1(frequency_d3[30]),
        .O(tree_0010_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_1__0
       (.I0(tree_00[5]),
        .I1(frequency_d3[5]),
        .O(tree_0010_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_2__0
       (.I0(tree_00[4]),
        .I1(frequency_d3[4]),
        .O(tree_0010_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_3__0
       (.I0(tree_00[3]),
        .I1(frequency_d3[3]),
        .O(tree_0010_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0010_carry_i_4__0
       (.I0(tree_00[2]),
        .I1(frequency_d3[2]),
        .O(tree_0010_carry_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[22]),
        .Q(tree_001[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[23]),
        .Q(tree_001[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[24]),
        .Q(tree_001[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[25]),
        .Q(tree_001[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[26]),
        .Q(tree_001[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[27]),
        .Q(tree_001[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[28]),
        .Q(tree_001[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[29]),
        .Q(tree_001[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[30]),
        .Q(tree_001[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_001_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0010[31]),
        .Q(tree_001[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[10]),
        .Q(tree_00[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[11]),
        .Q(tree_00[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[12]),
        .Q(tree_00[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[13]),
        .Q(tree_00[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[14]),
        .Q(tree_00[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[15]),
        .Q(tree_00[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[16]),
        .Q(tree_00[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[17]),
        .Q(tree_00[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[18]),
        .Q(tree_00[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[19]),
        .Q(tree_00[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[20]),
        .Q(tree_00[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[21]),
        .Q(tree_00[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[22]),
        .Q(tree_00[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[23]),
        .Q(tree_00[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[24]),
        .Q(tree_00[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[25]),
        .Q(tree_00[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[26]),
        .Q(tree_00[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[27]),
        .Q(tree_00[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[28]),
        .Q(tree_00[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[29]),
        .Q(tree_00[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[2]),
        .Q(tree_00[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[30]),
        .Q(tree_00[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[31]),
        .Q(tree_00[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[3]),
        .Q(tree_00[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[4]),
        .Q(tree_00[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[5]),
        .Q(tree_00[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[6]),
        .Q(tree_00[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[7]),
        .Q(tree_00[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[8]),
        .Q(tree_00[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_00_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0[9]),
        .Q(tree_00[9]),
        .R(1'b0));
  CARRY4 tree_010_carry
       (.CI(1'b0),
        .CO({tree_010_carry_n_0,NLW_tree_010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({tree_0[4:2],1'b0}),
        .O({tree_010[4:2],tree_110[1]}),
        .S({tree_010_carry_i_1__0_n_0,tree_010_carry_i_2__0_n_0,tree_010_carry_i_3__0_n_0,p_0_in_0[1]}));
  CARRY4 tree_010_carry__0
       (.CI(tree_010_carry_n_0),
        .CO({tree_010_carry__0_n_0,NLW_tree_010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[8:5]),
        .O(tree_010[8:5]),
        .S({tree_010_carry__0_i_1__0_n_0,tree_010_carry__0_i_2__0_n_0,tree_010_carry__0_i_3__0_n_0,tree_010_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_1__0
       (.I0(tree_0[8]),
        .I1(p_0_in_0[8]),
        .O(tree_010_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_2__0
       (.I0(tree_0[7]),
        .I1(p_0_in_0[7]),
        .O(tree_010_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_3__0
       (.I0(tree_0[6]),
        .I1(p_0_in_0[6]),
        .O(tree_010_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__0_i_4__0
       (.I0(tree_0[5]),
        .I1(p_0_in_0[5]),
        .O(tree_010_carry__0_i_4__0_n_0));
  CARRY4 tree_010_carry__1
       (.CI(tree_010_carry__0_n_0),
        .CO({tree_010_carry__1_n_0,NLW_tree_010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[12:9]),
        .O(tree_010[12:9]),
        .S({tree_010_carry__1_i_1__0_n_0,tree_010_carry__1_i_2__0_n_0,tree_010_carry__1_i_3__0_n_0,tree_010_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_1__0
       (.I0(tree_0[12]),
        .I1(p_0_in_0[12]),
        .O(tree_010_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_2__0
       (.I0(tree_0[11]),
        .I1(p_0_in_0[11]),
        .O(tree_010_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_3__0
       (.I0(tree_0[10]),
        .I1(p_0_in_0[10]),
        .O(tree_010_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__1_i_4__0
       (.I0(tree_0[9]),
        .I1(p_0_in_0[9]),
        .O(tree_010_carry__1_i_4__0_n_0));
  CARRY4 tree_010_carry__2
       (.CI(tree_010_carry__1_n_0),
        .CO({tree_010_carry__2_n_0,NLW_tree_010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[16:13]),
        .O(tree_010[16:13]),
        .S({tree_010_carry__2_i_1__0_n_0,tree_010_carry__2_i_2__0_n_0,tree_010_carry__2_i_3__0_n_0,tree_010_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_1__0
       (.I0(tree_0[16]),
        .I1(p_0_in_0[16]),
        .O(tree_010_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_2__0
       (.I0(tree_0[15]),
        .I1(p_0_in_0[15]),
        .O(tree_010_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_3__0
       (.I0(tree_0[14]),
        .I1(p_0_in_0[14]),
        .O(tree_010_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__2_i_4__0
       (.I0(tree_0[13]),
        .I1(p_0_in_0[13]),
        .O(tree_010_carry__2_i_4__0_n_0));
  CARRY4 tree_010_carry__3
       (.CI(tree_010_carry__2_n_0),
        .CO({tree_010_carry__3_n_0,NLW_tree_010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[20:17]),
        .O(tree_010[20:17]),
        .S({tree_010_carry__3_i_1__0_n_0,tree_010_carry__3_i_2__0_n_0,tree_010_carry__3_i_3__0_n_0,tree_010_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_1__0
       (.I0(tree_0[20]),
        .I1(p_0_in_0[20]),
        .O(tree_010_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_2__0
       (.I0(tree_0[19]),
        .I1(p_0_in_0[19]),
        .O(tree_010_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_3__0
       (.I0(tree_0[18]),
        .I1(p_0_in_0[18]),
        .O(tree_010_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__3_i_4__0
       (.I0(tree_0[17]),
        .I1(p_0_in_0[17]),
        .O(tree_010_carry__3_i_4__0_n_0));
  CARRY4 tree_010_carry__4
       (.CI(tree_010_carry__3_n_0),
        .CO({tree_010_carry__4_n_0,NLW_tree_010_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[24:21]),
        .O(tree_010[24:21]),
        .S({tree_010_carry__4_i_1__0_n_0,tree_010_carry__4_i_2__0_n_0,tree_010_carry__4_i_3__0_n_0,tree_010_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_1__0
       (.I0(tree_0[24]),
        .I1(p_0_in_0[24]),
        .O(tree_010_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_2__0
       (.I0(tree_0[23]),
        .I1(p_0_in_0[23]),
        .O(tree_010_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_3__0
       (.I0(tree_0[22]),
        .I1(p_0_in_0[22]),
        .O(tree_010_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__4_i_4
       (.I0(tree_0[21]),
        .I1(p_0_in_0[21]),
        .O(tree_010_carry__4_i_4_n_0));
  CARRY4 tree_010_carry__5
       (.CI(tree_010_carry__4_n_0),
        .CO({tree_010_carry__5_n_0,NLW_tree_010_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_0[28:25]),
        .O(tree_010[28:25]),
        .S({tree_010_carry__5_i_1_n_0,tree_010_carry__5_i_2_n_0,tree_010_carry__5_i_3_n_0,tree_010_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__5_i_1
       (.I0(tree_0[28]),
        .I1(p_0_in_0[28]),
        .O(tree_010_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__5_i_2
       (.I0(tree_0[27]),
        .I1(p_0_in_0[27]),
        .O(tree_010_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__5_i_3
       (.I0(tree_0[26]),
        .I1(p_0_in_0[26]),
        .O(tree_010_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__5_i_4
       (.I0(tree_0[25]),
        .I1(p_0_in_0[25]),
        .O(tree_010_carry__5_i_4_n_0));
  CARRY4 tree_010_carry__6
       (.CI(tree_010_carry__5_n_0),
        .CO(NLW_tree_010_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,tree_0[30:29]}),
        .O({NLW_tree_010_carry__6_O_UNCONNECTED[3],tree_010[31:29]}),
        .S({1'b0,tree_010_carry__6_i_1_n_0,tree_010_carry__6_i_2_n_0,tree_010_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__6_i_1
       (.I0(tree_0[31]),
        .I1(p_0_in_0[31]),
        .O(tree_010_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__6_i_2
       (.I0(tree_0[30]),
        .I1(p_0_in_0[30]),
        .O(tree_010_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry__6_i_3
       (.I0(tree_0[29]),
        .I1(p_0_in_0[29]),
        .O(tree_010_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_1__0
       (.I0(tree_0[4]),
        .I1(p_0_in_0[4]),
        .O(tree_010_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_2__0
       (.I0(tree_0[3]),
        .I1(p_0_in_0[3]),
        .O(tree_010_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_010_carry_i_3__0
       (.I0(tree_0[2]),
        .I1(p_0_in_0[2]),
        .O(tree_010_carry_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[22]),
        .Q(\tree_010_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[23]),
        .Q(\tree_010_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[24]),
        .Q(\tree_010_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[25]),
        .Q(\tree_010_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[26]),
        .Q(\tree_010_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[27]),
        .Q(\tree_010_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[28]),
        .Q(\tree_010_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[29]),
        .Q(\tree_010_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[30]),
        .Q(\tree_010_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_010_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_01[31]),
        .Q(\tree_010_reg_n_0_[31] ),
        .R(1'b0));
  CARRY4 tree_0110_carry
       (.CI(1'b0),
        .CO({tree_0110_carry_n_0,NLW_tree_0110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[4:1]),
        .O(NLW_tree_0110_carry_O_UNCONNECTED[3:0]),
        .S({tree_0110_carry_i_1__0_n_0,tree_0110_carry_i_2__0_n_0,tree_0110_carry_i_3__0_n_0,tree_0110_carry_i_4__0_n_0}));
  CARRY4 tree_0110_carry__0
       (.CI(tree_0110_carry_n_0),
        .CO({tree_0110_carry__0_n_0,NLW_tree_0110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[8:5]),
        .O(NLW_tree_0110_carry__0_O_UNCONNECTED[3:0]),
        .S({tree_0110_carry__0_i_1__0_n_0,tree_0110_carry__0_i_2__0_n_0,tree_0110_carry__0_i_3__0_n_0,tree_0110_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_1__0
       (.I0(tree_01[8]),
        .I1(frequency_d3[8]),
        .O(tree_0110_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_2__0
       (.I0(tree_01[7]),
        .I1(frequency_d3[7]),
        .O(tree_0110_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_3__0
       (.I0(tree_01[6]),
        .I1(frequency_d3[6]),
        .O(tree_0110_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__0_i_4__0
       (.I0(tree_01[5]),
        .I1(frequency_d3[5]),
        .O(tree_0110_carry__0_i_4__0_n_0));
  CARRY4 tree_0110_carry__1
       (.CI(tree_0110_carry__0_n_0),
        .CO({tree_0110_carry__1_n_0,NLW_tree_0110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[12:9]),
        .O(NLW_tree_0110_carry__1_O_UNCONNECTED[3:0]),
        .S({tree_0110_carry__1_i_1__0_n_0,tree_0110_carry__1_i_2__0_n_0,tree_0110_carry__1_i_3__0_n_0,tree_0110_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_1__0
       (.I0(tree_01[12]),
        .I1(frequency_d3[12]),
        .O(tree_0110_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_2__0
       (.I0(tree_01[11]),
        .I1(frequency_d3[11]),
        .O(tree_0110_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_3__0
       (.I0(tree_01[10]),
        .I1(frequency_d3[10]),
        .O(tree_0110_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__1_i_4__0
       (.I0(tree_01[9]),
        .I1(frequency_d3[9]),
        .O(tree_0110_carry__1_i_4__0_n_0));
  CARRY4 tree_0110_carry__2
       (.CI(tree_0110_carry__1_n_0),
        .CO({tree_0110_carry__2_n_0,NLW_tree_0110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[16:13]),
        .O(NLW_tree_0110_carry__2_O_UNCONNECTED[3:0]),
        .S({tree_0110_carry__2_i_1__0_n_0,tree_0110_carry__2_i_2__0_n_0,tree_0110_carry__2_i_3__0_n_0,tree_0110_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_1__0
       (.I0(tree_01[16]),
        .I1(frequency_d3[16]),
        .O(tree_0110_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_2__0
       (.I0(tree_01[15]),
        .I1(frequency_d3[15]),
        .O(tree_0110_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_3__0
       (.I0(tree_01[14]),
        .I1(frequency_d3[14]),
        .O(tree_0110_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__2_i_4__0
       (.I0(tree_01[13]),
        .I1(frequency_d3[13]),
        .O(tree_0110_carry__2_i_4__0_n_0));
  CARRY4 tree_0110_carry__3
       (.CI(tree_0110_carry__2_n_0),
        .CO({tree_0110_carry__3_n_0,NLW_tree_0110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[20:17]),
        .O(NLW_tree_0110_carry__3_O_UNCONNECTED[3:0]),
        .S({tree_0110_carry__3_i_1__0_n_0,tree_0110_carry__3_i_2__0_n_0,tree_0110_carry__3_i_3__0_n_0,tree_0110_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_1__0
       (.I0(tree_01[20]),
        .I1(frequency_d3[20]),
        .O(tree_0110_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_2__0
       (.I0(tree_01[19]),
        .I1(frequency_d3[19]),
        .O(tree_0110_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_3__0
       (.I0(tree_01[18]),
        .I1(frequency_d3[18]),
        .O(tree_0110_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__3_i_4__0
       (.I0(tree_01[17]),
        .I1(frequency_d3[17]),
        .O(tree_0110_carry__3_i_4__0_n_0));
  CARRY4 tree_0110_carry__4
       (.CI(tree_0110_carry__3_n_0),
        .CO({tree_0110_carry__4_n_0,NLW_tree_0110_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[24:21]),
        .O({tree_0110[24:22],NLW_tree_0110_carry__4_O_UNCONNECTED[0]}),
        .S({tree_0110_carry__4_i_1__0_n_0,tree_0110_carry__4_i_2__0_n_0,tree_0110_carry__4_i_3__0_n_0,tree_0110_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_1__0
       (.I0(tree_01[24]),
        .I1(frequency_d3[24]),
        .O(tree_0110_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_2__0
       (.I0(tree_01[23]),
        .I1(frequency_d3[23]),
        .O(tree_0110_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_3__0
       (.I0(tree_01[22]),
        .I1(frequency_d3[22]),
        .O(tree_0110_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__4_i_4
       (.I0(tree_01[21]),
        .I1(frequency_d3[21]),
        .O(tree_0110_carry__4_i_4_n_0));
  CARRY4 tree_0110_carry__5
       (.CI(tree_0110_carry__4_n_0),
        .CO({tree_0110_carry__5_n_0,NLW_tree_0110_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_01[28:25]),
        .O(tree_0110[28:25]),
        .S({tree_0110_carry__5_i_1_n_0,tree_0110_carry__5_i_2_n_0,tree_0110_carry__5_i_3_n_0,tree_0110_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__5_i_1
       (.I0(tree_01[28]),
        .I1(frequency_d3[28]),
        .O(tree_0110_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__5_i_2
       (.I0(tree_01[27]),
        .I1(frequency_d3[27]),
        .O(tree_0110_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__5_i_3
       (.I0(tree_01[26]),
        .I1(frequency_d3[26]),
        .O(tree_0110_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__5_i_4
       (.I0(tree_01[25]),
        .I1(frequency_d3[25]),
        .O(tree_0110_carry__5_i_4_n_0));
  CARRY4 tree_0110_carry__6
       (.CI(tree_0110_carry__5_n_0),
        .CO(NLW_tree_0110_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,tree_01[30:29]}),
        .O({NLW_tree_0110_carry__6_O_UNCONNECTED[3],tree_0110[31:29]}),
        .S({1'b0,tree_0110_carry__6_i_1_n_0,tree_0110_carry__6_i_2_n_0,tree_0110_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__6_i_1
       (.I0(tree_01[31]),
        .I1(frequency_d3[31]),
        .O(tree_0110_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__6_i_2
       (.I0(tree_01[30]),
        .I1(frequency_d3[30]),
        .O(tree_0110_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry__6_i_3
       (.I0(tree_01[29]),
        .I1(frequency_d3[29]),
        .O(tree_0110_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_1__0
       (.I0(tree_01[4]),
        .I1(frequency_d3[4]),
        .O(tree_0110_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_2__0
       (.I0(tree_01[3]),
        .I1(frequency_d3[3]),
        .O(tree_0110_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_3__0
       (.I0(tree_01[2]),
        .I1(frequency_d3[2]),
        .O(tree_0110_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_0110_carry_i_4__0
       (.I0(tree_01[1]),
        .I1(frequency_d3[1]),
        .O(tree_0110_carry_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[22]),
        .Q(tree_011[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[23]),
        .Q(tree_011[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[24]),
        .Q(tree_011[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[25]),
        .Q(tree_011[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[26]),
        .Q(tree_011[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[27]),
        .Q(tree_011[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[28]),
        .Q(tree_011[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[29]),
        .Q(tree_011[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[30]),
        .Q(tree_011[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_011_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_0110[31]),
        .Q(tree_011[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[10]),
        .Q(tree_01[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[11]),
        .Q(tree_01[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[12]),
        .Q(tree_01[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[13]),
        .Q(tree_01[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[14]),
        .Q(tree_01[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[15]),
        .Q(tree_01[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[16]),
        .Q(tree_01[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[17]),
        .Q(tree_01[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[18]),
        .Q(tree_01[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[19]),
        .Q(tree_01[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_0[1]),
        .Q(tree_01[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[20]),
        .Q(tree_01[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[21]),
        .Q(tree_01[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[22]),
        .Q(tree_01[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[23]),
        .Q(tree_01[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[24]),
        .Q(tree_01[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[25]),
        .Q(tree_01[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[26]),
        .Q(tree_01[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[27]),
        .Q(tree_01[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[28]),
        .Q(tree_01[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[29]),
        .Q(tree_01[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[2]),
        .Q(tree_01[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[30]),
        .Q(tree_01[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[31]),
        .Q(tree_01[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[3]),
        .Q(tree_01[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[4]),
        .Q(tree_01[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[5]),
        .Q(tree_01[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[6]),
        .Q(tree_01[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[7]),
        .Q(tree_01[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[8]),
        .Q(tree_01[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_01_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_010[9]),
        .Q(tree_01[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[10]),
        .Q(tree_0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[11]),
        .Q(tree_0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[12]),
        .Q(tree_0[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[13]),
        .Q(tree_0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[14]),
        .Q(tree_0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[15]),
        .Q(tree_0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[16]),
        .Q(tree_0[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[17]),
        .Q(tree_0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[18]),
        .Q(tree_0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[19]),
        .Q(tree_0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[20]),
        .Q(tree_0[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[21]),
        .Q(tree_0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[22]),
        .Q(tree_0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[23]),
        .Q(tree_0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[24]),
        .Q(tree_0[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[25]),
        .Q(tree_0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[26]),
        .Q(tree_0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[27]),
        .Q(tree_0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[28]),
        .Q(tree_0[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[29]),
        .Q(tree_0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[2]),
        .Q(tree_0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[30]),
        .Q(tree_0[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[31]),
        .Q(tree_0[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[3]),
        .Q(tree_0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[4]),
        .Q(tree_0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[5]),
        .Q(tree_0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[6]),
        .Q(tree_0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[7]),
        .Q(tree_0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[8]),
        .Q(tree_0[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_0_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(accum_reg[9]),
        .Q(tree_0[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[22]),
        .Q(tree_100[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[23]),
        .Q(tree_100[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[24]),
        .Q(tree_100[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[25]),
        .Q(tree_100[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[26]),
        .Q(tree_100[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[27]),
        .Q(tree_100[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[28]),
        .Q(tree_100[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[29]),
        .Q(tree_100[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[30]),
        .Q(tree_100[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_100_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_10[31]),
        .Q(tree_100[31]),
        .R(1'b0));
  CARRY4 tree_1010_carry
       (.CI(1'b0),
        .CO({tree_1010_carry_n_0,NLW_tree_1010_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[5:2]),
        .O(NLW_tree_1010_carry_O_UNCONNECTED[3:0]),
        .S({tree_1010_carry_i_1__0_n_0,tree_1010_carry_i_2__0_n_0,tree_1010_carry_i_3__0_n_0,tree_1010_carry_i_4__0_n_0}));
  CARRY4 tree_1010_carry__0
       (.CI(tree_1010_carry_n_0),
        .CO({tree_1010_carry__0_n_0,NLW_tree_1010_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[9:6]),
        .O(NLW_tree_1010_carry__0_O_UNCONNECTED[3:0]),
        .S({tree_1010_carry__0_i_1__0_n_0,tree_1010_carry__0_i_2__0_n_0,tree_1010_carry__0_i_3__0_n_0,tree_1010_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_1__0
       (.I0(tree_10[9]),
        .I1(frequency_d3[9]),
        .O(tree_1010_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_2__0
       (.I0(tree_10[8]),
        .I1(frequency_d3[8]),
        .O(tree_1010_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_3__0
       (.I0(tree_10[7]),
        .I1(frequency_d3[7]),
        .O(tree_1010_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__0_i_4__0
       (.I0(tree_10[6]),
        .I1(frequency_d3[6]),
        .O(tree_1010_carry__0_i_4__0_n_0));
  CARRY4 tree_1010_carry__1
       (.CI(tree_1010_carry__0_n_0),
        .CO({tree_1010_carry__1_n_0,NLW_tree_1010_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[13:10]),
        .O(NLW_tree_1010_carry__1_O_UNCONNECTED[3:0]),
        .S({tree_1010_carry__1_i_1__0_n_0,tree_1010_carry__1_i_2__0_n_0,tree_1010_carry__1_i_3__0_n_0,tree_1010_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_1__0
       (.I0(tree_10[13]),
        .I1(frequency_d3[13]),
        .O(tree_1010_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_2__0
       (.I0(tree_10[12]),
        .I1(frequency_d3[12]),
        .O(tree_1010_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_3__0
       (.I0(tree_10[11]),
        .I1(frequency_d3[11]),
        .O(tree_1010_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__1_i_4__0
       (.I0(tree_10[10]),
        .I1(frequency_d3[10]),
        .O(tree_1010_carry__1_i_4__0_n_0));
  CARRY4 tree_1010_carry__2
       (.CI(tree_1010_carry__1_n_0),
        .CO({tree_1010_carry__2_n_0,NLW_tree_1010_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[17:14]),
        .O(NLW_tree_1010_carry__2_O_UNCONNECTED[3:0]),
        .S({tree_1010_carry__2_i_1__0_n_0,tree_1010_carry__2_i_2__0_n_0,tree_1010_carry__2_i_3__0_n_0,tree_1010_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_1__0
       (.I0(tree_10[17]),
        .I1(frequency_d3[17]),
        .O(tree_1010_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_2__0
       (.I0(tree_10[16]),
        .I1(frequency_d3[16]),
        .O(tree_1010_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_3__0
       (.I0(tree_10[15]),
        .I1(frequency_d3[15]),
        .O(tree_1010_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__2_i_4__0
       (.I0(tree_10[14]),
        .I1(frequency_d3[14]),
        .O(tree_1010_carry__2_i_4__0_n_0));
  CARRY4 tree_1010_carry__3
       (.CI(tree_1010_carry__2_n_0),
        .CO({tree_1010_carry__3_n_0,NLW_tree_1010_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[21:18]),
        .O(NLW_tree_1010_carry__3_O_UNCONNECTED[3:0]),
        .S({tree_1010_carry__3_i_1__0_n_0,tree_1010_carry__3_i_2__0_n_0,tree_1010_carry__3_i_3__0_n_0,tree_1010_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_1__0
       (.I0(tree_10[21]),
        .I1(frequency_d3[21]),
        .O(tree_1010_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_2__0
       (.I0(tree_10[20]),
        .I1(frequency_d3[20]),
        .O(tree_1010_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_3__0
       (.I0(tree_10[19]),
        .I1(frequency_d3[19]),
        .O(tree_1010_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__3_i_4__0
       (.I0(tree_10[18]),
        .I1(frequency_d3[18]),
        .O(tree_1010_carry__3_i_4__0_n_0));
  CARRY4 tree_1010_carry__4
       (.CI(tree_1010_carry__3_n_0),
        .CO({tree_1010_carry__4_n_0,NLW_tree_1010_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[25:22]),
        .O(tree_1010[25:22]),
        .S({tree_1010_carry__4_i_1__0_n_0,tree_1010_carry__4_i_2__0_n_0,tree_1010_carry__4_i_3_n_0,tree_1010_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_1__0
       (.I0(tree_10[25]),
        .I1(frequency_d3[25]),
        .O(tree_1010_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_2__0
       (.I0(tree_10[24]),
        .I1(frequency_d3[24]),
        .O(tree_1010_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_3
       (.I0(tree_10[23]),
        .I1(frequency_d3[23]),
        .O(tree_1010_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__4_i_4
       (.I0(tree_10[22]),
        .I1(frequency_d3[22]),
        .O(tree_1010_carry__4_i_4_n_0));
  CARRY4 tree_1010_carry__5
       (.CI(tree_1010_carry__4_n_0),
        .CO({tree_1010_carry__5_n_0,NLW_tree_1010_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_10[29:26]),
        .O(tree_1010[29:26]),
        .S({tree_1010_carry__5_i_1_n_0,tree_1010_carry__5_i_2_n_0,tree_1010_carry__5_i_3_n_0,tree_1010_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__5_i_1
       (.I0(tree_10[29]),
        .I1(frequency_d3[29]),
        .O(tree_1010_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__5_i_2
       (.I0(tree_10[28]),
        .I1(frequency_d3[28]),
        .O(tree_1010_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__5_i_3
       (.I0(tree_10[27]),
        .I1(frequency_d3[27]),
        .O(tree_1010_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__5_i_4
       (.I0(tree_10[26]),
        .I1(frequency_d3[26]),
        .O(tree_1010_carry__5_i_4_n_0));
  CARRY4 tree_1010_carry__6
       (.CI(tree_1010_carry__5_n_0),
        .CO(NLW_tree_1010_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,tree_10[30]}),
        .O({NLW_tree_1010_carry__6_O_UNCONNECTED[3:2],tree_1010[31:30]}),
        .S({1'b0,1'b0,tree_1010_carry__6_i_1_n_0,tree_1010_carry__6_i_2_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__6_i_1
       (.I0(tree_10[31]),
        .I1(frequency_d3[31]),
        .O(tree_1010_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry__6_i_2
       (.I0(tree_10[30]),
        .I1(frequency_d3[30]),
        .O(tree_1010_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_1__0
       (.I0(tree_10[5]),
        .I1(frequency_d3[5]),
        .O(tree_1010_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_2__0
       (.I0(tree_10[4]),
        .I1(frequency_d3[4]),
        .O(tree_1010_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_3__0
       (.I0(tree_10[3]),
        .I1(frequency_d3[3]),
        .O(tree_1010_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1010_carry_i_4__0
       (.I0(tree_10[2]),
        .I1(frequency_d3[2]),
        .O(tree_1010_carry_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[22]),
        .Q(tree_101[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[23]),
        .Q(tree_101[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[24]),
        .Q(tree_101[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[25]),
        .Q(tree_101[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[26]),
        .Q(tree_101[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[27]),
        .Q(tree_101[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[28]),
        .Q(tree_101[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[29]),
        .Q(tree_101[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[30]),
        .Q(tree_101[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_101_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1010[31]),
        .Q(tree_101[31]),
        .R(1'b0));
  CARRY4 tree_10_carry
       (.CI(1'b0),
        .CO({tree_10_carry_n_0,NLW_tree_10_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({accum_reg[4:2],1'b0}),
        .O({tree_101_out[4:2],NLW_tree_10_carry_O_UNCONNECTED[0]}),
        .S({tree_10_carry_i_1__0_n_0,tree_10_carry_i_2__0_n_0,tree_10_carry_i_3__0_n_0,1'b0}));
  CARRY4 tree_10_carry__0
       (.CI(tree_10_carry_n_0),
        .CO({tree_10_carry__0_n_0,NLW_tree_10_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[8:5]),
        .O(tree_101_out[8:5]),
        .S({tree_10_carry__0_i_1__0_n_0,tree_10_carry__0_i_2__0_n_0,tree_10_carry__0_i_3__0_n_0,tree_10_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_1__0
       (.I0(accum_reg[8]),
        .I1(frequency_d1[6]),
        .O(tree_10_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_2__0
       (.I0(accum_reg[7]),
        .I1(frequency_d1[5]),
        .O(tree_10_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_3__0
       (.I0(accum_reg[6]),
        .I1(frequency_d1[4]),
        .O(tree_10_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__0_i_4__0
       (.I0(accum_reg[5]),
        .I1(frequency_d1[3]),
        .O(tree_10_carry__0_i_4__0_n_0));
  CARRY4 tree_10_carry__1
       (.CI(tree_10_carry__0_n_0),
        .CO({tree_10_carry__1_n_0,NLW_tree_10_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[12:9]),
        .O(tree_101_out[12:9]),
        .S({tree_10_carry__1_i_1__0_n_0,tree_10_carry__1_i_2__0_n_0,tree_10_carry__1_i_3__0_n_0,tree_10_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_1__0
       (.I0(accum_reg[12]),
        .I1(frequency_d1[10]),
        .O(tree_10_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_2__0
       (.I0(accum_reg[11]),
        .I1(frequency_d1[9]),
        .O(tree_10_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_3__0
       (.I0(accum_reg[10]),
        .I1(frequency_d1[8]),
        .O(tree_10_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__1_i_4__0
       (.I0(accum_reg[9]),
        .I1(frequency_d1[7]),
        .O(tree_10_carry__1_i_4__0_n_0));
  CARRY4 tree_10_carry__2
       (.CI(tree_10_carry__1_n_0),
        .CO({tree_10_carry__2_n_0,NLW_tree_10_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[16:13]),
        .O(tree_101_out[16:13]),
        .S({tree_10_carry__2_i_1__0_n_0,tree_10_carry__2_i_2__0_n_0,tree_10_carry__2_i_3__0_n_0,tree_10_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_1__0
       (.I0(accum_reg[16]),
        .I1(frequency_d1[14]),
        .O(tree_10_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_2__0
       (.I0(accum_reg[15]),
        .I1(frequency_d1[13]),
        .O(tree_10_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_3__0
       (.I0(accum_reg[14]),
        .I1(frequency_d1[12]),
        .O(tree_10_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__2_i_4__0
       (.I0(accum_reg[13]),
        .I1(frequency_d1[11]),
        .O(tree_10_carry__2_i_4__0_n_0));
  CARRY4 tree_10_carry__3
       (.CI(tree_10_carry__2_n_0),
        .CO({tree_10_carry__3_n_0,NLW_tree_10_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[20:17]),
        .O(tree_101_out[20:17]),
        .S({tree_10_carry__3_i_1__0_n_0,tree_10_carry__3_i_2__0_n_0,tree_10_carry__3_i_3__0_n_0,tree_10_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_1__0
       (.I0(accum_reg[20]),
        .I1(frequency_d1[18]),
        .O(tree_10_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_2__0
       (.I0(accum_reg[19]),
        .I1(frequency_d1[17]),
        .O(tree_10_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_3__0
       (.I0(accum_reg[18]),
        .I1(frequency_d1[16]),
        .O(tree_10_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__3_i_4__0
       (.I0(accum_reg[17]),
        .I1(frequency_d1[15]),
        .O(tree_10_carry__3_i_4__0_n_0));
  CARRY4 tree_10_carry__4
       (.CI(tree_10_carry__3_n_0),
        .CO({tree_10_carry__4_n_0,NLW_tree_10_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[24:21]),
        .O(tree_101_out[24:21]),
        .S({tree_10_carry__4_i_1_n_0,tree_10_carry__4_i_2__0_n_0,tree_10_carry__4_i_3__0_n_0,tree_10_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_1
       (.I0(accum_reg[24]),
        .I1(frequency_d1[22]),
        .O(tree_10_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_2__0
       (.I0(accum_reg[23]),
        .I1(frequency_d1[21]),
        .O(tree_10_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_3__0
       (.I0(accum_reg[22]),
        .I1(frequency_d1[20]),
        .O(tree_10_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__4_i_4
       (.I0(accum_reg[21]),
        .I1(frequency_d1[19]),
        .O(tree_10_carry__4_i_4_n_0));
  CARRY4 tree_10_carry__5
       (.CI(tree_10_carry__4_n_0),
        .CO({tree_10_carry__5_n_0,NLW_tree_10_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(accum_reg[28:25]),
        .O(tree_101_out[28:25]),
        .S({tree_10_carry__5_i_1_n_0,tree_10_carry__5_i_2_n_0,tree_10_carry__5_i_3_n_0,tree_10_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__5_i_1
       (.I0(accum_reg[28]),
        .I1(frequency_d1[26]),
        .O(tree_10_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__5_i_2
       (.I0(accum_reg[27]),
        .I1(frequency_d1[25]),
        .O(tree_10_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__5_i_3
       (.I0(accum_reg[26]),
        .I1(frequency_d1[24]),
        .O(tree_10_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__5_i_4
       (.I0(accum_reg[25]),
        .I1(frequency_d1[23]),
        .O(tree_10_carry__5_i_4_n_0));
  CARRY4 tree_10_carry__6
       (.CI(tree_10_carry__5_n_0),
        .CO(NLW_tree_10_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,accum_reg[30:29]}),
        .O({NLW_tree_10_carry__6_O_UNCONNECTED[3],tree_101_out[31:29]}),
        .S({1'b0,tree_10_carry__6_i_1_n_0,tree_10_carry__6_i_2_n_0,tree_10_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__6_i_1
       (.I0(accum_reg[31]),
        .I1(frequency_d1[29]),
        .O(tree_10_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__6_i_2
       (.I0(accum_reg[30]),
        .I1(frequency_d1[28]),
        .O(tree_10_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry__6_i_3
       (.I0(accum_reg[29]),
        .I1(frequency_d1[27]),
        .O(tree_10_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_1__0
       (.I0(accum_reg[4]),
        .I1(frequency_d1[2]),
        .O(tree_10_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_2__0
       (.I0(accum_reg[3]),
        .I1(frequency_d1[1]),
        .O(tree_10_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_10_carry_i_3__0
       (.I0(accum_reg[2]),
        .I1(frequency_d1[0]),
        .O(tree_10_carry_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[10]),
        .Q(tree_10[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[11]),
        .Q(tree_10[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[12]),
        .Q(tree_10[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[13]),
        .Q(tree_10[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[14]),
        .Q(tree_10[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[15]),
        .Q(tree_10[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[16]),
        .Q(tree_10[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[17]),
        .Q(tree_10[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[18]),
        .Q(tree_10[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[19]),
        .Q(tree_10[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[20]),
        .Q(tree_10[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[21]),
        .Q(tree_10[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[22]),
        .Q(tree_10[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[23]),
        .Q(tree_10[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[24]),
        .Q(tree_10[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[25]),
        .Q(tree_10[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[26]),
        .Q(tree_10[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[27]),
        .Q(tree_10[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[28]),
        .Q(tree_10[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[29]),
        .Q(tree_10[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[2]),
        .Q(tree_10[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[30]),
        .Q(tree_10[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[31]),
        .Q(tree_10[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[3]),
        .Q(tree_10[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[4]),
        .Q(tree_10[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[5]),
        .Q(tree_10[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[6]),
        .Q(tree_10[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[7]),
        .Q(tree_10[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[8]),
        .Q(tree_10[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_10_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1[9]),
        .Q(tree_10[9]),
        .R(1'b0));
  CARRY4 tree_110_carry
       (.CI(1'b0),
        .CO({tree_110_carry_n_0,NLW_tree_110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({tree_1[4:2],1'b0}),
        .O({tree_110[4:2],NLW_tree_110_carry_O_UNCONNECTED[0]}),
        .S({tree_110_carry_i_1__0_n_0,tree_110_carry_i_2__0_n_0,tree_110_carry_i_3__0_n_0,p_0_in_0[1]}));
  CARRY4 tree_110_carry__0
       (.CI(tree_110_carry_n_0),
        .CO({tree_110_carry__0_n_0,NLW_tree_110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[8:5]),
        .O(tree_110[8:5]),
        .S({tree_110_carry__0_i_1__0_n_0,tree_110_carry__0_i_2__0_n_0,tree_110_carry__0_i_3__0_n_0,tree_110_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_1__0
       (.I0(tree_1[8]),
        .I1(p_0_in_0[8]),
        .O(tree_110_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_2__0
       (.I0(tree_1[7]),
        .I1(p_0_in_0[7]),
        .O(tree_110_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_3__0
       (.I0(tree_1[6]),
        .I1(p_0_in_0[6]),
        .O(tree_110_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__0_i_4__0
       (.I0(tree_1[5]),
        .I1(p_0_in_0[5]),
        .O(tree_110_carry__0_i_4__0_n_0));
  CARRY4 tree_110_carry__1
       (.CI(tree_110_carry__0_n_0),
        .CO({tree_110_carry__1_n_0,NLW_tree_110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[12:9]),
        .O(tree_110[12:9]),
        .S({tree_110_carry__1_i_1__0_n_0,tree_110_carry__1_i_2__0_n_0,tree_110_carry__1_i_3__0_n_0,tree_110_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_1__0
       (.I0(tree_1[12]),
        .I1(p_0_in_0[12]),
        .O(tree_110_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_2__0
       (.I0(tree_1[11]),
        .I1(p_0_in_0[11]),
        .O(tree_110_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_3__0
       (.I0(tree_1[10]),
        .I1(p_0_in_0[10]),
        .O(tree_110_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__1_i_4__0
       (.I0(tree_1[9]),
        .I1(p_0_in_0[9]),
        .O(tree_110_carry__1_i_4__0_n_0));
  CARRY4 tree_110_carry__2
       (.CI(tree_110_carry__1_n_0),
        .CO({tree_110_carry__2_n_0,NLW_tree_110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[16:13]),
        .O(tree_110[16:13]),
        .S({tree_110_carry__2_i_1__0_n_0,tree_110_carry__2_i_2__0_n_0,tree_110_carry__2_i_3__0_n_0,tree_110_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_1__0
       (.I0(tree_1[16]),
        .I1(p_0_in_0[16]),
        .O(tree_110_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_2__0
       (.I0(tree_1[15]),
        .I1(p_0_in_0[15]),
        .O(tree_110_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_3__0
       (.I0(tree_1[14]),
        .I1(p_0_in_0[14]),
        .O(tree_110_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__2_i_4__0
       (.I0(tree_1[13]),
        .I1(p_0_in_0[13]),
        .O(tree_110_carry__2_i_4__0_n_0));
  CARRY4 tree_110_carry__3
       (.CI(tree_110_carry__2_n_0),
        .CO({tree_110_carry__3_n_0,NLW_tree_110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[20:17]),
        .O(tree_110[20:17]),
        .S({tree_110_carry__3_i_1__0_n_0,tree_110_carry__3_i_2__0_n_0,tree_110_carry__3_i_3__0_n_0,tree_110_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_1__0
       (.I0(tree_1[20]),
        .I1(p_0_in_0[20]),
        .O(tree_110_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_2__0
       (.I0(tree_1[19]),
        .I1(p_0_in_0[19]),
        .O(tree_110_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_3__0
       (.I0(tree_1[18]),
        .I1(p_0_in_0[18]),
        .O(tree_110_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__3_i_4__0
       (.I0(tree_1[17]),
        .I1(p_0_in_0[17]),
        .O(tree_110_carry__3_i_4__0_n_0));
  CARRY4 tree_110_carry__4
       (.CI(tree_110_carry__3_n_0),
        .CO({tree_110_carry__4_n_0,NLW_tree_110_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[24:21]),
        .O(tree_110[24:21]),
        .S({tree_110_carry__4_i_1__0_n_0,tree_110_carry__4_i_2__0_n_0,tree_110_carry__4_i_3__0_n_0,tree_110_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_1__0
       (.I0(tree_1[24]),
        .I1(p_0_in_0[24]),
        .O(tree_110_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_2__0
       (.I0(tree_1[23]),
        .I1(p_0_in_0[23]),
        .O(tree_110_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_3__0
       (.I0(tree_1[22]),
        .I1(p_0_in_0[22]),
        .O(tree_110_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__4_i_4
       (.I0(tree_1[21]),
        .I1(p_0_in_0[21]),
        .O(tree_110_carry__4_i_4_n_0));
  CARRY4 tree_110_carry__5
       (.CI(tree_110_carry__4_n_0),
        .CO({tree_110_carry__5_n_0,NLW_tree_110_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_1[28:25]),
        .O(tree_110[28:25]),
        .S({tree_110_carry__5_i_1_n_0,tree_110_carry__5_i_2_n_0,tree_110_carry__5_i_3_n_0,tree_110_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__5_i_1
       (.I0(tree_1[28]),
        .I1(p_0_in_0[28]),
        .O(tree_110_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__5_i_2
       (.I0(tree_1[27]),
        .I1(p_0_in_0[27]),
        .O(tree_110_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__5_i_3
       (.I0(tree_1[26]),
        .I1(p_0_in_0[26]),
        .O(tree_110_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__5_i_4
       (.I0(tree_1[25]),
        .I1(p_0_in_0[25]),
        .O(tree_110_carry__5_i_4_n_0));
  CARRY4 tree_110_carry__6
       (.CI(tree_110_carry__5_n_0),
        .CO(NLW_tree_110_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,tree_1[30:29]}),
        .O({NLW_tree_110_carry__6_O_UNCONNECTED[3],tree_110[31:29]}),
        .S({1'b0,tree_110_carry__6_i_1_n_0,tree_110_carry__6_i_2_n_0,tree_110_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__6_i_1
       (.I0(tree_1[31]),
        .I1(p_0_in_0[31]),
        .O(tree_110_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__6_i_2
       (.I0(tree_1[30]),
        .I1(p_0_in_0[30]),
        .O(tree_110_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry__6_i_3
       (.I0(tree_1[29]),
        .I1(p_0_in_0[29]),
        .O(tree_110_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_1__0
       (.I0(tree_1[4]),
        .I1(p_0_in_0[4]),
        .O(tree_110_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_2__0
       (.I0(tree_1[3]),
        .I1(p_0_in_0[3]),
        .O(tree_110_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_110_carry_i_3__0
       (.I0(tree_1[2]),
        .I1(p_0_in_0[2]),
        .O(tree_110_carry_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[22]),
        .Q(\tree_110_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[23]),
        .Q(\tree_110_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[24]),
        .Q(\tree_110_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[25]),
        .Q(\tree_110_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[26]),
        .Q(\tree_110_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[27]),
        .Q(\tree_110_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[28]),
        .Q(\tree_110_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[29]),
        .Q(\tree_110_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[30]),
        .Q(\tree_110_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_110_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_11[31]),
        .Q(\tree_110_reg_n_0_[31] ),
        .R(1'b0));
  CARRY4 tree_1110_carry
       (.CI(1'b0),
        .CO({tree_1110_carry_n_0,NLW_tree_1110_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[4:1]),
        .O(NLW_tree_1110_carry_O_UNCONNECTED[3:0]),
        .S({tree_1110_carry_i_1__0_n_0,tree_1110_carry_i_2__0_n_0,tree_1110_carry_i_3__0_n_0,tree_1110_carry_i_4__0_n_0}));
  CARRY4 tree_1110_carry__0
       (.CI(tree_1110_carry_n_0),
        .CO({tree_1110_carry__0_n_0,NLW_tree_1110_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[8:5]),
        .O(NLW_tree_1110_carry__0_O_UNCONNECTED[3:0]),
        .S({tree_1110_carry__0_i_1__0_n_0,tree_1110_carry__0_i_2__0_n_0,tree_1110_carry__0_i_3__0_n_0,tree_1110_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_1__0
       (.I0(tree_11[8]),
        .I1(frequency_d3[8]),
        .O(tree_1110_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_2__0
       (.I0(tree_11[7]),
        .I1(frequency_d3[7]),
        .O(tree_1110_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_3__0
       (.I0(tree_11[6]),
        .I1(frequency_d3[6]),
        .O(tree_1110_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__0_i_4__0
       (.I0(tree_11[5]),
        .I1(frequency_d3[5]),
        .O(tree_1110_carry__0_i_4__0_n_0));
  CARRY4 tree_1110_carry__1
       (.CI(tree_1110_carry__0_n_0),
        .CO({tree_1110_carry__1_n_0,NLW_tree_1110_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[12:9]),
        .O(NLW_tree_1110_carry__1_O_UNCONNECTED[3:0]),
        .S({tree_1110_carry__1_i_1__0_n_0,tree_1110_carry__1_i_2__0_n_0,tree_1110_carry__1_i_3__0_n_0,tree_1110_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_1__0
       (.I0(tree_11[12]),
        .I1(frequency_d3[12]),
        .O(tree_1110_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_2__0
       (.I0(tree_11[11]),
        .I1(frequency_d3[11]),
        .O(tree_1110_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_3__0
       (.I0(tree_11[10]),
        .I1(frequency_d3[10]),
        .O(tree_1110_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__1_i_4__0
       (.I0(tree_11[9]),
        .I1(frequency_d3[9]),
        .O(tree_1110_carry__1_i_4__0_n_0));
  CARRY4 tree_1110_carry__2
       (.CI(tree_1110_carry__1_n_0),
        .CO({tree_1110_carry__2_n_0,NLW_tree_1110_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[16:13]),
        .O(NLW_tree_1110_carry__2_O_UNCONNECTED[3:0]),
        .S({tree_1110_carry__2_i_1__0_n_0,tree_1110_carry__2_i_2__0_n_0,tree_1110_carry__2_i_3__0_n_0,tree_1110_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_1__0
       (.I0(tree_11[16]),
        .I1(frequency_d3[16]),
        .O(tree_1110_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_2__0
       (.I0(tree_11[15]),
        .I1(frequency_d3[15]),
        .O(tree_1110_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_3__0
       (.I0(tree_11[14]),
        .I1(frequency_d3[14]),
        .O(tree_1110_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__2_i_4__0
       (.I0(tree_11[13]),
        .I1(frequency_d3[13]),
        .O(tree_1110_carry__2_i_4__0_n_0));
  CARRY4 tree_1110_carry__3
       (.CI(tree_1110_carry__2_n_0),
        .CO({tree_1110_carry__3_n_0,NLW_tree_1110_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[20:17]),
        .O(NLW_tree_1110_carry__3_O_UNCONNECTED[3:0]),
        .S({tree_1110_carry__3_i_1__0_n_0,tree_1110_carry__3_i_2__0_n_0,tree_1110_carry__3_i_3__0_n_0,tree_1110_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_1__0
       (.I0(tree_11[20]),
        .I1(frequency_d3[20]),
        .O(tree_1110_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_2__0
       (.I0(tree_11[19]),
        .I1(frequency_d3[19]),
        .O(tree_1110_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_3__0
       (.I0(tree_11[18]),
        .I1(frequency_d3[18]),
        .O(tree_1110_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__3_i_4__0
       (.I0(tree_11[17]),
        .I1(frequency_d3[17]),
        .O(tree_1110_carry__3_i_4__0_n_0));
  CARRY4 tree_1110_carry__4
       (.CI(tree_1110_carry__3_n_0),
        .CO({tree_1110_carry__4_n_0,NLW_tree_1110_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[24:21]),
        .O({tree_1110[24:22],NLW_tree_1110_carry__4_O_UNCONNECTED[0]}),
        .S({tree_1110_carry__4_i_1__0_n_0,tree_1110_carry__4_i_2__0_n_0,tree_1110_carry__4_i_3__0_n_0,tree_1110_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_1__0
       (.I0(tree_11[24]),
        .I1(frequency_d3[24]),
        .O(tree_1110_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_2__0
       (.I0(tree_11[23]),
        .I1(frequency_d3[23]),
        .O(tree_1110_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_3__0
       (.I0(tree_11[22]),
        .I1(frequency_d3[22]),
        .O(tree_1110_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__4_i_4
       (.I0(tree_11[21]),
        .I1(frequency_d3[21]),
        .O(tree_1110_carry__4_i_4_n_0));
  CARRY4 tree_1110_carry__5
       (.CI(tree_1110_carry__4_n_0),
        .CO({tree_1110_carry__5_n_0,NLW_tree_1110_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(tree_11[28:25]),
        .O(tree_1110[28:25]),
        .S({tree_1110_carry__5_i_1_n_0,tree_1110_carry__5_i_2_n_0,tree_1110_carry__5_i_3_n_0,tree_1110_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__5_i_1
       (.I0(tree_11[28]),
        .I1(frequency_d3[28]),
        .O(tree_1110_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__5_i_2
       (.I0(tree_11[27]),
        .I1(frequency_d3[27]),
        .O(tree_1110_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__5_i_3
       (.I0(tree_11[26]),
        .I1(frequency_d3[26]),
        .O(tree_1110_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__5_i_4
       (.I0(tree_11[25]),
        .I1(frequency_d3[25]),
        .O(tree_1110_carry__5_i_4_n_0));
  CARRY4 tree_1110_carry__6
       (.CI(tree_1110_carry__5_n_0),
        .CO(NLW_tree_1110_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,tree_11[30:29]}),
        .O({NLW_tree_1110_carry__6_O_UNCONNECTED[3],tree_1110[31:29]}),
        .S({1'b0,tree_1110_carry__6_i_1_n_0,tree_1110_carry__6_i_2_n_0,tree_1110_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__6_i_1
       (.I0(tree_11[31]),
        .I1(frequency_d3[31]),
        .O(tree_1110_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__6_i_2
       (.I0(tree_11[30]),
        .I1(frequency_d3[30]),
        .O(tree_1110_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry__6_i_3
       (.I0(tree_11[29]),
        .I1(frequency_d3[29]),
        .O(tree_1110_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_1__0
       (.I0(tree_11[4]),
        .I1(frequency_d3[4]),
        .O(tree_1110_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_2__0
       (.I0(tree_11[3]),
        .I1(frequency_d3[3]),
        .O(tree_1110_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_3__0
       (.I0(tree_11[2]),
        .I1(frequency_d3[2]),
        .O(tree_1110_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    tree_1110_carry_i_4__0
       (.I0(tree_11[1]),
        .I1(frequency_d3[1]),
        .O(tree_1110_carry_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[22]),
        .Q(tree_111[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[23]),
        .Q(tree_111[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[24]),
        .Q(tree_111[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[25]),
        .Q(tree_111[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[26]),
        .Q(tree_111[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[27]),
        .Q(tree_111[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[28]),
        .Q(tree_111[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[29]),
        .Q(tree_111[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[30]),
        .Q(tree_111[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_111_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_1110[31]),
        .Q(tree_111[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[10]),
        .Q(tree_11[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[11]),
        .Q(tree_11[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[12]),
        .Q(tree_11[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[13]),
        .Q(tree_11[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[14]),
        .Q(tree_11[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[15]),
        .Q(tree_11[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[16]),
        .Q(tree_11[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[17]),
        .Q(tree_11[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[18]),
        .Q(tree_11[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[19]),
        .Q(tree_11[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[1]),
        .Q(tree_11[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[20]),
        .Q(tree_11[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[21]),
        .Q(tree_11[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[22]),
        .Q(tree_11[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[23]),
        .Q(tree_11[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[24]),
        .Q(tree_11[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[25]),
        .Q(tree_11[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[26]),
        .Q(tree_11[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[27]),
        .Q(tree_11[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[28]),
        .Q(tree_11[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[29]),
        .Q(tree_11[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[2]),
        .Q(tree_11[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[30]),
        .Q(tree_11[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[31]),
        .Q(tree_11[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[3]),
        .Q(tree_11[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[4]),
        .Q(tree_11[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[5]),
        .Q(tree_11[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[6]),
        .Q(tree_11[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[7]),
        .Q(tree_11[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[8]),
        .Q(tree_11[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_11_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_110[9]),
        .Q(tree_11[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[10]),
        .Q(tree_1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[11]),
        .Q(tree_1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[12]),
        .Q(tree_1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[13]),
        .Q(tree_1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[14]),
        .Q(tree_1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[15]),
        .Q(tree_1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[16]),
        .Q(tree_1[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[17]),
        .Q(tree_1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[18]),
        .Q(tree_1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[19]),
        .Q(tree_1[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[20]),
        .Q(tree_1[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[21]),
        .Q(tree_1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[22]),
        .Q(tree_1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[23]),
        .Q(tree_1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[24]),
        .Q(tree_1[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[25]),
        .Q(tree_1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[26]),
        .Q(tree_1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[27]),
        .Q(tree_1[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[28]),
        .Q(tree_1[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[29]),
        .Q(tree_1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[2]),
        .Q(tree_1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[30]),
        .Q(tree_1[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[31]),
        .Q(tree_1[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[3]),
        .Q(tree_1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[4]),
        .Q(tree_1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[5]),
        .Q(tree_1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[6]),
        .Q(tree_1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[7]),
        .Q(tree_1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[8]),
        .Q(tree_1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tree_101_out[9]),
        .Q(tree_1[9]),
        .R(1'b0));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_0" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_01(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_02(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_03(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_04(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_05(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_06(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_07(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_08(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_09(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_0A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_0B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_0C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_0D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_0E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_0F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_10(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_11(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_12(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_13(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_14(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_15(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_16(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_17(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_18(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_19(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_1A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_1B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_1C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_1D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_1E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_1F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_20(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_21(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_22(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_23(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_24(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_25(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_26(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_27(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_28(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_29(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_2A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_2B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_2C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_2D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_2E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_2F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_30(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_31(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_32(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_33(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_34(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_35(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_36(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_37(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_38(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_39(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_3A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_3B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_3C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_3D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_3E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_3F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_0_reg_rep_bsel
       (.ADDRARDADDR({sel,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_001,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_0_reg_rep_bsel_DOADO_UNCONNECTED[15:10],DOADO}),
        .DOBDO({NLW_w_0_reg_rep_bsel_DOBDO_UNCONNECTED[15:10],DOBDO}),
        .DOPADOP(NLW_w_0_reg_rep_bsel_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_0_reg_rep_bsel_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_0" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_01(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_02(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_03(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_04(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_05(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_06(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_07(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_08(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_09(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_0A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_0B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_0C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_0D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_0E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_0F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_10(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_11(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_12(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_13(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_14(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_15(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_16(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_17(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_18(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_19(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_1A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_1B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_1C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_1D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_1E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_1F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_20(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_21(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_22(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_23(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_24(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_25(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_26(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_27(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_28(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_29(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_2A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_2B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_2C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_2D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_2E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_2F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_30(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_31(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_32(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_33(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_34(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_35(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_36(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_37(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_38(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_39(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_3A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_3B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_3C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_3D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_3E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_3F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_0_reg_rep_bsel_rep
       (.ADDRARDADDR({sel,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_001,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_0_reg_rep_bsel_rep_DOADO_UNCONNECTED[15:10],out_00}),
        .DOBDO({NLW_w_0_reg_rep_bsel_rep_DOBDO_UNCONNECTED[15:10],out_10}),
        .DOPADOP(NLW_w_0_reg_rep_bsel_rep_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_0_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_2" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_01(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_02(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_03(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_04(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_05(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_06(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_07(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_08(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_09(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_0A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_0B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_0C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_0D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_0E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_0F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_10(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_11(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_12(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_13(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_14(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_15(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_16(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_17(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_18(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_19(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_1A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_1B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_1C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_1D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_1E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_1F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_20(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_21(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_22(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_23(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_24(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_25(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_26(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_27(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_28(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_29(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_2A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_2B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_2C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_2D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_2E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_2F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_30(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_31(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_32(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_33(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_34(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_35(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_36(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_37(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_38(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_39(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_3A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_3B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_3C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_3D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_3E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_3F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_2_reg_rep_bsel
       (.ADDRARDADDR({\tree_010_reg_n_0_[31] ,\tree_010_reg_n_0_[30] ,\tree_010_reg_n_0_[29] ,\tree_010_reg_n_0_[28] ,\tree_010_reg_n_0_[27] ,\tree_010_reg_n_0_[26] ,\tree_010_reg_n_0_[25] ,\tree_010_reg_n_0_[24] ,\tree_010_reg_n_0_[23] ,\tree_010_reg_n_0_[22] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_011,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_2_reg_rep_bsel_DOADO_UNCONNECTED[15:10],i_out_2_reg}),
        .DOBDO({NLW_w_2_reg_rep_bsel_DOBDO_UNCONNECTED[15:10],i_out_3_reg}),
        .DOPADOP(NLW_w_2_reg_rep_bsel_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_2_reg_rep_bsel_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_2" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_01(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_02(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_03(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_04(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_05(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_06(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_07(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_08(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_09(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_0A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_0B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_0C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_0D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_0E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_0F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_10(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_11(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_12(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_13(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_14(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_15(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_16(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_17(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_18(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_19(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_1A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_1B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_1C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_1D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_1E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_1F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_20(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_21(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_22(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_23(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_24(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_25(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_26(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_27(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_28(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_29(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_2A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_2B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_2C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_2D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_2E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_2F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_30(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_31(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_32(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_33(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_34(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_35(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_36(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_37(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_38(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_39(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_3A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_3B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_3C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_3D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_3E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_3F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_2_reg_rep_bsel_rep
       (.ADDRARDADDR({\tree_010_reg_n_0_[31] ,\tree_010_reg_n_0_[30] ,\tree_010_reg_n_0_[29] ,\tree_010_reg_n_0_[28] ,\tree_010_reg_n_0_[27] ,\tree_010_reg_n_0_[26] ,\tree_010_reg_n_0_[25] ,\tree_010_reg_n_0_[24] ,\tree_010_reg_n_0_[23] ,\tree_010_reg_n_0_[22] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_011,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_2_reg_rep_bsel_rep_DOADO_UNCONNECTED[15:10],out_20}),
        .DOBDO({NLW_w_2_reg_rep_bsel_rep_DOBDO_UNCONNECTED[15:10],out_30}),
        .DOPADOP(NLW_w_2_reg_rep_bsel_rep_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_2_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_4" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_01(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_02(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_03(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_04(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_05(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_06(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_07(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_08(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_09(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_0A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_0B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_0C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_0D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_0E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_0F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_10(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_11(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_12(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_13(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_14(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_15(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_16(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_17(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_18(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_19(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_1A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_1B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_1C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_1D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_1E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_1F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_20(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_21(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_22(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_23(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_24(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_25(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_26(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_27(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_28(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_29(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_2A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_2B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_2C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_2D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_2E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_2F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_30(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_31(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_32(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_33(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_34(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_35(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_36(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_37(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_38(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_39(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_3A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_3B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_3C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_3D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_3E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_3F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_4_reg_rep_bsel
       (.ADDRARDADDR({tree_100,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_101,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_4_reg_rep_bsel_DOADO_UNCONNECTED[15:10],i_out_4_reg}),
        .DOBDO({NLW_w_4_reg_rep_bsel_DOBDO_UNCONNECTED[15:10],i_out_5_reg}),
        .DOPADOP(NLW_w_4_reg_rep_bsel_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_4_reg_rep_bsel_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_4" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_01(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_02(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_03(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_04(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_05(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_06(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_07(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_08(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_09(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_0A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_0B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_0C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_0D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_0E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_0F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_10(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_11(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_12(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_13(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_14(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_15(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_16(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_17(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_18(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_19(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_1A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_1B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_1C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_1D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_1E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_1F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_20(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_21(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_22(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_23(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_24(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_25(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_26(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_27(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_28(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_29(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_2A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_2B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_2C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_2D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_2E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_2F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_30(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_31(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_32(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_33(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_34(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_35(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_36(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_37(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_38(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_39(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_3A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_3B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_3C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_3D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_3E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_3F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_4_reg_rep_bsel_rep
       (.ADDRARDADDR({tree_100,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_101,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_4_reg_rep_bsel_rep_DOADO_UNCONNECTED[15:10],out_40}),
        .DOBDO({NLW_w_4_reg_rep_bsel_rep_DOBDO_UNCONNECTED[15:10],out_50}),
        .DOPADOP(NLW_w_4_reg_rep_bsel_rep_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_4_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_6" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_01(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_02(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_03(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_04(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_05(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_06(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_07(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_08(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_09(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_0A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_0B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_0C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_0D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_0E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_0F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_10(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_11(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_12(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_13(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_14(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_15(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_16(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_17(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_18(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_19(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_1A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_1B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_1C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_1D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_1E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_1F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_20(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_21(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_22(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_23(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_24(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_25(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_26(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_27(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_28(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_29(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_2A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_2B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_2C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_2D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_2E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_2F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_30(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_31(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_32(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_33(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_34(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_35(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_36(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_37(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_38(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_39(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_3A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_3B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_3C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_3D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_3E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_3F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_6_reg_rep_bsel
       (.ADDRARDADDR({\tree_110_reg_n_0_[31] ,\tree_110_reg_n_0_[30] ,\tree_110_reg_n_0_[29] ,\tree_110_reg_n_0_[28] ,\tree_110_reg_n_0_[27] ,\tree_110_reg_n_0_[26] ,\tree_110_reg_n_0_[25] ,\tree_110_reg_n_0_[24] ,\tree_110_reg_n_0_[23] ,\tree_110_reg_n_0_[22] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_111,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_6_reg_rep_bsel_DOADO_UNCONNECTED[15:10],i_out_6_reg}),
        .DOBDO({NLW_w_6_reg_rep_bsel_DOBDO_UNCONNECTED[15:10],i_out_7_reg}),
        .DOPADOP(NLW_w_6_reg_rep_bsel_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_6_reg_rep_bsel_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d10" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "10240" *) 
  (* RTL_RAM_NAME = "nco_inst_1/w_6" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "9" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h03DF03E103E303E503E803EA03EC03EE03F003F303F503F703F903FC03FE0000),
    .INIT_01(256'h03BC03BE03C003C203C403C703C903CB03CD03CF03D203D403D603D803DA03DD),
    .INIT_02(256'h0399039B039D03A003A203A403A603A803AA03AD03AF03B103B303B503B703BA),
    .INIT_03(256'h0378037A037C037E03800382038403860388038A038D038F0391039303950397),
    .INIT_04(256'h0358035A035C035E03600362036403660368036A036C036E0370037203740376),
    .INIT_05(256'h0339033B033D033F03410342034403460348034A034C034E0350035203540356),
    .INIT_06(256'h031C031E032003220323032503270329032B032C032E03300332033403350337),
    .INIT_07(256'h03020304030503070308030A030C030D030F031103120314031603170319031B),
    .INIT_08(256'h02EA02EC02ED02EE02F002F102F302F402F602F702F902FA02FC02FD02FF0300),
    .INIT_09(256'h02D502D602D702D902DA02DB02DC02DE02DF02E002E202E302E502E602E702E9),
    .INIT_0A(256'h02C202C302C502C602C702C802C902CA02CB02CC02CE02CF02D002D102D202D4),
    .INIT_0B(256'h02B302B402B502B602B702B702B802B902BA02BB02BC02BD02BE02BF02C002C1),
    .INIT_0C(256'h02A702A802A802A902AA02AA02AB02AC02AD02AD02AE02AF02B002B102B102B2),
    .INIT_0D(256'h029E029F029F029F02A002A002A102A102A202A302A302A402A402A502A602A6),
    .INIT_0E(256'h0299029902990299029A029A029A029B029B029B029C029C029C029D029D029E),
    .INIT_0F(256'h0297029702970297029702970297029702970297029702980298029802980298),
    .INIT_10(256'h0298029802980298029702970297029702970297029702970297029702970297),
    .INIT_11(256'h029D029D029C029C029C029B029B029B029A029A029A02990299029902990298),
    .INIT_12(256'h02A602A502A402A402A302A302A202A102A102A002A0029F029F029F029E029E),
    .INIT_13(256'h02B102B102B002AF02AE02AD02AD02AC02AB02AA02AA02A902A802A802A702A6),
    .INIT_14(256'h02C002BF02BE02BD02BC02BB02BA02B902B802B702B702B602B502B402B302B2),
    .INIT_15(256'h02D202D102D002CF02CE02CC02CB02CA02C902C802C702C602C502C302C202C1),
    .INIT_16(256'h02E702E602E502E302E202E002DF02DE02DC02DB02DA02D902D702D602D502D4),
    .INIT_17(256'h02FF02FD02FC02FA02F902F702F602F402F302F102F002EE02ED02EC02EA02E9),
    .INIT_18(256'h031903170316031403120311030F030D030C030A030803070305030403020301),
    .INIT_19(256'h0335033403320330032E032C032B032903270325032303220320031E031C031B),
    .INIT_1A(256'h035403520350034E034C034A03480346034403420341033F033D033B03390337),
    .INIT_1B(256'h037403720370036E036C036A03680366036403620360035E035C035A03580356),
    .INIT_1C(256'h039503930391038F038D038A03880386038403820380037E037C037A03780376),
    .INIT_1D(256'h03B703B503B303B103AF03AD03AA03A803A603A403A203A0039D039B03990397),
    .INIT_1E(256'h03DA03D803D603D403D203CF03CD03CB03C903C703C403C203C003BE03BC03BA),
    .INIT_1F(256'h03FE03FC03F903F703F503F303F003EE03EC03EA03E803E503E303E103DF03DD),
    .INIT_20(256'h0021001F001D001B00180016001400120010000D000B00090007000400020000),
    .INIT_21(256'h004400420040003E003C00390037003500330031002E002C002A002800260023),
    .INIT_22(256'h0067006500630060005E005C005A0058005600530051004F004D004B00490046),
    .INIT_23(256'h00880086008400820080007E007C007A0078007600730071006F006D006B0069),
    .INIT_24(256'h00A800A600A400A200A0009E009C009A00980096009400920090008E008C008A),
    .INIT_25(256'h00C700C500C300C100BF00BE00BC00BA00B800B600B400B200B000AE00AC00AA),
    .INIT_26(256'h00E400E200E000DE00DD00DB00D900D700D500D400D200D000CE00CC00CB00C9),
    .INIT_27(256'h00FE00FC00FB00F900F800F600F400F300F100EF00EE00EC00EA00E900E700E5),
    .INIT_28(256'h01160114011301120110010F010D010C010A0109010701060104010301010100),
    .INIT_29(256'h012B012A01290127012601250124012201210120011E011D011B011A01190117),
    .INIT_2A(256'h013E013D013B013A013901380137013601350134013201310130012F012E012C),
    .INIT_2B(256'h014D014C014B014A01490149014801470146014501440143014201410140013F),
    .INIT_2C(256'h0159015801580157015601560155015401530153015201510150014F014F014E),
    .INIT_2D(256'h016201610161016101600160015F015F015E015D015D015C015C015B015A015A),
    .INIT_2E(256'h0167016701670167016601660166016501650165016401640164016301630162),
    .INIT_2F(256'h0169016901690169016901690169016901690169016901680168016801680168),
    .INIT_30(256'h0168016801680168016901690169016901690169016901690169016901690169),
    .INIT_31(256'h0163016301640164016401650165016501660166016601670167016701670168),
    .INIT_32(256'h015A015B015C015C015D015D015E015F015F0160016001610161016101620162),
    .INIT_33(256'h014F014F0150015101520153015301540155015601560157015801580159015A),
    .INIT_34(256'h01400141014201430144014501460147014801490149014A014B014C014D014E),
    .INIT_35(256'h012E012F013001310132013401350136013701380139013A013B013D013E013F),
    .INIT_36(256'h0119011A011B011D011E01200121012201240125012601270129012A012B012C),
    .INIT_37(256'h010101030104010601070109010A010C010D010F011001120113011401160117),
    .INIT_38(256'h00E700E900EA00EC00EE00EF00F100F300F400F600F800F900FB00FC00FE00FF),
    .INIT_39(256'h00CB00CC00CE00D000D200D400D500D700D900DB00DD00DE00E000E200E400E5),
    .INIT_3A(256'h00AC00AE00B000B200B400B600B800BA00BC00BE00BF00C100C300C500C700C9),
    .INIT_3B(256'h008C008E00900092009400960098009A009C009E00A000A200A400A600A800AA),
    .INIT_3C(256'h006B006D006F0071007300760078007A007C007E00800082008400860088008A),
    .INIT_3D(256'h0049004B004D004F0051005300560058005A005C005E00600063006500670069),
    .INIT_3E(256'h00260028002A002C002E00310033003500370039003C003E0040004200440046),
    .INIT_3F(256'h0002000400070009000B000D00100012001400160018001B001D001F00210023),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(0)) 
    w_6_reg_rep_bsel_rep
       (.ADDRARDADDR({\tree_110_reg_n_0_[31] ,\tree_110_reg_n_0_[30] ,\tree_110_reg_n_0_[29] ,\tree_110_reg_n_0_[28] ,\tree_110_reg_n_0_[27] ,\tree_110_reg_n_0_[26] ,\tree_110_reg_n_0_[25] ,\tree_110_reg_n_0_[24] ,\tree_110_reg_n_0_[23] ,\tree_110_reg_n_0_[22] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({tree_111,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk),
        .CLKBWRCLK(clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({NLW_w_6_reg_rep_bsel_rep_DOADO_UNCONNECTED[15:10],out_60}),
        .DOBDO({NLW_w_6_reg_rep_bsel_rep_DOBDO_UNCONNECTED[15:10],out_70}),
        .DOPADOP(NLW_w_6_reg_rep_bsel_rep_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_w_6_reg_rep_bsel_rep_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

module pwm_audio
   (output_audio_ack,
    audio,
    internal_rst_reg,
    clk,
    data_in_stb,
    Q);
  output output_audio_ack;
  output [0:0]audio;
  input internal_rst_reg;
  input clk;
  input data_in_stb;
  input [9:0]Q;

  wire COUNT;
  wire COUNT0;
  wire \COUNT[0]_i_3_n_0 ;
  wire \COUNT[0]_i_7_n_0 ;
  wire \COUNT[0]_i_8_n_0 ;
  wire \COUNT[0]_i_9_n_0 ;
  wire [12:0]COUNT_reg;
  wire \COUNT_reg[0]_i_2_n_0 ;
  wire \COUNT_reg[0]_i_2_n_4 ;
  wire \COUNT_reg[0]_i_2_n_5 ;
  wire \COUNT_reg[0]_i_2_n_6 ;
  wire \COUNT_reg[0]_i_2_n_7 ;
  wire \COUNT_reg[12]_i_1_n_7 ;
  wire \COUNT_reg[4]_i_1_n_0 ;
  wire \COUNT_reg[4]_i_1_n_4 ;
  wire \COUNT_reg[4]_i_1_n_5 ;
  wire \COUNT_reg[4]_i_1_n_6 ;
  wire \COUNT_reg[4]_i_1_n_7 ;
  wire \COUNT_reg[8]_i_1_n_0 ;
  wire \COUNT_reg[8]_i_1_n_4 ;
  wire \COUNT_reg[8]_i_1_n_5 ;
  wire \COUNT_reg[8]_i_1_n_6 ;
  wire \COUNT_reg[8]_i_1_n_7 ;
  wire [9:0]Q;
  wire [9:0]SAMPLE;
  wire [9:0]SIGMA;
  wire \SIGMA[10]_i_2_n_0 ;
  wire \SIGMA[10]_i_3_n_0 ;
  wire \SIGMA[3]_i_2_n_0 ;
  wire \SIGMA[3]_i_3_n_0 ;
  wire \SIGMA[3]_i_4_n_0 ;
  wire \SIGMA[3]_i_5_n_0 ;
  wire \SIGMA[7]_i_2_n_0 ;
  wire \SIGMA[7]_i_3_n_0 ;
  wire \SIGMA[7]_i_4_n_0 ;
  wire \SIGMA[7]_i_5_n_0 ;
  wire \SIGMA_reg[10]_i_1_n_1 ;
  wire \SIGMA_reg[10]_i_1_n_6 ;
  wire \SIGMA_reg[10]_i_1_n_7 ;
  wire \SIGMA_reg[3]_i_1_n_0 ;
  wire \SIGMA_reg[3]_i_1_n_4 ;
  wire \SIGMA_reg[3]_i_1_n_5 ;
  wire \SIGMA_reg[3]_i_1_n_6 ;
  wire \SIGMA_reg[3]_i_1_n_7 ;
  wire \SIGMA_reg[7]_i_1_n_0 ;
  wire \SIGMA_reg[7]_i_1_n_4 ;
  wire \SIGMA_reg[7]_i_1_n_5 ;
  wire \SIGMA_reg[7]_i_1_n_6 ;
  wire \SIGMA_reg[7]_i_1_n_7 ;
  wire STATE_i_1_n_0;
  wire STATE_reg_n_0;
  wire S_DATA_IN_ACK_i_1_n_0;
  wire [0:0]audio;
  wire clk;
  wire data_in_stb;
  wire internal_rst_reg;
  wire output_audio_ack;
  wire [2:0]\NLW_COUNT_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_COUNT_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_COUNT_reg[12]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_COUNT_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_COUNT_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_SIGMA_reg[10]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_SIGMA_reg[10]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_SIGMA_reg[3]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_SIGMA_reg[7]_i_1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h8)) 
    \COUNT[0]_i_1__3 
       (.I0(\COUNT[0]_i_3_n_0 ),
        .I1(STATE_reg_n_0),
        .O(COUNT0));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \COUNT[0]_i_3 
       (.I0(\COUNT[0]_i_8_n_0 ),
        .I1(COUNT_reg[4]),
        .I2(COUNT_reg[3]),
        .I3(COUNT_reg[6]),
        .I4(COUNT_reg[5]),
        .I5(\COUNT[0]_i_9_n_0 ),
        .O(\COUNT[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \COUNT[0]_i_7 
       (.I0(COUNT_reg[0]),
        .O(\COUNT[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \COUNT[0]_i_8 
       (.I0(COUNT_reg[8]),
        .I1(COUNT_reg[7]),
        .I2(COUNT_reg[10]),
        .I3(COUNT_reg[9]),
        .O(\COUNT[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \COUNT[0]_i_9 
       (.I0(COUNT_reg[0]),
        .I1(COUNT_reg[11]),
        .I2(COUNT_reg[12]),
        .I3(COUNT_reg[2]),
        .I4(COUNT_reg[1]),
        .O(\COUNT[0]_i_9_n_0 ));
  FDRE \COUNT_reg[0] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[0]_i_2_n_7 ),
        .Q(COUNT_reg[0]),
        .R(COUNT));
  CARRY4 \COUNT_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\COUNT_reg[0]_i_2_n_0 ,\NLW_COUNT_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\COUNT_reg[0]_i_2_n_4 ,\COUNT_reg[0]_i_2_n_5 ,\COUNT_reg[0]_i_2_n_6 ,\COUNT_reg[0]_i_2_n_7 }),
        .S({COUNT_reg[3:1],\COUNT[0]_i_7_n_0 }));
  FDRE \COUNT_reg[10] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[8]_i_1_n_5 ),
        .Q(COUNT_reg[10]),
        .R(COUNT));
  FDRE \COUNT_reg[11] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[8]_i_1_n_4 ),
        .Q(COUNT_reg[11]),
        .R(COUNT));
  FDRE \COUNT_reg[12] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[12]_i_1_n_7 ),
        .Q(COUNT_reg[12]),
        .R(COUNT));
  CARRY4 \COUNT_reg[12]_i_1 
       (.CI(\COUNT_reg[8]_i_1_n_0 ),
        .CO(\NLW_COUNT_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_COUNT_reg[12]_i_1_O_UNCONNECTED [3:1],\COUNT_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,COUNT_reg[12]}));
  FDRE \COUNT_reg[1] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[0]_i_2_n_6 ),
        .Q(COUNT_reg[1]),
        .R(COUNT));
  FDRE \COUNT_reg[2] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[0]_i_2_n_5 ),
        .Q(COUNT_reg[2]),
        .R(COUNT));
  FDRE \COUNT_reg[3] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[0]_i_2_n_4 ),
        .Q(COUNT_reg[3]),
        .R(COUNT));
  FDRE \COUNT_reg[4] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[4]_i_1_n_7 ),
        .Q(COUNT_reg[4]),
        .R(COUNT));
  CARRY4 \COUNT_reg[4]_i_1 
       (.CI(\COUNT_reg[0]_i_2_n_0 ),
        .CO({\COUNT_reg[4]_i_1_n_0 ,\NLW_COUNT_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\COUNT_reg[4]_i_1_n_4 ,\COUNT_reg[4]_i_1_n_5 ,\COUNT_reg[4]_i_1_n_6 ,\COUNT_reg[4]_i_1_n_7 }),
        .S(COUNT_reg[7:4]));
  FDRE \COUNT_reg[5] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[4]_i_1_n_6 ),
        .Q(COUNT_reg[5]),
        .R(COUNT));
  FDRE \COUNT_reg[6] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[4]_i_1_n_5 ),
        .Q(COUNT_reg[6]),
        .R(COUNT));
  FDRE \COUNT_reg[7] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[4]_i_1_n_4 ),
        .Q(COUNT_reg[7]),
        .R(COUNT));
  FDRE \COUNT_reg[8] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[8]_i_1_n_7 ),
        .Q(COUNT_reg[8]),
        .R(COUNT));
  CARRY4 \COUNT_reg[8]_i_1 
       (.CI(\COUNT_reg[4]_i_1_n_0 ),
        .CO({\COUNT_reg[8]_i_1_n_0 ,\NLW_COUNT_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\COUNT_reg[8]_i_1_n_4 ,\COUNT_reg[8]_i_1_n_5 ,\COUNT_reg[8]_i_1_n_6 ,\COUNT_reg[8]_i_1_n_7 }),
        .S(COUNT_reg[11:8]));
  FDRE \COUNT_reg[9] 
       (.C(clk),
        .CE(COUNT0),
        .D(\COUNT_reg[8]_i_1_n_6 ),
        .Q(COUNT_reg[9]),
        .R(COUNT));
  LUT3 #(
    .INIT(8'h08)) 
    \SAMPLE[9]_i_1 
       (.I0(data_in_stb),
        .I1(output_audio_ack),
        .I2(STATE_reg_n_0),
        .O(COUNT));
  FDRE \SAMPLE_reg[0] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[0]),
        .Q(SAMPLE[0]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[1] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[1]),
        .Q(SAMPLE[1]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[2] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[2]),
        .Q(SAMPLE[2]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[3] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[3]),
        .Q(SAMPLE[3]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[4] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[4]),
        .Q(SAMPLE[4]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[5] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[5]),
        .Q(SAMPLE[5]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[6] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[6]),
        .Q(SAMPLE[6]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[7] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[7]),
        .Q(SAMPLE[7]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[8] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[8]),
        .Q(SAMPLE[8]),
        .R(internal_rst_reg));
  FDRE \SAMPLE_reg[9] 
       (.C(clk),
        .CE(COUNT),
        .D(Q[9]),
        .Q(SAMPLE[9]),
        .R(internal_rst_reg));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[10]_i_2 
       (.I0(SAMPLE[9]),
        .I1(SIGMA[9]),
        .O(\SIGMA[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[10]_i_3 
       (.I0(SAMPLE[8]),
        .I1(SIGMA[8]),
        .O(\SIGMA[10]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[3]_i_2 
       (.I0(SAMPLE[3]),
        .I1(SIGMA[3]),
        .O(\SIGMA[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[3]_i_3 
       (.I0(SAMPLE[2]),
        .I1(SIGMA[2]),
        .O(\SIGMA[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[3]_i_4 
       (.I0(SAMPLE[1]),
        .I1(SIGMA[1]),
        .O(\SIGMA[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[3]_i_5 
       (.I0(SAMPLE[0]),
        .I1(SIGMA[0]),
        .O(\SIGMA[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[7]_i_2 
       (.I0(SAMPLE[7]),
        .I1(SIGMA[7]),
        .O(\SIGMA[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[7]_i_3 
       (.I0(SAMPLE[6]),
        .I1(SIGMA[6]),
        .O(\SIGMA[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[7]_i_4 
       (.I0(SAMPLE[5]),
        .I1(SIGMA[5]),
        .O(\SIGMA[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SIGMA[7]_i_5 
       (.I0(SAMPLE[4]),
        .I1(SIGMA[4]),
        .O(\SIGMA[7]_i_5_n_0 ));
  FDRE \SIGMA_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[3]_i_1_n_7 ),
        .Q(SIGMA[0]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[10]_i_1_n_1 ),
        .Q(audio),
        .R(internal_rst_reg));
  CARRY4 \SIGMA_reg[10]_i_1 
       (.CI(\SIGMA_reg[7]_i_1_n_0 ),
        .CO({\NLW_SIGMA_reg[10]_i_1_CO_UNCONNECTED [3],\SIGMA_reg[10]_i_1_n_1 ,\NLW_SIGMA_reg[10]_i_1_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,SAMPLE[9:8]}),
        .O({\NLW_SIGMA_reg[10]_i_1_O_UNCONNECTED [3:2],\SIGMA_reg[10]_i_1_n_6 ,\SIGMA_reg[10]_i_1_n_7 }),
        .S({1'b0,1'b1,\SIGMA[10]_i_2_n_0 ,\SIGMA[10]_i_3_n_0 }));
  FDRE \SIGMA_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[3]_i_1_n_6 ),
        .Q(SIGMA[1]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[3]_i_1_n_5 ),
        .Q(SIGMA[2]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[3]_i_1_n_4 ),
        .Q(SIGMA[3]),
        .R(internal_rst_reg));
  CARRY4 \SIGMA_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\SIGMA_reg[3]_i_1_n_0 ,\NLW_SIGMA_reg[3]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(SAMPLE[3:0]),
        .O({\SIGMA_reg[3]_i_1_n_4 ,\SIGMA_reg[3]_i_1_n_5 ,\SIGMA_reg[3]_i_1_n_6 ,\SIGMA_reg[3]_i_1_n_7 }),
        .S({\SIGMA[3]_i_2_n_0 ,\SIGMA[3]_i_3_n_0 ,\SIGMA[3]_i_4_n_0 ,\SIGMA[3]_i_5_n_0 }));
  FDRE \SIGMA_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[7]_i_1_n_7 ),
        .Q(SIGMA[4]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[7]_i_1_n_6 ),
        .Q(SIGMA[5]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[7]_i_1_n_5 ),
        .Q(SIGMA[6]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[7]_i_1_n_4 ),
        .Q(SIGMA[7]),
        .R(internal_rst_reg));
  CARRY4 \SIGMA_reg[7]_i_1 
       (.CI(\SIGMA_reg[3]_i_1_n_0 ),
        .CO({\SIGMA_reg[7]_i_1_n_0 ,\NLW_SIGMA_reg[7]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(SAMPLE[7:4]),
        .O({\SIGMA_reg[7]_i_1_n_4 ,\SIGMA_reg[7]_i_1_n_5 ,\SIGMA_reg[7]_i_1_n_6 ,\SIGMA_reg[7]_i_1_n_7 }),
        .S({\SIGMA[7]_i_2_n_0 ,\SIGMA[7]_i_3_n_0 ,\SIGMA[7]_i_4_n_0 ,\SIGMA[7]_i_5_n_0 }));
  FDRE \SIGMA_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[10]_i_1_n_7 ),
        .Q(SIGMA[8]),
        .R(internal_rst_reg));
  FDRE \SIGMA_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\SIGMA_reg[10]_i_1_n_6 ),
        .Q(SIGMA[9]),
        .R(internal_rst_reg));
  LUT4 #(
    .INIT(16'hB888)) 
    STATE_i_1
       (.I0(\COUNT[0]_i_3_n_0 ),
        .I1(STATE_reg_n_0),
        .I2(output_audio_ack),
        .I3(data_in_stb),
        .O(STATE_i_1_n_0));
  FDRE STATE_reg
       (.C(clk),
        .CE(1'b1),
        .D(STATE_i_1_n_0),
        .Q(STATE_reg_n_0),
        .R(internal_rst_reg));
  LUT4 #(
    .INIT(16'h5015)) 
    S_DATA_IN_ACK_i_1
       (.I0(internal_rst_reg),
        .I1(data_in_stb),
        .I2(output_audio_ack),
        .I3(STATE_reg_n_0),
        .O(S_DATA_IN_ACK_i_1_n_0));
  FDRE S_DATA_IN_ACK_reg
       (.C(clk),
        .CE(1'b1),
        .D(S_DATA_IN_ACK_i_1_n_0),
        .Q(output_audio_ack),
        .R(1'b0));
endmodule

module rmii_ethernet
   (txen_OBUF,
    Q,
    clk,
    eth_clk_OBUF,
    internal_rst_reg,
    rxdv_IBUF,
    rxer_IBUF,
    D);
  output txen_OBUF;
  output [1:0]Q;
  input clk;
  input eth_clk_OBUF;
  input internal_rst_reg;
  input rxdv_IBUF;
  input rxer_IBUF;
  input [1:0]D;

  wire DONE;
  wire DONE_DEL;
  wire DONE_SYNC;
  wire DONE_i_1_n_0;
  wire GO;
  wire GO_DEL;
  wire GO_SYNC;
  wire GO_i_1_n_0;
  wire PREAMBLE_COUNT;
  wire \PREAMBLE_COUNT[0]_i_1_n_0 ;
  wire \PREAMBLE_COUNT[1]_i_1_n_0 ;
  wire \PREAMBLE_COUNT[2]_i_1_n_0 ;
  wire \PREAMBLE_COUNT[3]_i_1_n_0 ;
  wire \PREAMBLE_COUNT[4]_i_1_n_0 ;
  wire \PREAMBLE_COUNT[4]_i_2_n_0 ;
  wire \PREAMBLE_COUNT[4]_i_4_n_0 ;
  wire \PREAMBLE_COUNT_reg_n_0_[0] ;
  wire \PREAMBLE_COUNT_reg_n_0_[1] ;
  wire \PREAMBLE_COUNT_reg_n_0_[2] ;
  wire \PREAMBLE_COUNT_reg_n_0_[3] ;
  wire \PREAMBLE_COUNT_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [8:15]REVERSED0_in;
  wire [16:23]REVERSED1_in;
  wire S_TX_ACK_i_1_n_0;
  wire S_TX_ACK_reg_n_0;
  wire \TXD[0]_i_10_n_0 ;
  wire \TXD[0]_i_11_n_0 ;
  wire \TXD[0]_i_1_n_0 ;
  wire \TXD[0]_i_2_n_0 ;
  wire \TXD[0]_i_4_n_0 ;
  wire \TXD[0]_i_6_n_0 ;
  wire \TXD[0]_i_7_n_0 ;
  wire \TXD[0]_i_8_n_0 ;
  wire \TXD[0]_i_9_n_0 ;
  wire \TXD[1]_i_10_n_0 ;
  wire \TXD[1]_i_11_n_0 ;
  wire \TXD[1]_i_1_n_0 ;
  wire \TXD[1]_i_2_n_0 ;
  wire \TXD[1]_i_3_n_0 ;
  wire \TXD[1]_i_6_n_0 ;
  wire \TXD[1]_i_7_n_0 ;
  wire \TXD[1]_i_8_n_0 ;
  wire \TXD[1]_i_9_n_0 ;
  wire \TXD_reg[0]_i_3_n_0 ;
  wire \TXD_reg[0]_i_5_n_0 ;
  wire \TXD_reg[1]_i_4_n_0 ;
  wire \TXD_reg[1]_i_5_n_0 ;
  wire TXEN_i_1_n_0;
  wire TXEN_i_2_n_0;
  wire [31:1]TX_CRC;
  wire \TX_CRC[0]_i_1_n_0 ;
  wire \TX_CRC[0]_i_2_n_0 ;
  wire \TX_CRC[10]_i_2_n_0 ;
  wire \TX_CRC[10]_i_3_n_0 ;
  wire \TX_CRC[10]_i_4_n_0 ;
  wire \TX_CRC[10]_i_5_n_0 ;
  wire \TX_CRC[10]_i_6_n_0 ;
  wire \TX_CRC[11]_i_1_n_0 ;
  wire \TX_CRC[11]_i_2_n_0 ;
  wire \TX_CRC[11]_i_3_n_0 ;
  wire \TX_CRC[11]_i_4_n_0 ;
  wire \TX_CRC[12]_i_2_n_0 ;
  wire \TX_CRC[12]_i_3_n_0 ;
  wire \TX_CRC[12]_i_4_n_0 ;
  wire \TX_CRC[12]_i_5_n_0 ;
  wire \TX_CRC[12]_i_6_n_0 ;
  wire \TX_CRC[12]_i_7_n_0 ;
  wire \TX_CRC[13]_i_2_n_0 ;
  wire \TX_CRC[13]_i_3_n_0 ;
  wire \TX_CRC[13]_i_4_n_0 ;
  wire \TX_CRC[13]_i_5_n_0 ;
  wire \TX_CRC[13]_i_6_n_0 ;
  wire \TX_CRC[13]_i_7_n_0 ;
  wire \TX_CRC[14]_i_2_n_0 ;
  wire \TX_CRC[14]_i_3_n_0 ;
  wire \TX_CRC[14]_i_4_n_0 ;
  wire \TX_CRC[14]_i_5_n_0 ;
  wire \TX_CRC[15]_i_2_n_0 ;
  wire \TX_CRC[15]_i_3_n_0 ;
  wire \TX_CRC[15]_i_4_n_0 ;
  wire \TX_CRC[15]_i_5_n_0 ;
  wire \TX_CRC[15]_i_6_n_0 ;
  wire \TX_CRC[16]_i_1_n_0 ;
  wire \TX_CRC[16]_i_2_n_0 ;
  wire \TX_CRC[16]_i_3_n_0 ;
  wire \TX_CRC[17]_i_2_n_0 ;
  wire \TX_CRC[17]_i_3_n_0 ;
  wire \TX_CRC[17]_i_4_n_0 ;
  wire \TX_CRC[17]_i_5_n_0 ;
  wire \TX_CRC[18]_i_2_n_0 ;
  wire \TX_CRC[18]_i_3_n_0 ;
  wire \TX_CRC[19]_i_1_n_0 ;
  wire \TX_CRC[19]_i_2_n_0 ;
  wire \TX_CRC[19]_i_3_n_0 ;
  wire \TX_CRC[1]_i_2_n_0 ;
  wire \TX_CRC[1]_i_3_n_0 ;
  wire \TX_CRC[20]_i_1_n_0 ;
  wire \TX_CRC[22]_i_1_n_0 ;
  wire \TX_CRC[23]_i_1_n_0 ;
  wire \TX_CRC[23]_i_2_n_0 ;
  wire \TX_CRC[23]_i_3_n_0 ;
  wire \TX_CRC[24]_i_2_n_0 ;
  wire \TX_CRC[24]_i_3_n_0 ;
  wire \TX_CRC[25]_i_2_n_0 ;
  wire \TX_CRC[25]_i_3_n_0 ;
  wire \TX_CRC[26]_i_2_n_0 ;
  wire \TX_CRC[26]_i_3_n_0 ;
  wire \TX_CRC[26]_i_4_n_0 ;
  wire \TX_CRC[26]_i_5_n_0 ;
  wire \TX_CRC[27]_i_1_n_0 ;
  wire \TX_CRC[27]_i_2_n_0 ;
  wire \TX_CRC[27]_i_3_n_0 ;
  wire \TX_CRC[27]_i_4_n_0 ;
  wire \TX_CRC[28]_i_2_n_0 ;
  wire \TX_CRC[28]_i_3_n_0 ;
  wire \TX_CRC[28]_i_4_n_0 ;
  wire \TX_CRC[29]_i_2_n_0 ;
  wire \TX_CRC[29]_i_3_n_0 ;
  wire \TX_CRC[29]_i_4_n_0 ;
  wire \TX_CRC[29]_i_5_n_0 ;
  wire \TX_CRC[2]_i_1_n_0 ;
  wire \TX_CRC[2]_i_2_n_0 ;
  wire \TX_CRC[2]_i_3_n_0 ;
  wire \TX_CRC[2]_i_4_n_0 ;
  wire \TX_CRC[2]_i_5_n_0 ;
  wire \TX_CRC[30]_i_1_n_0 ;
  wire \TX_CRC[30]_i_2_n_0 ;
  wire \TX_CRC[30]_i_3_n_0 ;
  wire \TX_CRC[30]_i_4_n_0 ;
  wire \TX_CRC[30]_i_5_n_0 ;
  wire \TX_CRC[31]_i_1_n_0 ;
  wire \TX_CRC[3]_i_2_n_0 ;
  wire \TX_CRC[3]_i_3_n_0 ;
  wire \TX_CRC[4]_i_2_n_0 ;
  wire \TX_CRC[4]_i_3_n_0 ;
  wire \TX_CRC[4]_i_4_n_0 ;
  wire \TX_CRC[5]_i_2_n_0 ;
  wire \TX_CRC[5]_i_3_n_0 ;
  wire \TX_CRC[5]_i_4_n_0 ;
  wire \TX_CRC[5]_i_5_n_0 ;
  wire \TX_CRC[5]_i_6_n_0 ;
  wire \TX_CRC[6]_i_2_n_0 ;
  wire \TX_CRC[6]_i_3_n_0 ;
  wire \TX_CRC[6]_i_4_n_0 ;
  wire \TX_CRC[6]_i_5_n_0 ;
  wire \TX_CRC[7]_i_1_n_0 ;
  wire \TX_CRC[7]_i_2_n_0 ;
  wire \TX_CRC[7]_i_3_n_0 ;
  wire \TX_CRC[7]_i_4_n_0 ;
  wire \TX_CRC[8]_i_1_n_0 ;
  wire \TX_CRC[9]_i_1_n_0 ;
  wire \TX_CRC[9]_i_2_n_0 ;
  wire \TX_CRC[9]_i_3_n_0 ;
  wire \TX_CRC_reg[17]_i_1_n_0 ;
  wire \TX_CRC_reg[18]_i_1_n_0 ;
  wire \TX_CRC_reg[25]_i_1_n_0 ;
  wire \TX_CRC_reg[3]_i_1_n_0 ;
  wire \TX_CRC_reg_n_0_[0] ;
  wire [10:1]TX_IN_COUNT;
  wire [10:2]TX_IN_COUNT0;
  wire \TX_IN_COUNT[10]_i_1_n_0 ;
  wire \TX_IN_COUNT[10]_i_2_n_0 ;
  wire \TX_IN_COUNT[10]_i_4_n_0 ;
  wire \TX_IN_COUNT[1]_i_1_n_0 ;
  wire TX_MEMORY_reg_n_76;
  wire TX_MEMORY_reg_n_78;
  wire TX_MEMORY_reg_n_79;
  wire TX_MEMORY_reg_n_84;
  wire [10:0]TX_OUT_COUNT0_in;
  wire \TX_OUT_COUNT[10]_i_1_n_0 ;
  wire \TX_OUT_COUNT[10]_i_3_n_0 ;
  wire \TX_OUT_COUNT[10]_i_4_n_0 ;
  wire \TX_OUT_COUNT[10]_i_5_n_0 ;
  wire \TX_OUT_COUNT[10]_i_6_n_0 ;
  wire \TX_OUT_COUNT[8]_i_2_n_0 ;
  wire \TX_OUT_COUNT_reg_n_0_[0] ;
  wire \TX_OUT_COUNT_reg_n_0_[10] ;
  wire \TX_OUT_COUNT_reg_n_0_[1] ;
  wire \TX_OUT_COUNT_reg_n_0_[2] ;
  wire \TX_OUT_COUNT_reg_n_0_[3] ;
  wire \TX_OUT_COUNT_reg_n_0_[4] ;
  wire \TX_OUT_COUNT_reg_n_0_[5] ;
  wire \TX_OUT_COUNT_reg_n_0_[6] ;
  wire \TX_OUT_COUNT_reg_n_0_[7] ;
  wire \TX_OUT_COUNT_reg_n_0_[8] ;
  wire \TX_OUT_COUNT_reg_n_0_[9] ;
  wire [1:0]TX_PACKET_STATE;
  wire \TX_PACKET_STATE[0]_i_1_n_0 ;
  wire \TX_PACKET_STATE[1]_i_10_n_0 ;
  wire \TX_PACKET_STATE[1]_i_11_n_0 ;
  wire \TX_PACKET_STATE[1]_i_12_n_0 ;
  wire \TX_PACKET_STATE[1]_i_13_n_0 ;
  wire \TX_PACKET_STATE[1]_i_1_n_0 ;
  wire \TX_PACKET_STATE[1]_i_4_n_0 ;
  wire \TX_PACKET_STATE[1]_i_5_n_0 ;
  wire \TX_PACKET_STATE[1]_i_6_n_0 ;
  wire \TX_PACKET_STATE[1]_i_7_n_0 ;
  wire \TX_PACKET_STATE[1]_i_8_n_0 ;
  wire \TX_PACKET_STATE[1]_i_9_n_0 ;
  wire \TX_PACKET_STATE_reg[1]_i_2_n_2 ;
  wire \TX_PACKET_STATE_reg[1]_i_3_n_0 ;
  wire \TX_PHY_STATE[0]_i_1_n_0 ;
  wire \TX_PHY_STATE[1]_i_1_n_0 ;
  wire \TX_PHY_STATE[2]_i_1_n_0 ;
  wire \TX_PHY_STATE[2]_i_2_n_0 ;
  wire \TX_PHY_STATE[2]_i_3_n_0 ;
  wire \TX_PHY_STATE[3]_i_1_n_0 ;
  wire \TX_PHY_STATE[3]_i_2_n_0 ;
  wire \TX_PHY_STATE[3]_i_3_n_0 ;
  wire \TX_PHY_STATE[3]_i_4_n_0 ;
  wire \TX_PHY_STATE[4]_i_1_n_0 ;
  wire \TX_PHY_STATE[4]_i_2_n_0 ;
  wire \TX_PHY_STATE[4]_i_3_n_0 ;
  wire \TX_PHY_STATE[4]_i_4_n_0 ;
  wire \TX_PHY_STATE_reg_n_0_[0] ;
  wire \TX_PHY_STATE_reg_n_0_[1] ;
  wire \TX_PHY_STATE_reg_n_0_[2] ;
  wire \TX_PHY_STATE_reg_n_0_[3] ;
  wire \TX_PHY_STATE_reg_n_0_[4] ;
  wire [10:0]TX_READ_ADDRESS;
  wire \TX_READ_ADDRESS_rep[0]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[10]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[10]_i_2_n_0 ;
  wire \TX_READ_ADDRESS_rep[1]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[1]_i_2_n_0 ;
  wire \TX_READ_ADDRESS_rep[2]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[3]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[4]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[5]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[6]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[7]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[8]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[9]_i_1_n_0 ;
  wire \TX_READ_ADDRESS_rep[9]_i_2_n_0 ;
  wire \TX_READ_ADDRESS_rep[9]_i_3_n_0 ;
  wire TX_WRITE;
  wire [10:0]TX_WRITE_ADDRESS;
  wire \TX_WRITE_ADDRESS[0]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[10]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[10]_i_2_n_0 ;
  wire \TX_WRITE_ADDRESS[10]_i_3_n_0 ;
  wire \TX_WRITE_ADDRESS[1]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[2]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[3]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[4]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[5]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[5]_i_2_n_0 ;
  wire \TX_WRITE_ADDRESS[6]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[6]_i_2_n_0 ;
  wire \TX_WRITE_ADDRESS[7]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[8]_i_1_n_0 ;
  wire \TX_WRITE_ADDRESS[9]_i_1_n_0 ;
  wire [10:0]TX_WRITE_ADDRESS_DEL;
  wire TX_WRITE_i_1_n_0;
  wire clk;
  wire eth_clk_OBUF;
  wire internal_rst_reg;
  wire p_0_in167_in;
  wire p_0_in66_in;
  wire p_11_in;
  wire p_13_in;
  wire p_15_in;
  wire p_1_in126_in;
  wire p_1_in128_in;
  wire p_1_in130_in;
  wire p_1_in132_in;
  wire p_1_in133_in;
  wire p_1_in135_in;
  wire p_1_in136_in;
  wire p_2_in171_in;
  wire p_30_in;
  wire p_37_in;
  wire [1:0]p_8_in;
  wire [1:0]p_9_in;
  wire [31:24]slv;
  wire txen_OBUF;
  wire NLW_TX_MEMORY_reg_CASCADEOUTA_UNCONNECTED;
  wire NLW_TX_MEMORY_reg_CASCADEOUTB_UNCONNECTED;
  wire NLW_TX_MEMORY_reg_DBITERR_UNCONNECTED;
  wire NLW_TX_MEMORY_reg_INJECTDBITERR_UNCONNECTED;
  wire NLW_TX_MEMORY_reg_INJECTSBITERR_UNCONNECTED;
  wire NLW_TX_MEMORY_reg_SBITERR_UNCONNECTED;
  wire [31:0]NLW_TX_MEMORY_reg_DOADO_UNCONNECTED;
  wire [31:16]NLW_TX_MEMORY_reg_DOBDO_UNCONNECTED;
  wire [3:0]NLW_TX_MEMORY_reg_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_TX_MEMORY_reg_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_TX_MEMORY_reg_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_TX_MEMORY_reg_RDADDRECC_UNCONNECTED;
  wire [3:0]\NLW_TX_PACKET_STATE_reg[1]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_TX_PACKET_STATE_reg[1]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_TX_PACKET_STATE_reg[1]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_TX_PACKET_STATE_reg[1]_i_3_O_UNCONNECTED ;

  FDRE DONE_DEL_reg
       (.C(clk),
        .CE(1'b1),
        .D(DONE),
        .Q(DONE_DEL),
        .R(1'b0));
  FDRE DONE_SYNC_reg
       (.C(clk),
        .CE(1'b1),
        .D(DONE_DEL),
        .Q(DONE_SYNC),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    DONE_i_1
       (.I0(GO_SYNC),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[4] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(DONE),
        .O(DONE_i_1_n_0));
  FDRE DONE_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(DONE_i_1_n_0),
        .Q(DONE),
        .R(internal_rst_reg));
  FDRE GO_DEL_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(GO),
        .Q(GO_DEL),
        .R(1'b0));
  FDRE GO_SYNC_reg
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(GO_DEL),
        .Q(GO_SYNC),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    GO_i_1
       (.I0(DONE_SYNC),
        .I1(TX_PACKET_STATE[1]),
        .I2(TX_PACKET_STATE[0]),
        .I3(GO),
        .O(GO_i_1_n_0));
  FDRE GO_reg
       (.C(clk),
        .CE(1'b1),
        .D(GO_i_1_n_0),
        .Q(GO),
        .R(internal_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h7A)) 
    \PREAMBLE_COUNT[0]_i_1 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .I2(PREAMBLE_COUNT),
        .O(\PREAMBLE_COUNT[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h9FAA)) 
    \PREAMBLE_COUNT[1]_i_1 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .I1(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(PREAMBLE_COUNT),
        .O(\PREAMBLE_COUNT[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hE0FF1000)) 
    \PREAMBLE_COUNT[2]_i_1 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I1(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(PREAMBLE_COUNT),
        .I4(\PREAMBLE_COUNT_reg_n_0_[2] ),
        .O(\PREAMBLE_COUNT[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF01FF0000)) 
    \PREAMBLE_COUNT[3]_i_1 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .I1(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I2(\PREAMBLE_COUNT_reg_n_0_[2] ),
        .I3(\TX_PHY_STATE_reg_n_0_[0] ),
        .I4(PREAMBLE_COUNT),
        .I5(\PREAMBLE_COUNT_reg_n_0_[3] ),
        .O(\PREAMBLE_COUNT[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h7FB0)) 
    \PREAMBLE_COUNT[4]_i_1 
       (.I0(\PREAMBLE_COUNT[4]_i_2_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .I2(PREAMBLE_COUNT),
        .I3(\PREAMBLE_COUNT_reg_n_0_[4] ),
        .O(\PREAMBLE_COUNT[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \PREAMBLE_COUNT[4]_i_2 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[2] ),
        .I1(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I2(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .I3(\PREAMBLE_COUNT_reg_n_0_[3] ),
        .O(\PREAMBLE_COUNT[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAACCAC00000000)) 
    \PREAMBLE_COUNT[4]_i_3 
       (.I0(\TX_PHY_STATE[4]_i_3_n_0 ),
        .I1(GO_SYNC),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(\PREAMBLE_COUNT[4]_i_4_n_0 ),
        .O(PREAMBLE_COUNT));
  LUT4 #(
    .INIT(16'h0001)) 
    \PREAMBLE_COUNT[4]_i_4 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .O(\PREAMBLE_COUNT[4]_i_4_n_0 ));
  FDRE \PREAMBLE_COUNT_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PREAMBLE_COUNT[0]_i_1_n_0 ),
        .Q(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \PREAMBLE_COUNT_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PREAMBLE_COUNT[1]_i_1_n_0 ),
        .Q(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \PREAMBLE_COUNT_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PREAMBLE_COUNT[2]_i_1_n_0 ),
        .Q(\PREAMBLE_COUNT_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \PREAMBLE_COUNT_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PREAMBLE_COUNT[3]_i_1_n_0 ),
        .Q(\PREAMBLE_COUNT_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \PREAMBLE_COUNT_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(1'b1),
        .D(\PREAMBLE_COUNT[4]_i_1_n_0 ),
        .Q(\PREAMBLE_COUNT_reg_n_0_[4] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAE55)) 
    S_TX_ACK_i_1
       (.I0(TX_PACKET_STATE[1]),
        .I1(TX_PACKET_STATE[0]),
        .I2(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I3(S_TX_ACK_reg_n_0),
        .O(S_TX_ACK_i_1_n_0));
  FDRE S_TX_ACK_reg
       (.C(clk),
        .CE(1'b1),
        .D(S_TX_ACK_i_1_n_0),
        .Q(S_TX_ACK_reg_n_0),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h505030FF50FF30FF)) 
    \TXD[0]_i_1 
       (.I0(\TXD[0]_i_2_n_0 ),
        .I1(\TXD_reg[0]_i_3_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[4] ),
        .I3(\TXD[0]_i_4_n_0 ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .I5(\TXD_reg[0]_i_5_n_0 ),
        .O(\TXD[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h05F5030305F5F3F3)) 
    \TXD[0]_i_10 
       (.I0(p_2_in171_in),
        .I1(p_8_in[0]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(p_15_in),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(TX_MEMORY_reg_n_84),
        .O(\TXD[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hA0AFC0C0A0AFCFCF)) 
    \TXD[0]_i_11 
       (.I0(slv[29]),
        .I1(slv[31]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(TX_MEMORY_reg_n_78),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(p_11_in),
        .O(\TXD[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \TXD[0]_i_2 
       (.I0(p_1_in126_in),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .I2(p_1_in130_in),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TXD[0]_i_6_n_0 ),
        .O(\TXD[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF30500000)) 
    \TXD[0]_i_4 
       (.I0(TX_MEMORY_reg_n_76),
        .I1(p_9_in[0]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(\TX_PHY_STATE_reg_n_0_[0] ),
        .I4(\TXD[0]_i_9_n_0 ),
        .I5(\TX_PHY_STATE_reg_n_0_[4] ),
        .O(\TXD[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[0]_i_6 
       (.I0(p_1_in133_in),
        .I1(p_1_in136_in),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(REVERSED0_in[9]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(REVERSED0_in[11]),
        .O(\TXD[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[0]_i_7 
       (.I0(REVERSED1_in[21]),
        .I1(REVERSED1_in[23]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(slv[25]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(slv[27]),
        .O(\TXD[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[0]_i_8 
       (.I0(REVERSED0_in[13]),
        .I1(REVERSED0_in[15]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(REVERSED1_in[17]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(REVERSED1_in[19]),
        .O(\TXD[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \TXD[0]_i_9 
       (.I0(\TX_PHY_STATE_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(\TXD[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hBFFFFFFE)) 
    \TXD[1]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[0] ),
        .I1(\TX_PHY_STATE_reg_n_0_[4] ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TX_PHY_STATE_reg_n_0_[1] ),
        .O(\TXD[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[1]_i_10 
       (.I0(p_13_in),
        .I1(p_0_in66_in),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(p_30_in),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(p_8_in[1]),
        .O(\TXD[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h5F503F3F5F503030)) 
    \TXD[1]_i_11 
       (.I0(slv[28]),
        .I1(slv[30]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(p_37_in),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(TX_MEMORY_reg_n_79),
        .O(\TXD[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0BFBFAFA0B0B0)) 
    \TXD[1]_i_2 
       (.I0(\TXD[1]_i_3_n_0 ),
        .I1(\TXD_reg[1]_i_4_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[4] ),
        .I3(\TXD_reg[1]_i_5_n_0 ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .I5(\TXD[1]_i_6_n_0 ),
        .O(\TXD[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    \TXD[1]_i_3 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TXD[1]_i_7_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(p_1_in128_in),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(\TX_CRC_reg_n_0_[0] ),
        .O(\TXD[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hA828A020)) 
    \TXD[1]_i_6 
       (.I0(\TX_PHY_STATE_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[1] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(p_9_in[1]),
        .I4(p_0_in167_in),
        .O(\TXD[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[1]_i_7 
       (.I0(p_1_in132_in),
        .I1(p_1_in135_in),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(REVERSED0_in[8]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(REVERSED0_in[10]),
        .O(\TXD[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[1]_i_8 
       (.I0(REVERSED1_in[20]),
        .I1(REVERSED1_in[22]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(slv[24]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(slv[26]),
        .O(\TXD[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TXD[1]_i_9 
       (.I0(REVERSED0_in[12]),
        .I1(REVERSED0_in[14]),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(REVERSED1_in[16]),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(REVERSED1_in[18]),
        .O(\TXD[1]_i_9_n_0 ));
  FDRE \TXD_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(\TXD[1]_i_1_n_0 ),
        .D(\TXD[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(internal_rst_reg));
  MUXF7 \TXD_reg[0]_i_3 
       (.I0(\TXD[0]_i_7_n_0 ),
        .I1(\TXD[0]_i_8_n_0 ),
        .O(\TXD_reg[0]_i_3_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  MUXF7 \TXD_reg[0]_i_5 
       (.I0(\TXD[0]_i_10_n_0 ),
        .I1(\TXD[0]_i_11_n_0 ),
        .O(\TXD_reg[0]_i_5_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  FDRE \TXD_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(\TXD[1]_i_1_n_0 ),
        .D(\TXD[1]_i_2_n_0 ),
        .Q(Q[1]),
        .R(internal_rst_reg));
  MUXF7 \TXD_reg[1]_i_4 
       (.I0(\TXD[1]_i_8_n_0 ),
        .I1(\TXD[1]_i_9_n_0 ),
        .O(\TXD_reg[1]_i_4_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  MUXF7 \TXD_reg[1]_i_5 
       (.I0(\TXD[1]_i_10_n_0 ),
        .I1(\TXD[1]_i_11_n_0 ),
        .O(\TXD_reg[1]_i_5_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  LUT5 #(
    .INIT(32'h88000010)) 
    TXEN_i_1
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_PHY_STATE_reg_n_0_[4] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TXEN_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TXEN_i_2
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .O(TXEN_i_2_n_0));
  FDRE TXEN_reg
       (.C(eth_clk_OBUF),
        .CE(TXEN_i_1_n_0),
        .D(TXEN_i_2_n_0),
        .Q(txen_OBUF),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'h606F6F609F90909F)) 
    \TX_CRC[0]_i_1 
       (.I0(p_37_in),
        .I1(p_0_in66_in),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(p_30_in),
        .I4(p_0_in167_in),
        .I5(\TX_CRC[0]_i_2_n_0 ),
        .O(\TX_CRC[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \TX_CRC[0]_i_2 
       (.I0(slv[30]),
        .I1(slv[24]),
        .O(\TX_CRC[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF0FF66FF)) 
    \TX_CRC[10]_i_1 
       (.I0(slv[24]),
        .I1(\TX_CRC[10]_i_2_n_0 ),
        .I2(\TX_CRC[10]_i_3_n_0 ),
        .I3(\TX_PHY_STATE_reg_n_0_[3] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TX_CRC[10]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[10]_i_2 
       (.I0(slv[29]),
        .I1(p_1_in128_in),
        .I2(\TX_CRC[10]_i_4_n_0 ),
        .I3(\TX_CRC[10]_i_5_n_0 ),
        .I4(slv[26]),
        .I5(slv[27]),
        .O(\TX_CRC[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[10]_i_3 
       (.I0(\TX_CRC[10]_i_6_n_0 ),
        .I1(slv[26]),
        .I2(slv[27]),
        .I3(slv[24]),
        .I4(p_15_in),
        .O(\TX_CRC[10]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[10]_i_4 
       (.I0(p_9_in[0]),
        .I1(p_8_in[0]),
        .O(\TX_CRC[10]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[10]_i_5 
       (.I0(p_8_in[1]),
        .I1(p_30_in),
        .O(\TX_CRC[10]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[10]_i_6 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(p_11_in),
        .I2(slv[29]),
        .I3(p_1_in128_in),
        .I4(p_37_in),
        .O(\TX_CRC[10]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB44B8778)) 
    \TX_CRC[11]_i_1 
       (.I0(\TX_CRC[11]_i_2_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(p_1_in130_in),
        .I3(slv[28]),
        .I4(\TX_CRC[11]_i_3_n_0 ),
        .O(\TX_CRC[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[11]_i_2 
       (.I0(\TX_CRC[11]_i_4_n_0 ),
        .I1(slv[25]),
        .I2(TX_MEMORY_reg_n_78),
        .I3(slv[27]),
        .I4(p_13_in),
        .O(\TX_CRC[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[11]_i_3 
       (.I0(p_8_in[0]),
        .I1(p_30_in),
        .I2(slv[24]),
        .I3(p_9_in[1]),
        .I4(slv[27]),
        .I5(\TX_CRC[17]_i_4_n_0 ),
        .O(\TX_CRC[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \TX_CRC[11]_i_4 
       (.I0(slv[24]),
        .I1(p_11_in),
        .I2(p_37_in),
        .O(\TX_CRC[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9999FFFF0FF0FFFF)) 
    \TX_CRC[12]_i_1 
       (.I0(\TX_CRC[12]_i_2_n_0 ),
        .I1(\TX_CRC[12]_i_3_n_0 ),
        .I2(\TX_CRC[12]_i_4_n_0 ),
        .I3(\TX_CRC[12]_i_5_n_0 ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TX_CRC[12]));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[12]_i_2 
       (.I0(\TX_CRC[12]_i_6_n_0 ),
        .I1(slv[24]),
        .I2(p_37_in),
        .I3(TX_MEMORY_reg_n_79),
        .I4(p_1_in132_in),
        .I5(slv[29]),
        .O(\TX_CRC[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[12]_i_3 
       (.I0(TX_MEMORY_reg_n_78),
        .I1(p_0_in66_in),
        .I2(p_15_in),
        .I3(slv[28]),
        .I4(p_13_in),
        .I5(slv[25]),
        .O(\TX_CRC[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[12]_i_4 
       (.I0(\TX_CRC[12]_i_7_n_0 ),
        .I1(p_2_in171_in),
        .I2(p_1_in132_in),
        .I3(slv[29]),
        .I4(p_9_in[0]),
        .I5(p_30_in),
        .O(\TX_CRC[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[12]_i_5 
       (.I0(slv[26]),
        .I1(slv[30]),
        .I2(slv[24]),
        .I3(p_9_in[1]),
        .I4(slv[28]),
        .I5(slv[25]),
        .O(\TX_CRC[12]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[12]_i_6 
       (.I0(slv[26]),
        .I1(slv[30]),
        .O(\TX_CRC[12]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[12]_i_7 
       (.I0(p_8_in[1]),
        .I1(p_0_in167_in),
        .O(\TX_CRC[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h57F7F757F75757F7)) 
    \TX_CRC[13]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_CRC[13]_i_2_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(\TX_CRC[13]_i_3_n_0 ),
        .I4(\TX_CRC[13]_i_4_n_0 ),
        .I5(\TX_CRC[13]_i_5_n_0 ),
        .O(TX_CRC[13]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[13]_i_2 
       (.I0(slv[29]),
        .I1(slv[25]),
        .I2(p_8_in[0]),
        .I3(p_9_in[0]),
        .I4(\TX_CRC[13]_i_4_n_0 ),
        .I5(\TX_CRC[13]_i_6_n_0 ),
        .O(\TX_CRC[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[13]_i_3 
       (.I0(slv[30]),
        .I1(p_1_in133_in),
        .I2(TX_MEMORY_reg_n_84),
        .I3(p_11_in),
        .I4(TX_MEMORY_reg_n_79),
        .I5(\TX_CRC[13]_i_7_n_0 ),
        .O(\TX_CRC[13]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \TX_CRC[13]_i_4 
       (.I0(slv[31]),
        .I1(slv[27]),
        .I2(slv[26]),
        .O(\TX_CRC[13]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \TX_CRC[13]_i_5 
       (.I0(p_15_in),
        .I1(p_0_in66_in),
        .I2(TX_MEMORY_reg_n_78),
        .O(\TX_CRC[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[13]_i_6 
       (.I0(p_8_in[1]),
        .I1(p_0_in167_in),
        .I2(p_2_in171_in),
        .I3(slv[30]),
        .I4(p_1_in133_in),
        .I5(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[13]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[13]_i_7 
       (.I0(slv[25]),
        .I1(slv[29]),
        .O(\TX_CRC[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFD755D755D7FFD7)) 
    \TX_CRC[14]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_CRC[14]_i_2_n_0 ),
        .I2(\TX_CRC[14]_i_3_n_0 ),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TX_CRC[14]_i_4_n_0 ),
        .I5(\TX_CRC[14]_i_5_n_0 ),
        .O(TX_CRC[14]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[14]_i_2 
       (.I0(p_0_in167_in),
        .I1(p_8_in[1]),
        .I2(slv[31]),
        .I3(p_1_in135_in),
        .I4(p_8_in[0]),
        .I5(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[14]_i_3 
       (.I0(slv[27]),
        .I1(slv[28]),
        .I2(slv[26]),
        .I3(slv[30]),
        .I4(p_9_in[1]),
        .O(\TX_CRC[14]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[14]_i_4 
       (.I0(slv[30]),
        .I1(slv[26]),
        .I2(slv[28]),
        .I3(p_13_in),
        .I4(slv[27]),
        .O(\TX_CRC[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[14]_i_5 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(p_11_in),
        .I2(slv[31]),
        .I3(p_1_in135_in),
        .I4(p_0_in66_in),
        .I5(TX_MEMORY_reg_n_84),
        .O(\TX_CRC[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D77D7DD7)) 
    \TX_CRC[15]_i_1 
       (.I0(\TX_CRC[15]_i_2_n_0 ),
        .I1(\TX_CRC[15]_i_3_n_0 ),
        .I2(slv[29]),
        .I3(TX_MEMORY_reg_n_76),
        .I4(\TX_CRC[15]_i_4_n_0 ),
        .I5(\TX_CRC[15]_i_5_n_0 ),
        .O(TX_CRC[15]));
  LUT2 #(
    .INIT(4'h2)) 
    \TX_CRC[15]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[15]_i_3 
       (.I0(slv[31]),
        .I1(p_1_in136_in),
        .O(\TX_CRC[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[15]_i_4 
       (.I0(p_9_in[0]),
        .I1(p_8_in[0]),
        .I2(p_9_in[1]),
        .I3(slv[27]),
        .I4(slv[28]),
        .O(\TX_CRC[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \TX_CRC[15]_i_5 
       (.I0(\TX_CRC[26]_i_2_n_0 ),
        .I1(p_11_in),
        .I2(TX_MEMORY_reg_n_84),
        .I3(p_15_in),
        .I4(slv[29]),
        .I5(\TX_CRC[15]_i_6_n_0 ),
        .O(\TX_CRC[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[15]_i_6 
       (.I0(slv[31]),
        .I1(p_1_in136_in),
        .I2(slv[28]),
        .I3(p_13_in),
        .I4(slv[27]),
        .O(\TX_CRC[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h696969690FF0F00F)) 
    \TX_CRC[16]_i_1 
       (.I0(p_13_in),
        .I1(\TX_CRC[16]_i_2_n_0 ),
        .I2(slv[24]),
        .I3(slv[28]),
        .I4(\TX_CRC[16]_i_3_n_0 ),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[16]_i_2 
       (.I0(p_15_in),
        .I1(slv[28]),
        .I2(slv[29]),
        .I3(REVERSED0_in[8]),
        .I4(p_37_in),
        .O(\TX_CRC[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[16]_i_3 
       (.I0(slv[29]),
        .I1(REVERSED0_in[8]),
        .I2(p_9_in[0]),
        .I3(p_30_in),
        .I4(p_9_in[1]),
        .O(\TX_CRC[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[17]_i_2 
       (.I0(slv[29]),
        .I1(p_9_in[0]),
        .I2(p_0_in167_in),
        .I3(\TX_CRC[17]_i_4_n_0 ),
        .I4(slv[30]),
        .I5(REVERSED0_in[9]),
        .O(\TX_CRC[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[17]_i_3 
       (.I0(slv[29]),
        .I1(\TX_CRC[17]_i_5_n_0 ),
        .I2(p_0_in66_in),
        .I3(TX_MEMORY_reg_n_78),
        .I4(slv[25]),
        .I5(p_15_in),
        .O(\TX_CRC[17]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[17]_i_4 
       (.I0(p_2_in171_in),
        .I1(slv[25]),
        .O(\TX_CRC[17]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[17]_i_5 
       (.I0(slv[30]),
        .I1(REVERSED0_in[9]),
        .O(\TX_CRC[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[18]_i_2 
       (.I0(slv[30]),
        .I1(slv[26]),
        .I2(\TX_CRC[12]_i_7_n_0 ),
        .I3(TX_MEMORY_reg_n_76),
        .I4(slv[31]),
        .I5(REVERSED0_in[10]),
        .O(\TX_CRC[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[18]_i_3 
       (.I0(slv[30]),
        .I1(\TX_CRC[29]_i_3_n_0 ),
        .I2(slv[31]),
        .I3(REVERSED0_in[10]),
        .I4(slv[26]),
        .I5(TX_MEMORY_reg_n_79),
        .O(\TX_CRC[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6969699696966996)) 
    \TX_CRC[19]_i_1 
       (.I0(slv[31]),
        .I1(REVERSED0_in[11]),
        .I2(slv[27]),
        .I3(\TX_CRC[19]_i_2_n_0 ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(\TX_CRC[19]_i_3_n_0 ),
        .O(\TX_CRC[19]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[19]_i_2 
       (.I0(p_8_in[0]),
        .I1(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[19]_i_3 
       (.I0(TX_MEMORY_reg_n_84),
        .I1(p_11_in),
        .O(\TX_CRC[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC33CFFFFAAAAFFFF)) 
    \TX_CRC[1]_i_1 
       (.I0(\TX_CRC[1]_i_2_n_0 ),
        .I1(\TX_CRC[1]_i_3_n_0 ),
        .I2(\TX_CRC[5]_i_3_n_0 ),
        .I3(TX_MEMORY_reg_n_84),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TX_CRC[1]));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[1]_i_2 
       (.I0(\TX_CRC[5]_i_3_n_0 ),
        .I1(TX_MEMORY_reg_n_76),
        .I2(\TX_CRC[0]_i_2_n_0 ),
        .I3(p_30_in),
        .I4(p_2_in171_in),
        .I5(p_0_in167_in),
        .O(\TX_CRC[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[1]_i_3 
       (.I0(p_37_in),
        .I1(p_0_in66_in),
        .I2(slv[30]),
        .I3(slv[24]),
        .I4(TX_MEMORY_reg_n_78),
        .O(\TX_CRC[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB84747B8)) 
    \TX_CRC[20]_i_1 
       (.I0(p_13_in),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(p_9_in[1]),
        .I3(REVERSED0_in[12]),
        .I4(slv[28]),
        .O(\TX_CRC[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFD5D57F757F7FD5D)) 
    \TX_CRC[21]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(p_9_in[0]),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(p_15_in),
        .I4(REVERSED0_in[13]),
        .I5(slv[29]),
        .O(TX_CRC[21]));
  LUT5 #(
    .INIT(32'hB84747B8)) 
    \TX_CRC[22]_i_1 
       (.I0(p_37_in),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(p_30_in),
        .I3(slv[24]),
        .I4(REVERSED0_in[14]),
        .O(\TX_CRC[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4B78784B784B4B78)) 
    \TX_CRC[23]_i_1 
       (.I0(\TX_CRC[1]_i_3_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(\TX_CRC[23]_i_2_n_0 ),
        .I3(slv[30]),
        .I4(\TX_CRC[23]_i_3_n_0 ),
        .I5(slv[24]),
        .O(\TX_CRC[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[23]_i_2 
       (.I0(slv[25]),
        .I1(REVERSED0_in[15]),
        .O(\TX_CRC[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \TX_CRC[23]_i_3 
       (.I0(p_30_in),
        .I1(p_2_in171_in),
        .I2(p_0_in167_in),
        .O(\TX_CRC[23]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hCFAF)) 
    \TX_CRC[24]_i_1 
       (.I0(\TX_CRC[24]_i_2_n_0 ),
        .I1(\TX_CRC[24]_i_3_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TX_CRC[24]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[24]_i_2 
       (.I0(slv[26]),
        .I1(REVERSED1_in[16]),
        .I2(TX_MEMORY_reg_n_76),
        .I3(p_8_in[1]),
        .I4(p_2_in171_in),
        .I5(\TX_CRC[5]_i_3_n_0 ),
        .O(\TX_CRC[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[24]_i_3 
       (.I0(TX_MEMORY_reg_n_78),
        .I1(TX_MEMORY_reg_n_84),
        .I2(slv[26]),
        .I3(REVERSED1_in[16]),
        .I4(\TX_CRC[5]_i_3_n_0 ),
        .I5(TX_MEMORY_reg_n_79),
        .O(\TX_CRC[24]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[25]_i_2 
       (.I0(p_8_in[0]),
        .I1(p_8_in[1]),
        .I2(REVERSED1_in[17]),
        .I3(slv[27]),
        .I4(slv[26]),
        .O(\TX_CRC[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[25]_i_3 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(slv[26]),
        .I2(REVERSED1_in[17]),
        .I3(slv[27]),
        .I4(p_11_in),
        .O(\TX_CRC[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D77D7DD7)) 
    \TX_CRC[26]_i_1 
       (.I0(\TX_CRC[26]_i_2_n_0 ),
        .I1(slv[28]),
        .I2(p_13_in),
        .I3(REVERSED1_in[18]),
        .I4(\TX_CRC[26]_i_3_n_0 ),
        .I5(\TX_CRC[26]_i_4_n_0 ),
        .O(TX_CRC[26]));
  LUT2 #(
    .INIT(4'h8)) 
    \TX_CRC[26]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[26]_i_3 
       (.I0(slv[30]),
        .I1(slv[27]),
        .I2(p_0_in66_in),
        .I3(p_37_in),
        .I4(p_11_in),
        .I5(slv[24]),
        .O(\TX_CRC[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \TX_CRC[26]_i_4 
       (.I0(\TX_CRC[15]_i_2_n_0 ),
        .I1(p_8_in[0]),
        .I2(slv[27]),
        .I3(p_9_in[1]),
        .I4(slv[30]),
        .I5(\TX_CRC[26]_i_5_n_0 ),
        .O(\TX_CRC[26]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[26]_i_5 
       (.I0(p_30_in),
        .I1(p_0_in167_in),
        .I2(slv[28]),
        .I3(slv[24]),
        .I4(REVERSED1_in[18]),
        .O(\TX_CRC[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h906F6F909F60609F)) 
    \TX_CRC[27]_i_1 
       (.I0(p_13_in),
        .I1(\TX_CRC[27]_i_2_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(slv[28]),
        .I4(slv[31]),
        .I5(\TX_CRC[27]_i_3_n_0 ),
        .O(\TX_CRC[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[27]_i_2 
       (.I0(slv[29]),
        .I1(REVERSED1_in[19]),
        .I2(TX_MEMORY_reg_n_84),
        .I3(TX_MEMORY_reg_n_78),
        .I4(p_15_in),
        .I5(slv[25]),
        .O(\TX_CRC[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[27]_i_3 
       (.I0(slv[25]),
        .I1(p_9_in[1]),
        .I2(\TX_CRC[27]_i_4_n_0 ),
        .I3(slv[29]),
        .I4(REVERSED1_in[19]),
        .I5(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[27]_i_4 
       (.I0(p_2_in171_in),
        .I1(p_9_in[0]),
        .O(\TX_CRC[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h69FF00FF69FFFFFF)) 
    \TX_CRC[28]_i_1 
       (.I0(slv[29]),
        .I1(slv[26]),
        .I2(\TX_CRC[28]_i_2_n_0 ),
        .I3(\TX_PHY_STATE_reg_n_0_[3] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(\TX_CRC[28]_i_3_n_0 ),
        .O(TX_CRC[28]));
  LUT5 #(
    .INIT(32'h69969669)) 
    \TX_CRC[28]_i_2 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(p_15_in),
        .I2(slv[30]),
        .I3(REVERSED1_in[20]),
        .I4(p_0_in66_in),
        .O(\TX_CRC[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[28]_i_3 
       (.I0(p_8_in[1]),
        .I1(slv[26]),
        .I2(\TX_CRC[28]_i_4_n_0 ),
        .I3(p_0_in167_in),
        .I4(p_9_in[0]),
        .I5(slv[29]),
        .O(\TX_CRC[28]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[28]_i_4 
       (.I0(slv[30]),
        .I1(REVERSED1_in[20]),
        .O(\TX_CRC[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hC33CFFFFAAAAFFFF)) 
    \TX_CRC[29]_i_1 
       (.I0(\TX_CRC[29]_i_2_n_0 ),
        .I1(\TX_CRC[29]_i_3_n_0 ),
        .I2(slv[27]),
        .I3(\TX_CRC[29]_i_4_n_0 ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(TX_CRC[29]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[29]_i_2 
       (.I0(slv[31]),
        .I1(REVERSED1_in[21]),
        .I2(TX_MEMORY_reg_n_76),
        .I3(p_0_in167_in),
        .I4(p_8_in[0]),
        .I5(\TX_CRC[29]_i_5_n_0 ),
        .O(\TX_CRC[29]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[29]_i_3 
       (.I0(p_0_in66_in),
        .I1(TX_MEMORY_reg_n_84),
        .O(\TX_CRC[29]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \TX_CRC[29]_i_4 
       (.I0(REVERSED1_in[21]),
        .I1(slv[31]),
        .I2(p_11_in),
        .I3(slv[30]),
        .O(\TX_CRC[29]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[29]_i_5 
       (.I0(slv[30]),
        .I1(slv[27]),
        .O(\TX_CRC[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h87B4B487784B4B78)) 
    \TX_CRC[2]_i_1 
       (.I0(\TX_CRC[2]_i_2_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(slv[24]),
        .I3(\TX_CRC[2]_i_3_n_0 ),
        .I4(\TX_CRC[2]_i_4_n_0 ),
        .I5(\TX_CRC[2]_i_5_n_0 ),
        .O(\TX_CRC[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \TX_CRC[2]_i_2 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(p_37_in),
        .I2(TX_MEMORY_reg_n_78),
        .I3(TX_MEMORY_reg_n_84),
        .I4(p_0_in66_in),
        .O(\TX_CRC[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \TX_CRC[2]_i_3 
       (.I0(p_2_in171_in),
        .I1(p_0_in167_in),
        .I2(p_8_in[1]),
        .O(\TX_CRC[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[2]_i_4 
       (.I0(TX_MEMORY_reg_n_76),
        .I1(p_30_in),
        .O(\TX_CRC[2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \TX_CRC[2]_i_5 
       (.I0(slv[26]),
        .I1(slv[31]),
        .I2(slv[25]),
        .I3(slv[30]),
        .O(\TX_CRC[2]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \TX_CRC[30]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[1] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(\TX_PHY_STATE_reg_n_0_[4] ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(\TX_CRC[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h99669966F00F0FF0)) 
    \TX_CRC[30]_i_2 
       (.I0(\TX_CRC[30]_i_3_n_0 ),
        .I1(TX_MEMORY_reg_n_84),
        .I2(\TX_CRC[30]_i_4_n_0 ),
        .I3(\TX_CRC[30]_i_5_n_0 ),
        .I4(TX_MEMORY_reg_n_76),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[30]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[30]_i_3 
       (.I0(slv[28]),
        .I1(p_13_in),
        .O(\TX_CRC[30]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[30]_i_4 
       (.I0(p_9_in[1]),
        .I1(slv[28]),
        .O(\TX_CRC[30]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[30]_i_5 
       (.I0(slv[31]),
        .I1(REVERSED1_in[22]),
        .O(\TX_CRC[30]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h04040400)) 
    \TX_CRC[31]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(\TX_PHY_STATE_reg_n_0_[3] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFD5D57F757F7FD5D)) 
    \TX_CRC[31]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(p_9_in[0]),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(p_15_in),
        .I4(REVERSED1_in[23]),
        .I5(slv[29]),
        .O(TX_CRC[31]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[3]_i_2 
       (.I0(\TX_CRC[13]_i_4_n_0 ),
        .I1(p_8_in[1]),
        .I2(slv[25]),
        .I3(p_2_in171_in),
        .I4(p_8_in[0]),
        .I5(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[3]_i_3 
       (.I0(\TX_CRC[13]_i_4_n_0 ),
        .I1(p_11_in),
        .I2(TX_MEMORY_reg_n_84),
        .I3(TX_MEMORY_reg_n_78),
        .I4(slv[25]),
        .I5(TX_MEMORY_reg_n_79),
        .O(\TX_CRC[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h28828228AAAAAAAA)) 
    \TX_CRC[4]_i_1 
       (.I0(\TX_CRC[4]_i_2_n_0 ),
        .I1(p_0_in66_in),
        .I2(p_37_in),
        .I3(p_11_in),
        .I4(\TX_CRC[4]_i_3_n_0 ),
        .I5(\TX_CRC[26]_i_2_n_0 ),
        .O(TX_CRC[4]));
  LUT6 #(
    .INIT(64'h96696996FFFFFFFF)) 
    \TX_CRC[4]_i_2 
       (.I0(\TX_CRC[4]_i_4_n_0 ),
        .I1(slv[28]),
        .I2(p_9_in[1]),
        .I3(slv[27]),
        .I4(slv[24]),
        .I5(\TX_CRC[15]_i_2_n_0 ),
        .O(\TX_CRC[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[4]_i_3 
       (.I0(\TX_CRC[12]_i_6_n_0 ),
        .I1(TX_MEMORY_reg_n_79),
        .I2(slv[28]),
        .I3(slv[27]),
        .I4(slv[24]),
        .I5(p_13_in),
        .O(\TX_CRC[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[4]_i_4 
       (.I0(p_8_in[1]),
        .I1(p_0_in167_in),
        .I2(p_30_in),
        .I3(slv[26]),
        .I4(slv[30]),
        .I5(p_8_in[0]),
        .O(\TX_CRC[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000007DD7D77D)) 
    \TX_CRC[5]_i_1 
       (.I0(\TX_CRC[26]_i_2_n_0 ),
        .I1(\TX_CRC[5]_i_2_n_0 ),
        .I2(p_15_in),
        .I3(\TX_CRC[5]_i_3_n_0 ),
        .I4(\TX_CRC[5]_i_4_n_0 ),
        .I5(\TX_CRC[5]_i_5_n_0 ),
        .O(TX_CRC[5]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[5]_i_2 
       (.I0(TX_MEMORY_reg_n_78),
        .I1(TX_MEMORY_reg_n_84),
        .I2(p_11_in),
        .I3(p_0_in66_in),
        .I4(p_37_in),
        .I5(\TX_CRC[30]_i_3_n_0 ),
        .O(\TX_CRC[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \TX_CRC[5]_i_3 
       (.I0(slv[31]),
        .I1(slv[25]),
        .O(\TX_CRC[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \TX_CRC[5]_i_4 
       (.I0(slv[27]),
        .I1(slv[30]),
        .I2(slv[24]),
        .I3(slv[29]),
        .O(\TX_CRC[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2882822882282882)) 
    \TX_CRC[5]_i_5 
       (.I0(\TX_CRC[15]_i_2_n_0 ),
        .I1(\TX_CRC[5]_i_4_n_0 ),
        .I2(\TX_CRC[5]_i_3_n_0 ),
        .I3(p_9_in[1]),
        .I4(slv[28]),
        .I5(\TX_CRC[5]_i_6_n_0 ),
        .O(\TX_CRC[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[5]_i_6 
       (.I0(p_2_in171_in),
        .I1(p_0_in167_in),
        .I2(TX_MEMORY_reg_n_76),
        .I3(p_30_in),
        .I4(p_9_in[0]),
        .I5(p_8_in[0]),
        .O(\TX_CRC[5]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h737F)) 
    \TX_CRC[6]_i_1 
       (.I0(\TX_CRC[6]_i_2_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(\TX_CRC[6]_i_3_n_0 ),
        .O(TX_CRC[6]));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[6]_i_2 
       (.I0(p_13_in),
        .I1(slv[28]),
        .I2(slv[31]),
        .I3(slv[29]),
        .I4(slv[25]),
        .I5(\TX_CRC[6]_i_4_n_0 ),
        .O(\TX_CRC[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    \TX_CRC[6]_i_3 
       (.I0(\TX_CRC[6]_i_5_n_0 ),
        .I1(p_9_in[1]),
        .I2(slv[29]),
        .I3(slv[25]),
        .I4(slv[31]),
        .I5(slv[28]),
        .O(\TX_CRC[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[6]_i_4 
       (.I0(\TX_CRC[12]_i_6_n_0 ),
        .I1(TX_MEMORY_reg_n_79),
        .I2(TX_MEMORY_reg_n_78),
        .I3(p_15_in),
        .I4(p_0_in66_in),
        .I5(TX_MEMORY_reg_n_84),
        .O(\TX_CRC[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[6]_i_5 
       (.I0(p_8_in[1]),
        .I1(p_0_in167_in),
        .I2(TX_MEMORY_reg_n_76),
        .I3(p_2_in171_in),
        .I4(p_9_in[0]),
        .I5(\TX_CRC[12]_i_6_n_0 ),
        .O(\TX_CRC[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h960096FF69FF6900)) 
    \TX_CRC[7]_i_1 
       (.I0(\TX_CRC[7]_i_2_n_0 ),
        .I1(slv[29]),
        .I2(p_15_in),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TX_CRC[7]_i_3_n_0 ),
        .I5(\TX_CRC[7]_i_4_n_0 ),
        .O(\TX_CRC[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    \TX_CRC[7]_i_2 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(p_11_in),
        .I2(TX_MEMORY_reg_n_84),
        .I3(p_37_in),
        .O(\TX_CRC[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[7]_i_3 
       (.I0(slv[29]),
        .I1(p_9_in[0]),
        .I2(p_8_in[1]),
        .I3(p_30_in),
        .I4(p_8_in[0]),
        .I5(TX_MEMORY_reg_n_76),
        .O(\TX_CRC[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \TX_CRC[7]_i_4 
       (.I0(slv[26]),
        .I1(slv[31]),
        .I2(slv[27]),
        .I3(slv[24]),
        .O(\TX_CRC[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB84747B8)) 
    \TX_CRC[8]_i_1 
       (.I0(\TX_CRC[11]_i_2_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(\TX_CRC[11]_i_3_n_0 ),
        .I3(\TX_CRC_reg_n_0_[0] ),
        .I4(slv[28]),
        .O(\TX_CRC[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h99669966F00F0FF0)) 
    \TX_CRC[9]_i_1 
       (.I0(\TX_CRC[30]_i_3_n_0 ),
        .I1(\TX_CRC[9]_i_2_n_0 ),
        .I2(\TX_CRC[30]_i_4_n_0 ),
        .I3(slv[25]),
        .I4(\TX_CRC[9]_i_3_n_0 ),
        .I5(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_CRC[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[9]_i_2 
       (.I0(TX_MEMORY_reg_n_79),
        .I1(slv[26]),
        .I2(slv[29]),
        .I3(p_1_in126_in),
        .I4(TX_MEMORY_reg_n_78),
        .I5(p_15_in),
        .O(\TX_CRC[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \TX_CRC[9]_i_3 
       (.I0(p_1_in126_in),
        .I1(slv[29]),
        .I2(p_2_in171_in),
        .I3(p_9_in[0]),
        .I4(p_8_in[1]),
        .I5(slv[26]),
        .O(\TX_CRC[9]_i_3_n_0 ));
  FDSE \TX_CRC_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[0]_i_1_n_0 ),
        .Q(\TX_CRC_reg_n_0_[0] ),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[10] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[10]),
        .Q(REVERSED0_in[10]),
        .R(1'b0));
  FDSE \TX_CRC_reg[11] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[11]_i_1_n_0 ),
        .Q(REVERSED0_in[11]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[12] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[12]),
        .Q(REVERSED0_in[12]),
        .R(1'b0));
  FDRE \TX_CRC_reg[13] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[13]),
        .Q(REVERSED0_in[13]),
        .R(1'b0));
  FDRE \TX_CRC_reg[14] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[14]),
        .Q(REVERSED0_in[14]),
        .R(1'b0));
  FDRE \TX_CRC_reg[15] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[15]),
        .Q(REVERSED0_in[15]),
        .R(1'b0));
  FDSE \TX_CRC_reg[16] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[16]_i_1_n_0 ),
        .Q(REVERSED1_in[16]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDSE \TX_CRC_reg[17] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC_reg[17]_i_1_n_0 ),
        .Q(REVERSED1_in[17]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  MUXF7 \TX_CRC_reg[17]_i_1 
       (.I0(\TX_CRC[17]_i_2_n_0 ),
        .I1(\TX_CRC[17]_i_3_n_0 ),
        .O(\TX_CRC_reg[17]_i_1_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  FDSE \TX_CRC_reg[18] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC_reg[18]_i_1_n_0 ),
        .Q(REVERSED1_in[18]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  MUXF7 \TX_CRC_reg[18]_i_1 
       (.I0(\TX_CRC[18]_i_2_n_0 ),
        .I1(\TX_CRC[18]_i_3_n_0 ),
        .O(\TX_CRC_reg[18]_i_1_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  FDSE \TX_CRC_reg[19] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[19]_i_1_n_0 ),
        .Q(REVERSED1_in[19]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[1]),
        .Q(p_1_in126_in),
        .R(1'b0));
  FDSE \TX_CRC_reg[20] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[20]_i_1_n_0 ),
        .Q(REVERSED1_in[20]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[21] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[21]),
        .Q(REVERSED1_in[21]),
        .R(1'b0));
  FDSE \TX_CRC_reg[22] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[22]_i_1_n_0 ),
        .Q(REVERSED1_in[22]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDSE \TX_CRC_reg[23] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[23]_i_1_n_0 ),
        .Q(REVERSED1_in[23]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[24] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[24]),
        .Q(slv[24]),
        .R(1'b0));
  FDSE \TX_CRC_reg[25] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC_reg[25]_i_1_n_0 ),
        .Q(slv[25]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  MUXF7 \TX_CRC_reg[25]_i_1 
       (.I0(\TX_CRC[25]_i_2_n_0 ),
        .I1(\TX_CRC[25]_i_3_n_0 ),
        .O(\TX_CRC_reg[25]_i_1_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  FDRE \TX_CRC_reg[26] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[26]),
        .Q(slv[26]),
        .R(1'b0));
  FDSE \TX_CRC_reg[27] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[27]_i_1_n_0 ),
        .Q(slv[27]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[28] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[28]),
        .Q(slv[28]),
        .R(1'b0));
  FDRE \TX_CRC_reg[29] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[29]),
        .Q(slv[29]),
        .R(1'b0));
  FDSE \TX_CRC_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[2]_i_1_n_0 ),
        .Q(p_1_in128_in),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDSE \TX_CRC_reg[30] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[30]_i_2_n_0 ),
        .Q(slv[30]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDRE \TX_CRC_reg[31] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[31]),
        .Q(slv[31]),
        .R(1'b0));
  FDSE \TX_CRC_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC_reg[3]_i_1_n_0 ),
        .Q(p_1_in130_in),
        .S(\TX_CRC[30]_i_1_n_0 ));
  MUXF7 \TX_CRC_reg[3]_i_1 
       (.I0(\TX_CRC[3]_i_2_n_0 ),
        .I1(\TX_CRC[3]_i_3_n_0 ),
        .O(\TX_CRC_reg[3]_i_1_n_0 ),
        .S(\TX_PHY_STATE_reg_n_0_[2] ));
  FDRE \TX_CRC_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[4]),
        .Q(p_1_in132_in),
        .R(1'b0));
  FDRE \TX_CRC_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[5]),
        .Q(p_1_in133_in),
        .R(1'b0));
  FDRE \TX_CRC_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(TX_CRC[6]),
        .Q(p_1_in135_in),
        .R(1'b0));
  FDSE \TX_CRC_reg[7] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[7]_i_1_n_0 ),
        .Q(p_1_in136_in),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDSE \TX_CRC_reg[8] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[8]_i_1_n_0 ),
        .Q(REVERSED0_in[8]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  FDSE \TX_CRC_reg[9] 
       (.C(eth_clk_OBUF),
        .CE(\TX_CRC[31]_i_1_n_0 ),
        .D(\TX_CRC[9]_i_1_n_0 ),
        .Q(REVERSED0_in[9]),
        .S(\TX_CRC[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \TX_IN_COUNT[10]_i_1 
       (.I0(TX_PACKET_STATE[1]),
        .I1(S_TX_ACK_reg_n_0),
        .I2(TX_PACKET_STATE[0]),
        .O(\TX_IN_COUNT[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0070)) 
    \TX_IN_COUNT[10]_i_2 
       (.I0(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I1(TX_PACKET_STATE[0]),
        .I2(S_TX_ACK_reg_n_0),
        .I3(TX_PACKET_STATE[1]),
        .O(\TX_IN_COUNT[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \TX_IN_COUNT[10]_i_3 
       (.I0(\TX_IN_COUNT[10]_i_4_n_0 ),
        .I1(TX_IN_COUNT[9]),
        .I2(TX_IN_COUNT[8]),
        .I3(TX_IN_COUNT[7]),
        .I4(TX_IN_COUNT[10]),
        .O(TX_IN_COUNT0[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \TX_IN_COUNT[10]_i_4 
       (.I0(TX_IN_COUNT[5]),
        .I1(TX_IN_COUNT[3]),
        .I2(TX_IN_COUNT[1]),
        .I3(TX_IN_COUNT[2]),
        .I4(TX_IN_COUNT[4]),
        .I5(TX_IN_COUNT[6]),
        .O(\TX_IN_COUNT[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'hFFBF0070)) 
    \TX_IN_COUNT[1]_i_1 
       (.I0(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I1(TX_PACKET_STATE[0]),
        .I2(S_TX_ACK_reg_n_0),
        .I3(TX_PACKET_STATE[1]),
        .I4(TX_IN_COUNT[1]),
        .O(\TX_IN_COUNT[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \TX_IN_COUNT[2]_i_1 
       (.I0(TX_IN_COUNT[1]),
        .I1(TX_IN_COUNT[2]),
        .O(TX_IN_COUNT0[2]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \TX_IN_COUNT[3]_i_1 
       (.I0(TX_IN_COUNT[2]),
        .I1(TX_IN_COUNT[1]),
        .I2(TX_IN_COUNT[3]),
        .O(TX_IN_COUNT0[3]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \TX_IN_COUNT[4]_i_1 
       (.I0(TX_IN_COUNT[3]),
        .I1(TX_IN_COUNT[1]),
        .I2(TX_IN_COUNT[2]),
        .I3(TX_IN_COUNT[4]),
        .O(TX_IN_COUNT0[4]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \TX_IN_COUNT[5]_i_1 
       (.I0(TX_IN_COUNT[4]),
        .I1(TX_IN_COUNT[2]),
        .I2(TX_IN_COUNT[1]),
        .I3(TX_IN_COUNT[3]),
        .I4(TX_IN_COUNT[5]),
        .O(TX_IN_COUNT0[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \TX_IN_COUNT[6]_i_1 
       (.I0(TX_IN_COUNT[5]),
        .I1(TX_IN_COUNT[3]),
        .I2(TX_IN_COUNT[1]),
        .I3(TX_IN_COUNT[2]),
        .I4(TX_IN_COUNT[4]),
        .I5(TX_IN_COUNT[6]),
        .O(TX_IN_COUNT0[6]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \TX_IN_COUNT[7]_i_1 
       (.I0(\TX_IN_COUNT[10]_i_4_n_0 ),
        .I1(TX_IN_COUNT[7]),
        .O(TX_IN_COUNT0[7]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \TX_IN_COUNT[8]_i_1 
       (.I0(TX_IN_COUNT[7]),
        .I1(\TX_IN_COUNT[10]_i_4_n_0 ),
        .I2(TX_IN_COUNT[8]),
        .O(TX_IN_COUNT0[8]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \TX_IN_COUNT[9]_i_1 
       (.I0(\TX_IN_COUNT[10]_i_4_n_0 ),
        .I1(TX_IN_COUNT[7]),
        .I2(TX_IN_COUNT[8]),
        .I3(TX_IN_COUNT[9]),
        .O(TX_IN_COUNT0[9]));
  FDRE \TX_IN_COUNT_reg[10] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[10]),
        .Q(TX_IN_COUNT[10]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\TX_IN_COUNT[1]_i_1_n_0 ),
        .Q(TX_IN_COUNT[1]),
        .R(1'b0));
  FDRE \TX_IN_COUNT_reg[2] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[2]),
        .Q(TX_IN_COUNT[2]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[3] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[3]),
        .Q(TX_IN_COUNT[3]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[4] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[4]),
        .Q(TX_IN_COUNT[4]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[5] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[5]),
        .Q(TX_IN_COUNT[5]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[6] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[6]),
        .Q(TX_IN_COUNT[6]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[7] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[7]),
        .Q(TX_IN_COUNT[7]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[8] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[8]),
        .Q(TX_IN_COUNT[8]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  FDRE \TX_IN_COUNT_reg[9] 
       (.C(clk),
        .CE(\TX_IN_COUNT[10]_i_2_n_0 ),
        .D(TX_IN_COUNT0[9]),
        .Q(TX_IN_COUNT[9]),
        .R(\TX_IN_COUNT[10]_i_1_n_0 ));
  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d16" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d16" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "16400" *) 
  (* RTL_RAM_NAME = "TX_MEMORY" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "15" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    TX_MEMORY_reg
       (.ADDRARDADDR({1'b1,TX_WRITE_ADDRESS_DEL,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,TX_READ_ADDRESS,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(NLW_TX_MEMORY_reg_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_TX_MEMORY_reg_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(clk),
        .CLKBWRCLK(eth_clk_OBUF),
        .DBITERR(NLW_TX_MEMORY_reg_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(NLW_TX_MEMORY_reg_DOADO_UNCONNECTED[31:0]),
        .DOBDO({NLW_TX_MEMORY_reg_DOBDO_UNCONNECTED[31:16],p_30_in,p_2_in171_in,p_8_in,p_9_in,p_0_in167_in,TX_MEMORY_reg_n_76,p_37_in,TX_MEMORY_reg_n_78,TX_MEMORY_reg_n_79,p_11_in,p_13_in,p_15_in,p_0_in66_in,TX_MEMORY_reg_n_84}),
        .DOPADOP(NLW_TX_MEMORY_reg_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_TX_MEMORY_reg_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_TX_MEMORY_reg_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(TX_WRITE),
        .ENBWREN(1'b1),
        .INJECTDBITERR(NLW_TX_MEMORY_reg_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_TX_MEMORY_reg_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_TX_MEMORY_reg_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_TX_MEMORY_reg_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \TX_OUT_COUNT[0]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(TX_OUT_COUNT0_in[0]));
  LUT6 #(
    .INIT(64'h0000004F00000040)) 
    \TX_OUT_COUNT[10]_i_1 
       (.I0(\TX_OUT_COUNT[10]_i_3_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[4] ),
        .I5(\TX_OUT_COUNT[10]_i_4_n_0 ),
        .O(\TX_OUT_COUNT[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBBBB8888BBB78888)) 
    \TX_OUT_COUNT[10]_i_2 
       (.I0(\TX_OUT_COUNT_reg_n_0_[10] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[9] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[7] ),
        .I4(\TX_OUT_COUNT[10]_i_5_n_0 ),
        .I5(\TX_OUT_COUNT_reg_n_0_[8] ),
        .O(TX_OUT_COUNT0_in[10]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \TX_OUT_COUNT[10]_i_3 
       (.I0(\TX_OUT_COUNT_reg_n_0_[3] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[4] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[1] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I4(\TX_OUT_COUNT_reg_n_0_[2] ),
        .I5(\TX_OUT_COUNT[10]_i_6_n_0 ),
        .O(\TX_OUT_COUNT[10]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \TX_OUT_COUNT[10]_i_4 
       (.I0(\TX_PHY_STATE_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(GO_SYNC),
        .O(\TX_OUT_COUNT[10]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0313)) 
    \TX_OUT_COUNT[10]_i_5 
       (.I0(\TX_OUT_COUNT_reg_n_0_[6] ),
        .I1(\TX_OUT_COUNT[8]_i_2_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[5] ),
        .O(\TX_OUT_COUNT[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \TX_OUT_COUNT[10]_i_6 
       (.I0(\TX_OUT_COUNT_reg_n_0_[10] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[8] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[5] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[6] ),
        .I4(\TX_OUT_COUNT_reg_n_0_[7] ),
        .I5(\TX_OUT_COUNT_reg_n_0_[9] ),
        .O(\TX_OUT_COUNT[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h9F)) 
    \TX_OUT_COUNT[1]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[1] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(TX_OUT_COUNT0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hBBB7)) 
    \TX_OUT_COUNT[2]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[1] ),
        .O(TX_OUT_COUNT0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'hAAA9FFFF)) 
    \TX_OUT_COUNT[3]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[3] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[1] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[2] ),
        .I4(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(TX_OUT_COUNT0_in[3]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB7)) 
    \TX_OUT_COUNT[4]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[2] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I4(\TX_OUT_COUNT_reg_n_0_[1] ),
        .I5(\TX_OUT_COUNT_reg_n_0_[3] ),
        .O(TX_OUT_COUNT0_in[4]));
  LUT3 #(
    .INIT(8'hD3)) 
    \TX_OUT_COUNT[5]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_OUT_COUNT[8]_i_2_n_0 ),
        .I2(\TX_OUT_COUNT_reg_n_0_[5] ),
        .O(TX_OUT_COUNT0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hFB07)) 
    \TX_OUT_COUNT[6]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[5] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT[8]_i_2_n_0 ),
        .I3(\TX_OUT_COUNT_reg_n_0_[6] ),
        .O(TX_OUT_COUNT0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'hA0AFA09F)) 
    \TX_OUT_COUNT[7]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[7] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[5] ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_OUT_COUNT[8]_i_2_n_0 ),
        .I4(\TX_OUT_COUNT_reg_n_0_[6] ),
        .O(TX_OUT_COUNT0_in[7]));
  LUT6 #(
    .INIT(64'h8888BBBB8888BBB7)) 
    \TX_OUT_COUNT[8]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[8] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[7] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[6] ),
        .I4(\TX_OUT_COUNT[8]_i_2_n_0 ),
        .I5(\TX_OUT_COUNT_reg_n_0_[5] ),
        .O(TX_OUT_COUNT0_in[8]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \TX_OUT_COUNT[8]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_OUT_COUNT_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[4] ),
        .I3(\TX_OUT_COUNT_reg_n_0_[1] ),
        .I4(\TX_OUT_COUNT_reg_n_0_[0] ),
        .I5(\TX_OUT_COUNT_reg_n_0_[2] ),
        .O(\TX_OUT_COUNT[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBB88B788)) 
    \TX_OUT_COUNT[9]_i_1 
       (.I0(\TX_OUT_COUNT_reg_n_0_[9] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_OUT_COUNT_reg_n_0_[8] ),
        .I3(\TX_OUT_COUNT[10]_i_5_n_0 ),
        .I4(\TX_OUT_COUNT_reg_n_0_[7] ),
        .O(TX_OUT_COUNT0_in[9]));
  FDRE \TX_OUT_COUNT_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[0]),
        .Q(\TX_OUT_COUNT_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[10] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[10]),
        .Q(\TX_OUT_COUNT_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[1]),
        .Q(\TX_OUT_COUNT_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[2]),
        .Q(\TX_OUT_COUNT_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[3]),
        .Q(\TX_OUT_COUNT_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[4]),
        .Q(\TX_OUT_COUNT_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[5] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[5]),
        .Q(\TX_OUT_COUNT_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[6] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[6]),
        .Q(\TX_OUT_COUNT_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[7] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[7]),
        .Q(\TX_OUT_COUNT_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[8] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[8]),
        .Q(\TX_OUT_COUNT_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \TX_OUT_COUNT_reg[9] 
       (.C(eth_clk_OBUF),
        .CE(\TX_OUT_COUNT[10]_i_1_n_0 ),
        .D(TX_OUT_COUNT0_in[9]),
        .Q(\TX_OUT_COUNT_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hA3AFACAC)) 
    \TX_PACKET_STATE[0]_i_1 
       (.I0(DONE_SYNC),
        .I1(S_TX_ACK_reg_n_0),
        .I2(TX_PACKET_STATE[1]),
        .I3(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I4(TX_PACKET_STATE[0]),
        .O(\TX_PACKET_STATE[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hACA0F0F0)) 
    \TX_PACKET_STATE[1]_i_1 
       (.I0(DONE_SYNC),
        .I1(S_TX_ACK_reg_n_0),
        .I2(TX_PACKET_STATE[1]),
        .I3(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I4(TX_PACKET_STATE[0]),
        .O(\TX_PACKET_STATE[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \TX_PACKET_STATE[1]_i_10 
       (.I0(TX_IN_COUNT[7]),
        .I1(TX_IN_COUNT[6]),
        .O(\TX_PACKET_STATE[1]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \TX_PACKET_STATE[1]_i_11 
       (.I0(TX_IN_COUNT[5]),
        .I1(TX_IN_COUNT[4]),
        .O(\TX_PACKET_STATE[1]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \TX_PACKET_STATE[1]_i_12 
       (.I0(TX_IN_COUNT[3]),
        .I1(TX_IN_COUNT[2]),
        .O(\TX_PACKET_STATE[1]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TX_PACKET_STATE[1]_i_13 
       (.I0(TX_IN_COUNT[1]),
        .O(\TX_PACKET_STATE[1]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \TX_PACKET_STATE[1]_i_4 
       (.I0(TX_IN_COUNT[8]),
        .I1(TX_IN_COUNT[9]),
        .O(\TX_PACKET_STATE[1]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \TX_PACKET_STATE[1]_i_5 
       (.I0(TX_IN_COUNT[10]),
        .O(\TX_PACKET_STATE[1]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \TX_PACKET_STATE[1]_i_6 
       (.I0(TX_IN_COUNT[9]),
        .I1(TX_IN_COUNT[8]),
        .O(\TX_PACKET_STATE[1]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \TX_PACKET_STATE[1]_i_7 
       (.I0(TX_IN_COUNT[6]),
        .I1(TX_IN_COUNT[7]),
        .O(\TX_PACKET_STATE[1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \TX_PACKET_STATE[1]_i_8 
       (.I0(TX_IN_COUNT[4]),
        .I1(TX_IN_COUNT[5]),
        .O(\TX_PACKET_STATE[1]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \TX_PACKET_STATE[1]_i_9 
       (.I0(TX_IN_COUNT[2]),
        .I1(TX_IN_COUNT[3]),
        .O(\TX_PACKET_STATE[1]_i_9_n_0 ));
  FDRE \TX_PACKET_STATE_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\TX_PACKET_STATE[0]_i_1_n_0 ),
        .Q(TX_PACKET_STATE[0]),
        .R(internal_rst_reg));
  FDRE \TX_PACKET_STATE_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\TX_PACKET_STATE[1]_i_1_n_0 ),
        .Q(TX_PACKET_STATE[1]),
        .R(internal_rst_reg));
  CARRY4 \TX_PACKET_STATE_reg[1]_i_2 
       (.CI(\TX_PACKET_STATE_reg[1]_i_3_n_0 ),
        .CO({\NLW_TX_PACKET_STATE_reg[1]_i_2_CO_UNCONNECTED [3:2],\TX_PACKET_STATE_reg[1]_i_2_n_2 ,\NLW_TX_PACKET_STATE_reg[1]_i_2_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,TX_IN_COUNT[10],\TX_PACKET_STATE[1]_i_4_n_0 }),
        .O(\NLW_TX_PACKET_STATE_reg[1]_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\TX_PACKET_STATE[1]_i_5_n_0 ,\TX_PACKET_STATE[1]_i_6_n_0 }));
  CARRY4 \TX_PACKET_STATE_reg[1]_i_3 
       (.CI(1'b0),
        .CO({\TX_PACKET_STATE_reg[1]_i_3_n_0 ,\NLW_TX_PACKET_STATE_reg[1]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\TX_PACKET_STATE[1]_i_7_n_0 ,\TX_PACKET_STATE[1]_i_8_n_0 ,\TX_PACKET_STATE[1]_i_9_n_0 ,TX_IN_COUNT[1]}),
        .O(\NLW_TX_PACKET_STATE_reg[1]_i_3_O_UNCONNECTED [3:0]),
        .S({\TX_PACKET_STATE[1]_i_10_n_0 ,\TX_PACKET_STATE[1]_i_11_n_0 ,\TX_PACKET_STATE[1]_i_12_n_0 ,\TX_PACKET_STATE[1]_i_13_n_0 }));
  LUT6 #(
    .INIT(64'h80000000BFFFFFFF)) 
    \TX_PHY_STATE[0]_i_1 
       (.I0(GO_SYNC),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[4] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(\TX_PHY_STATE_reg_n_0_[0] ),
        .O(\TX_PHY_STATE[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80FF00FFFF007F00)) 
    \TX_PHY_STATE[1]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(GO_SYNC),
        .I5(\TX_PHY_STATE_reg_n_0_[0] ),
        .O(\TX_PHY_STATE[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    \TX_PHY_STATE[2]_i_1 
       (.I0(\TX_PHY_STATE[2]_i_2_n_0 ),
        .I1(\TX_PHY_STATE[2]_i_3_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[0] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .O(\TX_PHY_STATE[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00005F005F405F00)) 
    \TX_PHY_STATE[2]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_OUT_COUNT[10]_i_3_n_0 ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(\TX_PHY_STATE_reg_n_0_[1] ),
        .O(\TX_PHY_STATE[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80008080)) 
    \TX_PHY_STATE[2]_i_3 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(GO_SYNC),
        .I4(\TX_PHY_STATE_reg_n_0_[1] ),
        .O(\TX_PHY_STATE[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF3D4F3D4D4D4D0D4)) 
    \TX_PHY_STATE[3]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[4] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(\TX_PHY_STATE[3]_i_2_n_0 ),
        .I3(\TX_PHY_STATE_reg_n_0_[2] ),
        .I4(\TX_PHY_STATE[3]_i_3_n_0 ),
        .I5(\TX_PHY_STATE[3]_i_4_n_0 ),
        .O(\TX_PHY_STATE[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8C8C0C8C)) 
    \TX_PHY_STATE[3]_i_2 
       (.I0(\TX_PHY_STATE_reg_n_0_[3] ),
        .I1(\TX_PHY_STATE_reg_n_0_[4] ),
        .I2(\TX_PHY_STATE_reg_n_0_[2] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(GO_SYNC),
        .O(\TX_PHY_STATE[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \TX_PHY_STATE[3]_i_3 
       (.I0(\TX_OUT_COUNT[10]_i_3_n_0 ),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .O(\TX_PHY_STATE[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \TX_PHY_STATE[3]_i_4 
       (.I0(\TX_PHY_STATE_reg_n_0_[1] ),
        .I1(\TX_PHY_STATE_reg_n_0_[0] ),
        .O(\TX_PHY_STATE[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF053C)) 
    \TX_PHY_STATE[4]_i_1 
       (.I0(\TX_PHY_STATE[4]_i_3_n_0 ),
        .I1(GO_SYNC),
        .I2(\TX_PHY_STATE_reg_n_0_[1] ),
        .I3(\TX_PHY_STATE_reg_n_0_[0] ),
        .I4(\TX_PHY_STATE[4]_i_4_n_0 ),
        .O(\TX_PHY_STATE[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBFFFC0000000)) 
    \TX_PHY_STATE[4]_i_2 
       (.I0(GO_SYNC),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_PHY_STATE_reg_n_0_[1] ),
        .I4(\TX_PHY_STATE_reg_n_0_[0] ),
        .I5(\TX_PHY_STATE_reg_n_0_[4] ),
        .O(\TX_PHY_STATE[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \TX_PHY_STATE[4]_i_3 
       (.I0(\PREAMBLE_COUNT_reg_n_0_[4] ),
        .I1(\PREAMBLE_COUNT_reg_n_0_[3] ),
        .I2(\PREAMBLE_COUNT_reg_n_0_[1] ),
        .I3(\PREAMBLE_COUNT_reg_n_0_[0] ),
        .I4(\PREAMBLE_COUNT_reg_n_0_[2] ),
        .O(\TX_PHY_STATE[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFE)) 
    \TX_PHY_STATE[4]_i_4 
       (.I0(\TX_PHY_STATE_reg_n_0_[1] ),
        .I1(\TX_PHY_STATE_reg_n_0_[2] ),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .I3(\TX_PHY_STATE_reg_n_0_[4] ),
        .O(\TX_PHY_STATE[4]_i_4_n_0 ));
  FDRE \TX_PHY_STATE_reg[0] 
       (.C(eth_clk_OBUF),
        .CE(\TX_PHY_STATE[4]_i_1_n_0 ),
        .D(\TX_PHY_STATE[0]_i_1_n_0 ),
        .Q(\TX_PHY_STATE_reg_n_0_[0] ),
        .R(internal_rst_reg));
  FDRE \TX_PHY_STATE_reg[1] 
       (.C(eth_clk_OBUF),
        .CE(\TX_PHY_STATE[4]_i_1_n_0 ),
        .D(\TX_PHY_STATE[1]_i_1_n_0 ),
        .Q(\TX_PHY_STATE_reg_n_0_[1] ),
        .R(internal_rst_reg));
  FDRE \TX_PHY_STATE_reg[2] 
       (.C(eth_clk_OBUF),
        .CE(\TX_PHY_STATE[4]_i_1_n_0 ),
        .D(\TX_PHY_STATE[2]_i_1_n_0 ),
        .Q(\TX_PHY_STATE_reg_n_0_[2] ),
        .R(internal_rst_reg));
  FDRE \TX_PHY_STATE_reg[3] 
       (.C(eth_clk_OBUF),
        .CE(\TX_PHY_STATE[4]_i_1_n_0 ),
        .D(\TX_PHY_STATE[3]_i_1_n_0 ),
        .Q(\TX_PHY_STATE_reg_n_0_[3] ),
        .R(internal_rst_reg));
  FDRE \TX_PHY_STATE_reg[4] 
       (.C(eth_clk_OBUF),
        .CE(\TX_PHY_STATE[4]_i_1_n_0 ),
        .D(\TX_PHY_STATE[4]_i_2_n_0 ),
        .Q(\TX_PHY_STATE_reg_n_0_[4] ),
        .R(internal_rst_reg));
  FDRE \TX_READ_ADDRESS_reg_rep[0] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[0]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[0]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[10] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[10]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[10]),
        .R(1'b0));
  FDRE \TX_READ_ADDRESS_reg_rep[1] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[1]_i_2_n_0 ),
        .Q(TX_READ_ADDRESS[1]),
        .R(1'b0));
  FDRE \TX_READ_ADDRESS_reg_rep[2] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[2]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[2]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[3] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[3]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[3]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[4] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[4]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[4]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[5] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[5]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[5]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[6] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[6]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[6]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[7] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[7]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[7]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[8] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[8]_i_1_n_0 ),
        .Q(TX_READ_ADDRESS[8]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  FDRE \TX_READ_ADDRESS_reg_rep[9] 
       (.C(eth_clk_OBUF),
        .CE(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ),
        .D(\TX_READ_ADDRESS_rep[9]_i_2_n_0 ),
        .Q(TX_READ_ADDRESS[9]),
        .R(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \TX_READ_ADDRESS_rep[0]_i_1 
       (.I0(TX_READ_ADDRESS[0]),
        .O(\TX_READ_ADDRESS_rep[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7800)) 
    \TX_READ_ADDRESS_rep[10]_i_1 
       (.I0(\TX_READ_ADDRESS_rep[10]_i_2_n_0 ),
        .I1(TX_READ_ADDRESS[9]),
        .I2(TX_READ_ADDRESS[10]),
        .I3(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(\TX_READ_ADDRESS_rep[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \TX_READ_ADDRESS_rep[10]_i_2 
       (.I0(TX_READ_ADDRESS[8]),
        .I1(TX_READ_ADDRESS[7]),
        .I2(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ),
        .I3(TX_READ_ADDRESS[6]),
        .O(\TX_READ_ADDRESS_rep[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000098)) 
    \TX_READ_ADDRESS_rep[1]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[2] ),
        .I1(\TX_PHY_STATE_reg_n_0_[3] ),
        .I2(GO_SYNC),
        .I3(\TX_PHY_STATE_reg_n_0_[4] ),
        .I4(\TX_PHY_STATE_reg_n_0_[1] ),
        .I5(\TX_PHY_STATE_reg_n_0_[0] ),
        .O(\TX_READ_ADDRESS_rep[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \TX_READ_ADDRESS_rep[1]_i_2 
       (.I0(TX_READ_ADDRESS[0]),
        .I1(TX_READ_ADDRESS[1]),
        .I2(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(\TX_READ_ADDRESS_rep[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \TX_READ_ADDRESS_rep[2]_i_1 
       (.I0(TX_READ_ADDRESS[2]),
        .I1(TX_READ_ADDRESS[0]),
        .I2(TX_READ_ADDRESS[1]),
        .O(\TX_READ_ADDRESS_rep[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \TX_READ_ADDRESS_rep[3]_i_1 
       (.I0(TX_READ_ADDRESS[3]),
        .I1(TX_READ_ADDRESS[2]),
        .I2(TX_READ_ADDRESS[1]),
        .I3(TX_READ_ADDRESS[0]),
        .O(\TX_READ_ADDRESS_rep[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \TX_READ_ADDRESS_rep[4]_i_1 
       (.I0(TX_READ_ADDRESS[4]),
        .I1(TX_READ_ADDRESS[3]),
        .I2(TX_READ_ADDRESS[0]),
        .I3(TX_READ_ADDRESS[1]),
        .I4(TX_READ_ADDRESS[2]),
        .O(\TX_READ_ADDRESS_rep[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \TX_READ_ADDRESS_rep[5]_i_1 
       (.I0(TX_READ_ADDRESS[5]),
        .I1(TX_READ_ADDRESS[4]),
        .I2(TX_READ_ADDRESS[2]),
        .I3(TX_READ_ADDRESS[1]),
        .I4(TX_READ_ADDRESS[0]),
        .I5(TX_READ_ADDRESS[3]),
        .O(\TX_READ_ADDRESS_rep[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \TX_READ_ADDRESS_rep[6]_i_1 
       (.I0(TX_READ_ADDRESS[6]),
        .I1(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ),
        .O(\TX_READ_ADDRESS_rep[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA6)) 
    \TX_READ_ADDRESS_rep[7]_i_1 
       (.I0(TX_READ_ADDRESS[7]),
        .I1(TX_READ_ADDRESS[6]),
        .I2(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ),
        .O(\TX_READ_ADDRESS_rep[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \TX_READ_ADDRESS_rep[8]_i_1 
       (.I0(TX_READ_ADDRESS[8]),
        .I1(TX_READ_ADDRESS[7]),
        .I2(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ),
        .I3(TX_READ_ADDRESS[6]),
        .O(\TX_READ_ADDRESS_rep[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \TX_READ_ADDRESS_rep[9]_i_1 
       (.I0(\TX_PHY_STATE_reg_n_0_[0] ),
        .I1(\TX_PHY_STATE_reg_n_0_[1] ),
        .I2(\TX_PHY_STATE_reg_n_0_[4] ),
        .I3(GO_SYNC),
        .I4(\TX_PHY_STATE_reg_n_0_[2] ),
        .I5(\TX_PHY_STATE_reg_n_0_[3] ),
        .O(\TX_READ_ADDRESS_rep[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \TX_READ_ADDRESS_rep[9]_i_2 
       (.I0(TX_READ_ADDRESS[9]),
        .I1(TX_READ_ADDRESS[6]),
        .I2(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ),
        .I3(TX_READ_ADDRESS[7]),
        .I4(TX_READ_ADDRESS[8]),
        .O(\TX_READ_ADDRESS_rep[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \TX_READ_ADDRESS_rep[9]_i_3 
       (.I0(TX_READ_ADDRESS[4]),
        .I1(TX_READ_ADDRESS[2]),
        .I2(TX_READ_ADDRESS[1]),
        .I3(TX_READ_ADDRESS[0]),
        .I4(TX_READ_ADDRESS[3]),
        .I5(TX_READ_ADDRESS[5]),
        .O(\TX_READ_ADDRESS_rep[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \TX_WRITE_ADDRESS[0]_i_1 
       (.I0(TX_WRITE_ADDRESS[0]),
        .I1(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3340)) 
    \TX_WRITE_ADDRESS[10]_i_1 
       (.I0(\TX_PACKET_STATE_reg[1]_i_2_n_2 ),
        .I1(TX_PACKET_STATE[0]),
        .I2(S_TX_ACK_reg_n_0),
        .I3(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \TX_WRITE_ADDRESS[10]_i_2 
       (.I0(TX_WRITE_ADDRESS[10]),
        .I1(TX_WRITE_ADDRESS[7]),
        .I2(TX_WRITE_ADDRESS[8]),
        .I3(TX_WRITE_ADDRESS[9]),
        .I4(\TX_WRITE_ADDRESS[10]_i_3_n_0 ),
        .I5(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \TX_WRITE_ADDRESS[10]_i_3 
       (.I0(\TX_WRITE_ADDRESS[6]_i_2_n_0 ),
        .I1(TX_WRITE_ADDRESS[6]),
        .O(\TX_WRITE_ADDRESS[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \TX_WRITE_ADDRESS[1]_i_1 
       (.I0(TX_WRITE_ADDRESS[1]),
        .I1(TX_WRITE_ADDRESS[0]),
        .I2(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \TX_WRITE_ADDRESS[2]_i_1 
       (.I0(TX_WRITE_ADDRESS[2]),
        .I1(TX_WRITE_ADDRESS[0]),
        .I2(TX_WRITE_ADDRESS[1]),
        .I3(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h00006AAA)) 
    \TX_WRITE_ADDRESS[3]_i_1 
       (.I0(TX_WRITE_ADDRESS[3]),
        .I1(TX_WRITE_ADDRESS[1]),
        .I2(TX_WRITE_ADDRESS[0]),
        .I3(TX_WRITE_ADDRESS[2]),
        .I4(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \TX_WRITE_ADDRESS[4]_i_1 
       (.I0(TX_WRITE_ADDRESS[4]),
        .I1(TX_WRITE_ADDRESS[2]),
        .I2(TX_WRITE_ADDRESS[0]),
        .I3(TX_WRITE_ADDRESS[1]),
        .I4(TX_WRITE_ADDRESS[3]),
        .I5(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \TX_WRITE_ADDRESS[5]_i_1 
       (.I0(TX_WRITE_ADDRESS[5]),
        .I1(\TX_WRITE_ADDRESS[5]_i_2_n_0 ),
        .I2(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \TX_WRITE_ADDRESS[5]_i_2 
       (.I0(TX_WRITE_ADDRESS[3]),
        .I1(TX_WRITE_ADDRESS[1]),
        .I2(TX_WRITE_ADDRESS[0]),
        .I3(TX_WRITE_ADDRESS[2]),
        .I4(TX_WRITE_ADDRESS[4]),
        .O(\TX_WRITE_ADDRESS[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \TX_WRITE_ADDRESS[6]_i_1 
       (.I0(TX_WRITE_ADDRESS[6]),
        .I1(\TX_WRITE_ADDRESS[6]_i_2_n_0 ),
        .I2(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \TX_WRITE_ADDRESS[6]_i_2 
       (.I0(TX_WRITE_ADDRESS[4]),
        .I1(TX_WRITE_ADDRESS[2]),
        .I2(TX_WRITE_ADDRESS[0]),
        .I3(TX_WRITE_ADDRESS[1]),
        .I4(TX_WRITE_ADDRESS[3]),
        .I5(TX_WRITE_ADDRESS[5]),
        .O(\TX_WRITE_ADDRESS[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \TX_WRITE_ADDRESS[7]_i_1 
       (.I0(TX_WRITE_ADDRESS[7]),
        .I1(\TX_WRITE_ADDRESS[10]_i_3_n_0 ),
        .I2(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \TX_WRITE_ADDRESS[8]_i_1 
       (.I0(TX_WRITE_ADDRESS[8]),
        .I1(\TX_WRITE_ADDRESS[10]_i_3_n_0 ),
        .I2(TX_WRITE_ADDRESS[7]),
        .I3(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h00006AAA)) 
    \TX_WRITE_ADDRESS[9]_i_1 
       (.I0(TX_WRITE_ADDRESS[9]),
        .I1(TX_WRITE_ADDRESS[8]),
        .I2(TX_WRITE_ADDRESS[7]),
        .I3(\TX_WRITE_ADDRESS[10]_i_3_n_0 ),
        .I4(TX_PACKET_STATE[1]),
        .O(\TX_WRITE_ADDRESS[9]_i_1_n_0 ));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[0]),
        .Q(TX_WRITE_ADDRESS_DEL[0]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[10]),
        .Q(TX_WRITE_ADDRESS_DEL[10]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[1]),
        .Q(TX_WRITE_ADDRESS_DEL[1]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[2]),
        .Q(TX_WRITE_ADDRESS_DEL[2]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[3]),
        .Q(TX_WRITE_ADDRESS_DEL[3]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[4]),
        .Q(TX_WRITE_ADDRESS_DEL[4]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[5]),
        .Q(TX_WRITE_ADDRESS_DEL[5]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[6]),
        .Q(TX_WRITE_ADDRESS_DEL[6]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[7]),
        .Q(TX_WRITE_ADDRESS_DEL[7]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[8]),
        .Q(TX_WRITE_ADDRESS_DEL[8]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_DEL_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_ADDRESS[9]),
        .Q(TX_WRITE_ADDRESS_DEL[9]),
        .R(1'b0));
  FDRE \TX_WRITE_ADDRESS_reg[0] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[0]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[0]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[10] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[10]_i_2_n_0 ),
        .Q(TX_WRITE_ADDRESS[10]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[1] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[1]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[1]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[2] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[2]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[2]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[3] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[3]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[3]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[4] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[4]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[4]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[5] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[5]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[5]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[6] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[6]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[6]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[7] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[7]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[7]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[8] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[8]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[8]),
        .R(internal_rst_reg));
  FDRE \TX_WRITE_ADDRESS_reg[9] 
       (.C(clk),
        .CE(\TX_WRITE_ADDRESS[10]_i_1_n_0 ),
        .D(\TX_WRITE_ADDRESS[9]_i_1_n_0 ),
        .Q(TX_WRITE_ADDRESS[9]),
        .R(internal_rst_reg));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h40)) 
    TX_WRITE_i_1
       (.I0(TX_PACKET_STATE[1]),
        .I1(S_TX_ACK_reg_n_0),
        .I2(TX_PACKET_STATE[0]),
        .O(TX_WRITE_i_1_n_0));
  FDRE TX_WRITE_reg
       (.C(clk),
        .CE(1'b1),
        .D(TX_WRITE_i_1_n_0),
        .Q(TX_WRITE),
        .R(1'b0));
endmodule

module serdes
   (\output ,
    input_0,
    input_1,
    input_2,
    input_3,
    input_4,
    input_5,
    input_6,
    input_7,
    clk);
  output \output ;
  input input_0;
  input input_1;
  input input_2;
  input input_3;
  input input_4;
  input input_5;
  input input_6;
  input input_7;
  input clk;

  wire clk;
  wire clk_100;
  wire clk_100_s;
  wire clk_400;
  wire clk_400_s;
  wire clkfbin;
  wire clkfbout;
  wire input_0;
  wire input_1;
  wire input_2;
  wire input_3;
  wire input_4;
  wire input_5;
  wire input_6;
  wire input_7;
  wire \output ;
  wire NLW_oserdese2_inst_OFB_UNCONNECTED;
  wire NLW_oserdese2_inst_SHIFTOUT1_UNCONNECTED;
  wire NLW_oserdese2_inst_SHIFTOUT2_UNCONNECTED;
  wire NLW_oserdese2_inst_TBYTEOUT_UNCONNECTED;
  wire NLW_oserdese2_inst_TFB_UNCONNECTED;
  wire NLW_oserdese2_inst_TQ_UNCONNECTED;
  wire NLW_plle2_base_inst_CLKOUT2_UNCONNECTED;
  wire NLW_plle2_base_inst_CLKOUT3_UNCONNECTED;
  wire NLW_plle2_base_inst_CLKOUT4_UNCONNECTED;
  wire NLW_plle2_base_inst_CLKOUT5_UNCONNECTED;
  wire NLW_plle2_base_inst_DRDY_UNCONNECTED;
  wire NLW_plle2_base_inst_LOCKED_UNCONNECTED;
  wire [15:0]NLW_plle2_base_inst_DO_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst_1
       (.I(clk_100_s),
        .O(clk_100));
  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst_2
       (.I(clk_400_s),
        .O(clk_400));
  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst_4
       (.I(clkfbout),
        .O(clkfbin));
  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(8),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    oserdese2_inst
       (.CLK(clk_400),
        .CLKDIV(clk_100),
        .D1(input_0),
        .D2(input_1),
        .D3(input_2),
        .D4(input_3),
        .D5(input_4),
        .D6(input_5),
        .D7(input_6),
        .D8(input_7),
        .OCE(1'b1),
        .OFB(NLW_oserdese2_inst_OFB_UNCONNECTED),
        .OQ(\output ),
        .RST(1'b0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_oserdese2_inst_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_oserdese2_inst_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_oserdese2_inst_TBYTEOUT_UNCONNECTED),
        .TCE(1'b1),
        .TFB(NLW_oserdese2_inst_TFB_UNCONNECTED),
        .TQ(NLW_oserdese2_inst_TQ_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "PLLE2_BASE" *) 
  (* box_type = "PRIMITIVE" *) 
  PLLE2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT(8),
    .CLKFBOUT_PHASE(0.000000),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(10.000000),
    .CLKOUT0_DIVIDE(8),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT1_DIVIDE(2),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT2_DIVIDE(2),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(180.000000),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .COMPENSATION("BUF_IN"),
    .DIVCLK_DIVIDE(1),
    .REF_JITTER1(0.000000),
    .STARTUP_WAIT("FALSE")) 
    plle2_base_inst
       (.CLKFBIN(clkfbin),
        .CLKFBOUT(clkfbout),
        .CLKIN1(clk),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKOUT0(clk_100_s),
        .CLKOUT1(clk_400_s),
        .CLKOUT2(NLW_plle2_base_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT3(NLW_plle2_base_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT4(NLW_plle2_base_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_plle2_base_inst_CLKOUT5_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_plle2_base_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_plle2_base_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(NLW_plle2_base_inst_LOCKED_UNCONNECTED),
        .PWRDWN(1'b0),
        .RST(1'b0));
endmodule

module serial_input
   (out1_stb,
    \output ,
    input_rs232_rx_ack,
    clk,
    internal_rst_reg,
    rx);
  output out1_stb;
  output [7:0]\output ;
  input input_rs232_rx_ack;
  input clk;
  input internal_rst_reg;
  input rx;

  wire \bit_count[0]_i_1_n_0 ;
  wire \bit_count[1]_i_1_n_0 ;
  wire \bit_count[2]_i_1_n_0 ;
  wire \bit_count[3]_i_1_n_0 ;
  wire \bit_count[3]_i_2_n_0 ;
  wire \bit_count_reg_n_0_[0] ;
  wire \bit_count_reg_n_0_[1] ;
  wire \bit_count_reg_n_0_[2] ;
  wire \bit_count_reg_n_0_[3] ;
  wire [3:0]bit_spacing;
  wire \bit_spacing[0]_i_1_n_0 ;
  wire \bit_spacing[1]_i_1_n_0 ;
  wire \bit_spacing[2]_i_1_n_0 ;
  wire \bit_spacing[3]_i_1_n_0 ;
  wire \bit_spacing[3]_i_2_n_0 ;
  wire \bit_spacing[3]_i_3_n_0 ;
  wire \bit_spacing[3]_i_4_n_0 ;
  wire clk;
  wire data;
  wire \data_reg[0]_rep_n_0 ;
  wire \data_reg[1]_rep_n_0 ;
  wire \data_reg[2]_rep_n_0 ;
  wire \data_reg[3]_rep_n_0 ;
  wire \data_reg[4]_rep_n_0 ;
  wire \data_reg[5]_rep_n_0 ;
  wire \data_reg[6]_rep_n_0 ;
  wire \data_reg[7]_rep_n_0 ;
  wire \data_reg_n_0_[0] ;
  wire \data_reg_n_0_[1] ;
  wire \data_reg_n_0_[2] ;
  wire \data_reg_n_0_[3] ;
  wire \data_reg_n_0_[4] ;
  wire \data_reg_n_0_[5] ;
  wire \data_reg_n_0_[6] ;
  wire \data_reg_n_0_[7] ;
  wire \data_reg_n_0_[8] ;
  wire fifo_1_n_1;
  wire fifo_1_n_2;
  wire fifo_1_n_3;
  wire input_rs232_rx_ack;
  wire int_out1_stb_reg_n_0;
  wire internal_rst_reg;
  wire out1_stb;
  wire [7:0]\output ;
  wire rx;
  wire rx_d;
  wire rx_d2;
  wire \state_reg_n_0_[0] ;
  wire \state_reg_n_0_[1] ;

  LUT2 #(
    .INIT(4'h2)) 
    \bit_count[0]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\bit_count_reg_n_0_[0] ),
        .O(\bit_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \bit_count[1]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\bit_count_reg_n_0_[1] ),
        .I2(\bit_count_reg_n_0_[0] ),
        .O(\bit_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h8882)) 
    \bit_count[2]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\bit_count_reg_n_0_[2] ),
        .I2(\bit_count_reg_n_0_[0] ),
        .I3(\bit_count_reg_n_0_[1] ),
        .O(\bit_count[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8888888F)) 
    \bit_count[3]_i_1 
       (.I0(\bit_spacing[3]_i_4_n_0 ),
        .I1(data),
        .I2(rx_d2),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(\bit_count[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAA9FFFF)) 
    \bit_count[3]_i_2 
       (.I0(\bit_count_reg_n_0_[3] ),
        .I1(\bit_count_reg_n_0_[1] ),
        .I2(\bit_count_reg_n_0_[0] ),
        .I3(\bit_count_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[0] ),
        .O(\bit_count[3]_i_2_n_0 ));
  FDRE \bit_count_reg[0] 
       (.C(clk),
        .CE(\bit_count[3]_i_1_n_0 ),
        .D(\bit_count[0]_i_1_n_0 ),
        .Q(\bit_count_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \bit_count_reg[1] 
       (.C(clk),
        .CE(\bit_count[3]_i_1_n_0 ),
        .D(\bit_count[1]_i_1_n_0 ),
        .Q(\bit_count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \bit_count_reg[2] 
       (.C(clk),
        .CE(\bit_count[3]_i_1_n_0 ),
        .D(\bit_count[2]_i_1_n_0 ),
        .Q(\bit_count_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \bit_count_reg[3] 
       (.C(clk),
        .CE(\bit_count[3]_i_1_n_0 ),
        .D(\bit_count[3]_i_2_n_0 ),
        .Q(\bit_count_reg_n_0_[3] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \bit_spacing[0]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(bit_spacing[0]),
        .O(\bit_spacing[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \bit_spacing[1]_i_1 
       (.I0(bit_spacing[0]),
        .I1(bit_spacing[1]),
        .I2(\state_reg_n_0_[0] ),
        .O(\bit_spacing[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'hFD57)) 
    \bit_spacing[2]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(bit_spacing[1]),
        .I2(bit_spacing[0]),
        .I3(bit_spacing[2]),
        .O(\bit_spacing[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00F500C5)) 
    \bit_spacing[3]_i_1 
       (.I0(rx_d2),
        .I1(\bit_spacing[3]_i_3_n_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\bit_spacing[3]_i_4_n_0 ),
        .O(\bit_spacing[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFE00FFFF)) 
    \bit_spacing[3]_i_2 
       (.I0(bit_spacing[2]),
        .I1(bit_spacing[0]),
        .I2(bit_spacing[1]),
        .I3(bit_spacing[3]),
        .I4(\state_reg_n_0_[0] ),
        .O(\bit_spacing[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_spacing[3]_i_3 
       (.I0(bit_spacing[2]),
        .I1(bit_spacing[0]),
        .I2(bit_spacing[1]),
        .I3(bit_spacing[3]),
        .O(\bit_spacing[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_spacing[3]_i_4 
       (.I0(\bit_count_reg_n_0_[2] ),
        .I1(\bit_count_reg_n_0_[0] ),
        .I2(\bit_count_reg_n_0_[1] ),
        .I3(\bit_count_reg_n_0_[3] ),
        .O(\bit_spacing[3]_i_4_n_0 ));
  FDRE \bit_spacing_reg[0] 
       (.C(clk),
        .CE(\bit_spacing[3]_i_1_n_0 ),
        .D(\bit_spacing[0]_i_1_n_0 ),
        .Q(bit_spacing[0]),
        .R(1'b0));
  FDRE \bit_spacing_reg[1] 
       (.C(clk),
        .CE(\bit_spacing[3]_i_1_n_0 ),
        .D(\bit_spacing[1]_i_1_n_0 ),
        .Q(bit_spacing[1]),
        .R(1'b0));
  FDRE \bit_spacing_reg[2] 
       (.C(clk),
        .CE(\bit_spacing[3]_i_1_n_0 ),
        .D(\bit_spacing[2]_i_1_n_0 ),
        .Q(bit_spacing[2]),
        .R(1'b0));
  FDRE \bit_spacing_reg[3] 
       (.C(clk),
        .CE(\bit_spacing[3]_i_1_n_0 ),
        .D(\bit_spacing[3]_i_2_n_0 ),
        .Q(bit_spacing[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \data[8]_i_1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(bit_spacing[3]),
        .I3(bit_spacing[1]),
        .I4(bit_spacing[0]),
        .I5(bit_spacing[2]),
        .O(data));
  (* ORIG_CELL_NAME = "data_reg[0]" *) 
  FDRE \data_reg[0] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[1] ),
        .Q(\data_reg_n_0_[0] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[0]" *) 
  FDRE \data_reg[0]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[1] ),
        .Q(\data_reg[0]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[1]" *) 
  FDRE \data_reg[1] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[2] ),
        .Q(\data_reg_n_0_[1] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[1]" *) 
  FDRE \data_reg[1]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[2] ),
        .Q(\data_reg[1]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[2]" *) 
  FDRE \data_reg[2] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[3] ),
        .Q(\data_reg_n_0_[2] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[2]" *) 
  FDRE \data_reg[2]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[3] ),
        .Q(\data_reg[2]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[3]" *) 
  FDRE \data_reg[3] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[4] ),
        .Q(\data_reg_n_0_[3] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[3]" *) 
  FDRE \data_reg[3]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[4] ),
        .Q(\data_reg[3]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[4]" *) 
  FDRE \data_reg[4] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[5] ),
        .Q(\data_reg_n_0_[4] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[4]" *) 
  FDRE \data_reg[4]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[5] ),
        .Q(\data_reg[4]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[5]" *) 
  FDRE \data_reg[5] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[6] ),
        .Q(\data_reg_n_0_[5] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[5]" *) 
  FDRE \data_reg[5]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[6] ),
        .Q(\data_reg[5]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[6]" *) 
  FDRE \data_reg[6] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[7] ),
        .Q(\data_reg_n_0_[6] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[6]" *) 
  FDRE \data_reg[6]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[7] ),
        .Q(\data_reg[6]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[7]" *) 
  FDRE \data_reg[7] 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[8] ),
        .Q(\data_reg_n_0_[7] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "data_reg[7]" *) 
  FDRE \data_reg[7]_rep 
       (.C(clk),
        .CE(data),
        .D(\data_reg_n_0_[8] ),
        .Q(\data_reg[7]_rep_n_0 ),
        .R(1'b0));
  FDRE \data_reg[8] 
       (.C(clk),
        .CE(data),
        .D(rx_d2),
        .Q(\data_reg_n_0_[8] ),
        .R(1'b0));
  fifo fifo_1
       (.Q({\bit_count_reg_n_0_[3] ,\bit_count_reg_n_0_[2] ,\bit_count_reg_n_0_[1] ,\bit_count_reg_n_0_[0] }),
        .\bit_count_reg[2] (\bit_spacing[3]_i_4_n_0 ),
        .clk(clk),
        .data(data),
        .\data_reg[7] ({\data_reg_n_0_[7] ,\data_reg_n_0_[6] ,\data_reg_n_0_[5] ,\data_reg_n_0_[4] ,\data_reg_n_0_[3] ,\data_reg_n_0_[2] ,\data_reg_n_0_[1] ,\data_reg_n_0_[0] }),
        .\input ({\data_reg[7]_rep_n_0 ,\data_reg[6]_rep_n_0 ,\data_reg[5]_rep_n_0 ,\data_reg[4]_rep_n_0 ,\data_reg[3]_rep_n_0 ,\data_reg[2]_rep_n_0 ,\data_reg[1]_rep_n_0 ,\data_reg[0]_rep_n_0 }),
        .input_rs232_rx_ack(input_rs232_rx_ack),
        .int_out1_stb_reg(fifo_1_n_3),
        .int_out1_stb_reg_0(int_out1_stb_reg_n_0),
        .internal_rst_reg(internal_rst_reg),
        .out1_stb(out1_stb),
        .\output (\output ),
        .rx_d2(rx_d2),
        .\state_reg[0] (fifo_1_n_1),
        .\state_reg[0]_0 (\state_reg_n_0_[0] ),
        .\state_reg[1] (fifo_1_n_2),
        .\state_reg[1]_0 (\state_reg_n_0_[1] ));
  FDRE int_out1_stb_reg
       (.C(clk),
        .CE(1'b1),
        .D(fifo_1_n_3),
        .Q(int_out1_stb_reg_n_0),
        .R(internal_rst_reg));
  FDRE rx_d2_reg
       (.C(clk),
        .CE(1'b1),
        .D(rx_d),
        .Q(rx_d2),
        .R(1'b0));
  FDRE rx_d_reg
       (.C(clk),
        .CE(1'b1),
        .D(rx),
        .Q(rx_d),
        .R(1'b0));
  FDRE \state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(fifo_1_n_1),
        .Q(\state_reg_n_0_[0] ),
        .R(internal_rst_reg));
  FDRE \state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(fifo_1_n_2),
        .Q(\state_reg_n_0_[1] ),
        .R(internal_rst_reg));
endmodule

module serial_output
   (rs232_tx_OBUF,
    output_rs232_tx_ack,
    internal_rst_reg,
    clk,
    output_rs232_tx_stb,
    Q);
  output rs232_tx_OBUF;
  output output_rs232_tx_ack;
  input internal_rst_reg;
  input clk;
  input output_rs232_tx_stb;
  input [7:0]Q;

  wire [11:0]BAUD_COUNT;
  wire \BAUD_COUNT[11]_i_4_n_0 ;
  wire \BAUD_COUNT[11]_i_5_n_0 ;
  wire [11:0]BAUD_COUNT_0;
  wire \BAUD_COUNT_reg[4]_i_2_n_0 ;
  wire \BAUD_COUNT_reg[8]_i_2_n_0 ;
  wire DATA;
  wire \DATA_reg_n_0_[0] ;
  wire \FSM_onehot_STATE[11]_i_1_n_0 ;
  wire \FSM_onehot_STATE[11]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[10] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[11] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[4] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[5] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[6] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[7] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[8] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_STATE_reg_n_0_[9] ;
  wire [7:0]Q;
  (* RTL_KEEP = "yes" *) wire S_IN1_ACK;
  wire S_IN1_ACK_i_1_n_0;
  wire TX_i_1_n_0;
  wire TX_i_2_n_0;
  wire TX_i_3_n_0;
  wire TX_i_4_n_0;
  wire TX_i_5_n_0;
  wire TX_i_6_n_0;
  wire X16CLK_EN;
  wire X16CLK_EN_reg_n_0;
  wire clk;
  wire [11:1]data0;
  wire internal_rst_reg;
  wire output_rs232_tx_ack;
  wire output_rs232_tx_stb;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in;
  wire p_5_in;
  wire p_6_in;
  wire rs232_tx_OBUF;
  wire [3:0]\NLW_BAUD_COUNT_reg[11]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_BAUD_COUNT_reg[11]_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_BAUD_COUNT_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_BAUD_COUNT_reg[8]_i_2_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \BAUD_COUNT[0]_i_1 
       (.I0(BAUD_COUNT[0]),
        .O(BAUD_COUNT_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[10]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[10]),
        .O(BAUD_COUNT_0[10]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[11]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[11]),
        .O(BAUD_COUNT_0[11]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \BAUD_COUNT[11]_i_2 
       (.I0(\BAUD_COUNT[11]_i_4_n_0 ),
        .I1(BAUD_COUNT[5]),
        .I2(BAUD_COUNT[4]),
        .I3(BAUD_COUNT[7]),
        .I4(BAUD_COUNT[6]),
        .I5(\BAUD_COUNT[11]_i_5_n_0 ),
        .O(X16CLK_EN));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \BAUD_COUNT[11]_i_4 
       (.I0(BAUD_COUNT[9]),
        .I1(BAUD_COUNT[8]),
        .I2(BAUD_COUNT[11]),
        .I3(BAUD_COUNT[10]),
        .O(\BAUD_COUNT[11]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \BAUD_COUNT[11]_i_5 
       (.I0(BAUD_COUNT[1]),
        .I1(BAUD_COUNT[0]),
        .I2(BAUD_COUNT[2]),
        .I3(BAUD_COUNT[3]),
        .O(\BAUD_COUNT[11]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[1]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[1]),
        .O(BAUD_COUNT_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[2]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[2]),
        .O(BAUD_COUNT_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[3]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[3]),
        .O(BAUD_COUNT_0[3]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[4]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[4]),
        .O(BAUD_COUNT_0[4]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[5]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[5]),
        .O(BAUD_COUNT_0[5]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[6]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[6]),
        .O(BAUD_COUNT_0[6]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[7]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[7]),
        .O(BAUD_COUNT_0[7]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[8]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[8]),
        .O(BAUD_COUNT_0[8]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \BAUD_COUNT[9]_i_1 
       (.I0(X16CLK_EN),
        .I1(data0[9]),
        .O(BAUD_COUNT_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[0]),
        .Q(BAUD_COUNT[0]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[10]),
        .Q(BAUD_COUNT[10]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[11]),
        .Q(BAUD_COUNT[11]),
        .R(internal_rst_reg));
  CARRY4 \BAUD_COUNT_reg[11]_i_3 
       (.CI(\BAUD_COUNT_reg[8]_i_2_n_0 ),
        .CO(\NLW_BAUD_COUNT_reg[11]_i_3_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_BAUD_COUNT_reg[11]_i_3_O_UNCONNECTED [3],data0[11:9]}),
        .S({1'b0,BAUD_COUNT[11:9]}));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[1]),
        .Q(BAUD_COUNT[1]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[2]),
        .Q(BAUD_COUNT[2]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[3]),
        .Q(BAUD_COUNT[3]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[4]),
        .Q(BAUD_COUNT[4]),
        .R(internal_rst_reg));
  CARRY4 \BAUD_COUNT_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\BAUD_COUNT_reg[4]_i_2_n_0 ,\NLW_BAUD_COUNT_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(BAUD_COUNT[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S(BAUD_COUNT[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[5]),
        .Q(BAUD_COUNT[5]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[6]),
        .Q(BAUD_COUNT[6]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[7]),
        .Q(BAUD_COUNT[7]),
        .R(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[8]),
        .Q(BAUD_COUNT[8]),
        .R(internal_rst_reg));
  CARRY4 \BAUD_COUNT_reg[8]_i_2 
       (.CI(\BAUD_COUNT_reg[4]_i_2_n_0 ),
        .CO({\BAUD_COUNT_reg[8]_i_2_n_0 ,\NLW_BAUD_COUNT_reg[8]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S(BAUD_COUNT[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \BAUD_COUNT_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(BAUD_COUNT_0[9]),
        .Q(BAUD_COUNT[9]),
        .R(internal_rst_reg));
  LUT3 #(
    .INIT(8'h80)) 
    \DATA[7]_i_1 
       (.I0(S_IN1_ACK),
        .I1(output_rs232_tx_stb),
        .I2(output_rs232_tx_ack),
        .O(DATA));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[0] 
       (.C(clk),
        .CE(DATA),
        .D(Q[0]),
        .Q(\DATA_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[1] 
       (.C(clk),
        .CE(DATA),
        .D(Q[1]),
        .Q(p_6_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[2] 
       (.C(clk),
        .CE(DATA),
        .D(Q[2]),
        .Q(p_5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[3] 
       (.C(clk),
        .CE(DATA),
        .D(Q[3]),
        .Q(p_4_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[4] 
       (.C(clk),
        .CE(DATA),
        .D(Q[4]),
        .Q(p_3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[5] 
       (.C(clk),
        .CE(DATA),
        .D(Q[5]),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[6] 
       (.C(clk),
        .CE(DATA),
        .D(Q[6]),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \DATA_reg[7] 
       (.C(clk),
        .CE(DATA),
        .D(Q[7]),
        .Q(p_0_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF8080FF808080)) 
    \FSM_onehot_STATE[11]_i_1 
       (.I0(S_IN1_ACK),
        .I1(output_rs232_tx_stb),
        .I2(output_rs232_tx_ack),
        .I3(\FSM_onehot_STATE_reg_n_0_[1] ),
        .I4(X16CLK_EN_reg_n_0),
        .I5(\FSM_onehot_STATE[11]_i_2_n_0 ),
        .O(\FSM_onehot_STATE[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_STATE[11]_i_2 
       (.I0(TX_i_3_n_0),
        .I1(\FSM_onehot_STATE_reg_n_0_[6] ),
        .I2(\FSM_onehot_STATE_reg_n_0_[7] ),
        .I3(\FSM_onehot_STATE_reg_n_0_[4] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[5] ),
        .O(\FSM_onehot_STATE[11]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_STATE_reg[0] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[11] ),
        .Q(S_IN1_ACK),
        .S(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[10] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[9] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[10] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[11] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[10] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[11] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[1] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(S_IN1_ACK),
        .Q(\FSM_onehot_STATE_reg_n_0_[1] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[2] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[1] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[2] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[3] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[2] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[3] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[4] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[3] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[4] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[5] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[4] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[5] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[6] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[5] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[6] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[7] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[6] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[7] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[8] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[7] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[8] ),
        .R(internal_rst_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[9] 
       (.C(clk),
        .CE(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .D(\FSM_onehot_STATE_reg_n_0_[8] ),
        .Q(\FSM_onehot_STATE_reg_n_0_[9] ),
        .R(internal_rst_reg));
  LUT3 #(
    .INIT(8'h7C)) 
    S_IN1_ACK_i_1
       (.I0(output_rs232_tx_stb),
        .I1(S_IN1_ACK),
        .I2(output_rs232_tx_ack),
        .O(S_IN1_ACK_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    S_IN1_ACK_reg
       (.C(clk),
        .CE(1'b1),
        .D(S_IN1_ACK_i_1_n_0),
        .Q(output_rs232_tx_ack),
        .R(internal_rst_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    TX_i_1
       (.I0(\FSM_onehot_STATE_reg_n_0_[5] ),
        .I1(\FSM_onehot_STATE_reg_n_0_[4] ),
        .I2(\FSM_onehot_STATE_reg_n_0_[7] ),
        .I3(\FSM_onehot_STATE_reg_n_0_[6] ),
        .I4(TX_i_3_n_0),
        .I5(S_IN1_ACK),
        .O(TX_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    TX_i_2
       (.I0(TX_i_4_n_0),
        .I1(TX_i_5_n_0),
        .I2(TX_i_6_n_0),
        .O(TX_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    TX_i_3
       (.I0(\FSM_onehot_STATE_reg_n_0_[10] ),
        .I1(\FSM_onehot_STATE_reg_n_0_[11] ),
        .I2(\FSM_onehot_STATE_reg_n_0_[8] ),
        .I3(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[3] ),
        .I5(\FSM_onehot_STATE_reg_n_0_[2] ),
        .O(TX_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    TX_i_4
       (.I0(p_0_in),
        .I1(\FSM_onehot_STATE_reg_n_0_[10] ),
        .I2(p_1_in),
        .I3(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[8] ),
        .I5(p_2_in),
        .O(TX_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    TX_i_5
       (.I0(p_3_in),
        .I1(\FSM_onehot_STATE_reg_n_0_[7] ),
        .I2(p_4_in),
        .I3(\FSM_onehot_STATE_reg_n_0_[6] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[5] ),
        .I5(p_5_in),
        .O(TX_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    TX_i_6
       (.I0(p_6_in),
        .I1(\FSM_onehot_STATE_reg_n_0_[4] ),
        .I2(\DATA_reg_n_0_[0] ),
        .I3(\FSM_onehot_STATE_reg_n_0_[3] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[11] ),
        .I5(S_IN1_ACK),
        .O(TX_i_6_n_0));
  FDSE #(
    .INIT(1'b1)) 
    TX_reg
       (.C(clk),
        .CE(TX_i_1_n_0),
        .D(TX_i_2_n_0),
        .Q(rs232_tx_OBUF),
        .S(internal_rst_reg));
  FDRE #(
    .INIT(1'b0)) 
    X16CLK_EN_reg
       (.C(clk),
        .CE(1'b1),
        .D(X16CLK_EN),
        .Q(X16CLK_EN_reg_n_0),
        .R(internal_rst_reg));
endmodule

module transmitter
   (i_out_5_reg_i_23,
    out_20_0,
    output_tx_am_ack,
    dithering,
    \output ,
    Q,
    \delta_reg[7] ,
    out_50_i_23,
    p_0_in,
    O142,
    O143,
    O144,
    i_out_1_reg_i_22,
    i_out_3_reg_i_23,
    i_out_5_reg_i_22,
    i_out_7_reg_i_23,
    out_10_i_1,
    O148,
    O149,
    O150,
    out_10_i_22,
    out_30_i_23,
    out_50_i_22,
    out_70_i_23,
    clk,
    A,
    out_10_i_1_0,
    i_out_3_reg_i_1,
    out_30_i_1,
    i_out_5_reg_i_1,
    out_50_i_1,
    i_out_7_reg_i_1,
    out_70_i_1,
    \s_output_ctl_out_reg[0] ,
    \s_output_am_out_reg[23] ,
    E,
    \s_output_freq_out_reg[31] ,
    S,
    \s_output_am_out_reg[23]_0 ,
    \s_output_am_out_reg[3] ,
    \s_output_am_out_reg[7] );
  output [1:0]i_out_5_reg_i_23;
  output out_20_0;
  output output_tx_am_ack;
  output dithering;
  output \output ;
  output [7:0]Q;
  output [7:0]\delta_reg[7] ;
  output [0:0]out_50_i_23;
  output [20:0]p_0_in;
  output [21:0]O142;
  output [20:0]O143;
  output [21:0]O144;
  output i_out_1_reg_i_22;
  output i_out_3_reg_i_23;
  output i_out_5_reg_i_22;
  output i_out_7_reg_i_23;
  output [20:0]out_10_i_1;
  output [21:0]O148;
  output [20:0]O149;
  output [21:0]O150;
  output out_10_i_22;
  output out_30_i_23;
  output out_50_i_22;
  output out_70_i_23;
  input clk;
  input [23:0]A;
  input [23:0]out_10_i_1_0;
  input [23:0]i_out_3_reg_i_1;
  input [23:0]out_30_i_1;
  input [23:0]i_out_5_reg_i_1;
  input [23:0]out_50_i_1;
  input [23:0]i_out_7_reg_i_1;
  input [23:0]out_70_i_1;
  input \s_output_ctl_out_reg[0] ;
  input [15:0]\s_output_am_out_reg[23] ;
  input [0:0]E;
  input [31:0]\s_output_freq_out_reg[31] ;
  input [3:0]S;
  input [3:0]\s_output_am_out_reg[23]_0 ;
  input [3:0]\s_output_am_out_reg[3] ;
  input [3:0]\s_output_am_out_reg[7] ;

  wire [23:0]A;
  wire [0:0]E;
  wire [21:0]O142;
  wire [20:0]O143;
  wire [21:0]O144;
  wire [21:0]O148;
  wire [20:0]O149;
  wire [21:0]O150;
  wire [7:0]Q;
  wire [3:0]S;
  wire clk;
  wire [7:0]\delta_reg[7] ;
  wire dithering;
  wire \frequency_reg_reg_n_0_[29] ;
  wire \frequency_reg_reg_n_0_[30] ;
  wire \frequency_reg_reg_n_0_[31] ;
  wire i_out_0_reg_n_106;
  wire i_out_0_reg_n_107;
  wire i_out_0_reg_n_108;
  wire i_out_0_reg_n_109;
  wire i_out_0_reg_n_110;
  wire i_out_0_reg_n_111;
  wire i_out_0_reg_n_112;
  wire i_out_0_reg_n_113;
  wire i_out_0_reg_n_114;
  wire i_out_0_reg_n_115;
  wire i_out_0_reg_n_116;
  wire i_out_0_reg_n_117;
  wire i_out_0_reg_n_118;
  wire i_out_0_reg_n_119;
  wire i_out_0_reg_n_120;
  wire i_out_0_reg_n_121;
  wire i_out_0_reg_n_122;
  wire i_out_0_reg_n_123;
  wire i_out_0_reg_n_124;
  wire i_out_0_reg_n_125;
  wire i_out_0_reg_n_126;
  wire i_out_0_reg_n_127;
  wire i_out_0_reg_n_128;
  wire i_out_0_reg_n_129;
  wire i_out_0_reg_n_130;
  wire i_out_0_reg_n_131;
  wire i_out_0_reg_n_132;
  wire i_out_0_reg_n_133;
  wire i_out_0_reg_n_134;
  wire i_out_0_reg_n_135;
  wire i_out_0_reg_n_136;
  wire i_out_0_reg_n_137;
  wire i_out_0_reg_n_138;
  wire i_out_0_reg_n_139;
  wire i_out_0_reg_n_140;
  wire i_out_0_reg_n_141;
  wire i_out_0_reg_n_142;
  wire i_out_0_reg_n_143;
  wire i_out_0_reg_n_144;
  wire i_out_0_reg_n_145;
  wire i_out_0_reg_n_146;
  wire i_out_0_reg_n_147;
  wire i_out_0_reg_n_148;
  wire i_out_0_reg_n_149;
  wire i_out_0_reg_n_150;
  wire i_out_0_reg_n_151;
  wire i_out_0_reg_n_152;
  wire i_out_0_reg_n_153;
  wire i_out_1_reg_i_22;
  wire i_out_1_reg_n_106;
  wire i_out_1_reg_n_107;
  wire i_out_1_reg_n_108;
  wire i_out_1_reg_n_109;
  wire i_out_1_reg_n_110;
  wire i_out_1_reg_n_111;
  wire i_out_1_reg_n_112;
  wire i_out_1_reg_n_113;
  wire i_out_1_reg_n_114;
  wire i_out_1_reg_n_115;
  wire i_out_1_reg_n_116;
  wire i_out_1_reg_n_117;
  wire i_out_1_reg_n_118;
  wire i_out_1_reg_n_119;
  wire i_out_1_reg_n_120;
  wire i_out_1_reg_n_121;
  wire i_out_1_reg_n_122;
  wire i_out_1_reg_n_123;
  wire i_out_1_reg_n_124;
  wire i_out_1_reg_n_125;
  wire i_out_1_reg_n_126;
  wire i_out_1_reg_n_127;
  wire i_out_1_reg_n_128;
  wire i_out_1_reg_n_129;
  wire i_out_1_reg_n_130;
  wire i_out_1_reg_n_131;
  wire i_out_1_reg_n_132;
  wire i_out_1_reg_n_133;
  wire i_out_1_reg_n_134;
  wire i_out_1_reg_n_135;
  wire i_out_1_reg_n_136;
  wire i_out_1_reg_n_137;
  wire i_out_1_reg_n_138;
  wire i_out_1_reg_n_139;
  wire i_out_1_reg_n_140;
  wire i_out_1_reg_n_141;
  wire i_out_1_reg_n_142;
  wire i_out_1_reg_n_143;
  wire i_out_1_reg_n_144;
  wire i_out_1_reg_n_145;
  wire i_out_1_reg_n_146;
  wire i_out_1_reg_n_147;
  wire i_out_1_reg_n_148;
  wire i_out_1_reg_n_149;
  wire i_out_1_reg_n_150;
  wire i_out_1_reg_n_151;
  wire i_out_1_reg_n_152;
  wire i_out_1_reg_n_153;
  wire i_out_2_reg_n_106;
  wire i_out_2_reg_n_107;
  wire i_out_2_reg_n_108;
  wire i_out_2_reg_n_109;
  wire i_out_2_reg_n_110;
  wire i_out_2_reg_n_111;
  wire i_out_2_reg_n_112;
  wire i_out_2_reg_n_113;
  wire i_out_2_reg_n_114;
  wire i_out_2_reg_n_115;
  wire i_out_2_reg_n_116;
  wire i_out_2_reg_n_117;
  wire i_out_2_reg_n_118;
  wire i_out_2_reg_n_119;
  wire i_out_2_reg_n_120;
  wire i_out_2_reg_n_121;
  wire i_out_2_reg_n_122;
  wire i_out_2_reg_n_123;
  wire i_out_2_reg_n_124;
  wire i_out_2_reg_n_125;
  wire i_out_2_reg_n_126;
  wire i_out_2_reg_n_127;
  wire i_out_2_reg_n_128;
  wire i_out_2_reg_n_129;
  wire i_out_2_reg_n_130;
  wire i_out_2_reg_n_131;
  wire i_out_2_reg_n_132;
  wire i_out_2_reg_n_133;
  wire i_out_2_reg_n_134;
  wire i_out_2_reg_n_135;
  wire i_out_2_reg_n_136;
  wire i_out_2_reg_n_137;
  wire i_out_2_reg_n_138;
  wire i_out_2_reg_n_139;
  wire i_out_2_reg_n_140;
  wire i_out_2_reg_n_141;
  wire i_out_2_reg_n_142;
  wire i_out_2_reg_n_143;
  wire i_out_2_reg_n_144;
  wire i_out_2_reg_n_145;
  wire i_out_2_reg_n_146;
  wire i_out_2_reg_n_147;
  wire i_out_2_reg_n_148;
  wire i_out_2_reg_n_149;
  wire i_out_2_reg_n_150;
  wire i_out_2_reg_n_151;
  wire i_out_2_reg_n_152;
  wire i_out_2_reg_n_153;
  wire [23:0]i_out_3_reg_i_1;
  wire i_out_3_reg_i_23;
  wire i_out_3_reg_n_106;
  wire i_out_3_reg_n_107;
  wire i_out_3_reg_n_108;
  wire i_out_3_reg_n_109;
  wire i_out_3_reg_n_110;
  wire i_out_3_reg_n_111;
  wire i_out_3_reg_n_112;
  wire i_out_3_reg_n_113;
  wire i_out_3_reg_n_114;
  wire i_out_3_reg_n_115;
  wire i_out_3_reg_n_116;
  wire i_out_3_reg_n_117;
  wire i_out_3_reg_n_118;
  wire i_out_3_reg_n_119;
  wire i_out_3_reg_n_120;
  wire i_out_3_reg_n_121;
  wire i_out_3_reg_n_122;
  wire i_out_3_reg_n_123;
  wire i_out_3_reg_n_124;
  wire i_out_3_reg_n_125;
  wire i_out_3_reg_n_126;
  wire i_out_3_reg_n_127;
  wire i_out_3_reg_n_128;
  wire i_out_3_reg_n_129;
  wire i_out_3_reg_n_130;
  wire i_out_3_reg_n_131;
  wire i_out_3_reg_n_132;
  wire i_out_3_reg_n_133;
  wire i_out_3_reg_n_134;
  wire i_out_3_reg_n_135;
  wire i_out_3_reg_n_136;
  wire i_out_3_reg_n_137;
  wire i_out_3_reg_n_138;
  wire i_out_3_reg_n_139;
  wire i_out_3_reg_n_140;
  wire i_out_3_reg_n_141;
  wire i_out_3_reg_n_142;
  wire i_out_3_reg_n_143;
  wire i_out_3_reg_n_144;
  wire i_out_3_reg_n_145;
  wire i_out_3_reg_n_146;
  wire i_out_3_reg_n_147;
  wire i_out_3_reg_n_148;
  wire i_out_3_reg_n_149;
  wire i_out_3_reg_n_150;
  wire i_out_3_reg_n_151;
  wire i_out_3_reg_n_152;
  wire i_out_3_reg_n_153;
  wire i_out_4_reg_n_106;
  wire i_out_4_reg_n_107;
  wire i_out_4_reg_n_108;
  wire i_out_4_reg_n_109;
  wire i_out_4_reg_n_110;
  wire i_out_4_reg_n_111;
  wire i_out_4_reg_n_112;
  wire i_out_4_reg_n_113;
  wire i_out_4_reg_n_114;
  wire i_out_4_reg_n_115;
  wire i_out_4_reg_n_116;
  wire i_out_4_reg_n_117;
  wire i_out_4_reg_n_118;
  wire i_out_4_reg_n_119;
  wire i_out_4_reg_n_120;
  wire i_out_4_reg_n_121;
  wire i_out_4_reg_n_122;
  wire i_out_4_reg_n_123;
  wire i_out_4_reg_n_124;
  wire i_out_4_reg_n_125;
  wire i_out_4_reg_n_126;
  wire i_out_4_reg_n_127;
  wire i_out_4_reg_n_128;
  wire i_out_4_reg_n_129;
  wire i_out_4_reg_n_130;
  wire i_out_4_reg_n_131;
  wire i_out_4_reg_n_132;
  wire i_out_4_reg_n_133;
  wire i_out_4_reg_n_134;
  wire i_out_4_reg_n_135;
  wire i_out_4_reg_n_136;
  wire i_out_4_reg_n_137;
  wire i_out_4_reg_n_138;
  wire i_out_4_reg_n_139;
  wire i_out_4_reg_n_140;
  wire i_out_4_reg_n_141;
  wire i_out_4_reg_n_142;
  wire i_out_4_reg_n_143;
  wire i_out_4_reg_n_144;
  wire i_out_4_reg_n_145;
  wire i_out_4_reg_n_146;
  wire i_out_4_reg_n_147;
  wire i_out_4_reg_n_148;
  wire i_out_4_reg_n_149;
  wire i_out_4_reg_n_150;
  wire i_out_4_reg_n_151;
  wire i_out_4_reg_n_152;
  wire i_out_4_reg_n_153;
  wire [23:0]i_out_5_reg_i_1;
  wire i_out_5_reg_i_22;
  wire [1:0]i_out_5_reg_i_23;
  wire i_out_5_reg_n_106;
  wire i_out_5_reg_n_107;
  wire i_out_5_reg_n_108;
  wire i_out_5_reg_n_109;
  wire i_out_5_reg_n_110;
  wire i_out_5_reg_n_111;
  wire i_out_5_reg_n_112;
  wire i_out_5_reg_n_113;
  wire i_out_5_reg_n_114;
  wire i_out_5_reg_n_115;
  wire i_out_5_reg_n_116;
  wire i_out_5_reg_n_117;
  wire i_out_5_reg_n_118;
  wire i_out_5_reg_n_119;
  wire i_out_5_reg_n_120;
  wire i_out_5_reg_n_121;
  wire i_out_5_reg_n_122;
  wire i_out_5_reg_n_123;
  wire i_out_5_reg_n_124;
  wire i_out_5_reg_n_125;
  wire i_out_5_reg_n_126;
  wire i_out_5_reg_n_127;
  wire i_out_5_reg_n_128;
  wire i_out_5_reg_n_129;
  wire i_out_5_reg_n_130;
  wire i_out_5_reg_n_131;
  wire i_out_5_reg_n_132;
  wire i_out_5_reg_n_133;
  wire i_out_5_reg_n_134;
  wire i_out_5_reg_n_135;
  wire i_out_5_reg_n_136;
  wire i_out_5_reg_n_137;
  wire i_out_5_reg_n_138;
  wire i_out_5_reg_n_139;
  wire i_out_5_reg_n_140;
  wire i_out_5_reg_n_141;
  wire i_out_5_reg_n_142;
  wire i_out_5_reg_n_143;
  wire i_out_5_reg_n_144;
  wire i_out_5_reg_n_145;
  wire i_out_5_reg_n_146;
  wire i_out_5_reg_n_147;
  wire i_out_5_reg_n_148;
  wire i_out_5_reg_n_149;
  wire i_out_5_reg_n_150;
  wire i_out_5_reg_n_151;
  wire i_out_5_reg_n_152;
  wire i_out_5_reg_n_153;
  wire i_out_6_reg_n_106;
  wire i_out_6_reg_n_107;
  wire i_out_6_reg_n_108;
  wire i_out_6_reg_n_109;
  wire i_out_6_reg_n_110;
  wire i_out_6_reg_n_111;
  wire i_out_6_reg_n_112;
  wire i_out_6_reg_n_113;
  wire i_out_6_reg_n_114;
  wire i_out_6_reg_n_115;
  wire i_out_6_reg_n_116;
  wire i_out_6_reg_n_117;
  wire i_out_6_reg_n_118;
  wire i_out_6_reg_n_119;
  wire i_out_6_reg_n_120;
  wire i_out_6_reg_n_121;
  wire i_out_6_reg_n_122;
  wire i_out_6_reg_n_123;
  wire i_out_6_reg_n_124;
  wire i_out_6_reg_n_125;
  wire i_out_6_reg_n_126;
  wire i_out_6_reg_n_127;
  wire i_out_6_reg_n_128;
  wire i_out_6_reg_n_129;
  wire i_out_6_reg_n_130;
  wire i_out_6_reg_n_131;
  wire i_out_6_reg_n_132;
  wire i_out_6_reg_n_133;
  wire i_out_6_reg_n_134;
  wire i_out_6_reg_n_135;
  wire i_out_6_reg_n_136;
  wire i_out_6_reg_n_137;
  wire i_out_6_reg_n_138;
  wire i_out_6_reg_n_139;
  wire i_out_6_reg_n_140;
  wire i_out_6_reg_n_141;
  wire i_out_6_reg_n_142;
  wire i_out_6_reg_n_143;
  wire i_out_6_reg_n_144;
  wire i_out_6_reg_n_145;
  wire i_out_6_reg_n_146;
  wire i_out_6_reg_n_147;
  wire i_out_6_reg_n_148;
  wire i_out_6_reg_n_149;
  wire i_out_6_reg_n_150;
  wire i_out_6_reg_n_151;
  wire i_out_6_reg_n_152;
  wire i_out_6_reg_n_153;
  wire [23:0]i_out_7_reg_i_1;
  wire i_out_7_reg_i_23;
  wire i_out_7_reg_n_106;
  wire i_out_7_reg_n_107;
  wire i_out_7_reg_n_108;
  wire i_out_7_reg_n_109;
  wire i_out_7_reg_n_110;
  wire i_out_7_reg_n_111;
  wire i_out_7_reg_n_112;
  wire i_out_7_reg_n_113;
  wire i_out_7_reg_n_114;
  wire i_out_7_reg_n_115;
  wire i_out_7_reg_n_116;
  wire i_out_7_reg_n_117;
  wire i_out_7_reg_n_118;
  wire i_out_7_reg_n_119;
  wire i_out_7_reg_n_120;
  wire i_out_7_reg_n_121;
  wire i_out_7_reg_n_122;
  wire i_out_7_reg_n_123;
  wire i_out_7_reg_n_124;
  wire i_out_7_reg_n_125;
  wire i_out_7_reg_n_126;
  wire i_out_7_reg_n_127;
  wire i_out_7_reg_n_128;
  wire i_out_7_reg_n_129;
  wire i_out_7_reg_n_130;
  wire i_out_7_reg_n_131;
  wire i_out_7_reg_n_132;
  wire i_out_7_reg_n_133;
  wire i_out_7_reg_n_134;
  wire i_out_7_reg_n_135;
  wire i_out_7_reg_n_136;
  wire i_out_7_reg_n_137;
  wire i_out_7_reg_n_138;
  wire i_out_7_reg_n_139;
  wire i_out_7_reg_n_140;
  wire i_out_7_reg_n_141;
  wire i_out_7_reg_n_142;
  wire i_out_7_reg_n_143;
  wire i_out_7_reg_n_144;
  wire i_out_7_reg_n_145;
  wire i_out_7_reg_n_146;
  wire i_out_7_reg_n_147;
  wire i_out_7_reg_n_148;
  wire i_out_7_reg_n_149;
  wire i_out_7_reg_n_150;
  wire i_out_7_reg_n_151;
  wire i_out_7_reg_n_152;
  wire i_out_7_reg_n_153;
  wire [31:3]in;
  wire interpolate_inst_1_n_1;
  wire interpolate_inst_1_n_10;
  wire interpolate_inst_1_n_11;
  wire interpolate_inst_1_n_12;
  wire interpolate_inst_1_n_13;
  wire interpolate_inst_1_n_14;
  wire interpolate_inst_1_n_15;
  wire interpolate_inst_1_n_16;
  wire interpolate_inst_1_n_17;
  wire interpolate_inst_1_n_18;
  wire interpolate_inst_1_n_19;
  wire interpolate_inst_1_n_2;
  wire interpolate_inst_1_n_20;
  wire interpolate_inst_1_n_21;
  wire interpolate_inst_1_n_22;
  wire interpolate_inst_1_n_3;
  wire interpolate_inst_1_n_32;
  wire interpolate_inst_1_n_33;
  wire interpolate_inst_1_n_34;
  wire interpolate_inst_1_n_35;
  wire interpolate_inst_1_n_36;
  wire interpolate_inst_1_n_37;
  wire interpolate_inst_1_n_38;
  wire interpolate_inst_1_n_39;
  wire interpolate_inst_1_n_4;
  wire interpolate_inst_1_n_40;
  wire interpolate_inst_1_n_41;
  wire interpolate_inst_1_n_42;
  wire interpolate_inst_1_n_43;
  wire interpolate_inst_1_n_44;
  wire interpolate_inst_1_n_45;
  wire interpolate_inst_1_n_46;
  wire interpolate_inst_1_n_47;
  wire interpolate_inst_1_n_48;
  wire interpolate_inst_1_n_49;
  wire interpolate_inst_1_n_5;
  wire interpolate_inst_1_n_50;
  wire interpolate_inst_1_n_51;
  wire interpolate_inst_1_n_52;
  wire interpolate_inst_1_n_53;
  wire interpolate_inst_1_n_55;
  wire interpolate_inst_1_n_56;
  wire interpolate_inst_1_n_57;
  wire interpolate_inst_1_n_58;
  wire interpolate_inst_1_n_59;
  wire interpolate_inst_1_n_6;
  wire interpolate_inst_1_n_60;
  wire interpolate_inst_1_n_61;
  wire interpolate_inst_1_n_62;
  wire interpolate_inst_1_n_63;
  wire interpolate_inst_1_n_64;
  wire interpolate_inst_1_n_65;
  wire interpolate_inst_1_n_66;
  wire interpolate_inst_1_n_67;
  wire interpolate_inst_1_n_68;
  wire interpolate_inst_1_n_69;
  wire interpolate_inst_1_n_7;
  wire interpolate_inst_1_n_70;
  wire interpolate_inst_1_n_71;
  wire interpolate_inst_1_n_72;
  wire interpolate_inst_1_n_73;
  wire interpolate_inst_1_n_74;
  wire interpolate_inst_1_n_75;
  wire interpolate_inst_1_n_76;
  wire interpolate_inst_1_n_77;
  wire interpolate_inst_1_n_78;
  wire interpolate_inst_1_n_79;
  wire interpolate_inst_1_n_8;
  wire interpolate_inst_1_n_80;
  wire interpolate_inst_1_n_81;
  wire interpolate_inst_1_n_82;
  wire interpolate_inst_1_n_83;
  wire interpolate_inst_1_n_84;
  wire interpolate_inst_1_n_85;
  wire interpolate_inst_1_n_86;
  wire interpolate_inst_1_n_87;
  wire interpolate_inst_1_n_88;
  wire interpolate_inst_1_n_89;
  wire interpolate_inst_1_n_9;
  wire interpolate_inst_1_n_90;
  wire interpolate_inst_1_n_91;
  wire interpolate_inst_1_n_92;
  wire interpolate_inst_1_n_93;
  wire interpolate_inst_1_n_94;
  wire interpolate_inst_1_n_95;
  wire interpolate_inst_1_n_96;
  wire interpolate_inst_1_n_97;
  wire interpolate_inst_1_n_98;
  wire interpolate_inst_1_n_99;
  wire interpolate_inst_2_n_0;
  wire interpolate_inst_2_n_1;
  wire interpolate_inst_2_n_10;
  wire interpolate_inst_2_n_11;
  wire interpolate_inst_2_n_12;
  wire interpolate_inst_2_n_13;
  wire interpolate_inst_2_n_14;
  wire interpolate_inst_2_n_15;
  wire interpolate_inst_2_n_16;
  wire interpolate_inst_2_n_17;
  wire interpolate_inst_2_n_18;
  wire interpolate_inst_2_n_19;
  wire interpolate_inst_2_n_2;
  wire interpolate_inst_2_n_20;
  wire interpolate_inst_2_n_21;
  wire interpolate_inst_2_n_3;
  wire interpolate_inst_2_n_31;
  wire interpolate_inst_2_n_32;
  wire interpolate_inst_2_n_33;
  wire interpolate_inst_2_n_34;
  wire interpolate_inst_2_n_35;
  wire interpolate_inst_2_n_36;
  wire interpolate_inst_2_n_37;
  wire interpolate_inst_2_n_38;
  wire interpolate_inst_2_n_39;
  wire interpolate_inst_2_n_4;
  wire interpolate_inst_2_n_40;
  wire interpolate_inst_2_n_41;
  wire interpolate_inst_2_n_42;
  wire interpolate_inst_2_n_43;
  wire interpolate_inst_2_n_44;
  wire interpolate_inst_2_n_45;
  wire interpolate_inst_2_n_46;
  wire interpolate_inst_2_n_47;
  wire interpolate_inst_2_n_48;
  wire interpolate_inst_2_n_49;
  wire interpolate_inst_2_n_5;
  wire interpolate_inst_2_n_50;
  wire interpolate_inst_2_n_51;
  wire interpolate_inst_2_n_52;
  wire interpolate_inst_2_n_54;
  wire interpolate_inst_2_n_55;
  wire interpolate_inst_2_n_56;
  wire interpolate_inst_2_n_57;
  wire interpolate_inst_2_n_58;
  wire interpolate_inst_2_n_59;
  wire interpolate_inst_2_n_6;
  wire interpolate_inst_2_n_60;
  wire interpolate_inst_2_n_61;
  wire interpolate_inst_2_n_62;
  wire interpolate_inst_2_n_63;
  wire interpolate_inst_2_n_64;
  wire interpolate_inst_2_n_65;
  wire interpolate_inst_2_n_66;
  wire interpolate_inst_2_n_67;
  wire interpolate_inst_2_n_68;
  wire interpolate_inst_2_n_69;
  wire interpolate_inst_2_n_7;
  wire interpolate_inst_2_n_70;
  wire interpolate_inst_2_n_71;
  wire interpolate_inst_2_n_72;
  wire interpolate_inst_2_n_73;
  wire interpolate_inst_2_n_74;
  wire interpolate_inst_2_n_75;
  wire interpolate_inst_2_n_76;
  wire interpolate_inst_2_n_77;
  wire interpolate_inst_2_n_78;
  wire interpolate_inst_2_n_79;
  wire interpolate_inst_2_n_8;
  wire interpolate_inst_2_n_80;
  wire interpolate_inst_2_n_81;
  wire interpolate_inst_2_n_82;
  wire interpolate_inst_2_n_83;
  wire interpolate_inst_2_n_84;
  wire interpolate_inst_2_n_85;
  wire interpolate_inst_2_n_86;
  wire interpolate_inst_2_n_87;
  wire interpolate_inst_2_n_88;
  wire interpolate_inst_2_n_89;
  wire interpolate_inst_2_n_9;
  wire interpolate_inst_2_n_90;
  wire interpolate_inst_2_n_91;
  wire interpolate_inst_2_n_92;
  wire interpolate_inst_2_n_93;
  wire interpolate_inst_2_n_94;
  wire interpolate_inst_2_n_95;
  wire interpolate_inst_2_n_96;
  wire interpolate_inst_2_n_97;
  wire interpolate_inst_2_n_98;
  wire nco_inst_1_n_0;
  wire nco_inst_1_n_1;
  wire nco_inst_1_n_10;
  wire nco_inst_1_n_100;
  wire nco_inst_1_n_101;
  wire nco_inst_1_n_102;
  wire nco_inst_1_n_103;
  wire nco_inst_1_n_104;
  wire nco_inst_1_n_105;
  wire nco_inst_1_n_106;
  wire nco_inst_1_n_107;
  wire nco_inst_1_n_108;
  wire nco_inst_1_n_109;
  wire nco_inst_1_n_11;
  wire nco_inst_1_n_110;
  wire nco_inst_1_n_111;
  wire nco_inst_1_n_112;
  wire nco_inst_1_n_113;
  wire nco_inst_1_n_114;
  wire nco_inst_1_n_115;
  wire nco_inst_1_n_116;
  wire nco_inst_1_n_117;
  wire nco_inst_1_n_118;
  wire nco_inst_1_n_119;
  wire nco_inst_1_n_12;
  wire nco_inst_1_n_120;
  wire nco_inst_1_n_121;
  wire nco_inst_1_n_122;
  wire nco_inst_1_n_123;
  wire nco_inst_1_n_124;
  wire nco_inst_1_n_125;
  wire nco_inst_1_n_126;
  wire nco_inst_1_n_127;
  wire nco_inst_1_n_128;
  wire nco_inst_1_n_129;
  wire nco_inst_1_n_13;
  wire nco_inst_1_n_130;
  wire nco_inst_1_n_131;
  wire nco_inst_1_n_132;
  wire nco_inst_1_n_133;
  wire nco_inst_1_n_134;
  wire nco_inst_1_n_135;
  wire nco_inst_1_n_136;
  wire nco_inst_1_n_137;
  wire nco_inst_1_n_138;
  wire nco_inst_1_n_139;
  wire nco_inst_1_n_14;
  wire nco_inst_1_n_140;
  wire nco_inst_1_n_141;
  wire nco_inst_1_n_142;
  wire nco_inst_1_n_143;
  wire nco_inst_1_n_144;
  wire nco_inst_1_n_145;
  wire nco_inst_1_n_146;
  wire nco_inst_1_n_147;
  wire nco_inst_1_n_148;
  wire nco_inst_1_n_149;
  wire nco_inst_1_n_15;
  wire nco_inst_1_n_150;
  wire nco_inst_1_n_151;
  wire nco_inst_1_n_152;
  wire nco_inst_1_n_153;
  wire nco_inst_1_n_154;
  wire nco_inst_1_n_155;
  wire nco_inst_1_n_156;
  wire nco_inst_1_n_157;
  wire nco_inst_1_n_158;
  wire nco_inst_1_n_159;
  wire nco_inst_1_n_16;
  wire nco_inst_1_n_17;
  wire nco_inst_1_n_18;
  wire nco_inst_1_n_19;
  wire nco_inst_1_n_2;
  wire nco_inst_1_n_20;
  wire nco_inst_1_n_21;
  wire nco_inst_1_n_22;
  wire nco_inst_1_n_23;
  wire nco_inst_1_n_24;
  wire nco_inst_1_n_25;
  wire nco_inst_1_n_26;
  wire nco_inst_1_n_27;
  wire nco_inst_1_n_28;
  wire nco_inst_1_n_29;
  wire nco_inst_1_n_3;
  wire nco_inst_1_n_30;
  wire nco_inst_1_n_31;
  wire nco_inst_1_n_32;
  wire nco_inst_1_n_33;
  wire nco_inst_1_n_34;
  wire nco_inst_1_n_35;
  wire nco_inst_1_n_36;
  wire nco_inst_1_n_37;
  wire nco_inst_1_n_38;
  wire nco_inst_1_n_39;
  wire nco_inst_1_n_4;
  wire nco_inst_1_n_40;
  wire nco_inst_1_n_41;
  wire nco_inst_1_n_42;
  wire nco_inst_1_n_43;
  wire nco_inst_1_n_44;
  wire nco_inst_1_n_45;
  wire nco_inst_1_n_46;
  wire nco_inst_1_n_47;
  wire nco_inst_1_n_48;
  wire nco_inst_1_n_49;
  wire nco_inst_1_n_5;
  wire nco_inst_1_n_50;
  wire nco_inst_1_n_51;
  wire nco_inst_1_n_52;
  wire nco_inst_1_n_53;
  wire nco_inst_1_n_54;
  wire nco_inst_1_n_55;
  wire nco_inst_1_n_56;
  wire nco_inst_1_n_57;
  wire nco_inst_1_n_58;
  wire nco_inst_1_n_59;
  wire nco_inst_1_n_6;
  wire nco_inst_1_n_60;
  wire nco_inst_1_n_61;
  wire nco_inst_1_n_62;
  wire nco_inst_1_n_63;
  wire nco_inst_1_n_64;
  wire nco_inst_1_n_65;
  wire nco_inst_1_n_66;
  wire nco_inst_1_n_67;
  wire nco_inst_1_n_68;
  wire nco_inst_1_n_69;
  wire nco_inst_1_n_7;
  wire nco_inst_1_n_70;
  wire nco_inst_1_n_71;
  wire nco_inst_1_n_72;
  wire nco_inst_1_n_73;
  wire nco_inst_1_n_74;
  wire nco_inst_1_n_75;
  wire nco_inst_1_n_76;
  wire nco_inst_1_n_77;
  wire nco_inst_1_n_78;
  wire nco_inst_1_n_79;
  wire nco_inst_1_n_8;
  wire nco_inst_1_n_80;
  wire nco_inst_1_n_81;
  wire nco_inst_1_n_82;
  wire nco_inst_1_n_83;
  wire nco_inst_1_n_84;
  wire nco_inst_1_n_85;
  wire nco_inst_1_n_86;
  wire nco_inst_1_n_87;
  wire nco_inst_1_n_88;
  wire nco_inst_1_n_89;
  wire nco_inst_1_n_9;
  wire nco_inst_1_n_90;
  wire nco_inst_1_n_91;
  wire nco_inst_1_n_92;
  wire nco_inst_1_n_93;
  wire nco_inst_1_n_94;
  wire nco_inst_1_n_95;
  wire nco_inst_1_n_96;
  wire nco_inst_1_n_97;
  wire nco_inst_1_n_98;
  wire nco_inst_1_n_99;
  wire [31:31]out_0;
  wire [30:0]out_0__0;
  wire [31:31]out_1;
  wire [20:0]out_10_i_1;
  wire [23:0]out_10_i_1_0;
  wire out_10_i_22;
  wire [30:0]out_1__0;
  wire [31:31]out_2;
  wire out_20_0;
  wire [30:0]out_2__0;
  wire [31:31]out_3;
  wire [23:0]out_30_i_1;
  wire out_30_i_23;
  wire [30:0]out_3__0;
  wire [31:31]out_4;
  wire [30:0]out_4__0;
  wire [31:31]out_5;
  wire [23:0]out_50_i_1;
  wire out_50_i_22;
  wire [0:0]out_50_i_23;
  wire [30:0]out_5__0;
  wire [31:31]out_6;
  wire [30:0]out_6__0;
  wire [31:31]out_7;
  wire [23:0]out_70_i_1;
  wire out_70_i_23;
  wire [30:0]out_7__0;
  wire \output ;
  wire output_tx_am_ack;
  wire [20:0]p_0_in;
  wire [15:0]\s_output_am_out_reg[23] ;
  wire [3:0]\s_output_am_out_reg[23]_0 ;
  wire [3:0]\s_output_am_out_reg[3] ;
  wire [3:0]\s_output_am_out_reg[7] ;
  wire \s_output_ctl_out_reg[0] ;
  wire [31:0]\s_output_freq_out_reg[31] ;
  wire NLW_i_out_0_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_0_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_0_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_0_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_0_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_0_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_0_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_0_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_0_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_0_reg_P_UNCONNECTED;
  wire NLW_i_out_1_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_1_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_1_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_1_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_1_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_1_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_1_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_1_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_1_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_1_reg_P_UNCONNECTED;
  wire NLW_i_out_2_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_2_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_2_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_2_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_2_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_2_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_2_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_2_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_2_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_2_reg_P_UNCONNECTED;
  wire NLW_i_out_3_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_3_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_3_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_3_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_3_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_3_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_3_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_3_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_3_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_3_reg_P_UNCONNECTED;
  wire NLW_i_out_4_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_4_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_4_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_4_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_4_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_4_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_4_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_4_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_4_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_4_reg_P_UNCONNECTED;
  wire NLW_i_out_5_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_5_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_5_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_5_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_5_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_5_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_5_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_5_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_5_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_5_reg_P_UNCONNECTED;
  wire NLW_i_out_6_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_6_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_6_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_6_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_6_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_6_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_6_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_6_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_6_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_6_reg_P_UNCONNECTED;
  wire NLW_i_out_7_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_i_out_7_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_i_out_7_reg_OVERFLOW_UNCONNECTED;
  wire NLW_i_out_7_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_i_out_7_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_i_out_7_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_i_out_7_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_i_out_7_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_i_out_7_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_i_out_7_reg_P_UNCONNECTED;
  wire NLW_out_00_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_00_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_00_OVERFLOW_UNCONNECTED;
  wire NLW_out_00_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_00_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_00_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_00_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_00_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_00_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_00_P_UNCONNECTED;
  wire [47:0]NLW_out_00_PCOUT_UNCONNECTED;
  wire NLW_out_10_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_10_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_10_OVERFLOW_UNCONNECTED;
  wire NLW_out_10_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_10_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_10_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_10_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_10_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_10_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_10_P_UNCONNECTED;
  wire [47:0]NLW_out_10_PCOUT_UNCONNECTED;
  wire NLW_out_20_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_20_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_20_OVERFLOW_UNCONNECTED;
  wire NLW_out_20_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_20_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_20_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_20_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_20_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_20_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_20_P_UNCONNECTED;
  wire [47:0]NLW_out_20_PCOUT_UNCONNECTED;
  wire NLW_out_30_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_30_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_30_OVERFLOW_UNCONNECTED;
  wire NLW_out_30_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_30_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_30_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_30_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_30_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_30_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_30_P_UNCONNECTED;
  wire [47:0]NLW_out_30_PCOUT_UNCONNECTED;
  wire NLW_out_40_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_40_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_40_OVERFLOW_UNCONNECTED;
  wire NLW_out_40_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_40_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_40_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_40_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_40_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_40_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_40_P_UNCONNECTED;
  wire [47:0]NLW_out_40_PCOUT_UNCONNECTED;
  wire NLW_out_50_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_50_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_50_OVERFLOW_UNCONNECTED;
  wire NLW_out_50_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_50_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_50_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_50_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_50_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_50_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_50_P_UNCONNECTED;
  wire [47:0]NLW_out_50_PCOUT_UNCONNECTED;
  wire NLW_out_60_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_60_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_60_OVERFLOW_UNCONNECTED;
  wire NLW_out_60_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_60_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_60_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_60_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_60_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_60_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_60_P_UNCONNECTED;
  wire [47:0]NLW_out_60_PCOUT_UNCONNECTED;
  wire NLW_out_70_CARRYCASCOUT_UNCONNECTED;
  wire NLW_out_70_MULTSIGNOUT_UNCONNECTED;
  wire NLW_out_70_OVERFLOW_UNCONNECTED;
  wire NLW_out_70_PATTERNBDETECT_UNCONNECTED;
  wire NLW_out_70_PATTERNDETECT_UNCONNECTED;
  wire NLW_out_70_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_out_70_ACOUT_UNCONNECTED;
  wire [17:0]NLW_out_70_BCOUT_UNCONNECTED;
  wire [3:0]NLW_out_70_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_out_70_P_UNCONNECTED;
  wire [47:0]NLW_out_70_PCOUT_UNCONNECTED;

  dac_interface dac_interface_inst_1
       (.P({out_0,out_0__0}),
        .clk(clk),
        .dithering_reg(dithering),
        .out_10({out_1,out_1__0}),
        .out_20({out_2,out_2__0}),
        .out_30({out_3,out_3__0}),
        .out_40({out_4,out_4__0}),
        .out_50({out_5,out_5__0}),
        .out_60({out_6,out_6__0}),
        .out_70({out_7,out_7__0}),
        .\output (\output ));
  FDRE #(
    .INIT(1'b0)) 
    dithering_reg
       (.C(clk),
        .CE(1'b1),
        .D(\s_output_ctl_out_reg[0] ),
        .Q(dithering),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [0]),
        .Q(in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [10]),
        .Q(in[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [11]),
        .Q(in[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [12]),
        .Q(in[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[13] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [13]),
        .Q(in[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[14] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [14]),
        .Q(in[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[15] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [15]),
        .Q(in[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[16] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [16]),
        .Q(in[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[17] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [17]),
        .Q(in[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[18] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [18]),
        .Q(in[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[19] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [19]),
        .Q(in[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [1]),
        .Q(in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[20] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [20]),
        .Q(in[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[21] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [21]),
        .Q(in[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[22] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [22]),
        .Q(in[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[23] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [23]),
        .Q(in[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[24] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [24]),
        .Q(in[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[25] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [25]),
        .Q(in[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[26] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [26]),
        .Q(in[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[27] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [27]),
        .Q(in[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[28] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [28]),
        .Q(in[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[29] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [29]),
        .Q(\frequency_reg_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [2]),
        .Q(in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[30] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [30]),
        .Q(\frequency_reg_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[31] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [31]),
        .Q(\frequency_reg_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [3]),
        .Q(in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [4]),
        .Q(in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [5]),
        .Q(in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [6]),
        .Q(in[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [7]),
        .Q(in[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [8]),
        .Q(in[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \frequency_reg_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\s_output_freq_out_reg[31] [9]),
        .Q(in[12]),
        .R(1'b0));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_0_reg
       (.A({interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_32,interpolate_inst_1_n_33,interpolate_inst_1_n_34,interpolate_inst_1_n_35,interpolate_inst_1_n_36,interpolate_inst_1_n_37,interpolate_inst_1_n_38,interpolate_inst_1_n_39,interpolate_inst_1_n_40,interpolate_inst_1_n_41,interpolate_inst_1_n_42,interpolate_inst_1_n_43,interpolate_inst_1_n_44,interpolate_inst_1_n_45,interpolate_inst_1_n_46,interpolate_inst_1_n_47,interpolate_inst_1_n_48,interpolate_inst_1_n_49,interpolate_inst_1_n_50,interpolate_inst_1_n_51,interpolate_inst_1_n_52,interpolate_inst_1_n_53,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_0_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_0,nco_inst_1_n_1,nco_inst_1_n_2,nco_inst_1_n_3,nco_inst_1_n_4,nco_inst_1_n_5,nco_inst_1_n_6,nco_inst_1_n_7,nco_inst_1_n_8,nco_inst_1_n_9}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_0_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_0_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_0_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_0_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_0_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_0_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_0_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_0_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_0_reg_n_106,i_out_0_reg_n_107,i_out_0_reg_n_108,i_out_0_reg_n_109,i_out_0_reg_n_110,i_out_0_reg_n_111,i_out_0_reg_n_112,i_out_0_reg_n_113,i_out_0_reg_n_114,i_out_0_reg_n_115,i_out_0_reg_n_116,i_out_0_reg_n_117,i_out_0_reg_n_118,i_out_0_reg_n_119,i_out_0_reg_n_120,i_out_0_reg_n_121,i_out_0_reg_n_122,i_out_0_reg_n_123,i_out_0_reg_n_124,i_out_0_reg_n_125,i_out_0_reg_n_126,i_out_0_reg_n_127,i_out_0_reg_n_128,i_out_0_reg_n_129,i_out_0_reg_n_130,i_out_0_reg_n_131,i_out_0_reg_n_132,i_out_0_reg_n_133,i_out_0_reg_n_134,i_out_0_reg_n_135,i_out_0_reg_n_136,i_out_0_reg_n_137,i_out_0_reg_n_138,i_out_0_reg_n_139,i_out_0_reg_n_140,i_out_0_reg_n_141,i_out_0_reg_n_142,i_out_0_reg_n_143,i_out_0_reg_n_144,i_out_0_reg_n_145,i_out_0_reg_n_146,i_out_0_reg_n_147,i_out_0_reg_n_148,i_out_0_reg_n_149,i_out_0_reg_n_150,i_out_0_reg_n_151,i_out_0_reg_n_152,i_out_0_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_0_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_1_reg
       (.A({A[23],A[23],A[23],A[23],A[23],A[23],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_1_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_10,nco_inst_1_n_11,nco_inst_1_n_12,nco_inst_1_n_13,nco_inst_1_n_14,nco_inst_1_n_15,nco_inst_1_n_16,nco_inst_1_n_17,nco_inst_1_n_18,nco_inst_1_n_19}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_1_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_1_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_1_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_1_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_1_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_1_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_1_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_1_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_1_reg_n_106,i_out_1_reg_n_107,i_out_1_reg_n_108,i_out_1_reg_n_109,i_out_1_reg_n_110,i_out_1_reg_n_111,i_out_1_reg_n_112,i_out_1_reg_n_113,i_out_1_reg_n_114,i_out_1_reg_n_115,i_out_1_reg_n_116,i_out_1_reg_n_117,i_out_1_reg_n_118,i_out_1_reg_n_119,i_out_1_reg_n_120,i_out_1_reg_n_121,i_out_1_reg_n_122,i_out_1_reg_n_123,i_out_1_reg_n_124,i_out_1_reg_n_125,i_out_1_reg_n_126,i_out_1_reg_n_127,i_out_1_reg_n_128,i_out_1_reg_n_129,i_out_1_reg_n_130,i_out_1_reg_n_131,i_out_1_reg_n_132,i_out_1_reg_n_133,i_out_1_reg_n_134,i_out_1_reg_n_135,i_out_1_reg_n_136,i_out_1_reg_n_137,i_out_1_reg_n_138,i_out_1_reg_n_139,i_out_1_reg_n_140,i_out_1_reg_n_141,i_out_1_reg_n_142,i_out_1_reg_n_143,i_out_1_reg_n_144,i_out_1_reg_n_145,i_out_1_reg_n_146,i_out_1_reg_n_147,i_out_1_reg_n_148,i_out_1_reg_n_149,i_out_1_reg_n_150,i_out_1_reg_n_151,i_out_1_reg_n_152,i_out_1_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_1_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_2_reg
       (.A({interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_1,interpolate_inst_1_n_2,interpolate_inst_1_n_3,interpolate_inst_1_n_4,interpolate_inst_1_n_5,interpolate_inst_1_n_6,interpolate_inst_1_n_7,interpolate_inst_1_n_8,interpolate_inst_1_n_9,interpolate_inst_1_n_10,interpolate_inst_1_n_11,interpolate_inst_1_n_12,interpolate_inst_1_n_13,interpolate_inst_1_n_14,interpolate_inst_1_n_15,interpolate_inst_1_n_16,interpolate_inst_1_n_17,interpolate_inst_1_n_18,interpolate_inst_1_n_19,interpolate_inst_1_n_20,interpolate_inst_1_n_21,interpolate_inst_1_n_22,i_out_5_reg_i_23[0],1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_2_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_40,nco_inst_1_n_41,nco_inst_1_n_42,nco_inst_1_n_43,nco_inst_1_n_44,nco_inst_1_n_45,nco_inst_1_n_46,nco_inst_1_n_47,nco_inst_1_n_48,nco_inst_1_n_49}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_2_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_2_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_2_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_2_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_2_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_2_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_2_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_2_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_2_reg_n_106,i_out_2_reg_n_107,i_out_2_reg_n_108,i_out_2_reg_n_109,i_out_2_reg_n_110,i_out_2_reg_n_111,i_out_2_reg_n_112,i_out_2_reg_n_113,i_out_2_reg_n_114,i_out_2_reg_n_115,i_out_2_reg_n_116,i_out_2_reg_n_117,i_out_2_reg_n_118,i_out_2_reg_n_119,i_out_2_reg_n_120,i_out_2_reg_n_121,i_out_2_reg_n_122,i_out_2_reg_n_123,i_out_2_reg_n_124,i_out_2_reg_n_125,i_out_2_reg_n_126,i_out_2_reg_n_127,i_out_2_reg_n_128,i_out_2_reg_n_129,i_out_2_reg_n_130,i_out_2_reg_n_131,i_out_2_reg_n_132,i_out_2_reg_n_133,i_out_2_reg_n_134,i_out_2_reg_n_135,i_out_2_reg_n_136,i_out_2_reg_n_137,i_out_2_reg_n_138,i_out_2_reg_n_139,i_out_2_reg_n_140,i_out_2_reg_n_141,i_out_2_reg_n_142,i_out_2_reg_n_143,i_out_2_reg_n_144,i_out_2_reg_n_145,i_out_2_reg_n_146,i_out_2_reg_n_147,i_out_2_reg_n_148,i_out_2_reg_n_149,i_out_2_reg_n_150,i_out_2_reg_n_151,i_out_2_reg_n_152,i_out_2_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_2_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_3_reg
       (.A({i_out_3_reg_i_1[23],i_out_3_reg_i_1[23],i_out_3_reg_i_1[23],i_out_3_reg_i_1[23],i_out_3_reg_i_1[23],i_out_3_reg_i_1[23],i_out_3_reg_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_3_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_50,nco_inst_1_n_51,nco_inst_1_n_52,nco_inst_1_n_53,nco_inst_1_n_54,nco_inst_1_n_55,nco_inst_1_n_56,nco_inst_1_n_57,nco_inst_1_n_58,nco_inst_1_n_59}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_3_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_3_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_3_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_3_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_3_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_3_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_3_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_3_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_3_reg_n_106,i_out_3_reg_n_107,i_out_3_reg_n_108,i_out_3_reg_n_109,i_out_3_reg_n_110,i_out_3_reg_n_111,i_out_3_reg_n_112,i_out_3_reg_n_113,i_out_3_reg_n_114,i_out_3_reg_n_115,i_out_3_reg_n_116,i_out_3_reg_n_117,i_out_3_reg_n_118,i_out_3_reg_n_119,i_out_3_reg_n_120,i_out_3_reg_n_121,i_out_3_reg_n_122,i_out_3_reg_n_123,i_out_3_reg_n_124,i_out_3_reg_n_125,i_out_3_reg_n_126,i_out_3_reg_n_127,i_out_3_reg_n_128,i_out_3_reg_n_129,i_out_3_reg_n_130,i_out_3_reg_n_131,i_out_3_reg_n_132,i_out_3_reg_n_133,i_out_3_reg_n_134,i_out_3_reg_n_135,i_out_3_reg_n_136,i_out_3_reg_n_137,i_out_3_reg_n_138,i_out_3_reg_n_139,i_out_3_reg_n_140,i_out_3_reg_n_141,i_out_3_reg_n_142,i_out_3_reg_n_143,i_out_3_reg_n_144,i_out_3_reg_n_145,i_out_3_reg_n_146,i_out_3_reg_n_147,i_out_3_reg_n_148,i_out_3_reg_n_149,i_out_3_reg_n_150,i_out_3_reg_n_151,i_out_3_reg_n_152,i_out_3_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_3_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_4_reg
       (.A({interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_55,interpolate_inst_1_n_56,interpolate_inst_1_n_57,interpolate_inst_1_n_58,interpolate_inst_1_n_59,interpolate_inst_1_n_60,interpolate_inst_1_n_61,interpolate_inst_1_n_62,interpolate_inst_1_n_63,interpolate_inst_1_n_64,interpolate_inst_1_n_65,interpolate_inst_1_n_66,interpolate_inst_1_n_67,interpolate_inst_1_n_68,interpolate_inst_1_n_69,interpolate_inst_1_n_70,interpolate_inst_1_n_71,interpolate_inst_1_n_72,interpolate_inst_1_n_73,interpolate_inst_1_n_74,interpolate_inst_1_n_75,interpolate_inst_1_n_76,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_4_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_80,nco_inst_1_n_81,nco_inst_1_n_82,nco_inst_1_n_83,nco_inst_1_n_84,nco_inst_1_n_85,nco_inst_1_n_86,nco_inst_1_n_87,nco_inst_1_n_88,nco_inst_1_n_89}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_4_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_4_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_4_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_4_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_4_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_4_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_4_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_4_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_4_reg_n_106,i_out_4_reg_n_107,i_out_4_reg_n_108,i_out_4_reg_n_109,i_out_4_reg_n_110,i_out_4_reg_n_111,i_out_4_reg_n_112,i_out_4_reg_n_113,i_out_4_reg_n_114,i_out_4_reg_n_115,i_out_4_reg_n_116,i_out_4_reg_n_117,i_out_4_reg_n_118,i_out_4_reg_n_119,i_out_4_reg_n_120,i_out_4_reg_n_121,i_out_4_reg_n_122,i_out_4_reg_n_123,i_out_4_reg_n_124,i_out_4_reg_n_125,i_out_4_reg_n_126,i_out_4_reg_n_127,i_out_4_reg_n_128,i_out_4_reg_n_129,i_out_4_reg_n_130,i_out_4_reg_n_131,i_out_4_reg_n_132,i_out_4_reg_n_133,i_out_4_reg_n_134,i_out_4_reg_n_135,i_out_4_reg_n_136,i_out_4_reg_n_137,i_out_4_reg_n_138,i_out_4_reg_n_139,i_out_4_reg_n_140,i_out_4_reg_n_141,i_out_4_reg_n_142,i_out_4_reg_n_143,i_out_4_reg_n_144,i_out_4_reg_n_145,i_out_4_reg_n_146,i_out_4_reg_n_147,i_out_4_reg_n_148,i_out_4_reg_n_149,i_out_4_reg_n_150,i_out_4_reg_n_151,i_out_4_reg_n_152,i_out_4_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_4_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_5_reg
       (.A({i_out_5_reg_i_1[23],i_out_5_reg_i_1[23],i_out_5_reg_i_1[23],i_out_5_reg_i_1[23],i_out_5_reg_i_1[23],i_out_5_reg_i_1[23],i_out_5_reg_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_5_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_90,nco_inst_1_n_91,nco_inst_1_n_92,nco_inst_1_n_93,nco_inst_1_n_94,nco_inst_1_n_95,nco_inst_1_n_96,nco_inst_1_n_97,nco_inst_1_n_98,nco_inst_1_n_99}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_5_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_5_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_5_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_5_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_5_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_5_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_5_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_5_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_5_reg_n_106,i_out_5_reg_n_107,i_out_5_reg_n_108,i_out_5_reg_n_109,i_out_5_reg_n_110,i_out_5_reg_n_111,i_out_5_reg_n_112,i_out_5_reg_n_113,i_out_5_reg_n_114,i_out_5_reg_n_115,i_out_5_reg_n_116,i_out_5_reg_n_117,i_out_5_reg_n_118,i_out_5_reg_n_119,i_out_5_reg_n_120,i_out_5_reg_n_121,i_out_5_reg_n_122,i_out_5_reg_n_123,i_out_5_reg_n_124,i_out_5_reg_n_125,i_out_5_reg_n_126,i_out_5_reg_n_127,i_out_5_reg_n_128,i_out_5_reg_n_129,i_out_5_reg_n_130,i_out_5_reg_n_131,i_out_5_reg_n_132,i_out_5_reg_n_133,i_out_5_reg_n_134,i_out_5_reg_n_135,i_out_5_reg_n_136,i_out_5_reg_n_137,i_out_5_reg_n_138,i_out_5_reg_n_139,i_out_5_reg_n_140,i_out_5_reg_n_141,i_out_5_reg_n_142,i_out_5_reg_n_143,i_out_5_reg_n_144,i_out_5_reg_n_145,i_out_5_reg_n_146,i_out_5_reg_n_147,i_out_5_reg_n_148,i_out_5_reg_n_149,i_out_5_reg_n_150,i_out_5_reg_n_151,i_out_5_reg_n_152,i_out_5_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_5_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_6_reg
       (.A({interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_77,interpolate_inst_1_n_78,interpolate_inst_1_n_79,interpolate_inst_1_n_80,interpolate_inst_1_n_81,interpolate_inst_1_n_82,interpolate_inst_1_n_83,interpolate_inst_1_n_84,interpolate_inst_1_n_85,interpolate_inst_1_n_86,interpolate_inst_1_n_87,interpolate_inst_1_n_88,interpolate_inst_1_n_89,interpolate_inst_1_n_90,interpolate_inst_1_n_91,interpolate_inst_1_n_92,interpolate_inst_1_n_93,interpolate_inst_1_n_94,interpolate_inst_1_n_95,interpolate_inst_1_n_96,interpolate_inst_1_n_97,interpolate_inst_1_n_98,interpolate_inst_1_n_99,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_6_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_120,nco_inst_1_n_121,nco_inst_1_n_122,nco_inst_1_n_123,nco_inst_1_n_124,nco_inst_1_n_125,nco_inst_1_n_126,nco_inst_1_n_127,nco_inst_1_n_128,nco_inst_1_n_129}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_6_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_6_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_6_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_6_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_6_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_6_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_6_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_6_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_6_reg_n_106,i_out_6_reg_n_107,i_out_6_reg_n_108,i_out_6_reg_n_109,i_out_6_reg_n_110,i_out_6_reg_n_111,i_out_6_reg_n_112,i_out_6_reg_n_113,i_out_6_reg_n_114,i_out_6_reg_n_115,i_out_6_reg_n_116,i_out_6_reg_n_117,i_out_6_reg_n_118,i_out_6_reg_n_119,i_out_6_reg_n_120,i_out_6_reg_n_121,i_out_6_reg_n_122,i_out_6_reg_n_123,i_out_6_reg_n_124,i_out_6_reg_n_125,i_out_6_reg_n_126,i_out_6_reg_n_127,i_out_6_reg_n_128,i_out_6_reg_n_129,i_out_6_reg_n_130,i_out_6_reg_n_131,i_out_6_reg_n_132,i_out_6_reg_n_133,i_out_6_reg_n_134,i_out_6_reg_n_135,i_out_6_reg_n_136,i_out_6_reg_n_137,i_out_6_reg_n_138,i_out_6_reg_n_139,i_out_6_reg_n_140,i_out_6_reg_n_141,i_out_6_reg_n_142,i_out_6_reg_n_143,i_out_6_reg_n_144,i_out_6_reg_n_145,i_out_6_reg_n_146,i_out_6_reg_n_147,i_out_6_reg_n_148,i_out_6_reg_n_149,i_out_6_reg_n_150,i_out_6_reg_n_151,i_out_6_reg_n_152,i_out_6_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_6_reg_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    i_out_7_reg
       (.A({i_out_7_reg_i_1[23],i_out_7_reg_i_1[23],i_out_7_reg_i_1[23],i_out_7_reg_i_1[23],i_out_7_reg_i_1[23],i_out_7_reg_i_1[23],i_out_7_reg_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_i_out_7_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_130,nco_inst_1_n_131,nco_inst_1_n_132,nco_inst_1_n_133,nco_inst_1_n_134,nco_inst_1_n_135,nco_inst_1_n_136,nco_inst_1_n_137,nco_inst_1_n_138,nco_inst_1_n_139}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_i_out_7_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_i_out_7_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_i_out_7_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b0),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_i_out_7_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_i_out_7_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_i_out_7_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_i_out_7_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_i_out_7_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({i_out_7_reg_n_106,i_out_7_reg_n_107,i_out_7_reg_n_108,i_out_7_reg_n_109,i_out_7_reg_n_110,i_out_7_reg_n_111,i_out_7_reg_n_112,i_out_7_reg_n_113,i_out_7_reg_n_114,i_out_7_reg_n_115,i_out_7_reg_n_116,i_out_7_reg_n_117,i_out_7_reg_n_118,i_out_7_reg_n_119,i_out_7_reg_n_120,i_out_7_reg_n_121,i_out_7_reg_n_122,i_out_7_reg_n_123,i_out_7_reg_n_124,i_out_7_reg_n_125,i_out_7_reg_n_126,i_out_7_reg_n_127,i_out_7_reg_n_128,i_out_7_reg_n_129,i_out_7_reg_n_130,i_out_7_reg_n_131,i_out_7_reg_n_132,i_out_7_reg_n_133,i_out_7_reg_n_134,i_out_7_reg_n_135,i_out_7_reg_n_136,i_out_7_reg_n_137,i_out_7_reg_n_138,i_out_7_reg_n_139,i_out_7_reg_n_140,i_out_7_reg_n_141,i_out_7_reg_n_142,i_out_7_reg_n_143,i_out_7_reg_n_144,i_out_7_reg_n_145,i_out_7_reg_n_146,i_out_7_reg_n_147,i_out_7_reg_n_148,i_out_7_reg_n_149,i_out_7_reg_n_150,i_out_7_reg_n_151,i_out_7_reg_n_152,i_out_7_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_i_out_7_reg_UNDERFLOW_UNCONNECTED));
  interpolate interpolate_inst_1
       (.A({interpolate_inst_1_n_1,interpolate_inst_1_n_2,interpolate_inst_1_n_3,interpolate_inst_1_n_4,interpolate_inst_1_n_5,interpolate_inst_1_n_6,interpolate_inst_1_n_7,interpolate_inst_1_n_8,interpolate_inst_1_n_9,interpolate_inst_1_n_10,interpolate_inst_1_n_11,interpolate_inst_1_n_12,interpolate_inst_1_n_13,interpolate_inst_1_n_14,interpolate_inst_1_n_15,interpolate_inst_1_n_16,interpolate_inst_1_n_17,interpolate_inst_1_n_18,interpolate_inst_1_n_19,interpolate_inst_1_n_20,interpolate_inst_1_n_21,interpolate_inst_1_n_22,i_out_5_reg_i_23[0]}),
        .O142(O142),
        .O143(O143),
        .O144(O144),
        .Q(Q),
        .S(S),
        .clk(clk),
        .i_out_0_reg({interpolate_inst_1_n_32,interpolate_inst_1_n_33,interpolate_inst_1_n_34,interpolate_inst_1_n_35,interpolate_inst_1_n_36,interpolate_inst_1_n_37,interpolate_inst_1_n_38,interpolate_inst_1_n_39,interpolate_inst_1_n_40,interpolate_inst_1_n_41,interpolate_inst_1_n_42,interpolate_inst_1_n_43,interpolate_inst_1_n_44,interpolate_inst_1_n_45,interpolate_inst_1_n_46,interpolate_inst_1_n_47,interpolate_inst_1_n_48,interpolate_inst_1_n_49,interpolate_inst_1_n_50,interpolate_inst_1_n_51,interpolate_inst_1_n_52,interpolate_inst_1_n_53}),
        .i_out_1_reg_i_22(i_out_1_reg_i_22),
        .i_out_3_reg_i_23(i_out_3_reg_i_23),
        .i_out_4_reg({interpolate_inst_1_n_55,interpolate_inst_1_n_56,interpolate_inst_1_n_57,interpolate_inst_1_n_58,interpolate_inst_1_n_59,interpolate_inst_1_n_60,interpolate_inst_1_n_61,interpolate_inst_1_n_62,interpolate_inst_1_n_63,interpolate_inst_1_n_64,interpolate_inst_1_n_65,interpolate_inst_1_n_66,interpolate_inst_1_n_67,interpolate_inst_1_n_68,interpolate_inst_1_n_69,interpolate_inst_1_n_70,interpolate_inst_1_n_71,interpolate_inst_1_n_72,interpolate_inst_1_n_73,interpolate_inst_1_n_74,interpolate_inst_1_n_75,interpolate_inst_1_n_76}),
        .i_out_5_reg_i_22(i_out_5_reg_i_22),
        .i_out_5_reg_i_23(i_out_5_reg_i_23[1]),
        .i_out_6_reg({interpolate_inst_1_n_77,interpolate_inst_1_n_78,interpolate_inst_1_n_79,interpolate_inst_1_n_80,interpolate_inst_1_n_81,interpolate_inst_1_n_82,interpolate_inst_1_n_83,interpolate_inst_1_n_84,interpolate_inst_1_n_85,interpolate_inst_1_n_86,interpolate_inst_1_n_87,interpolate_inst_1_n_88,interpolate_inst_1_n_89,interpolate_inst_1_n_90,interpolate_inst_1_n_91,interpolate_inst_1_n_92,interpolate_inst_1_n_93,interpolate_inst_1_n_94,interpolate_inst_1_n_95,interpolate_inst_1_n_96,interpolate_inst_1_n_97,interpolate_inst_1_n_98,interpolate_inst_1_n_99}),
        .i_out_7_reg_i_23(i_out_7_reg_i_23),
        .output_tx_am_ack(output_tx_am_ack),
        .p_0_in(p_0_in),
        .\s_output_am_out_reg[23] (\s_output_am_out_reg[23] [15:8]),
        .\s_output_am_out_reg[23]_0 (\s_output_am_out_reg[23]_0 ));
  interpolate_2 interpolate_inst_2
       (.A({interpolate_inst_2_n_0,interpolate_inst_2_n_1,interpolate_inst_2_n_2,interpolate_inst_2_n_3,interpolate_inst_2_n_4,interpolate_inst_2_n_5,interpolate_inst_2_n_6,interpolate_inst_2_n_7,interpolate_inst_2_n_8,interpolate_inst_2_n_9,interpolate_inst_2_n_10,interpolate_inst_2_n_11,interpolate_inst_2_n_12,interpolate_inst_2_n_13,interpolate_inst_2_n_14,interpolate_inst_2_n_15,interpolate_inst_2_n_16,interpolate_inst_2_n_17,interpolate_inst_2_n_18,interpolate_inst_2_n_19,interpolate_inst_2_n_20,interpolate_inst_2_n_21,out_20_0}),
        .O148(O148),
        .O149(O149),
        .O150(O150),
        .Q({interpolate_inst_2_n_31,interpolate_inst_2_n_32,interpolate_inst_2_n_33,interpolate_inst_2_n_34,interpolate_inst_2_n_35,interpolate_inst_2_n_36,interpolate_inst_2_n_37,interpolate_inst_2_n_38,interpolate_inst_2_n_39,interpolate_inst_2_n_40,interpolate_inst_2_n_41,interpolate_inst_2_n_42,interpolate_inst_2_n_43,interpolate_inst_2_n_44,interpolate_inst_2_n_45,interpolate_inst_2_n_46,interpolate_inst_2_n_47,interpolate_inst_2_n_48,interpolate_inst_2_n_49,interpolate_inst_2_n_50,interpolate_inst_2_n_51,interpolate_inst_2_n_52}),
        .clk(clk),
        .\delta_reg[7]_0 (\delta_reg[7] ),
        .out_10_i_1(out_10_i_1),
        .out_10_i_22(out_10_i_22),
        .out_30_i_23(out_30_i_23),
        .out_40({interpolate_inst_2_n_54,interpolate_inst_2_n_55,interpolate_inst_2_n_56,interpolate_inst_2_n_57,interpolate_inst_2_n_58,interpolate_inst_2_n_59,interpolate_inst_2_n_60,interpolate_inst_2_n_61,interpolate_inst_2_n_62,interpolate_inst_2_n_63,interpolate_inst_2_n_64,interpolate_inst_2_n_65,interpolate_inst_2_n_66,interpolate_inst_2_n_67,interpolate_inst_2_n_68,interpolate_inst_2_n_69,interpolate_inst_2_n_70,interpolate_inst_2_n_71,interpolate_inst_2_n_72,interpolate_inst_2_n_73,interpolate_inst_2_n_74,interpolate_inst_2_n_75}),
        .out_50_i_22(out_50_i_22),
        .out_50_i_23(out_50_i_23),
        .out_60({interpolate_inst_2_n_76,interpolate_inst_2_n_77,interpolate_inst_2_n_78,interpolate_inst_2_n_79,interpolate_inst_2_n_80,interpolate_inst_2_n_81,interpolate_inst_2_n_82,interpolate_inst_2_n_83,interpolate_inst_2_n_84,interpolate_inst_2_n_85,interpolate_inst_2_n_86,interpolate_inst_2_n_87,interpolate_inst_2_n_88,interpolate_inst_2_n_89,interpolate_inst_2_n_90,interpolate_inst_2_n_91,interpolate_inst_2_n_92,interpolate_inst_2_n_93,interpolate_inst_2_n_94,interpolate_inst_2_n_95,interpolate_inst_2_n_96,interpolate_inst_2_n_97,interpolate_inst_2_n_98}),
        .out_70_i_23(out_70_i_23),
        .\s_output_am_out_reg[3] (\s_output_am_out_reg[3] ),
        .\s_output_am_out_reg[7] (\s_output_am_out_reg[23] [7:0]),
        .\s_output_am_out_reg[7]_0 (\s_output_am_out_reg[7] ));
  nco nco_inst_1
       (.DOADO({nco_inst_1_n_0,nco_inst_1_n_1,nco_inst_1_n_2,nco_inst_1_n_3,nco_inst_1_n_4,nco_inst_1_n_5,nco_inst_1_n_6,nco_inst_1_n_7,nco_inst_1_n_8,nco_inst_1_n_9}),
        .DOBDO({nco_inst_1_n_10,nco_inst_1_n_11,nco_inst_1_n_12,nco_inst_1_n_13,nco_inst_1_n_14,nco_inst_1_n_15,nco_inst_1_n_16,nco_inst_1_n_17,nco_inst_1_n_18,nco_inst_1_n_19}),
        .Q({\frequency_reg_reg_n_0_[31] ,\frequency_reg_reg_n_0_[30] ,\frequency_reg_reg_n_0_[29] ,in}),
        .clk(clk),
        .i_out_2_reg({nco_inst_1_n_40,nco_inst_1_n_41,nco_inst_1_n_42,nco_inst_1_n_43,nco_inst_1_n_44,nco_inst_1_n_45,nco_inst_1_n_46,nco_inst_1_n_47,nco_inst_1_n_48,nco_inst_1_n_49}),
        .i_out_3_reg({nco_inst_1_n_50,nco_inst_1_n_51,nco_inst_1_n_52,nco_inst_1_n_53,nco_inst_1_n_54,nco_inst_1_n_55,nco_inst_1_n_56,nco_inst_1_n_57,nco_inst_1_n_58,nco_inst_1_n_59}),
        .i_out_4_reg({nco_inst_1_n_80,nco_inst_1_n_81,nco_inst_1_n_82,nco_inst_1_n_83,nco_inst_1_n_84,nco_inst_1_n_85,nco_inst_1_n_86,nco_inst_1_n_87,nco_inst_1_n_88,nco_inst_1_n_89}),
        .i_out_5_reg({nco_inst_1_n_90,nco_inst_1_n_91,nco_inst_1_n_92,nco_inst_1_n_93,nco_inst_1_n_94,nco_inst_1_n_95,nco_inst_1_n_96,nco_inst_1_n_97,nco_inst_1_n_98,nco_inst_1_n_99}),
        .i_out_6_reg({nco_inst_1_n_120,nco_inst_1_n_121,nco_inst_1_n_122,nco_inst_1_n_123,nco_inst_1_n_124,nco_inst_1_n_125,nco_inst_1_n_126,nco_inst_1_n_127,nco_inst_1_n_128,nco_inst_1_n_129}),
        .i_out_7_reg({nco_inst_1_n_130,nco_inst_1_n_131,nco_inst_1_n_132,nco_inst_1_n_133,nco_inst_1_n_134,nco_inst_1_n_135,nco_inst_1_n_136,nco_inst_1_n_137,nco_inst_1_n_138,nco_inst_1_n_139}),
        .out_00({nco_inst_1_n_20,nco_inst_1_n_21,nco_inst_1_n_22,nco_inst_1_n_23,nco_inst_1_n_24,nco_inst_1_n_25,nco_inst_1_n_26,nco_inst_1_n_27,nco_inst_1_n_28,nco_inst_1_n_29}),
        .out_10({nco_inst_1_n_30,nco_inst_1_n_31,nco_inst_1_n_32,nco_inst_1_n_33,nco_inst_1_n_34,nco_inst_1_n_35,nco_inst_1_n_36,nco_inst_1_n_37,nco_inst_1_n_38,nco_inst_1_n_39}),
        .out_20({nco_inst_1_n_60,nco_inst_1_n_61,nco_inst_1_n_62,nco_inst_1_n_63,nco_inst_1_n_64,nco_inst_1_n_65,nco_inst_1_n_66,nco_inst_1_n_67,nco_inst_1_n_68,nco_inst_1_n_69}),
        .out_30({nco_inst_1_n_70,nco_inst_1_n_71,nco_inst_1_n_72,nco_inst_1_n_73,nco_inst_1_n_74,nco_inst_1_n_75,nco_inst_1_n_76,nco_inst_1_n_77,nco_inst_1_n_78,nco_inst_1_n_79}),
        .out_40({nco_inst_1_n_100,nco_inst_1_n_101,nco_inst_1_n_102,nco_inst_1_n_103,nco_inst_1_n_104,nco_inst_1_n_105,nco_inst_1_n_106,nco_inst_1_n_107,nco_inst_1_n_108,nco_inst_1_n_109}),
        .out_50({nco_inst_1_n_110,nco_inst_1_n_111,nco_inst_1_n_112,nco_inst_1_n_113,nco_inst_1_n_114,nco_inst_1_n_115,nco_inst_1_n_116,nco_inst_1_n_117,nco_inst_1_n_118,nco_inst_1_n_119}),
        .out_60({nco_inst_1_n_140,nco_inst_1_n_141,nco_inst_1_n_142,nco_inst_1_n_143,nco_inst_1_n_144,nco_inst_1_n_145,nco_inst_1_n_146,nco_inst_1_n_147,nco_inst_1_n_148,nco_inst_1_n_149}),
        .out_70({nco_inst_1_n_150,nco_inst_1_n_151,nco_inst_1_n_152,nco_inst_1_n_153,nco_inst_1_n_154,nco_inst_1_n_155,nco_inst_1_n_156,nco_inst_1_n_157,nco_inst_1_n_158,nco_inst_1_n_159}));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_00
       (.A({interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_31,interpolate_inst_2_n_32,interpolate_inst_2_n_33,interpolate_inst_2_n_34,interpolate_inst_2_n_35,interpolate_inst_2_n_36,interpolate_inst_2_n_37,interpolate_inst_2_n_38,interpolate_inst_2_n_39,interpolate_inst_2_n_40,interpolate_inst_2_n_41,interpolate_inst_2_n_42,interpolate_inst_2_n_43,interpolate_inst_2_n_44,interpolate_inst_2_n_45,interpolate_inst_2_n_46,interpolate_inst_2_n_47,interpolate_inst_2_n_48,interpolate_inst_2_n_49,interpolate_inst_2_n_50,interpolate_inst_2_n_51,interpolate_inst_2_n_52,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_00_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_20,nco_inst_1_n_21,nco_inst_1_n_22,nco_inst_1_n_23,nco_inst_1_n_24,nco_inst_1_n_25,nco_inst_1_n_26,nco_inst_1_n_27,nco_inst_1_n_28,nco_inst_1_n_29}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_00_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_00_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_00_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_00_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_00_OVERFLOW_UNCONNECTED),
        .P({NLW_out_00_P_UNCONNECTED[47:33],out_0,out_0__0,NLW_out_00_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_00_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_00_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_0_reg_n_106,i_out_0_reg_n_107,i_out_0_reg_n_108,i_out_0_reg_n_109,i_out_0_reg_n_110,i_out_0_reg_n_111,i_out_0_reg_n_112,i_out_0_reg_n_113,i_out_0_reg_n_114,i_out_0_reg_n_115,i_out_0_reg_n_116,i_out_0_reg_n_117,i_out_0_reg_n_118,i_out_0_reg_n_119,i_out_0_reg_n_120,i_out_0_reg_n_121,i_out_0_reg_n_122,i_out_0_reg_n_123,i_out_0_reg_n_124,i_out_0_reg_n_125,i_out_0_reg_n_126,i_out_0_reg_n_127,i_out_0_reg_n_128,i_out_0_reg_n_129,i_out_0_reg_n_130,i_out_0_reg_n_131,i_out_0_reg_n_132,i_out_0_reg_n_133,i_out_0_reg_n_134,i_out_0_reg_n_135,i_out_0_reg_n_136,i_out_0_reg_n_137,i_out_0_reg_n_138,i_out_0_reg_n_139,i_out_0_reg_n_140,i_out_0_reg_n_141,i_out_0_reg_n_142,i_out_0_reg_n_143,i_out_0_reg_n_144,i_out_0_reg_n_145,i_out_0_reg_n_146,i_out_0_reg_n_147,i_out_0_reg_n_148,i_out_0_reg_n_149,i_out_0_reg_n_150,i_out_0_reg_n_151,i_out_0_reg_n_152,i_out_0_reg_n_153}),
        .PCOUT(NLW_out_00_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_00_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_10
       (.A({out_10_i_1_0[23],out_10_i_1_0[23],out_10_i_1_0[23],out_10_i_1_0[23],out_10_i_1_0[23],out_10_i_1_0[23],out_10_i_1_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_10_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_30,nco_inst_1_n_31,nco_inst_1_n_32,nco_inst_1_n_33,nco_inst_1_n_34,nco_inst_1_n_35,nco_inst_1_n_36,nco_inst_1_n_37,nco_inst_1_n_38,nco_inst_1_n_39}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_10_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_10_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_10_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_10_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_10_OVERFLOW_UNCONNECTED),
        .P({NLW_out_10_P_UNCONNECTED[47:33],out_1,out_1__0,NLW_out_10_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_10_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_10_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_1_reg_n_106,i_out_1_reg_n_107,i_out_1_reg_n_108,i_out_1_reg_n_109,i_out_1_reg_n_110,i_out_1_reg_n_111,i_out_1_reg_n_112,i_out_1_reg_n_113,i_out_1_reg_n_114,i_out_1_reg_n_115,i_out_1_reg_n_116,i_out_1_reg_n_117,i_out_1_reg_n_118,i_out_1_reg_n_119,i_out_1_reg_n_120,i_out_1_reg_n_121,i_out_1_reg_n_122,i_out_1_reg_n_123,i_out_1_reg_n_124,i_out_1_reg_n_125,i_out_1_reg_n_126,i_out_1_reg_n_127,i_out_1_reg_n_128,i_out_1_reg_n_129,i_out_1_reg_n_130,i_out_1_reg_n_131,i_out_1_reg_n_132,i_out_1_reg_n_133,i_out_1_reg_n_134,i_out_1_reg_n_135,i_out_1_reg_n_136,i_out_1_reg_n_137,i_out_1_reg_n_138,i_out_1_reg_n_139,i_out_1_reg_n_140,i_out_1_reg_n_141,i_out_1_reg_n_142,i_out_1_reg_n_143,i_out_1_reg_n_144,i_out_1_reg_n_145,i_out_1_reg_n_146,i_out_1_reg_n_147,i_out_1_reg_n_148,i_out_1_reg_n_149,i_out_1_reg_n_150,i_out_1_reg_n_151,i_out_1_reg_n_152,i_out_1_reg_n_153}),
        .PCOUT(NLW_out_10_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_10_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_20
       (.A({interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_0,interpolate_inst_2_n_1,interpolate_inst_2_n_2,interpolate_inst_2_n_3,interpolate_inst_2_n_4,interpolate_inst_2_n_5,interpolate_inst_2_n_6,interpolate_inst_2_n_7,interpolate_inst_2_n_8,interpolate_inst_2_n_9,interpolate_inst_2_n_10,interpolate_inst_2_n_11,interpolate_inst_2_n_12,interpolate_inst_2_n_13,interpolate_inst_2_n_14,interpolate_inst_2_n_15,interpolate_inst_2_n_16,interpolate_inst_2_n_17,interpolate_inst_2_n_18,interpolate_inst_2_n_19,interpolate_inst_2_n_20,interpolate_inst_2_n_21,out_20_0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_20_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_60,nco_inst_1_n_61,nco_inst_1_n_62,nco_inst_1_n_63,nco_inst_1_n_64,nco_inst_1_n_65,nco_inst_1_n_66,nco_inst_1_n_67,nco_inst_1_n_68,nco_inst_1_n_69}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_20_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_20_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_20_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_20_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_20_OVERFLOW_UNCONNECTED),
        .P({NLW_out_20_P_UNCONNECTED[47:33],out_2,out_2__0,NLW_out_20_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_20_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_20_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_2_reg_n_106,i_out_2_reg_n_107,i_out_2_reg_n_108,i_out_2_reg_n_109,i_out_2_reg_n_110,i_out_2_reg_n_111,i_out_2_reg_n_112,i_out_2_reg_n_113,i_out_2_reg_n_114,i_out_2_reg_n_115,i_out_2_reg_n_116,i_out_2_reg_n_117,i_out_2_reg_n_118,i_out_2_reg_n_119,i_out_2_reg_n_120,i_out_2_reg_n_121,i_out_2_reg_n_122,i_out_2_reg_n_123,i_out_2_reg_n_124,i_out_2_reg_n_125,i_out_2_reg_n_126,i_out_2_reg_n_127,i_out_2_reg_n_128,i_out_2_reg_n_129,i_out_2_reg_n_130,i_out_2_reg_n_131,i_out_2_reg_n_132,i_out_2_reg_n_133,i_out_2_reg_n_134,i_out_2_reg_n_135,i_out_2_reg_n_136,i_out_2_reg_n_137,i_out_2_reg_n_138,i_out_2_reg_n_139,i_out_2_reg_n_140,i_out_2_reg_n_141,i_out_2_reg_n_142,i_out_2_reg_n_143,i_out_2_reg_n_144,i_out_2_reg_n_145,i_out_2_reg_n_146,i_out_2_reg_n_147,i_out_2_reg_n_148,i_out_2_reg_n_149,i_out_2_reg_n_150,i_out_2_reg_n_151,i_out_2_reg_n_152,i_out_2_reg_n_153}),
        .PCOUT(NLW_out_20_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_20_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_30
       (.A({out_30_i_1[23],out_30_i_1[23],out_30_i_1[23],out_30_i_1[23],out_30_i_1[23],out_30_i_1[23],out_30_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_30_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_70,nco_inst_1_n_71,nco_inst_1_n_72,nco_inst_1_n_73,nco_inst_1_n_74,nco_inst_1_n_75,nco_inst_1_n_76,nco_inst_1_n_77,nco_inst_1_n_78,nco_inst_1_n_79}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_30_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_30_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_30_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_30_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_30_OVERFLOW_UNCONNECTED),
        .P({NLW_out_30_P_UNCONNECTED[47:33],out_3,out_3__0,NLW_out_30_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_30_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_30_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_3_reg_n_106,i_out_3_reg_n_107,i_out_3_reg_n_108,i_out_3_reg_n_109,i_out_3_reg_n_110,i_out_3_reg_n_111,i_out_3_reg_n_112,i_out_3_reg_n_113,i_out_3_reg_n_114,i_out_3_reg_n_115,i_out_3_reg_n_116,i_out_3_reg_n_117,i_out_3_reg_n_118,i_out_3_reg_n_119,i_out_3_reg_n_120,i_out_3_reg_n_121,i_out_3_reg_n_122,i_out_3_reg_n_123,i_out_3_reg_n_124,i_out_3_reg_n_125,i_out_3_reg_n_126,i_out_3_reg_n_127,i_out_3_reg_n_128,i_out_3_reg_n_129,i_out_3_reg_n_130,i_out_3_reg_n_131,i_out_3_reg_n_132,i_out_3_reg_n_133,i_out_3_reg_n_134,i_out_3_reg_n_135,i_out_3_reg_n_136,i_out_3_reg_n_137,i_out_3_reg_n_138,i_out_3_reg_n_139,i_out_3_reg_n_140,i_out_3_reg_n_141,i_out_3_reg_n_142,i_out_3_reg_n_143,i_out_3_reg_n_144,i_out_3_reg_n_145,i_out_3_reg_n_146,i_out_3_reg_n_147,i_out_3_reg_n_148,i_out_3_reg_n_149,i_out_3_reg_n_150,i_out_3_reg_n_151,i_out_3_reg_n_152,i_out_3_reg_n_153}),
        .PCOUT(NLW_out_30_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_30_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_40
       (.A({interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_54,interpolate_inst_2_n_55,interpolate_inst_2_n_56,interpolate_inst_2_n_57,interpolate_inst_2_n_58,interpolate_inst_2_n_59,interpolate_inst_2_n_60,interpolate_inst_2_n_61,interpolate_inst_2_n_62,interpolate_inst_2_n_63,interpolate_inst_2_n_64,interpolate_inst_2_n_65,interpolate_inst_2_n_66,interpolate_inst_2_n_67,interpolate_inst_2_n_68,interpolate_inst_2_n_69,interpolate_inst_2_n_70,interpolate_inst_2_n_71,interpolate_inst_2_n_72,interpolate_inst_2_n_73,interpolate_inst_2_n_74,interpolate_inst_2_n_75,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_40_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_100,nco_inst_1_n_101,nco_inst_1_n_102,nco_inst_1_n_103,nco_inst_1_n_104,nco_inst_1_n_105,nco_inst_1_n_106,nco_inst_1_n_107,nco_inst_1_n_108,nco_inst_1_n_109}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_40_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_40_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_40_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_40_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_40_OVERFLOW_UNCONNECTED),
        .P({NLW_out_40_P_UNCONNECTED[47:33],out_4,out_4__0,NLW_out_40_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_40_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_40_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_4_reg_n_106,i_out_4_reg_n_107,i_out_4_reg_n_108,i_out_4_reg_n_109,i_out_4_reg_n_110,i_out_4_reg_n_111,i_out_4_reg_n_112,i_out_4_reg_n_113,i_out_4_reg_n_114,i_out_4_reg_n_115,i_out_4_reg_n_116,i_out_4_reg_n_117,i_out_4_reg_n_118,i_out_4_reg_n_119,i_out_4_reg_n_120,i_out_4_reg_n_121,i_out_4_reg_n_122,i_out_4_reg_n_123,i_out_4_reg_n_124,i_out_4_reg_n_125,i_out_4_reg_n_126,i_out_4_reg_n_127,i_out_4_reg_n_128,i_out_4_reg_n_129,i_out_4_reg_n_130,i_out_4_reg_n_131,i_out_4_reg_n_132,i_out_4_reg_n_133,i_out_4_reg_n_134,i_out_4_reg_n_135,i_out_4_reg_n_136,i_out_4_reg_n_137,i_out_4_reg_n_138,i_out_4_reg_n_139,i_out_4_reg_n_140,i_out_4_reg_n_141,i_out_4_reg_n_142,i_out_4_reg_n_143,i_out_4_reg_n_144,i_out_4_reg_n_145,i_out_4_reg_n_146,i_out_4_reg_n_147,i_out_4_reg_n_148,i_out_4_reg_n_149,i_out_4_reg_n_150,i_out_4_reg_n_151,i_out_4_reg_n_152,i_out_4_reg_n_153}),
        .PCOUT(NLW_out_40_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_40_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_50
       (.A({out_50_i_1[23],out_50_i_1[23],out_50_i_1[23],out_50_i_1[23],out_50_i_1[23],out_50_i_1[23],out_50_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_50_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_110,nco_inst_1_n_111,nco_inst_1_n_112,nco_inst_1_n_113,nco_inst_1_n_114,nco_inst_1_n_115,nco_inst_1_n_116,nco_inst_1_n_117,nco_inst_1_n_118,nco_inst_1_n_119}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_50_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_50_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_50_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_50_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_50_OVERFLOW_UNCONNECTED),
        .P({NLW_out_50_P_UNCONNECTED[47:33],out_5,out_5__0,NLW_out_50_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_50_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_50_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_5_reg_n_106,i_out_5_reg_n_107,i_out_5_reg_n_108,i_out_5_reg_n_109,i_out_5_reg_n_110,i_out_5_reg_n_111,i_out_5_reg_n_112,i_out_5_reg_n_113,i_out_5_reg_n_114,i_out_5_reg_n_115,i_out_5_reg_n_116,i_out_5_reg_n_117,i_out_5_reg_n_118,i_out_5_reg_n_119,i_out_5_reg_n_120,i_out_5_reg_n_121,i_out_5_reg_n_122,i_out_5_reg_n_123,i_out_5_reg_n_124,i_out_5_reg_n_125,i_out_5_reg_n_126,i_out_5_reg_n_127,i_out_5_reg_n_128,i_out_5_reg_n_129,i_out_5_reg_n_130,i_out_5_reg_n_131,i_out_5_reg_n_132,i_out_5_reg_n_133,i_out_5_reg_n_134,i_out_5_reg_n_135,i_out_5_reg_n_136,i_out_5_reg_n_137,i_out_5_reg_n_138,i_out_5_reg_n_139,i_out_5_reg_n_140,i_out_5_reg_n_141,i_out_5_reg_n_142,i_out_5_reg_n_143,i_out_5_reg_n_144,i_out_5_reg_n_145,i_out_5_reg_n_146,i_out_5_reg_n_147,i_out_5_reg_n_148,i_out_5_reg_n_149,i_out_5_reg_n_150,i_out_5_reg_n_151,i_out_5_reg_n_152,i_out_5_reg_n_153}),
        .PCOUT(NLW_out_50_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_50_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_60
       (.A({interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_76,interpolate_inst_2_n_77,interpolate_inst_2_n_78,interpolate_inst_2_n_79,interpolate_inst_2_n_80,interpolate_inst_2_n_81,interpolate_inst_2_n_82,interpolate_inst_2_n_83,interpolate_inst_2_n_84,interpolate_inst_2_n_85,interpolate_inst_2_n_86,interpolate_inst_2_n_87,interpolate_inst_2_n_88,interpolate_inst_2_n_89,interpolate_inst_2_n_90,interpolate_inst_2_n_91,interpolate_inst_2_n_92,interpolate_inst_2_n_93,interpolate_inst_2_n_94,interpolate_inst_2_n_95,interpolate_inst_2_n_96,interpolate_inst_2_n_97,interpolate_inst_2_n_98,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_60_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_140,nco_inst_1_n_141,nco_inst_1_n_142,nco_inst_1_n_143,nco_inst_1_n_144,nco_inst_1_n_145,nco_inst_1_n_146,nco_inst_1_n_147,nco_inst_1_n_148,nco_inst_1_n_149}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_60_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_60_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_60_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_60_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_60_OVERFLOW_UNCONNECTED),
        .P({NLW_out_60_P_UNCONNECTED[47:33],out_6,out_6__0,NLW_out_60_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_60_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_60_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_6_reg_n_106,i_out_6_reg_n_107,i_out_6_reg_n_108,i_out_6_reg_n_109,i_out_6_reg_n_110,i_out_6_reg_n_111,i_out_6_reg_n_112,i_out_6_reg_n_113,i_out_6_reg_n_114,i_out_6_reg_n_115,i_out_6_reg_n_116,i_out_6_reg_n_117,i_out_6_reg_n_118,i_out_6_reg_n_119,i_out_6_reg_n_120,i_out_6_reg_n_121,i_out_6_reg_n_122,i_out_6_reg_n_123,i_out_6_reg_n_124,i_out_6_reg_n_125,i_out_6_reg_n_126,i_out_6_reg_n_127,i_out_6_reg_n_128,i_out_6_reg_n_129,i_out_6_reg_n_130,i_out_6_reg_n_131,i_out_6_reg_n_132,i_out_6_reg_n_133,i_out_6_reg_n_134,i_out_6_reg_n_135,i_out_6_reg_n_136,i_out_6_reg_n_137,i_out_6_reg_n_138,i_out_6_reg_n_139,i_out_6_reg_n_140,i_out_6_reg_n_141,i_out_6_reg_n_142,i_out_6_reg_n_143,i_out_6_reg_n_144,i_out_6_reg_n_145,i_out_6_reg_n_146,i_out_6_reg_n_147,i_out_6_reg_n_148,i_out_6_reg_n_149,i_out_6_reg_n_150,i_out_6_reg_n_151,i_out_6_reg_n_152,i_out_6_reg_n_153}),
        .PCOUT(NLW_out_60_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_60_UNDERFLOW_UNCONNECTED));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    out_70
       (.A({out_70_i_1[23],out_70_i_1[23],out_70_i_1[23],out_70_i_1[23],out_70_i_1[23],out_70_i_1[23],out_70_i_1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_out_70_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_150,nco_inst_1_n_151,nco_inst_1_n_152,nco_inst_1_n_153,nco_inst_1_n_154,nco_inst_1_n_155,nco_inst_1_n_156,nco_inst_1_n_157,nco_inst_1_n_158,nco_inst_1_n_159}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_out_70_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_out_70_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_out_70_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_out_70_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_out_70_OVERFLOW_UNCONNECTED),
        .P({NLW_out_70_P_UNCONNECTED[47:33],out_7,out_7__0,NLW_out_70_P_UNCONNECTED[0]}),
        .PATTERNBDETECT(NLW_out_70_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_out_70_PATTERNDETECT_UNCONNECTED),
        .PCIN({i_out_7_reg_n_106,i_out_7_reg_n_107,i_out_7_reg_n_108,i_out_7_reg_n_109,i_out_7_reg_n_110,i_out_7_reg_n_111,i_out_7_reg_n_112,i_out_7_reg_n_113,i_out_7_reg_n_114,i_out_7_reg_n_115,i_out_7_reg_n_116,i_out_7_reg_n_117,i_out_7_reg_n_118,i_out_7_reg_n_119,i_out_7_reg_n_120,i_out_7_reg_n_121,i_out_7_reg_n_122,i_out_7_reg_n_123,i_out_7_reg_n_124,i_out_7_reg_n_125,i_out_7_reg_n_126,i_out_7_reg_n_127,i_out_7_reg_n_128,i_out_7_reg_n_129,i_out_7_reg_n_130,i_out_7_reg_n_131,i_out_7_reg_n_132,i_out_7_reg_n_133,i_out_7_reg_n_134,i_out_7_reg_n_135,i_out_7_reg_n_136,i_out_7_reg_n_137,i_out_7_reg_n_138,i_out_7_reg_n_139,i_out_7_reg_n_140,i_out_7_reg_n_141,i_out_7_reg_n_142,i_out_7_reg_n_143,i_out_7_reg_n_144,i_out_7_reg_n_145,i_out_7_reg_n_146,i_out_7_reg_n_147,i_out_7_reg_n_148,i_out_7_reg_n_149,i_out_7_reg_n_150,i_out_7_reg_n_151,i_out_7_reg_n_152,i_out_7_reg_n_153}),
        .PCOUT(NLW_out_70_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_out_70_UNDERFLOW_UNCONNECTED));
endmodule

module user_design
   (dithering_reg,
    s_test_2_reg,
    \delta_reg[7] ,
    output_am_out,
    S,
    \delta_reg[7]_0 ,
    \delta_reg[3] ,
    input_rs232_rx_ack,
    output_audio_out,
    output_freq_out,
    output_rs232_tx,
    E,
    data_in_stb,
    output_rs232_tx_stb,
    dithering,
    internal_rst_reg,
    test_2_OBUF,
    Q,
    \last_input_reg[7] ,
    clk,
    out1_stb,
    output_tx_am_ack,
    output_audio_ack,
    output_rs232_tx_ack,
    \output ,
    pwropt);
  output dithering_reg;
  output s_test_2_reg;
  output [3:0]\delta_reg[7] ;
  output [15:0]output_am_out;
  output [3:0]S;
  output [3:0]\delta_reg[7]_0 ;
  output [3:0]\delta_reg[3] ;
  output input_rs232_rx_ack;
  output [9:0]output_audio_out;
  output [31:0]output_freq_out;
  output [7:0]output_rs232_tx;
  output [0:0]E;
  output data_in_stb;
  output output_rs232_tx_stb;
  input dithering;
  input internal_rst_reg;
  input test_2_OBUF;
  input [7:0]Q;
  input [7:0]\last_input_reg[7] ;
  input clk;
  input out1_stb;
  input output_tx_am_ack;
  input output_audio_ack;
  input output_rs232_tx_ack;
  input [7:0]\output ;
  input pwropt;

  wire [0:0]E;
  wire [7:0]Q;
  wire [3:0]S;
  wire amplitude_stb;
  wire clk;
  wire [0:0]control;
  wire control_stb;
  wire data_in_stb;
  wire [3:0]\delta_reg[3] ;
  wire [3:0]\delta_reg[7] ;
  wire [3:0]\delta_reg[7]_0 ;
  wire dithering;
  wire dithering_reg;
  wire input_rs232_rx_ack;
  wire internal_rst_reg;
  wire [7:0]\last_input_reg[7] ;
  wire main_0_140588782622480_n_51;
  wire main_0_140588782622480_n_85;
  wire main_0_140588782622480_n_86;
  wire main_0_140588782622480_n_95;
  wire main_0_140588782622480_n_96;
  wire out1_stb;
  wire [7:0]\output ;
  wire [15:0]output_am_out;
  wire output_audio_ack;
  wire [9:0]output_audio_out;
  wire [31:0]output_freq_out;
  wire [7:0]output_rs232_tx;
  wire output_rs232_tx_ack;
  wire output_rs232_tx_stb;
  wire output_tx_am_ack;
  wire pwropt;
  wire \s_output_am_out_stb[0]_i_1_n_0 ;
  wire \s_output_audio_out_stb[0]_i_1_n_0 ;
  wire \s_output_ctl_out[0]_i_1_n_0 ;
  wire \s_output_ctl_out_stb[0]_i_1_n_0 ;
  wire \s_output_freq_out_stb[0]_i_1_n_0 ;
  wire \s_output_rs232_tx_stb[0]_i_1_n_0 ;
  wire s_test_2_reg;
  wire test_2_OBUF;
  wire [0:0]write_value;

  main_0 main_0_140588782622480
       (.E(E),
        .Q(Q),
        .S(S),
        .S_DATA_IN_ACK_reg(\s_output_audio_out_stb[0]_i_1_n_0 ),
        .S_IN1_ACK_reg(\s_output_rs232_tx_stb[0]_i_1_n_0 ),
        .amplitude_stb(amplitude_stb),
        .clk(clk),
        .control(control),
        .control_stb(control_stb),
        .data_in_stb(data_in_stb),
        .\delta_reg[3] (\delta_reg[3] ),
        .\delta_reg[7] (\delta_reg[7] ),
        .\delta_reg[7]_0 (\delta_reg[7]_0 ),
        .dithering(dithering),
        .dithering_reg(dithering_reg),
        .input_ack_reg(\s_output_am_out_stb[0]_i_1_n_0 ),
        .input_rs232_rx_ack(input_rs232_rx_ack),
        .internal_rst_reg(internal_rst_reg),
        .\last_input_reg[7] (\last_input_reg[7] ),
        .out1_stb(out1_stb),
        .\output (\output ),
        .output_am_out(output_am_out),
        .output_audio_ack(output_audio_ack),
        .output_audio_out(output_audio_out),
        .output_freq_out(output_freq_out),
        .output_rs232_tx(output_rs232_tx),
        .output_rs232_tx_ack(output_rs232_tx_ack),
        .output_rs232_tx_stb(output_rs232_tx_stb),
        .output_tx_am_ack(output_tx_am_ack),
        .pwropt(pwropt),
        .\s_output_am_out_reg[0]_0 (main_0_140588782622480_n_86),
        .\s_output_audio_out_reg[0]_0 (main_0_140588782622480_n_51),
        .\s_output_audio_out_reg[0]_1 (write_value),
        .\s_output_ctl_out_reg[0]_0 (main_0_140588782622480_n_96),
        .\s_output_ctl_out_stb_reg[0]_0 (\s_output_ctl_out_stb[0]_i_1_n_0 ),
        .\s_output_freq_out_reg[0]_0 (main_0_140588782622480_n_85),
        .\s_output_freq_out_stb_reg[0]_0 (\s_output_freq_out_stb[0]_i_1_n_0 ),
        .\s_output_rs232_tx_reg[0]_0 (main_0_140588782622480_n_95),
        .s_test_2_reg(s_test_2_reg),
        .test_2_OBUF(test_2_OBUF),
        .\write_value_reg[0]_0 (\s_output_ctl_out[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7C)) 
    \s_output_am_out_stb[0]_i_1 
       (.I0(output_tx_am_ack),
        .I1(main_0_140588782622480_n_86),
        .I2(amplitude_stb),
        .O(\s_output_am_out_stb[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7C)) 
    \s_output_audio_out_stb[0]_i_1 
       (.I0(output_audio_ack),
        .I1(main_0_140588782622480_n_51),
        .I2(data_in_stb),
        .O(\s_output_audio_out_stb[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \s_output_ctl_out[0]_i_1 
       (.I0(write_value),
        .I1(main_0_140588782622480_n_96),
        .I2(control),
        .O(\s_output_ctl_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \s_output_ctl_out_stb[0]_i_1 
       (.I0(main_0_140588782622480_n_96),
        .I1(control_stb),
        .O(\s_output_ctl_out_stb[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \s_output_freq_out_stb[0]_i_1 
       (.I0(main_0_140588782622480_n_85),
        .I1(E),
        .O(\s_output_freq_out_stb[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7C)) 
    \s_output_rs232_tx_stb[0]_i_1 
       (.I0(output_rs232_tx_ack),
        .I1(main_0_140588782622480_n_95),
        .I2(output_rs232_tx_stb),
        .O(\s_output_rs232_tx_stb[0]_i_1_n_0 ));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
